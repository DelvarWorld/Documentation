:[5921],"ach object (":[5921],"ch object (n":[5921],"h object (nu":[5921]," object (num":[5921],"object (numb":[5921],"bject (numbe":[5921],"ject (number":[5921],"ect (number ":[5921],"ct (number o":[5921],"t (number of":[5921]," (number of ":[5921],"(number of s":[5921],"number of si":[5921],"umber of sid":[5921],"mber of side":[5921],"ber of sides":[5921],"er of sides,":[5921],"r of sides, ":[5921]," of sides, n":[5921],"of sides, nu":[5921],"f sides, num":[5921]," sides, numb":[5921],"sides, numbe":[5921],"ides, number":[5921],"des, number ":[5921],"es, number o":[5921],"s, number of":[5921]," vertices, e":[5921],"vertices, et":[5921],"ertices, etc":[5921],"rtices, etc)":[5921],"tices, etc).":[5921],"ices, etc). ":[5921],"ces, etc).  ":[5921],"es, etc).   ":[5921],"s, etc).    ":[5921],"example : if":[5922],"xample : if ":[5922],"ample : if w":[5922],"mple : if we":[5922],"ple : if we ":[5922],"le : if we n":[5922],"e : if we ne":[5922]," : if we nee":[5922],": if we need":[5922]," if we need ":[5922],"if we need t":[5922],"f we need to":[5922],"we need to u":[5922],"e need to up":[5922]," to update a":[5922],"to update a ":[5922],"o update a l":[5922]," update a li":[5922],"update a lin":[5922],"pdate a line":[5922],"date a lines":[5922],"ate a lines ":[5922],"te a lines m":[5922],"e a lines me":[5922],"lines mesh i":[5922],"ines mesh in":[5922],"nes mesh in ":[5922],"es mesh in t":[5922],"s mesh in th":[5922]," mesh in the":[5922],"mesh in the ":[5922],"esh in the r":[5922],"sh in the re":[5922],"h in the ren":[5922],"render loop,":[5922],"ender loop, ":[5922],"nder loop, i":[5922],"der loop, it":[5922],"er loop, it ":[5922],"r loop, it i":[5922]," loop, it is":[5922],"loop, it is ":[5922],"oop, it is t":[5922],"op, it is to":[5922],"p, it is to ":[5922],", it is to s":[5922]," it is to sa":[5922],"it is to say":[5922],"t is to say ":[5922]," is to say t":[5922],"is to say to":[5922],"s to say to ":[5922]," to say to u":[5922],"to say to up":[5922],"o say to upd":[5922]," say to upda":[5922],"say to updat":[5922],"update the _":[5922],"pdate the _p":[5922],"date the _po":[5922],"ate the _poi":[5922],"te the _poin":[5922],"e the _point":[5922]," the _points":[5922],"the _points_":[5922],"he _points_ ":[5922],"e _points_ a":[5922],"nts_ array e":[5922],"ts_ array ea":[5922],"s_ array eac":[5922],"_ array each":[5922]," array each ":[5922],"array each f":[5922],"rray each fr":[5922],"ray each fra":[5922],"ay each fram":[5922],"ach frame, i":[5922],"ch frame, it":[5922],"h frame, it ":[5922]," frame, it i":[5922],"frame, it is":[5922],"rame, it is ":[5922],"ame, it is b":[5922],"me, it is be":[5922],"e, it is bet":[5922],", it is bett":[5922]," it is bette":[5922],"it is better":[5922],"t is better ":[5922]," is better t":[5922],"is better to":[5922],"s better to ":[5922]," better to c":[5922],"better to ch":[5922],"etter to cha":[5922],"tter to chan":[5922],"ter to chang":[5922]," to change e":[5922],"to change ea":[5922],"o change eac":[5922]," change each":[5922],"change each ":[5922],"hange each a":[5922],"ange each ar":[5922],"nge each arr":[5922],"ge each arra":[5922],"e each array":[5922]," each array ":[5922],"each array e":[5922],"ach array el":[5922],"ch array ele":[5922],"h array elem":[5922,5929]," array eleme":[5922,5929],"array elemen":[5922,5929],"rray element":[5922,5929],"ray element ":[5922],"ay element v":[5922],"y element va":[5922]," element val":[5922],"element valu":[5922],"lement value":[5922],"ement values":[5922],"ment values ":[5922],"ent values (":[5922],"nt values (_":[5922],"t values (_p":[5922]," values (_po":[5922],"values (_poi":[5922],"alues (_poin":[5922],"lues (_point":[5922],"ues (_points":[5922],"es (_points[":[5922],"s (_points[i":[5922]," (_points[i]":[5922],"(_points[i].":[5922],"_points[i].x":[5922],"points[i].x ":[5922],"oints[i].x =":[5922],"ints[i].x = ":[5922],"nts[i].x = n":[5922],"ts[i].x = ne":[5922],"s[i].x = new":[5922],"[i].x = newx":[5922],"i].x = newxv":[5922],"].x = newxva":[5922],".x = newxval":[5922],"x = newxvalu":[5922]," = newxvalue":[5922],"= newxvalue;":[5922]," newxvalue; ":[5922],"newxvalue; p":[5922],"ewxvalue; po":[5922],"wxvalue; poi":[5922],"xvalue; poin":[5922],"value; point":[5922],"alue; points":[5922],"lue; points[":[5922],"ue; points[i":[5922],"e; points[i]":[5922],"; points[i].":[5922]," points[i].y":[5922],"points[i].y ":[5922],"oints[i].y =":[5922],"ints[i].y = ":[5922],"nts[i].y = n":[5922],"ts[i].y = ne":[5922],"s[i].y = new":[5922],"[i].y = newy":[5922],"i].y = newyv":[5922],"].y = newyva":[5922],".y = newyval":[5922],"y = newyvalu":[5922]," = newyvalue":[5922],"= newyvalue;":[5922]," newyvalue; ":[5922],"newyvalue; p":[5922],"ewyvalue; po":[5922],"wyvalue; poi":[5922],"yvalue; poin":[5922]," points[i].z":[5922],"points[i].z ":[5922],"oints[i].z =":[5922],"ints[i].z = ":[5922],"nts[i].z = n":[5922],"ts[i].z = ne":[5922],"s[i].z = new":[5922],"[i].z = newz":[5922],"i].z = newzv":[5922],"].z = newzva":[5922],".z = newzval":[5922],"z = newzvalu":[5922]," = newzvalue":[5922],"= newzvalue;":[5922]," newzvalue;_":[5922],"newzvalue;_)":[5922],"ewzvalue;_) ":[5922],"wzvalue;_) i":[5922],"zvalue;_) in":[5922],"value;_) in ":[5922],"alue;_) in a":[5922],"lue;_) in a ":[5922],"ue;_) in a _":[5922],"e;_) in a _f":[5922],";_) in a _fo":[5922],"_) in a _for":[5922],") in a _for_":[5922]," in a _for_ ":[5922],"in a _for_ l":[5922],"n a _for_ lo":[5922]," a _for_ loo":[5922],"a _for_ loop":[5922]," _for_ loop ":[5922,6262,6329,6352],"_for_ loop i":[5922,6262,6329],"for_ loop in":[5922],"or_ loop ins":[5922],"r_ loop inst":[5922],"_ loop inste":[5922]," loop instea":[5922],"loop instead":[5922],"oop instead ":[5922],"op instead o":[5922],"p instead of":[5922],"tantiating a":[5922],"antiating a ":[5922],"ntiating a n":[5922],"tiating a ne":[5922],"iating a new":[5922],"ting a new _":[5922],"ing a new _p":[5922],"ng a new _po":[5922],"g a new _poi":[5922]," a new _poin":[5922],"a new _point":[5922]," new _points":[5922],"new _points_":[5922],"ew _points_ ":[5922],"w _points_ a":[5922],"ints_ array.":[5922],"nts_ array. ":[5922],"ts_ array.  ":[5922],"s_ array.   ":[5922],"use case wit":[5923],"se case with":[5923]," case with a":[5923],"case with a ":[5923],"ase with a _":[5923],"se with a _p":[5923],"e with a _pa":[5923]," with a _pat":[5923],"with a _path":[5923],"ith a _path_":[5923],"th a _path_ ":[5923],"h a _path_ p":[5923]," a _path_ pa":[5923],"a _path_ par":[5923]," _path_ para":[5923],"_path_ param":[5923],"parameter as":[5923],"arameter as ":[5923],"rameter as a":[5923],"ameter as al":[5923],"meter as all":[5923],"eter as all ":[5923],"ter as all p":[5923],"er as all pa":[5923],"r as all par":[5923]," as all para":[5923],"as all param":[5923],"s all parame":[5923]," all paramet":[5923],"all parametr":[5923],"ll parametri":[5923],"l parametric":[5923],"ric shapes h":[5923],"ic shapes ha":[5923],"c shapes hav":[5923]," shapes have":[5923],"shapes have ":[5923],"hapes have o":[5923],"apes have on":[5923],"pes have one":[5923],"es have one ":[5923],"s have one :":[5923]," have one : ":[5923],"have one :  ":[5923],"ave one :   ":[5923],"ve one :    ":[5923],"ar path = [v":[5925],"r path = [v1":[5925]," path = [v1,":[5925],"path = [v1, ":[5925],"ath = [v1, v":[5925],"th = [v1, v2":[5925],"h = [v1, v2,":[5925],"., vn]; // y":[5925],", vn]; // yo":[5925]," vn]; // you":[5925],"vn]; // your":[5925],"n]; // your ":[5925],"]; // your o":[5925],"; // your ow":[5925]," // your own":[5925],"// your own ":[5925],"/ your own a":[5925]," your own ar":[5925],"your own arr":[5925],"our own arra":[5925],"ur own array":[5925],"r own array,":[5925]," own array, ":[5925],"own array, c":[5925],"wn array, cr":[5925],"n array, cre":[5925]," array, crea":[5925],"array, creat":[5925],"rray, create":[5925],"ray, created":[5925],"ay, created ":[5925],"y, created o":[5925],", created on":[5925]," created onc":[5925],"created once":[5925],"var mesh = c":[5926],"ar mesh = cr":[5926],"r mesh = cre":[5926]," mesh = crea":[5926,5942],"mesh = creat":[5926,5942],"esh = create":[5926,5942],"sh = createx":[5926,5942],"h = createxx":[5926,5942]," = createxxx":[5926,5942],"= createxxx(":[5926,5942]," createxxx(\"":[5926],"createxxx(\"m":[5926],"reatexxx(\"me":[5926],"eatexxx(\"mes":[5926],"atexxx(\"mesh":[5926],"texxx(\"mesh\"":[5926],"exxx(\"mesh\",":[5926],"xxx(\"mesh\", ":[5926],"xx(\"mesh\", p":[5926],"x(\"mesh\", pa":[5926],"(\"mesh\", pat":[5926],"\"mesh\", path":[5926],"mesh\", path,":[5926],"esh\", path, ":[5926],"sh\", path, e":[5926],"h\", path, et":[5926],"\", path, etc":[5926],", path, etc,":[5926]," path, etc, ":[5926],"path, etc, .":[5926],"ath, etc, ..":[5926],"th, etc, ...":[5926],"h, etc, ...,":[5926],", etc, ..., ":[5926]," etc, ..., s":[5926],"etc, ..., sc":[5926],"tc, ..., sce":[5926],"c, ..., scen":[5926],", ..., scene":[5926]," ..., scene,":[5926],"..., scene, ":[5926],".., scene, t":[5926],"., scene, tr":[5926],"ene, true); ":[5926],"ne, true); /":[5926],"e, true); //":[5926],", true); // ":[5926]," true); // u":[5926],"true); // up":[5926],"rue); // upd":[5926],"ue); // upda":[5926],"e); // updat":[5926],"); // updata":[5926],"; // updatab":[5926]," // updatabl":[5926],"// updatable":[5926],"/ updatable ":[5926]," updatable =":[5926],"updatable = ":[5926],"pdatable = t":[5926],"datable = tr":[5926],"atable = tru":[5926],"table = true":[5926],"able = true ":[5926],"ble = true :":[5926],"le = true : ":[5926],"e = true : c":[5926]," = true : cr":[5926],"= true : cre":[5926]," true : crea":[5926],"true : creat":[5926],"rue : create":[5926],"ue : creates":[5926],"e : creates ":[5926]," : creates y":[5926],": creates yo":[5926]," creates you":[5926],"creates your":[5926],"reates your ":[5926],"eates your i":[5926],"ates your in":[5926],"tes your ini":[5926],"es your init":[5926],"s your initi":[5926]," your initia":[5926],"your initial":[5926],"our initial ":[5926],"ur initial m":[5926],"r initial me":[5926]," initial mes":[5926],"initial mesh":[5926],"var computev":[5927],"ar computeva":[5927],"r computeval":[5927]," computevalu":[5927,5931,5932,5933],"computevalue":[5927,5931,5932,5933],"omputevalue ":[5927],"mputevalue =":[5927],"putevalue = ":[5927],"utevalue = f":[5927],"tevalue = fu":[5927],"evalue = fun":[5927],"value = func":[5927],"alue = funct":[5927],"lue = functi":[5927],"ue = functio":[5927],"= function(v":[5927]," function(va":[5927],"function(val":[5927],"unction(val1":[5927],"nction(val1,":[5927],"ction(val1, ":[5927],"tion(val1, v":[5927],"ion(val1, va":[5927],"on(val1, val":[5927],"n(val1, val2":[5927],"(val1, val2)":[5927],"val1, val2) ":[5927],"al1, val2) {":[5927],"l1, val2) { ":[5927],"1, val2) { .":[5927],", val2) { ..":[5927]," val2) { ...":[5927],"val2) { ... ":[5927],"al2) { ... }":[5927],"l2) { ... };":[5927],"2) { ... }; ":[5927],") { ... }; /":[5927,5928]," { ... }; //":[5927,5928],"{ ... }; // ":[5927,5928]," ... }; // y":[5927],"... }; // yo":[5927],".. }; // you":[5927],". }; // your":[5927]," }; // your ":[5927],"}; // your u":[5927],"; // your up":[5927]," // your upd":[5927],"// your upda":[5927],"/ your updat":[5927]," your update":[5927],"your update ":[5927],"our update l":[5927],"ur update lo":[5927],"r update log":[5927]," update logi":[5927],"update logic":[5927],"pdate logic ":[5927],"date logic :":[5927],"ate logic : ":[5927],"te logic : r":[5927],"e logic : re":[5927]," logic : ret":[5927],"logic : retu":[5927],"ogic : retur":[5927],"gic : return":[5927],"ic : returns":[5927],"c : returns ":[5927]," : returns a":[5927],": returns a ":[5927]," returns a v":[5927],"returns a va":[5927],"eturns a val":[5927],"turns a valu":[5927],"urns a value":[5927],"rns a value ":[5927],"ns a value i":[5927],"s a value in":[5927]," a value in ":[5927],"a value in f":[5927]," value in fu":[5927],"value in fun":[5927],"alue in func":[5927],"lue in funct":[5927],"ue in functi":[5927],"e in functio":[5927],"unction of v":[5927],"nction of va":[5927],"ction of val":[5927],"tion of val1":[5927],"ion of val1 ":[5927],"on of val1 a":[5927],"n of val1 an":[5927]," of val1 and":[5927],"of val1 and ":[5927],"f val1 and v":[5927]," val1 and va":[5927],"val1 and val":[5927],"al1 and val2":[5927],"var getparam":[5928],"ar getparam ":[5928],"r getparam =":[5928]," getparam = ":[5928],"getparam = f":[5928],"etparam = fu":[5928],"tparam = fun":[5928],"param = func":[5928],"aram = funct":[5928],"ram = functi":[5928],"am = functio":[5928],"m = function":[5928],"= function()":[5928],"nction() { .":[5928],"ction() { ..":[5928],"tion() { ...":[5928],"ion() { ... ":[5928],"on() { ... }":[5928],"n() { ... };":[5928],"() { ... }; ":[5928]," ... }; // r":[5928],"... }; // re":[5928],".. }; // ret":[5928],". }; // retu":[5928]," }; // retur":[5928],"}; // return":[5928],"; // returns":[5928]," // returns ":[5928],"// returns a":[5928],"/ returns a ":[5928]," returns a p":[5928],"returns a pa":[5928],"eturns a par":[5928],"turns a para":[5928],"urns a param":[5928],"rns a param ":[5928],"ns a param v":[5928],"s a param va":[5928]," a param val":[5928],"a param valu":[5928]," param value":[5928],"param value ":[5928],"aram value e":[5928],"ram value ev":[5928],"am value evo":[5928],"m value evol":[5928]," value evolv":[5928],"value evolvi":[5928],"alue evolvin":[5928],"lue evolving":[5928],"ue evolving ":[5928],"e evolving i":[5928]," evolving in":[5928],"evolving in ":[5928],"volving in t":[5928],"olving in th":[5928],"lving in the":[5928],"ving in the ":[5928],"ing in the r":[5928],"ng in the re":[5928],"g in the ren":[5928],"(path, k) { ":[5929],"path, k) { /":[5929],"ath, k) { //":[5929],"th, k) { // ":[5929],"h, k) { // u":[5929],", k) { // up":[5929]," k) { // upd":[5929],"k) { // upda":[5929],") { // updat":[5929]," { // update":[5929],"{ // updates":[5929]," // updates ":[5929],"// updates t":[5929],"/ updates th":[5929],"pdates the e":[5929],"dates the ex":[5929],"ates the exi":[5929],"tes the exis":[5929],"es the exist":[5929],"s the existi":[5929],"e existing p":[5929],"existing pat":[5929],"xisting path":[5929],"isting path ":[5929],"sting path a":[5929],"ting path ar":[5929],"ing path arr":[5929],"ng path arra":[5929],"g path array":[5929],"path array e":[5929],"ath array el":[5929],"th array ele":[5929],"ray elements":[5929],"   var x = c":[5931],"  var x = co":[5931]," var x = com":[5931],"var x = comp":[5931],"ar x = compu":[5931],"r x = comput":[5931]," x = compute":[5931],"x = computev":[5931]," = computeva":[5931,5932,5933],"= computeval":[5931,5932,5933],"omputevalue(":[5931,5932,5933],"mputevalue(p":[5931,5932,5933],"putevalue(pa":[5931,5932,5933],"utevalue(pat":[5931,5932,5933],"tevalue(path":[5931,5932,5933],"evalue(path[":[5931,5932,5933],"value(path[i":[5931,5932,5933],"alue(path[i]":[5931,5932,5933],"lue(path[i].":[5931,5932,5933],"ue(path[i].x":[5931],"e(path[i].x,":[5931],"(path[i].x, ":[5931],"path[i].x, k":[5931],"ath[i].x, k)":[5931],"th[i].x, k);":[5931],"   var y = c":[5932],"  var y = co":[5932]," var y = com":[5932],"var y = comp":[5932],"ar y = compu":[5932],"r y = comput":[5932]," y = compute":[5932],"y = computev":[5932],"ue(path[i].y":[5932],"e(path[i].y,":[5932],"(path[i].y, ":[5932],"path[i].y, k":[5932],"ath[i].y, k)":[5932],"th[i].y, k);":[5932],"   var z = c":[5933],"  var z = co":[5933]," var z = com":[5933],"var z = comp":[5933],"ar z = compu":[5933],"r z = comput":[5933]," z = compute":[5933],"z = computev":[5933],"ue(path[i].z":[5933],"e(path[i].z,":[5933],"(path[i].z, ":[5933],"path[i].z, k":[5933],"ath[i].z, k)":[5933],"th[i].z, k);":[5933],"  var k = ge":[5940]," var k = get":[5940],"var k = getp":[5940],"ar k = getpa":[5940],"r k = getpar":[5940]," k = getpara":[5940],"k = getparam":[5940]," = getparam(":[5940],"= getparam()":[5940]," getparam();":[5940],"tepath(path,":[5941],"epath(path, ":[5941],"path(path, k":[5941],"ath(path, k)":[5941],"th(path, k);":[5941],"  mesh = cre":[5942]," createxxx(n":[5942],"createxxx(nu":[5942],"reatexxx(nul":[5942],"eatexxx(null":[5942],"atexxx(null,":[5942],"texxx(null, ":[5942],"exxx(null, p":[5942],"xxx(null, pa":[5942],"xx(null, pat":[5942],"x(null, path":[5942],"ull, path, n":[5942],"ll, path, nu":[5942],"l, path, nul":[5942],"ath, null, .":[5942],"th, null, ..":[5942],"h, null, ...":[5942],", null, ...,":[5942]," null, ..., ":[5942],"null, ..., n":[5942],"ull, ..., nu":[5942],"ll, ..., nul":[5942],"l, ..., null":[5942],", ..., null,":[5942]," ..., null, ":[5942],"..., null, m":[5942],".., null, me":[5942],"., null, mes":[5942],"abylon.plays":[5945],"bylon.playso":[5945],"ylon.playsou":[5945],"lon.playsoun":[5945],"on.playsound":[5945],"n.playsounda":[5945],".playsoundac":[5945],"playsoundact":[5945,5946],"laysoundacti":[5945,5946],"aysoundactio":[5945,5946],"ysoundaction":[5945,5946],"soundaction`":[5945],"oundaction` ":[5945],"undaction` a":[5945],"ndaction` an":[5945],"daction` and":[5945],"action` and ":[5945],"ction` and `":[5945],"tion` and `b":[5945],"ion` and `ba":[5945],"on` and `bab":[5945],"n` and `baby":[5945],"abylon.stops":[5945],"bylon.stopso":[5945],"ylon.stopsou":[5945],"lon.stopsoun":[5945],"on.stopsound":[5945],"n.stopsounda":[5945],".stopsoundac":[5945],"stopsoundact":[5945,5947],"topsoundacti":[5945,5947],"opsoundactio":[5945,5947],"psoundaction":[5945,5947],"oundaction`:":[5945],"undaction`: ":[5945],"ndaction`: t":[5945],"daction`: th":[5945],"action`: the":[5945],"ction`: the ":[5945],"tion`: the \"":[5945],"ion`: the \"s":[5945],"on`: the \"so":[5945],"n`: the \"sou":[5945],"`: the \"soun":[5945],": the \"sound":[5945]," the \"sound\"":[5945],"the \"sound\" ":[5945],"he \"sound\" p":[5945],"e \"sound\" pa":[5945]," \"sound\" par":[5945],"\"sound\" para":[5945],"sound\" param":[5945],"ound\" parame":[5945],"und\" paramet":[5945],"nd\" paramete":[5945],"d\" parameter":[5945],"ter is the r":[5945],"er is the re":[5945],"r is the ref":[5945]," is the refe":[5945],"is the refer":[5945],"s the refere":[5945]," the referen":[5945],"the referenc":[5945],"he reference":[5945],"e reference ":[5945],"ference of t":[5945],"erence of th":[5945],"rence of the":[5945],"ence of the ":[5945],"nce of the s":[5945],"ce of the so":[5945],"e of the sou":[5945,6549]," the sound y":[5945],"the sound yo":[5945],"he sound you":[5945],"e sound you ":[5945]," sound you c":[5945],"sound you cr":[5945],"ound you cre":[5945],"und you crea":[5945],"nd you creat":[5945],"d you create":[5945],"ou created u":[5945],"u created us":[5945]," created usi":[5945],"created usin":[5945],"reated using":[5945],"eated using ":[5945],"ated using `":[5945],"ted using `v":[5945],"ed using `va":[5945],"d using `var":[5945]," using `var ":[5945],"using `var s":[5945],"sing `var so":[5945],"ing `var sou":[5945],"ng `var soun":[5945],"g `var sound":[5945]," `var sound ":[5945],"`var sound =":[5945],"var sound = ":[5945],"ar sound = n":[5945],"r sound = ne":[5945]," sound = new":[5945],"sound = new ":[5945],"ound = new b":[5945],"und = new ba":[5945],"nd = new bab":[5945],"ylon.sound(.":[5945],"lon.sound(..":[5945],"on.sound(...":[5945],"n.sound(...)":[5945],".sound(...)`":[5945],"`playsoundac":[5946],"soundaction(":[5946,5947],"oundaction(t":[5946,5947],"undaction(tr":[5946,5947],"ndaction(tri":[5946,5947],"daction(trig":[5946,5947],"n(trigger, s":[5946,5947],"(trigger, so":[5946,5947],"trigger, sou":[5946,5947],"rigger, soun":[5946,5947],"igger, sound":[5946,5947],"gger, sound,":[5946,5947],"ger, sound, ":[5946,5947],"er, sound, c":[5946,5947],"r, sound, co":[5946,5947],", sound, con":[5946,5947]," sound, cond":[5946,5947],"sound, condi":[5946,5947],"ound, condit":[5946,5947],"und, conditi":[5946,5947],"nd, conditio":[5946,5947],"d, condition":[5946,5947],"`stopsoundac":[5947],"# conditions":[5948]," are three k":[5949],"are three ki":[5949],"re three kin":[5949],"e three kind":[5949]," three kinds":[5949],"three kinds ":[5949],"hree kinds o":[5949],"ree kinds of":[5949],"ee kinds of ":[5949],"e kinds of c":[5949]," kinds of co":[5949],"kinds of con":[5949],"inds of cond":[5949],"nds of condi":[5949],"ds of condit":[5949],"s of conditi":[5949]," of conditio":[5949],"of condition":[5949],"f conditions":[5949]," conditions:":[5949]," `babylon.va":[5950,5951,5952,5953,5954],"`babylon.val":[5950,5951,5952,5953,5954],"babylon.valu":[5950,5951,5952,5953,5954],"abylon.value":[5950,5951,5952,5953,5954],"bylon.valuec":[5950,5951,5952,5953,5954],"ylon.valueco":[5950,5951,5952,5953,5954],"lon.valuecon":[5950,5951,5952,5953,5954],"on.valuecond":[5950,5951,5952,5953,5954],"n.valuecondi":[5950,5951,5952,5953,5954],".valuecondit":[5950,5951,5952,5953,5954],"valueconditi":[5950,5951,5952,5953,5954,5955],"alueconditio":[5950,5951,5952,5953,5954,5955],"luecondition":[5950,5951,5952,5953,5954,5955],"uecondition`":[5950],"econdition`:":[5950,5956,5958],"condition`: ":[5950,5956,5958],"ondition`: t":[5950,5956,5958],"ndition`: th":[5950,5956,5958],"dition`: thi":[5950,5956,5958],"ition`: this":[5950,5956,5958],"ion`: this c":[5950,5956,5958],"on`: this co":[5950,5956,5958],"n`: this con":[5950,5956,5958],"`: this cond":[5950,5956,5958],": this condi":[5950,5956,5958]," this condit":[5950,5956,5958],"this conditi":[5950,5956,5958],"his conditio":[5950,5956,5958],"is condition":[5950,5956,5958],"s condition ":[5950,5956,5958],"ion is true ":[5950],"on is true w":[5950],"n is true wh":[5950]," is true whe":[5950],"is true when":[5950],"s true when ":[5950]," true when a":[5950],"true when a ":[5950],"rue when a g":[5950],"ue when a gi":[5950],"e when a giv":[5950]," when a give":[5950],"when a given":[5950],"hen a given ":[5950],"en a given p":[5950],"n a given pr":[5950]," a given pro":[5950],"a given prop":[5950]," given prope":[5950],"given proper":[5950],"iven propert":[5950],"ven property":[5950],"n property i":[5950],"y is equal /":[5950]," is equal / ":[5950],"is equal / g":[5950],"s equal / gr":[5950]," equal / gre":[5950],"equal / grea":[5950],"qual / great":[5950],"ual / greate":[5950],"al / greater":[5950],"l / greater ":[5950]," / greater /":[5950],"/ greater / ":[5950]," greater / l":[5950],"greater / le":[5950],"reater / les":[5950],"eater / less":[5950],"ater / lesse":[5950],"ter / lesser":[5950],"er / lesser ":[5950],"r / lesser /":[5950]," / lesser / ":[5950],"/ lesser / d":[5950]," lesser / di":[5950],"lesser / dif":[5950],"esser / diff":[5950],"sser / diffe":[5950],"ser / differ":[5950],"er / differe":[5950],"r / differen":[5950]," / different":[5950],"/ different ":[5950]," different f":[5950],"different fr":[5950],"ifferent fro":[5950],"fferent from":[5950],"ferent from ":[5950],"erent from a":[5950],"rent from a ":[5950],"ent from a s":[5950],"nt from a sp":[5950],"t from a spe":[5950]," from a spec":[5950],"from a speci":[5950],"rom a specif":[5950],"om a specifi":[5950],"m a specific":[5950],"a specific v":[5950]," specific va":[5950],"specific val":[5950],"pecific valu":[5950],"ecific value":[5950],"cific value.":[5950],"ific value. ":[5950],"fic value. t":[5950],"c value. the":[5950]," value. the ":[5950],"value. the f":[5950],"alue. the fo":[5950],"lue. the fol":[5950],"ue. the foll":[5950],"e. the follo":[5950],"ollowing ope":[5950],"llowing oper":[5950],"lowing opera":[5950],"owing operan":[5950],"wing operand":[5950],"ing operands":[5950],"ng operands ":[5950],"g operands a":[5950]," operands ar":[5950],"operands are":[5950],"perands are ":[5950],"erands are t":[5950],"rands are th":[5950],"ands are thu":[5950],"nds are thus":[5950],"ds are thus ":[5950],"s are thus s":[5950]," are thus su":[5950],"are thus sup":[5950],"re thus supp":[5950],"e thus suppo":[5950]," thus suppor":[5950],"thus support":[5950],"hus supporte":[5950],"us supported":[5950],"s supported:":[5950],"uecondition.":[5951,5952,5953,5954],"econdition.i":[5951,5952,5953,5954],"condition.is":[5951,5952,5953,5954],"ondition.ise":[5951],"ndition.iseq":[5951],"dition.isequ":[5951],"ition.isequa":[5951],"tion.isequal":[5951],"ion.isequal`":[5951],"ondition.isd":[5952],"ndition.isdi":[5952],"dition.isdif":[5952],"ition.isdiff":[5952],"tion.isdiffe":[5952],"ion.isdiffer":[5952],"on.isdiffere":[5952],"n.isdifferen":[5952],".isdifferent":[5952],"isdifferent`":[5952],"ondition.isg":[5953],"ndition.isgr":[5953],"dition.isgre":[5953],"ition.isgrea":[5953],"tion.isgreat":[5953],"ion.isgreate":[5953],"on.isgreater":[5953],"n.isgreater`":[5953],"ondition.isl":[5954],"ndition.isle":[5954],"dition.isles":[5954],"ition.isless":[5954],"tion.islesse":[5954],"ion.islesser":[5954],"on.islesser`":[5954],"`valuecondit":[5955],"uecondition(":[5955],"econdition(a":[5955,5957,5959],"condition(ac":[5955,5957,5959],"ondition(act":[5955,5957,5959],"ndition(acti":[5955,5957,5959],"dition(actio":[5955,5957,5959],"ition(action":[5955,5957,5959],"tion(actionm":[5955,5957,5959],"ion(actionma":[5955,5957,5959],"on(actionman":[5955,5957,5959],"n(actionmana":[5955,5957,5959],"(actionmanag":[5955,5957,5959],"onmanager, t":[5955,5959],"nmanager, ta":[5955,5959],"manager, tar":[5955,5959],"anager, targ":[5955,5959],"nager, targe":[5955,5959],"ager, target":[5955,5959],"th, value, o":[5955],"h, value, op":[5955],", value, ope":[5955]," value, oper":[5955],"value, opera":[5955],"alue, operat":[5955],"lue, operato":[5955],"ue, operator":[5955],"e, operator)":[5955],", operator)`":[5955]," `babylon.pr":[5956],"`babylon.pre":[5956],"tecondition`":[5956,5958]," condition u":[5956],"condition us":[5956],"ondition use":[5956],"ndition uses":[5956],"dition uses ":[5956],"ition uses a":[5956],"ion uses a p":[5956],"on uses a pr":[5956],"n uses a pre":[5956]," uses a pred":[5956],"uses a predi":[5956],"ses a predic":[5956],"es a predica":[5956],"s a predicat":[5956]," a predicate":[5956],"a predicate ":[5956]," predicate t":[5956],"predicate to":[5956],"redicate to ":[5956],"edicate to d":[5956],"dicate to de":[5956],"icate to det":[5956],"cate to dete":[5956],"ate to deter":[5956],"te to determ":[5956],"e to determi":[5956]," determine i":[5956],"determine it":[5956],"etermine its":[5956],"termine its ":[5956],"ermine its s":[5956],"rmine its st":[5956],"mine its sta":[5956],"ine its stat":[5956],"ne its state":[5956],"e its state:":[5956],"`predicateco":[5957],"onmanager, p":[5957],"nmanager, pr":[5957],"manager, pre":[5957],"anager, pred":[5957],"nager, predi":[5957],"ager, predic":[5957],"ger, predica":[5957],"er, predicat":[5957],"r, predicate":[5957],", predicate)":[5957]," predicate)`":[5957],"`babylon.sta":[5958],"babylon.stat":[5958],"abylon.state":[5958],"bylon.statec":[5958],"ylon.stateco":[5958],"lon.statecon":[5958],"on.statecond":[5958],"n.statecondi":[5958],".statecondit":[5958],"stateconditi":[5958,5959],"tateconditio":[5958,5959]," condition c":[5958],"condition ch":[5958],"ondition che":[5958],"ndition chec":[5958],"dition check":[5958],"ition checks":[5958],"tion checks ":[5958],"ion checks t":[5958],"on checks th":[5958],"n checks the":[5958]," checks the ":[5958],"checks the `":[5958],"hecks the ``":[5958],"ecks the ```":[5958],"cks the ```s":[5958],"ks the ```st":[5958],"s the ```sta":[5958]," the ```stat":[5958],"the ```state":[5958],"he ```state`":[5958],"e ```state``":[5958]," ```state```":[5958],"```state``` ":[5958],"``state``` p":[5958],"`state``` pr":[5958],"state``` pro":[5958],"tate``` prop":[5958],"ate``` prope":[5958],"te``` proper":[5958],"roperty of a":[5958],"operty of an":[5958],"perty of an ":[5958],"erty of an o":[5958],"rty of an ob":[5958],"ty of an obj":[5958],"y of an obje":[5958]," of an objec":[5958],"of an object":[5958],"f an object ":[5958],"object and c":[5958],"bject and co":[5958],"ject and com":[5958],"ect and comp":[5958],"ct and compa":[5958],"t and compar":[5958]," and compare":[5958],"and compares":[5958],"nd compares ":[5958],"d compares i":[5958]," compares it":[5958],"compares it ":[5958],"ompares it t":[5958],"mpares it to":[5958],"pares it to ":[5958],"ares it to g":[5958],"res it to gi":[5958],"es it to giv":[5958],"s it to give":[5958]," it to given":[5958],"it to given ":[5958],"t to given v":[5958]," to given va":[5958],"to given val":[5958],"o given valu":[5958]," given value":[5958],"given value:":[5958],"`statecondit":[5959],"r, target, v":[5959],", target, va":[5959]," target, val":[5959],"target, valu":[5959],"arget, value":[5959],"rget, value)":[5959],"get, value)`":[5959],"# experiment":[5960],"rimenting ac":[5960],"imenting act":[5960],"menting acti":[5960],"enting actio":[5960],"nting action":[5960],"ting actions":[5960],"so basically":[5961],"o basically,":[5961]," basically, ":[5961],"basically, l":[5961],"asically, le":[5961],"sically, let":[5961],"ically, let'":[5961],"cally, let's":[5961],"ally, let's ":[5961],"lly, let's i":[5961],"ly, let's im":[5961],"y, let's ima":[5961],", let's imag":[5961]," let's imagi":[5961],"magine you w":[5961],"agine you wa":[5961],"gine you wan":[5961],"ine you want":[5961],"ne you want ":[5961],"u want to al":[5961]," want to alm":[5961],"want to almo":[5961],"ant to almos":[5961],"nt to almost":[5961],"t to almost ":[5961]," to almost h":[5961],"to almost hi":[5961],"o almost hid":[5961]," almost hide":[5961],"almost hide ":[5961],"lmost hide a":[5961],"most hide a ":[5961],"ost hide a m":[5961],"st hide a me":[5961],"t hide a mes":[5961]," hide a mesh":[5961],"hide a mesh ":[5961],"ide a mesh w":[5961],"de a mesh wh":[5961],"e a mesh whe":[5961]," a mesh when":[5961],"a mesh when ":[5961]," mesh when t":[5961],"mesh when th":[5961],"esh when the":[5961],"sh when the ":[5961],"h when the u":[5961],"ser touches ":[5961],"er touches i":[5961],"r touches it":[5961]," touches it.":[5961],"irst of all ":[5962],"rst of all y":[5962],"st of all yo":[5962],"t of all you":[5962]," of all you ":[5962],"of all you h":[5962],"f all you ha":[5962]," all you hav":[5962],"all you have":[5962],"ll you have ":[5962],"l you have t":[5962],"u have to ad":[5962],"ave to add a":[5962],"ve to add a ":[5962],"e to add a `":[5962]," to add a `b":[5962],"to add a `ba":[5962],"o add a `bab":[5962]," add a `baby":[5962],"add a `babyl":[5962],"dd a `babylo":[5962],"d a `babylon":[5962]," a `babylon.":[5962],"a `babylon.a":[5962],"onmanager` o":[5962],"nmanager` on":[5962],"manager` on ":[5962],"anager` on i":[5962],"nager` on it":[5962],"ager` on it:":[5962],"en you can c":[5964],"n you can cr":[5964],"an create an":[5964],"n create an ":[5964],"create an ac":[5964],"reate an act":[5964],"eate an acti":[5964],"ate an actio":[5964],"te an action":[5964],"e an action ":[5964]," an action t":[5964],"an action th":[5964],"n action tha":[5964]," action that":[5964],"action that ":[5964],"tion that wi":[5964,6063],"ion that wil":[5964,6063],"on that will":[5964,6063]," that will b":[5964,6129,6572],"that will be":[5964,6129,6572],"hat will be ":[5964,6129,6572],"at will be a":[5964],"t will be as":[5964]," will be ass":[5964],"will be asso":[5964],"ill be assoc":[5964],"ll be associ":[5964],"l be associa":[5964]," be associat":[5964],"be associate":[5964],"d with the `":[5964]," with the `b":[5964],"with the `ba":[5964],"ith the `bab":[5964],"th the `baby":[5964],"h the `babyl":[5964],"e `babylon.a":[5964],"icktrigger` ":[5964],"cktrigger` t":[5964],"ktrigger` tr":[5964],"trigger` tri":[5964],"rigger` trig":[5964],"igger` trigg":[5964],"gger` trigge":[5964],"ger` trigger":[5964],"er` trigger.":[5964],"r` trigger. ":[5964],"` trigger. t":[5964],"trigger. thi":[5964],"rigger. this":[5964],"igger. this ":[5964],"gger. this a":[5964],"ger. this ac":[5964],"er. this act":[5964],"r. this acti":[5964],". this actio":[5964],"ction will i":[5964],"tion will in":[5964],"ion will int":[5964],"on will inte":[5964],"n will inter":[5964]," will interp":[5964],"will interpo":[5964],"ill interpol":[5964],"ll interpola":[5964],"l interpolat":[5964],"polate the `":[5964],"olate the ``":[5964],"late the ```":[5964],"ate the ```m":[5964],"te the ```me":[5964],"e the ```mes":[5964],"he ```mesh.v":[5964],"e ```mesh.vi":[5964]," ```mesh.vis":[5964],"```mesh.visi":[5964],"``mesh.visib":[5964],"`mesh.visibi":[5964,5969],"mesh.visibil":[5964,5969],"esh.visibili":[5964,5969],"sh.visibilit":[5964,5969],"h.visibility":[5964,5969],"visibility``":[5964],"isibility```":[5964],"sibility``` ":[5964],"ibility``` p":[5964],"bility``` pr":[5964],"ility``` pro":[5964],"lity``` prop":[5964],"ity``` prope":[5964],"ty``` proper":[5964],"y``` propert":[5964],"roperty to 0":[5964],"operty to 0.":[5964],"perty to 0.2":[5964],"erty to 0.2:":[5964],"`var action ":[5965,5970],"var action =":[5965,5970],"ar action = ":[5965,5970],"r action = n":[5965,5970]," action = ne":[5965,5970],"action = new":[5965,5970],"cktrigger, m":[5965,5970,5971],"ktrigger, me":[5965,5970,5971],"igger, mesh,":[5965,5970,5971],"gger, mesh, ":[5965,5970,5971],"ger, mesh, \"":[5965,5970,5971],"er, mesh, \"v":[5965,5970,5971],"r, mesh, \"vi":[5965,5970,5971],", mesh, \"vis":[5965,5970,5971]," mesh, \"visi":[5965,5970,5971],"mesh, \"visib":[5965,5970,5971],"esh, \"visibi":[5965,5970,5971],"sh, \"visibil":[5965,5970,5971],"h, \"visibili":[5965,5970,5971],", \"visibilit":[5965,5970,5971]," \"visibility":[5965,5970,5971],"\"visibility\"":[5965,5970,5971],"visibility\",":[5965,5970,5971],"isibility\", ":[5965,5970,5971],"sibility\", 0":[5965,5970],"ibility\", 0.":[5965,5970],"bility\", 0.2":[5965,5970],"ility\", 0.2,":[5965,5970],"lity\", 0.2, ":[5965,5970],"ity\", 0.2, 1":[5965,5970],"ty\", 0.2, 10":[5965,5970],"y\", 0.2, 100":[5965,5970],"\", 0.2, 1000":[5965,5970],", 0.2, 1000)":[5965,5970]," 0.2, 1000);":[5965,5970],"0.2, 1000);`":[5965,5970],"then add thi":[5966],"hen add this":[5966],"en add this ":[5966],"n add this a":[5966]," add this ac":[5966],"add this act":[5966],"dd this acti":[5966],"d this actio":[5966],"his action t":[5966],"is action to":[5966],"s action to ":[5966]," action to t":[5966],"action to th":[5966],"ion to the m":[5966],"on to the me":[5966],"n to the mes":[5966],"to the mesh:":[5966],"steraction(a":[5967,5972],"teraction(ac":[5967,5972],"eraction(act":[5967,5972],"raction(acti":[5967,5972],"action(actio":[5967,5972],"ction(action":[5967,5972],"tion(action)":[5967,5972],"ion(action);":[5967],"on(action);`":[5967],"and you're d":[5968],"nd you're do":[5968],"d you're don":[5968]," you're done":[5968],"you're done!":[5968],"ou're done! ":[5968],"u're done! e":[5968],"'re done! ea":[5968],"re done! eas":[5968],"e done! easy":[5968]," done! easy,":[5968],"done! easy, ":[5968],"one! easy, r":[5968],"ne! easy, ri":[5968],"e! easy, rig":[5968],"! easy, righ":[5968],"lso chain an":[5969],"so chain ano":[5969],"o chain anot":[5969]," chain anoth":[5969],"chain anothe":[5969],"hain another":[5969],"ain another ":[5969],"in another a":[5969],"n another ac":[5969]," another act":[5969],"another acti":[5969],"nother actio":[5969],"other action":[5969],"ther action ":[5969],"her action t":[5969],"er action to":[5969],"r action to ":[5969]," action to r":[5969],"action to re":[5969],"ction to res":[5969],"tion to rest":[5969],"ion to resto":[5969],"on to restor":[5969],"n to restore":[5969]," to restore ":[5969],"to restore t":[5969],"o restore th":[5969]," restore the":[5969],"restore the ":[5969],"estore the `":[5969],"store the `m":[5969],"tore the `me":[5969],"ore the `mes":[5969],"re the `mesh":[5969],"e the `mesh.":[5969]," the `mesh.v":[5969],"the `mesh.vi":[5969],"he `mesh.vis":[5969],"e `mesh.visi":[5969]," `mesh.visib":[5969],"isibility` p":[5969],"sibility` pr":[5969],"ibility` pro":[5969],"bility` prop":[5969],"ility` prope":[5969],"lity` proper":[5969],"ity` propert":[5969],"ty` property":[5969],"y` property ":[5969],"erty to defa":[5969],"rty to defau":[5969],"ty to defaul":[5969],"y to default":[5969]," to default ":[5969],"to default v":[5969],"o default va":[5969],"fault value:":[5969],"`var action2":[5971],"var action2 ":[5971],"ar action2 =":[5971],"r action2 = ":[5971]," action2 = n":[5971],"action2 = ne":[5971],"sibility\", 1":[5971],"ibility\", 1.":[5971],"bility\", 1.0":[5971],"ility\", 1.0,":[5971],"lity\", 1.0, ":[5971],"ity\", 1.0, 1":[5971],"ty\", 1.0, 10":[5971],"y\", 1.0, 100":[5971],"\", 1.0, 1000":[5971],", 1.0, 1000)":[5971]," 1.0, 1000);":[5971],"1.0, 1000);`":[5971],"ion(action).":[5972],"on(action).t":[5972],"n(action).th":[5972],"(action).the":[5972],"action).then":[5972],"ction).then(":[5972],"tion).then(a":[5972],"ion).then(ac":[5972],"on).then(act":[5972],"n).then(acti":[5972],").then(actio":[5972],".then(action":[5972],"then(action2":[5972],"hen(action2)":[5972],"en(action2);":[5972],"n(action2);`":[5972],"click will h":[5973],"lick will hi":[5973],"ick will hid":[5973],"ck will hide":[5973],"k will hide ":[5973]," will hide t":[5973],"will hide th":[5973],"ill hide the":[5973],"ll hide the ":[5973],"l hide the b":[5973]," hide the bu":[5973],"hide the but":[5973],"ide the butt":[5973],"de the butto":[5973],"utton, the f":[5973],"tton, the fo":[5973],"ton, the fol":[5973],"on, the foll":[5973],"n, the follo":[5973],"following cl":[5973],"ollowing cli":[5973],"llowing clic":[5973],"lowing click":[5973],"owing click ":[5973],"wing click w":[5973],"ing click wi":[5973],"ng click wil":[5973],"g click will":[5973],"click will r":[5973],"lick will re":[5973],"ick will res":[5973],"ck will rest":[5973],"k will resto":[5973]," will restor":[5973],"will restore":[5973],"ill restore ":[5973],"ll restore i":[5973],"l restore it":[5973]," restore it,":[5973],"restore it, ":[5973],"estore it, a":[5973],"store it, an":[5973],"tore it, and":[5973],"ore it, and ":[5973],"re it, and s":[5973],"e it, and so":[5973]," it, and so ":[5973],"it, and so o":[5973],"t, and so on":[5973],"u want to pl":[5975]," want to pla":[5975],"want to play":[5975],"ant to play ":[5975],"nt to play w":[5975],"t to play wi":[5975],"play with ac":[5975],"lay with act":[5975],"ay with acti":[5975],"y with actio":[5975]," with action":[5975],"with actions":[5975],"ith actions,":[5975],"th actions, ":[5975],"h actions, y":[5975],"tions, you c":[5975],"ions, you ca":[5975],"ons, you can":[5975],"ns, you can ":[5975],"s, you can t":[5975],"can try them":[5975],"an try them ":[5975],"n try them a":[5975]," try them at":[5975],"try them at ":[5975],"ry them at o":[5975],"y them at ou":[5975]," them at our":[5975],"them at our ":[5975],"hem at our p":[5975],"em at our pl":[5975],"m at our pla":[5975],"in light blu":[5976],"n light blue":[5976]," light blue,":[5976],"light blue, ":[5976],"ight blue, t":[5976],"ght blue, th":[5976],"ht blue, the":[5976],"t blue, thes":[5976]," blue, these":[5976],"blue, these ":[5976],"lue, these t":[5976],"ue, these tw":[5976],"e, these two":[5976],", these two ":[5976]," these two c":[5976],"these two cu":[5976],"hese two cur":[5976],"ese two curv":[5976],"se two curve":[5976],"e two curves":[5976]," two curves ":[5976],"two curves a":[5976],"wo curves ar":[5976],"o curves are":[5976],"curves are c":[5976],"urves are co":[5976],"rves are con":[5976],"ves are cont":[5976],"es are conti":[5976],"s are contin":[5976]," are continu":[5976],"are continue":[5976],"re continued":[5976],"e continued ":[5976]," continued e":[5976],"continued ea":[5976],"ontinued eac":[5976],"ntinued each":[5976],"tinued each ":[5976],"inued each o":[5976],"nued each ot":[5976],"ued each oth":[5976],"ed each othe":[5976],"d each other":[5976],"each other a":[5976],"ach other an":[5976],"ch other and":[5976],"h other and ":[5976]," other and a":[5976],"other and a ":[5976],"ther and a h":[5976],"her and a he":[5976],"er and a her":[5976],"r and a herm":[5976]," and a hermi":[5976],"and a hermit":[5976],"nd a hermite":[5976],"d a hermite ":[5976]," a hermite c":[5976],"a hermite cu":[5976]," hermite cur":[5976],"hermite curv":[5976],"ermite curve":[5976],"rmite curve ":[5976],"mite curve i":[5976],"ite curve is":[5976],"te curve is ":[5976],"e curve is a":[5976]," curve is al":[5976],"curve is als":[5976],"urve is also":[5976],"rve is also ":[5976],"ve is also a":[5976],"e is also ad":[5976]," is also add":[5976],"is also adde":[5976],"s also added":[5976],"also added i":[5976],"lso added in":[5976],"so added in ":[5976],"o added in c":[5976]," added in co":[5976],"added in con":[5976],"dded in cont":[5976],"ded in conti":[5976],"ed in contin":[5976],"d in continu":[5976]," in continua":[5976],"in continuat":[5976],"n continuati":[5976]," continuatio":[5976],"continuation":[5976],"ontinuation ":[5976],"ntinuation t":[5976],"tinuation to":[5976],"inuation to ":[5976],"nuation to c":[5976],"uation to cl":[5976],"ation to clo":[5976],"tion to clos":[5976],"ion to close":[5976],"on to close ":[5976],"n to close t":[5976]," close the p":[5976],"close the pa":[5976],"lose the pat":[5976],"ose the path":[5976],"se the path.":[5976],"e the path. ":[5976]," the path.  ":[5976],"the path.   ":[5976],"can find a s":[5977],"an find a sa":[5977],"n find a sam":[5977]," find a samp":[5977],"find a sampl":[5977],"ind a sample":[5977],"nd a sample ":[5977],"d a sample [":[5977]," a sample [h":[5977],"a sample [he":[5977]," sample [her":[5977],"sample [here":[5977],"ample [here]":[5977],"mple [here](":[5977],"ple [here](h":[5977],"le [here](ht":[5977],"ound.com/#11":[5977],"und.com/#11b":[5977],"nd.com/#11bh":[5977],"d.com/#11bh6":[5977],".com/#11bh6z":[5977],"com/#11bh6z#":[5977],"om/#11bh6z#1":[5977],"m/#11bh6z#18":[5977],"/#11bh6z#18)":[5977],"var vertical":[5978],"ar verticalb":[5978],"r verticalbl":[5978]," verticalblu":[5978],"verticalblur":[5978,5982,5991,5993],"erticalblur ":[5978],"rticalblur =":[5978],"ticalblur = ":[5978],"icalblur = n":[5978],"calblur = ne":[5978],"t(engine, \"v":[5978],"(engine, \"ve":[5978],"engine, \"ver":[5978],"ngine, \"vert":[5978],"gine, \"verti":[5978],"ine, \"vertic":[5978],"ne, \"vertica":[5978],"e, \"vertical":[5978],", \"verticalb":[5978,5991,5993]," \"verticalbl":[5978,5991,5993],"\"verticalblu":[5978,5991,5993],"erticalblure":[5978,5991,5993],"rticalbluref":[5978,5991,5993],"ticalblureff":[5978,5991,5993],"icalblureffe":[5978,5991,5993],"calblureffec":[5978,5991,5993],"stprocess(\"v":[5979,6450],"tprocess(\"vb":[5979],"process(\"vb\"":[5979],"rocess(\"vb\",":[5979],"ocess(\"vb\", ":[5979],"cess(\"vb\", n":[5979],"ess(\"vb\", ne":[5979],"ss(\"vb\", new":[5979],"s(\"vb\", new ":[5979],"(\"vb\", new b":[5979],"\"vb\", new ba":[5979],"vb\", new bab":[5979],"on.vector2(0":[5979,6450],"n.vector2(0,":[5979,6450],".vector2(0, ":[5979,6450],"vector2(0, 1":[5979,6450],"ector2(0, 1.":[5979,6450],"ctor2(0, 1.0":[5979,6450],"tor2(0, 1.0)":[5979,6450],"or2(0, 1.0),":[5979,6450],"r2(0, 1.0), ":[5979,6450],"2(0, 1.0), 1":[5979],"(0, 1.0), 10":[5979],"0, 1.0), 10,":[5979],", 1.0), 10, ":[5979]," 1.0), 10, 1":[5979],"1.0), 10, 1.":[5979],".0), 10, 1.0":[5979],"ardpipeline.":[5980,5981,5982],"rdpipeline.a":[5980,5981,5982],"dpipeline.ad":[5980,5981,5982],"pipeline.add":[5980,5981,5982],"ipeline.adde":[5980,5981,5982],"peline.addef":[5980,5981,5982],"eline.addeff":[5980,5981,5982],"line.addeffe":[5980,5981,5982],"ine.addeffec":[5980,5981,5982],"ne.addeffect":[5980,5981,5982],"e.addeffect(":[5980,5981,5982],".addeffect(b":[5980],"addeffect(bl":[5980],"ddeffect(bla":[5980],"deffect(blac":[5980],"effect(black":[5980],"ffect(blacka":[5980],"fect(blackan":[5980],"ect(blackand":[5980],"ct(blackandw":[5980],"t(blackandwh":[5980],"(blackandwhi":[5980],"whiteeffect)":[5980],"hiteeffect);":[5980],".addeffect(h":[5981],"addeffect(ho":[5981],"ddeffect(hor":[5981],"deffect(hori":[5981],"effect(horiz":[5981],"ffect(horizo":[5981],"fect(horizon":[5981],"ect(horizont":[5981],"ct(horizonta":[5981],"t(horizontal":[5981],"(horizontalb":[5981],"izontalblur)":[5981],"zontalblur);":[5981],".addeffect(v":[5982],"addeffect(ve":[5982],"ddeffect(ver":[5982],"deffect(vert":[5982],"effect(verti":[5982],"ffect(vertic":[5982],"fect(vertica":[5982],"ect(vertical":[5982],"ct(verticalb":[5982],"t(verticalbl":[5982],"(verticalblu":[5982],"erticalblur)":[5982],"rticalblur);":[5982],"nemanager.ad":[5983],"emanager.add":[5983],"manager.addp":[5983],"anager.addpi":[5983],"nager.addpip":[5983],"ager.addpipe":[5983],"ger.addpipel":[5983],"er.addpipeli":[5983],"r.addpipelin":[5983],".addpipeline":[5983],"ddpipeline(s":[5983],"dpipeline(st":[5983],"pipeline(sta":[5983],"ipeline(stan":[5983],"peline(stand":[5983],"eline(standa":[5983],"line(standar":[5983],"ine(standard":[5983],"ne(standardp":[5983],"e(standardpi":[5983],"(standardpip":[5983],"ardpipeline)":[5983],"rdpipeline);":[5983],"pipeline(\"st":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"ipeline(\"sta":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"peline(\"stan":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"eline(\"stand":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"line(\"standa":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"ine(\"standar":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"ne(\"standard":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"e(\"standardp":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"(\"standardpi":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"rdpipeline\",":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"dpipeline\", ":[5984,5985,5986,5987,5988,5989,5990,5991,5992,5993],"ne\", camera_":[5984,5985,5986,5987],"e\", camera_0":[5984,5985,5986,5987],"\", camera_01":[5984,5988],", camera_01)":[5984,5988]," camera_01);":[5984,5988],"\", camera_02":[5985,5989,5990,5991],", camera_02)":[5985,5989,5990,5991]," camera_02);":[5985,5989,5990,5991],"\", camera_03":[5986,5992,5993],", camera_03)":[5986,5992,5993]," camera_03);":[5986,5992,5993],"\", camera_04":[5987],", camera_04)":[5987]," camera_04);":[5987],"pipeline\", \"":[5988,5989,5990,5991,5992,5993],"ipeline\", \"b":[5988,5989],"peline\", \"bl":[5988,5989],"eline\", \"bla":[5988,5989],"line\", \"blac":[5988,5989],"ine\", \"black":[5988,5989],"ne\", \"blacka":[5988,5989],"e\", \"blackan":[5988,5989],"\", \"blackand":[5988,5989],"iteeffect\", ":[5988,5989],"teeffect\", c":[5988,5989],"eeffect\", ca":[5988,5989],"effect\", cam":[5988,5989,5990,5991,5992,5993],"ffect\", came":[5988,5989,5990,5991,5992,5993],"fect\", camer":[5988,5989,5990,5991,5992,5993],"ect\", camera":[5988,5989,5990,5991,5992,5993],"ct\", camera_":[5988,5989,5990,5991,5992,5993],"t\", camera_0":[5988,5989,5990,5991,5992,5993],"ipeline\", \"h":[5990,5992],"peline\", \"ho":[5990,5992],"eline\", \"hor":[5990,5992],"line\", \"hori":[5990,5992],"ine\", \"horiz":[5990,5992],"ne\", \"horizo":[5990,5992],"e\", \"horizon":[5990,5992],"\", \"horizont":[5990,5992],"lureffect\", ":[5990,5991,5992,5993],"ureffect\", c":[5990,5991,5992,5993],"reffect\", ca":[5990,5991,5992,5993],"ipeline\", \"v":[5991,5993],"peline\", \"ve":[5991,5993],"eline\", \"ver":[5991,5993],"line\", \"vert":[5991,5993],"ine\", \"verti":[5991,5993],"ne\", \"vertic":[5991,5993],"e\", \"vertica":[5991,5993],"\", \"vertical":[5991,5993],"//render loo":[5994],"/render loop":[5994],"   scene.ren":[5996],"  scene.rend":[5996]," scene.rende":[5996],"ags(myjsobj3":[5999],"gs(myjsobj3)":[5999],"s(myjsobj3);":[5999],"(myjsobj3); ":[5999],"myjsobj3); /":[5999],"yjsobj3); //":[5999],"jsobj3); // ":[5999],"sobj3); // f":[5999],"obj3); // fa":[5999],"bj3); // fal":[5999],"j3); // fals":[5999],"3); // false":[5999],"myjsobj2.has":[6000,6014,6016],"yjsobj2.hast":[6000,6014,6016],"jsobj2.hasta":[6000,6014,6016],"sobj2.hastag":[6000,6014,6016],"obj2.hastags":[6000,6014,6016],"bj2.hastags(":[6000,6014,6016],"j2.hastags()":[6000,6014,6016],"2.hastags();":[6000,6014,6016],"ags(); // tr":[6000,6001],"gs(); // tru":[6000,6001],"s(); // true":[6000,6001],"myjsobj1.has":[6001],"yjsobj1.hast":[6001],"jsobj1.hasta":[6001],"sobj1.hastag":[6001],"obj1.hastags":[6001],"bj1.hastags(":[6001],"j1.hastags()":[6001],"1.hastags();":[6001],"myjsobj1.mat":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"yjsobj1.matc":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"jsobj1.match":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"sobj1.matche":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"obj1.matches":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"bj1.matchest":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"j1.matchesta":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],"1.matchestag":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012],".matchestags":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012,6017,6018,6019,6020],"estagsquery(":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012,6017,6018,6019,6020],"stagsquery(\"":[6002,6003,6004,6005,6006,6007,6008,6009,6010,6012,6017,6019],"tagsquery(\"t":[6002,6003,6004,6005,6006,6008,6009,6010,6012],"agsquery(\"ta":[6002,6003,6004,6005,6006,6008,6009,6010,6012],"gsquery(\"tag":[6002,6003,6004,6005,6006,6008,6009,6010,6012],"squery(\"tag1":[6002,6004,6005,6008,6009,6010,6012],"query(\"tag1\"":[6002],"uery(\"tag1\")":[6002],"ery(\"tag1\");":[6002],"ry(\"tag1\"); ":[6002],"y(\"tag1\"); /":[6002],"(\"tag1\"); //":[6002],"\"tag1\"); // ":[6002],"tag1\"); // t":[6002],"ag1\"); // tr":[6002],"g1\"); // tru":[6002],"1\"); // true":[6002],"squery(\"tag2":[6003],"query(\"tag2\"":[6003],"uery(\"tag2\")":[6003],"ery(\"tag2\");":[6003],"ry(\"tag2\"); ":[6003],"y(\"tag2\"); /":[6003],"(\"tag2\"); //":[6003],"\"tag2\"); // ":[6003],"tag2\"); // t":[6003,6004,6005],"ag2\"); // tr":[6003,6004,6005],"g2\"); // tru":[6003,6004,6005],"2\"); // true":[6003,6004,6005],"query(\"tag1 ":[6004,6005,6008,6009,6010,6012],"uery(\"tag1 |":[6004,6009],"ery(\"tag1 ||":[6004,6009],"ry(\"tag1 || ":[6004,6009],"y(\"tag1 || t":[6004,6009],"(\"tag1 || ta":[6004,6009],"\"tag1 || tag":[6004,6009],"tag1 || tag2":[6004],"ag1 || tag2\"":[6004],"g1 || tag2\")":[6004],"1 || tag2\");":[6004]," || tag2\"); ":[6004],"|| tag2\"); /":[6004],"| tag2\"); //":[6004],"uery(\"tag1 &":[6005,6008,6010,6012],"ery(\"tag1 &&":[6005,6008,6010,6012],"ry(\"tag1 && ":[6005,6008,6010,6012],"y(\"tag1 && t":[6005,6008],"(\"tag1 && ta":[6005,6008],"\"tag1 && tag":[6005,6008],"tag1 && tag2":[6005],"ag1 && tag2\"":[6005],"g1 && tag2\")":[6005],"1 && tag2\");":[6005]," && tag2\"); ":[6005],"&& tag2\"); /":[6005],"& tag2\"); //":[6005],"squery(\"tag3":[6006],"query(\"tag3\"":[6006],"uery(\"tag3\")":[6006],"ery(\"tag3\");":[6006],"ry(\"tag3\"); ":[6006],"y(\"tag3\"); /":[6006],"(\"tag3\"); //":[6006],"\"tag3\"); // ":[6006],"tag3\"); // f":[6006,6008,6012],"ag3\"); // fa":[6006,6008,6012],"g3\"); // fal":[6006,6008,6012],"3\"); // fals":[6006,6008,6012],"\"); // false":[6006,6008,6012,6017,6021],"tagsquery(\"!":[6007],"agsquery(\"!t":[6007],"gsquery(\"!ta":[6007],"squery(\"!tag":[6007],"query(\"!tag3":[6007],"uery(\"!tag3\"":[6007],"ery(\"!tag3\")":[6007],"ry(\"!tag3\");":[6007],"y(\"!tag3\"); ":[6007],"(\"!tag3\"); /":[6007],"\"!tag3\"); //":[6007],"!tag3\"); // ":[6007,6010,6012],"tag3\"); // t":[6007,6009,6010],"ag3\"); // tr":[6007,6009,6010],"g3\"); // tru":[6007,6009,6010],"3\"); // true":[6007,6009,6010],"tag1 && tag3":[6008],"ag1 && tag3\"":[6008],"g1 && tag3\")":[6008],"1 && tag3\");":[6008]," && tag3\"); ":[6008],"&& tag3\"); /":[6008],"& tag3\"); //":[6008]," tag3\"); // ":[6008,6009],"tag1 || tag3":[6009],"ag1 || tag3\"":[6009],"g1 || tag3\")":[6009],"1 || tag3\");":[6009]," || tag3\"); ":[6009],"|| tag3\"); /":[6009],"| tag3\"); //":[6009],"y(\"tag1 && !":[6010,6012],"(\"tag1 && !t":[6010,6012],"\"tag1 && !ta":[6010,6012],"tag1 && !tag":[6010,6012],"ag1 && !tag3":[6010,6012],"g1 && !tag3\"":[6010,6012],"1 && !tag3\")":[6010,6012]," && !tag3\");":[6010,6012],"&& !tag3\"); ":[6010,6012],"& !tag3\"); /":[6010,6012]," !tag3\"); //":[6010,6012],"myjsobj1.rem":[6011],"yjsobj1.remo":[6011],"jsobj1.remov":[6011],"sobj1.remove":[6011],"obj1.removet":[6011],"bj1.removeta":[6011],"j1.removetag":[6011],"1.removetags":[6011],".removetags(":[6011,6013],"removetags(\"":[6011,6013],"emovetags(\"t":[6011,6013],"movetags(\"ta":[6011,6013],"ovetags(\"tag":[6011,6013],"vetags(\"tag1":[6011],"etags(\"tag1\"":[6011],"tags(\"tag1\")":[6011],"ags(\"tag1\");":[6011],"myjsobj2.rem":[6013],"yjsobj2.remo":[6013],"jsobj2.remov":[6013],"sobj2.remove":[6013],"obj2.removet":[6013],"bj2.removeta":[6013],"j2.removetag":[6013],"2.removetags":[6013],"vetags(\"tag4":[6013],"etags(\"tag4 ":[6013],"tags(\"tag4 t":[6013],"ags(\"tag4 ta":[6013],"gs(\"tag4 tag":[6013],"s(\"tag4 tag3":[6013],"(\"tag4 tag3 ":[6013],"\"tag4 tag3 t":[6013],"tag4 tag3 ta":[6013],"ag4 tag3 tag":[6013],"g4 tag3 tag5":[6013],"4 tag3 tag5\"":[6013]," tag3 tag5\")":[6013],"tag3 tag5\");":[6013],"for(myjsobj2":[6015],"or(myjsobj2)":[6015],"r(myjsobj2);":[6015],"myjsobj3.mat":[6017,6018],"yjsobj3.matc":[6017,6018],"jsobj3.match":[6017,6018],"sobj3.matche":[6017,6018],"obj3.matches":[6017,6018],"bj3.matchest":[6017,6018],"j3.matchesta":[6017,6018],"3.matchestag":[6017,6018],"tagsquery(\"\"":[6017,6019],"agsquery(\"\")":[6017,6019],"gsquery(\"\");":[6017,6019],"squery(\"\"); ":[6017,6019],"query(\"\"); /":[6017,6019],"uery(\"\"); //":[6017,6019],"ery(\"\"); // ":[6017,6019],"ry(\"\"); // f":[6017],"y(\"\"); // fa":[6017],"(\"\"); // fal":[6017],"\"\"); // fals":[6017,6021],"stagsquery()":[6018,6020],"tagsquery();":[6018,6020],"agsquery(); ":[6018,6020],"gsquery(); /":[6018,6020],"squery(); //":[6018,6020],"query(); // ":[6018,6020],"uery(); // t":[6018,6020],"ery(); // tr":[6018],"ry(); // tru":[6018],"y(); // true":[6018],"myjsobj4.mat":[6019,6020],"yjsobj4.matc":[6019,6020],"jsobj4.match":[6019,6020],"sobj4.matche":[6019,6020],"obj4.matches":[6019,6020],"bj4.matchest":[6019,6020],"j4.matchesta":[6019,6020],"4.matchestag":[6019,6020],"ry(\"\"); // t":[6019],"y(\"\"); // ty":[6019],"(\"\"); // typ":[6019],"\"\"); // type":[6019],"\"); // typee":[6019],"ery(); // ty":[6020],"ry(); // typ":[6020],"y(); // type":[6020],"bylon.tags.m":[6021,6022,6023],"ylon.tags.ma":[6021,6022,6023],"lon.tags.mat":[6021,6022,6023],"on.tags.matc":[6021,6022,6023],"n.tags.match":[6021,6022,6023],".tags.matche":[6021,6022,6023],"atchesquery(":[6021,6022,6023],"tchesquery(m":[6021,6022,6023],"chesquery(my":[6021,6022,6023],"hesquery(myj":[6021,6022,6023],"esquery(myjs":[6021,6022,6023],"squery(myjso":[6021,6022,6023],"query(myjsob":[6021,6022,6023],"uery(myjsobj":[6021,6022,6023],"ery(myjsobj4":[6021,6022,6023],"ry(myjsobj4,":[6021,6022],"y(myjsobj4, ":[6021,6022],"(myjsobj4, \"":[6021],"myjsobj4, \"\"":[6021],"yjsobj4, \"\")":[6021],"jsobj4, \"\");":[6021],"sobj4, \"\"); ":[6021],"obj4, \"\"); /":[6021],"bj4, \"\"); //":[6021],"j4, \"\"); // ":[6021],"4, \"\"); // f":[6021],", \"\"); // fa":[6021]," \"\"); // fal":[6021],"(myjsobj4, u":[6022],"myjsobj4, un":[6022],"yjsobj4, und":[6022],"jsobj4, unde":[6022],"sobj4, undef":[6022],"obj4, undefi":[6022],"bj4, undefin":[6022],"j4, undefine":[6022],"4, undefined":[6022],", undefined)":[6022]," undefined);":[6022],"undefined); ":[6022],"ndefined); /":[6022],"defined); //":[6022],"efined); // ":[6022],"fined); // t":[6022],"ined); // tr":[6022],"ned); // tru":[6022],"ed); // true":[6022],"ry(myjsobj4)":[6023],"y(myjsobj4);":[6023],"sobj4); // t":[6023],"obj4); // tr":[6023],"bj4); // tru":[6023],"j4); // true":[6023],"### rules to":[6025],"## rules to ":[6025],"# rules to r":[6025]," rules to re":[6025],"* the tags \"":[6026]," the tags \"t":[6026],"the tags \"tr":[6026],"he tags \"tru":[6026],"e tags \"true":[6026]," tags \"true\"":[6026],"tags \"true\" ":[6026],"ags \"true\" a":[6026],"gs \"true\" an":[6026],"s \"true\" and":[6026]," \"true\" and ":[6026],"\"true\" and \"":[6026],"true\" and \"f":[6026],"rue\" and \"fa":[6026],"ue\" and \"fal":[6026],"e\" and \"fals":[6026],"\" and \"false":[6026]," and \"false\"":[6026],"and \"false\" ":[6026],"nd \"false\" a":[6026],"d \"false\" ar":[6026]," \"false\" are":[6026],"\"false\" are ":[6026],"false\" are r":[6026],"alse\" are re":[6026],"lse\" are res":[6026],"se\" are rese":[6026],"e\" are reser":[6026],"\" are reserv":[6026]," are reserve":[6026],"are reserved":[6026],"re reserved ":[6026],"e reserved a":[6026]," reserved an":[6026],"reserved and":[6026],"eserved and ":[6026],"served and c":[6026],"erved and ca":[6026],"rved and can":[6026],"ved and cann":[6026],"ed and canno":[6026],"d and cannot":[6026]," cannot be u":[6026],"cannot be us":[6026],"annot be use":[6026],"nnot be used":[6026],"not be used ":[6026],"ot be used a":[6026],"t be used as":[6026],"be used as t":[6026],"e used as ta":[6026]," used as tag":[6026],"used as tags":[6026],"sed as tags.":[6026],"* a tag cann":[6027,6028]," a tag canno":[6027,6028],"a tag cannot":[6027,6028]," tag cannot ":[6027,6028],"tag cannot s":[6027],"ag cannot st":[6027],"g cannot sta":[6027]," cannot star":[6027],"cannot start":[6027],"annot start ":[6027],"nnot start w":[6027],"not start wi":[6027],"ot start wit":[6027],"t start with":[6027],"start with \"":[6027],"tart with \"|":[6027],"art with \"||":[6027],"rt with \"||\"":[6027],"t with \"||\",":[6027]," with \"||\", ":[6027],"with \"||\", \"":[6027],"ith \"||\", \"&":[6027],"th \"||\", \"&&":[6027],"h \"||\", \"&&\"":[6027]," \"||\", \"&&\",":[6027],"\"||\", \"&&\", ":[6027],"||\", \"&&\", o":[6027],"|\", \"&&\", or":[6027],"\", \"&&\", or ":[6027],", \"&&\", or '":[6027]," \"&&\", or '!":[6027],"\"&&\", or '!'":[6027],"tag cannot c":[6028],"ag cannot co":[6028],"g cannot con":[6028]," cannot cont":[6028],"cannot conta":[6028],"annot contai":[6028],"nnot contain":[6028],"not contain ":[6028],"ot contain w":[6028],"t contain wh":[6028]," contain whi":[6028],"contain whit":[6028],"ontain white":[6028],"ntain whites":[6028],"tain whitesp":[6028],"ain whitespa":[6028],"in whitespac":[6028],"n whitespace":[6028]," whitespaces":[6028],"### use in b":[6029],"## use in ba":[6029],"# use in bab":[6029]," use in baby":[6029],"use in babyl":[6029],"since it's p":[6030],"ince it's po":[6030],"nce it's pos":[6030],"ce it's poss":[6030],"e it's possi":[6030]," it's possib":[6030],"it's possibl":[6030],"t's possible":[6030],"'s possible ":[6030],"ossible to u":[6030],"ssible to us":[6030],"sible to use":[6030],"ible to use ":[6030],"le to use ta":[6030],"e to use tag":[6030]," to use tags":[6030],"to use tags ":[6030],"o use tags o":[6030]," use tags on":[6030],"use tags on ":[6030],"se tags on a":[6030],"e tags on an":[6030],"ipt object a":[6030],"pt object an":[6030],"t object and":[6030],"bject and si":[6030],"ject and sin":[6030],"ect and sinc":[6030],"ct and since":[6030],"t and since ":[6030]," and since m":[6030],"and since me":[6030],"nd since mes":[6030],"d since mesh":[6030]," since meshe":[6030],"since meshes":[6030],"ince meshes ":[6030],"nce meshes a":[6030],"ce meshes ar":[6030],"meshes are j":[6030],"eshes are ja":[6030],"shes are jav":[6030],"hes are java":[6030],"t objects, i":[6030]," objects, it":[6030],"objects, it'":[6030],"bjects, it's":[6030],"jects, it's ":[6030],"ects, it's p":[6030],"cts, it's po":[6030],"ts, it's pos":[6030],"s, it's poss":[6030],", it's possi":[6030],"ossible to a":[6030],"ssible to ad":[6030],"sible to add":[6030],"ible to add ":[6030],"ble to add t":[6030],"le to add ta":[6030],"e to add tag":[6030]," to add tags":[6030],"to add tags ":[6030],"o add tags o":[6030]," add tags on":[6030],"add tags on ":[6030],"dd tags on t":[6030],"d tags on th":[6030]," tags on the":[6030],"tags on them":[6030],"ags on them ":[6030],"gs on them a":[6030],"s on them an":[6030]," on them and":[6030],"on them and ":[6030],"n them and t":[6030]," them and to":[6030],"them and to ":[6030],"hem and to r":[6030],"em and to re":[6030],"m and to ret":[6030]," and to retr":[6030],"and to retri":[6030],"nd to retrie":[6030],"o retrieve t":[6030]," retrieve th":[6030],"retrieve the":[6030],"etrieve them":[6030],"trieve them ":[6030],"rieve them a":[6030],"ieve them ac":[6030],"eve them acc":[6030],"ve them acco":[6030],"e them accor":[6030]," them accord":[6030],"them accordi":[6030],"hem accordin":[6030],"em according":[6030],"m according ":[6030],"rding to a t":[6030],"ding to a ta":[6030],"ing to a tag":[6030],"ng to a tags":[6030],"g to a tags ":[6030]," to a tags q":[6030],"to a tags qu":[6030],"o a tags que":[6030]," tags query.":[6030],"var meshes =":[6032],"ar meshes = ":[6032],"r meshes = m":[6032]," meshes = my":[6032],"meshes = mys":[6032],"eshes = mysc":[6032],"shes = mysce":[6032],"hes = myscen":[6032],"es = myscene":[6032],"s = myscene.":[6032,6043]," = myscene.g":[6032,6039,6043],"= myscene.ge":[6032,6039,6043]," myscene.get":[6032,6039,6043],"myscene.getm":[6032,6039,6043],"yscene.getme":[6032,6039,6043],"ene.getmeshe":[6032,6039,6043],"ne.getmeshes":[6032,6039,6043],"e.getmeshesb":[6032,6039,6043],".getmeshesby":[6032,6039,6043],"getmeshesbyt":[6032,6039,6043],"etmeshesbyta":[6032,6039,6043],"tmeshesbytag":[6032,6039,6043],"meshesbytags":[6032,6039,6043],"eshesbytags(":[6032,6039,6043],"shesbytags(\"":[6032,6039,6043],"hesbytags(\"t":[6032],"esbytags(\"ta":[6032],"sbytags(\"tag":[6032],"bytags(\"tag1":[6032],"ytags(\"tag1 ":[6032],"tags(\"tag1 &":[6032],"ags(\"tag1 &&":[6032],"gs(\"tag1 && ":[6032],"s(\"tag1 && (":[6032],"(\"tag1 && (t":[6032],"\"tag1 && (ta":[6032]," && !!!tag5\"":[6032],"&& !!!tag5\")":[6032],"& !!!tag5\");":[6032],"all tags add":[6034],"ll tags adde":[6034],"l tags added":[6034]," tags added ":[6034],"tags added t":[6034],"ags added to":[6034],"gs added to ":[6034],"s added to m":[6034]," added to me":[6034],"added to mes":[6034],"dded to mesh":[6034],"ded to meshe":[6034],"ed to meshes":[6034],"d to meshes,":[6034]," to meshes, ":[6034],"to meshes, c":[6034],"o meshes, ca":[6034]," meshes, cam":[6034],"es, cameras,":[6034],", cameras, l":[6034]," cameras, li":[6034],"cameras, lig":[6034],"ameras, ligh":[6034],"meras, light":[6034],"eras, lights":[6034],"ras, lights.":[6034],"as, lights..":[6034],"s, lights...":[6034],", lights... ":[6034],"ts... are sa":[6034],"s... are sav":[6034],"... are save":[6034],".. are saved":[6034],". are saved ":[6034]," are saved t":[6034],"are saved to":[6034],"re saved to ":[6034],"e saved to t":[6034]," saved to th":[6034],"saved to the":[6034],"aved to the ":[6034],"ved to the s":[6034],"the scene fi":[6034],"he scene fil":[6034],"scene files ":[6034],"cene files (":[6034],"ene files (s":[6034],"ne files (se":[6034],"e files (see":[6034]," files (see ":[6034],"files (see [":[6034],"iles (see [.":[6034],"les (see [.b":[6034],"es (see [.ba":[6034],"s (see [.bab":[6034]," (see [.baby":[6034],"(see [.babyl":[6034],"see [.babylo":[6034],"ee [.babylon":[6034],"e [.babylon ":[6034]," [.babylon f":[6034],"[.babylon fi":[6034],"file format]":[6034],"ile format](":[6034],"le format](h":[6034],"e format](ht":[6034]," format](htt":[6034],"format](http":[6034],"ormat](https":[6034],"rmat](https:":[6034],"mat](https:/":[6034],"at](https://":[6034],"on.js/wiki/b":[6034],"n.js/wiki/ba":[6034],".js/wiki/bab":[6034],"js/wiki/baby":[6034],"s/wiki/babyl":[6034],"/wiki/babylo":[6034],"wiki/babylon":[6034],"iki/babylon.":[6034],"ki/babylon.j":[6034],"i/babylon.js":[6034],"/babylon.js-":[6034],"babylon.js-f":[6034],"abylon.js-fi":[6034],"bylon.js-fil":[6034],"ylon.js-file":[6034],"lon.js-file-":[6034],"on.js-file-f":[6034],"n.js-file-fo":[6034],".js-file-for":[6034],"js-file-form":[6034],"s-file-forma":[6034],"-file-format":[6034],"file-format)":[6034],"ile-format))":[6034],"le-format)) ":[6034],"e-format)) a":[6034],"-format)) an":[6034],"format)) and":[6034],"ormat)) and ":[6034],"rmat)) and r":[6034],"mat)) and re":[6034],"at)) and rel":[6034],"t)) and relo":[6034],")) and reloa":[6034],") and reload":[6034]," and reloade":[6034],"and reloaded":[6034],"nd reloaded ":[6034],"d reloaded f":[6034]," reloaded fr":[6034],"reloaded fro":[6034],"eloaded from":[6034],"ed from them":[6034],"d from them.":[6034],"## what to d":[6035],"# what to do":[6035]," what to do ":[6035],"what to do w":[6035],"hat to do wi":[6035],"at to do wit":[6035],"t to do with":[6035]," to do with ":[6035],"to do with t":[6035],"o do with th":[6035]," do with the":[6035],"do with them":[6035],"o with them?":[6035],"it's up to y":[6036],"t's up to yo":[6036],"'s up to you":[6036],"s up to you!":[6036],"can use them":[6037],"an use them ":[6037],"n use them t":[6037],"se them to r":[6037],"e them to re":[6037]," them to ret":[6037],"them to retr":[6037],"hem to retri":[6037],"em to retrie":[6037],"m to retriev":[6037],"o retrieve a":[6037],"eve all the ":[6037],"ve all the m":[6037],"e all the me":[6037]," all the mes":[6037],"all the mesh":[6037],"ll the meshe":[6037],"l the meshes":[6037],"eshes that s":[6037],"shes that sh":[6037],"hes that sho":[6037],"es that shou":[6037],"s that shoul":[6037],"hat should b":[6037],"at should be":[6037]," should be l":[6037,6717],"should be li":[6037],"hould be lig":[6037],"ould be ligh":[6037],"uld be light":[6037],"ld be lighte":[6037],"d be lighted":[6037]," be lighted ":[6037],"be lighted b":[6037],"e lighted by":[6037]," lighted by ":[6037],"lighted by t":[6037],"ighted by th":[6037],"ghted by the":[6037],"hted by the ":[6037],"ted by the l":[6037],"ed by the li":[6037],"d by the lig":[6037],"y the light ":[6037]," the light \"":[6037],"the light \"l":[6037],"he light \"li":[6037],"e light \"lig":[6037]," light \"ligh":[6037],"light \"light":[6037],"ight \"light1":[6037],"ght \"light1\"":[6037],"ht \"light1\":":[6037],"var meshesto":[6039],"ar meshestol":[6039],"r meshestoli":[6039]," meshestolig":[6039],"meshestoligh":[6039],"eshestolight":[6039],"shestolightb":[6039],"hestolightby":[6039],"estolightbyl":[6039],"stolightbyli":[6039],"tolightbylig":[6039],"olightbyligh":[6039],"lightbylight":[6039],"ightbylight1":[6039],"ghtbylight1 ":[6039],"htbylight1 =":[6039],"tbylight1 = ":[6039],"bylight1 = m":[6039],"ylight1 = my":[6039],"light1 = mys":[6039],"ight1 = mysc":[6039],"ght1 = mysce":[6039],"ht1 = myscen":[6039],"t1 = myscene":[6039],"1 = myscene.":[6039],"hesbytags(\"m":[6039],"esbytags(\"mu":[6039],"sbytags(\"mus":[6039],"bytags(\"must":[6039],"ytags(\"mustb":[6039],"tags(\"mustbe":[6039],"ags(\"mustbel":[6039],"gs(\"mustbeli":[6039],"s(\"mustbelig":[6039],"(\"mustbeligh":[6039],"\"mustbelight":[6039],"mustbelighte":[6039],"ustbelighted":[6039],"stbelightedb":[6039],"tbelightedby":[6039],"belightedbyl":[6039],"elightedbyli":[6039],"lightedbylig":[6039],"ightedbyligh":[6039],"ghtedbylight":[6039],"htedbylight1":[6039],"tedbylight1\"":[6039],"edbylight1\")":[6039],"dbylight1\");":[6039],"or make some":[6041],"r make some ":[6041]," make some g":[6041],"make some gr":[6041],"ake some gre":[6041],"ke some gree":[6041],"e some green":[6041]," some green ":[6041],"some green g":[6041],"ome green gh":[6041],"me green gho":[6041],"e green ghos":[6041]," green ghost":[6041],"green ghosts":[6041],"reen ghosts ":[6041],"een ghosts a":[6041],"en ghosts ap":[6041],"n ghosts app":[6041]," ghosts appe":[6041],"ghosts appea":[6041],"hosts appear":[6041],"osts appear ":[6041],"sts appear w":[6041],"ts appear wh":[6041],"s appear whe":[6041]," appear when":[6041],"ppear when y":[6041],"pear when yo":[6041],"ear when you":[6041],"ar when you ":[6041],"r when you w":[6041],"en you want:":[6041],"var ghosts =":[6043],"ar ghosts = ":[6043],"r ghosts = m":[6043]," ghosts = my":[6043],"ghosts = mys":[6043],"hosts = mysc":[6043],"osts = mysce":[6043],"sts = myscen":[6043],"ts = myscene":[6043],"hesbytags(\"g":[6043],"esbytags(\"gh":[6043],"sbytags(\"gho":[6043],"bytags(\"ghos":[6043],"ytags(\"ghost":[6043],"tags(\"ghost ":[6043],"ags(\"ghost &":[6043],"gs(\"ghost &&":[6043],"s(\"ghost && ":[6043],"(\"ghost && g":[6043],"\"ghost && gr":[6043],"ghost && gre":[6043],"host && gree":[6043],"ost && green":[6043],"st && green\"":[6043],"t && green\")":[6043]," && green\");":[6043],"for(var inde":[6044],"or(var index":[6044],"r(var index=":[6044],"(var index=0":[6044],"var index=0;":[6044],"ar index=0; ":[6044],"r index=0; i":[6044]," index=0; in":[6044],"index=0; ind":[6044],"ndex=0; inde":[6044],"dex=0; index":[6044],"ex=0; index ":[6044],"x=0; index <":[6044],"=0; index < ":[6044],"0; index < g":[6044],"; index < gh":[6044]," index < gho":[6044],"index < ghos":[6044],"ndex < ghost":[6044],"dex < ghosts":[6044],"ex < ghosts.":[6044],"x < ghosts.l":[6044]," < ghosts.le":[6044],"< ghosts.len":[6044]," ghosts.leng":[6044],"ghosts.lengt":[6044],"hosts.length":[6044],"osts.length;":[6044],"sts.length; ":[6044],"ts.length; i":[6044],"    ghosts[i":[6045],"   ghosts[in":[6045],"  ghosts[ind":[6045]," ghosts[inde":[6045],"ghosts[index":[6045],"hosts[index]":[6045],"osts[index].":[6045],"sts[index].i":[6045],"ts[index].is":[6045],"s[index].isv":[6045],"[index].isvi":[6045],"index].isvis":[6045],"ndex].isvisi":[6045],"dex].isvisib":[6045],"ex].isvisibl":[6045],"x].isvisible":[6045],"].isvisible ":[6045],".isvisible =":[6045],"isvisible = ":[6045],"svisible = t":[6045],"visible = tr":[6045],"isible = tru":[6045],"sible = true":[6045],"ible = true;":[6045]," add a new s":[6048],"add a new si":[6048],"dd a new sim":[6048],"d a new simp":[6048]," a new simpl":[6048],"a new simpli":[6048]," new simplif":[6048],"new simplifi":[6048],"ew simplific":[6048],"w simplifica":[6048],"algorithm th":[6048],"lgorithm the":[6048],"gorithm ther":[6048],"orithm there":[6048],"rithm there ":[6048],"ithm there a":[6048],"thm there ar":[6048],"hm there are":[6048],"m there are ":[6048],"there are a ":[6048]," are a few s":[6048],"are a few st":[6048],"re a few ste":[6048],"e a few step":[6048]," a few steps":[6048],"a few steps ":[6048]," few steps t":[6048],"few steps th":[6048],"ew steps tha":[6048],"w steps that":[6048]," steps that ":[6048],"steps that a":[6048],"teps that ar":[6048],"eps that are":[6048],"ps that are ":[6048],"that are req":[6048],"hat are requ":[6048],"at are requi":[6048],"t are requir":[6048],"re required:":[6048],"1. create a ":[6049],". create a c":[6049]," create a cl":[6049],"create a cla":[6049],"reate a clas":[6049],"eate a class":[6049],"ate a class ":[6049],"te a class t":[6049],"e a class th":[6049],"class that i":[6049],"lass that im":[6049],"ass that imp":[6049],"ss that impl":[6049],"s that imple":[6049]," that implem":[6049],"that impleme":[6049],"hat implemen":[6049],"at implement":[6049],"t implements":[6049]," implements ":[6049],"implements t":[6049],"mplements th":[6049],"plements the":[6049],"lements the ":[6049],"ements the b":[6049],"ments the ba":[6049],"ents the bab":[6049],"nts the baby":[6049],"he babylon.i":[6049],"e babylon.is":[6049]," babylon.isi":[6049],"babylon.isim":[6049],"abylon.isimp":[6049],"bylon.isimpl":[6049],"ylon.isimpli":[6049],"lon.isimplif":[6049],"on.isimplifi":[6049],"n.isimplifie":[6049],".isimplifier":[6049],"isimplifier ":[6049],"simplifier i":[6049],"implifier in":[6049],"mplifier int":[6049],"plifier inte":[6049],"lifier inter":[6049],"ifier interf":[6049],"fier interfa":[6049],"ier interfac":[6049],"r interface ":[6049]," interface (":[6049],"interface (a":[6049],"nterface (an":[6049],"terface (and":[6049],"erface (and ":[6049],"rface (and o":[6049],"face (and of":[6049],"ace (and of ":[6049],"ce (and of c":[6049],"e (and of co":[6049]," (and of cou":[6049],"(and of cour":[6049],"and of cours":[6049],"nd of course":[6049],"d of course ":[6049]," of course i":[6049],"of course im":[6049],"f course imp":[6049]," course impl":[6049],"course imple":[6049],"ourse implem":[6049],"urse impleme":[6049],"rse implemen":[6049],"se implement":[6049],"e implement ":[6049]," implement t":[6049],"implement th":[6049],"mplement the":[6049],"plement the ":[6049],"lement the f":[6049],"ement the fu":[6049],"ment the fun":[6049],"ent the func":[6049],"nt the funct":[6049],"t the functi":[6049],"he function!":[6049],"e function! ":[6049]," function! :":[6049],"function! :-":[6049],"unction! :-)":[6049],"nction! :-) ":[6049],"ction! :-) )":[6049],"2. add the t":[6050],". add the ty":[6050]," add the typ":[6050],"add the type":[6050],"dd the type ":[6050],"d the type o":[6050],"ication to t":[6050],"cation to th":[6050],"on to the si":[6050],"n to the sim":[6050]," to the simp":[6050],"to the simpl":[6050],"o the simpli":[6050],"cationtype e":[6050],"ationtype en":[6050],"tiontype enu":[6050],"iontype enum":[6050],"3. add the c":[6051],". add the cl":[6051]," add the cla":[6051],"add the clas":[6051],"dd the class":[6051],"d the class ":[6051]," the class i":[6051],"the class in":[6051],"he class ini":[6051],"e class init":[6051]," class init ":[6051],"class init i":[6051],"lass init in":[6051],"ass init in ":[6051],"ss init in t":[6051],"s init in th":[6051]," init in the":[6051],"init in the ":[6051],"nit in the m":[6051],"it in the me":[6051],"t in the mes":[6051]," in the mesh":[6051],"in the mesh.":[6051],"n the mesh.s":[6051]," the mesh.si":[6051],"the mesh.sim":[6051],"he mesh.simp":[6051],"e mesh.simpl":[6051]," mesh.simpli":[6051],"sh.simplify ":[6051],"h.simplify f":[6051],".simplify fu":[6051],"simplify fun":[6051,6063],"implify func":[6051,6063],"mplify funct":[6051,6063],"plify functi":[6051,6063],"lify functio":[6051,6063],"ify function":[6051,6063],"fy function ":[6051,6063],"y function (":[6051],"ction (the i":[6051],"tion (the in":[6051],"ion (the inn":[6051],"on (the inne":[6051],"n (the inner":[6051]," (the inner ":[6051],"(the inner f":[6051],"the inner fu":[6051],"he inner fun":[6051],"e inner func":[6051]," inner funct":[6051],"inner functi":[6051],"nner functio":[6051],"ner function":[6051],"r function \"":[6051]," function \"g":[6051],"function \"ge":[6051],"unction \"get":[6051],"nction \"gets":[6051],"ction \"getsi":[6051],"tion \"getsim":[6051],"ion \"getsimp":[6051],"on \"getsimpl":[6051],"n \"getsimpli":[6051]," \"getsimplif":[6051],"\"getsimplifi":[6051],"getsimplifie":[6051],"etsimplifier":[6051],"tsimplifier\"":[6051],"simplifier\" ":[6051],"implifier\" s":[6051],"mplifier\" sh":[6051],"plifier\" sho":[6051],"lifier\" shou":[6051],"ifier\" shoul":[6051],"fier\" should":[6051],"ier\" should ":[6051],"er\" should c":[6051],"r\" should co":[6051],"\" should con":[6051]," should cont":[6051],"should conta":[6051],"hould contai":[6051],"ould contain":[6051],"uld contain ":[6051],"ld contain y":[6051],"d contain yo":[6051]," contain you":[6051],"contain your":[6051],"ontain your ":[6051],"ntain your t":[6051],"tain your ty":[6051],"ain your typ":[6051],"in your type":[6051],"n your type)":[6051]," your type).":[6051],"#accessing t":[6054],"accessing th":[6054],"ccessing the":[6054],"cessing the ":[6054],"ssing the si":[6054],"sing the sim":[6054],"ing the simp":[6054],"ng the simpl":[6054],"g the simpli":[6054],"ification cl":[6054],"fication cla":[6054],"ication clas":[6054],"cation class":[6054],"ation class ":[6054],"tion class d":[6054],"ion class di":[6054],"on class dir":[6054],"n class dire":[6054]," class direc":[6054],"class direct":[6054],"lass directl":[6054],"ass directly":[6054],"access the q":[6055],"ccess the qu":[6055],"cess the qua":[6055],"ess the quad":[6055],"ss the quadr":[6055],"s the quadra":[6055]," the quadrat":[6055],"the quadrati":[6055],"he quadratic":[6055],"e quadratic ":[6055]," quadratic e":[6055],"quadratic er":[6055],"uadratic err":[6055],"adratic erro":[6055],"dratic error":[6055],"ratic error ":[6055],"atic error d":[6055],"tic error de":[6055],"ic error dec":[6055],"c error deci":[6055]," error decim":[6055],"error decima":[6055],"rror decimat":[6055],"ror decimati":[6055],"decimation d":[6055],"ecimation di":[6055],"cimation dir":[6055],"imation dire":[6055],"mation direc":[6055],"ation direct":[6055],"tion directl":[6055],"ion directly":[6055],"on directly ":[6055],"n directly a":[6055]," directly an":[6055],"directly and":[6055],"irectly and ":[6055],"rectly and p":[6055],"ectly and pl":[6055],"ctly and pla":[6055],"tly and play":[6055],"ly and play ":[6055],"y and play w":[6055],"lay with its":[6055],"ay with its ":[6055],"y with its f":[6055]," with its fe":[6055],"with its fea":[6055],"ith its feat":[6055],"th its featu":[6055],"h its featur":[6055]," its feature":[6055],"its features":[6055],"ts features.":[6055],"s features. ":[6055],"s. you can d":[6055],". you can do":[6055],"u can do tha":[6055]," can do that":[6055],"can do that ":[6055],"an do that b":[6055],"n do that by":[6055]," do that by ":[6055],"do that by c":[6055],"o that by cr":[6055]," that by cre":[6055],"that by crea":[6055],"hat by creat":[6055],"at by creati":[6055],"t by creatin":[6055],"eating an ob":[6055],"ating an obj":[6055],"ting an obje":[6055],"an object of":[6055],"n object of ":[6055]," the class q":[6055],"the class qu":[6055],"he class qua":[6055],"e class quad":[6055]," class quadr":[6055],"class quadra":[6055],"lass quadrat":[6055],"ass quadrati":[6055],"ss quadratic":[6055],"s quadratice":[6055]," quadraticer":[6055,6057],"quadraticerr":[6055,6057],"uadraticerro":[6055,6057],"adraticerror":[6055,6057],"draticerrors":[6055,6057],"raticerrorsi":[6055,6057],"aticerrorsim":[6055,6057],"ticerrorsimp":[6055,6057],"icerrorsimpl":[6055,6057],"cerrorsimpli":[6055,6057],"errorsimplif":[6055,6057],"rrorsimplifi":[6055,6057],"rorsimplific":[6055,6057],"orsimplifica":[6055,6057],"rsimplificat":[6055,6057],"var decimato":[6057],"ar decimator":[6057],"r decimator ":[6057]," decimator =":[6057],"decimator = ":[6057],"ecimator = n":[6057],"cimator = ne":[6057],"imator = new":[6057],"mator = new ":[6057],"ator = new q":[6057],"tor = new qu":[6057],"or = new qua":[6057],"r = new quad":[6057]," = new quadr":[6057],"= new quadra":[6057]," new quadrat":[6057],"new quadrati":[6057],"ew quadratic":[6057],"w quadratice":[6057],"plification(":[6057],"lification(m":[6057],"ification(me":[6057],"fication(mes":[6057],"ication(mesh":[6057],"cation(mesht":[6057],"ation(meshto":[6057],"tion(meshtod":[6057],"ion(meshtode":[6057],"on(meshtodec":[6057],"n(meshtodeci":[6057],"(meshtodecim":[6057],"meshtodecima":[6057],"eshtodecimat":[6057],"shtodecimate":[6057],"htodecimate)":[6057],"todecimate);":[6057],"afterwards y":[6059],"fterwards yo":[6059],"terwards you":[6059],"erwards you ":[6059],"rwards you c":[6059],"wards you ca":[6059],"ards you can":[6059],"rds you can ":[6059],"ds you can p":[6059],"s you can pl":[6059],"y with the f":[6059],"following ob":[6059],"ollowing obj":[6059],"llowing obje":[6059],"lowing objec":[6059],"owing object":[6059],"wing object ":[6059],"ing object v":[6059],"ng object va":[6059],"g object var":[6059]," object vari":[6059],"object varia":[6059],"bject variab":[6059],"ject variabl":[6059],"ect variable":[6059],"ct variables":[6059],"t variables:":[6059],"1. decimatio":[6060],". decimation":[6060]," decimationi":[6060],"decimationit":[6060],"ecimationite":[6060],"cimationiter":[6060],"imationitera":[6060],"mationiterat":[6060],"ationiterati":[6060],"tioniteratio":[6060],"ioniteration":[6060],"oniterations":[6060],"niterations ":[6060],"iterations -":[6060,6062],"terations - ":[6060,6062],"erations - m":[6060],"rations - ma":[6060],"ations - max":[6060],"tions - max ":[6060],"ions - max n":[6060],"ons - max nu":[6060],"ns - max num":[6060],"s - max numb":[6060]," - max numbe":[6060],"- max number":[6060]," max number ":[6060],"max number o":[6060],"ax number of":[6060],"x number of ":[6060],"number of it":[6060],"umber of ite":[6060],"mber of iter":[6060],"ber of itera":[6060],"er of iterat":[6060],"r of iterati":[6060]," of iteratio":[6060],"of iteration":[6060],"f iterations":[6060]," iterations ":[6060,6062,6325],"iterations o":[6060,6325],"terations of":[6060],"erations of ":[6060],"rations of t":[6060],"ations of th":[6060],"ons of the d":[6060],"ns of the de":[6060],"s of the dec":[6060],"ion process.":[6060],"on process. ":[6060],"n process. t":[6060],"process. the":[6060],"rocess. the ":[6060],"ocess. the s":[6060],"cess. the si":[6060],"ess. the sim":[6060],"ss. the simp":[6060],"s. the simpl":[6060],"ation will (":[6060],"tion will (u":[6060],"ion will (us":[6060],"on will (usu":[6060],"n will (usua":[6060]," will (usual":[6060],"will (usuall":[6060],"ill (usually":[6060],"ll (usually)":[6060],"l (usually) ":[6060]," (usually) s":[6060],"(usually) st":[6060],"usually) sto":[6060],"sually) stop":[6060],"ually) stop ":[6060],"ally) stop b":[6060],"lly) stop be":[6060],"ly) stop bef":[6060],"y) stop befo":[6060],") stop befor":[6060]," stop before":[6060,6329],"stop before ":[6060],"top before t":[6060],"op before th":[6060],"p before the":[6060],"before the m":[6060],"efore the ma":[6060],"fore the max":[6060],"ore the max ":[6060],"re the max n":[6060],"e the max nu":[6060]," the max num":[6060],"the max numb":[6060],"he max numbe":[6060],"e max number":[6060]," iterations,":[6060,6061],"iterations, ":[6060,6061],"terations, b":[6060],"erations, bu":[6060],"rations, but":[6060],"ations, but ":[6060],"tions, but i":[6060],"ions, but it":[6060],"ons, but it ":[6060],"ns, but it a":[6060],"s, but it ac":[6060],", but it act":[6060]," but it actu":[6060],"but it actua":[6060],"ut it actual":[6060],"t it actuall":[6060]," it actually":[6060],"it actually ":[6060],"t actually a":[6060]," actually al":[6060],"actually all":[6060],"ctually all ":[6060],"tually all d":[6060],"ually all de":[6060],"ally all dep":[6060],"lly all depe":[6060],"ly all depen":[6060],"y all depend":[6060]," all depends":[6060],"all depends ":[6060],"ll depends o":[6060],"l depends on":[6060]," depends on ":[6060],"depends on t":[6060],"epends on th":[6060],"pends on the":[6060],"ends on the ":[6060],"nds on the n":[6060],"ds on the ne":[6060],"s on the nex":[6060]," the next va":[6060],"the next var":[6060],"he next vari":[6060],"e next varia":[6060]," next variab":[6060],"next variabl":[6060],"ext variable":[6060],"xt variable.":[6060],"t variable. ":[6060]," variable. d":[6060],"variable. de":[6060],"ariable. def":[6060],"riable. defa":[6060],"iable. defau":[6060],"able. defaul":[6060],"ble. default":[6060],"le. default ":[6060],"e. default :":[6060],". default : ":[6060],"default : 10":[6060],"efault : 100":[6060],"fault : 100.":[6060],"2. aggressiv":[6061],". aggressive":[6061]," aggressiven":[6061],"aggressivene":[6061],"ggressivenes":[6061],"gressiveness":[6061],"ressiveness ":[6061],"essiveness -":[6061],"ssiveness - ":[6061],"siveness - t":[6061],"iveness - th":[6061],"veness - the":[6061],"eness - the ":[6061],"ness - the t":[6061],"ess - the th":[6061],"ss - the thr":[6061],"s - the thre":[6061]," - the thres":[6061],"- the thresh":[6061]," the thresho":[6061],"the threshol":[6061],"he threshold":[6061],"e threshold ":[6061]," threshold t":[6061],"threshold th":[6061],"hreshold tha":[6061],"reshold that":[6061],"eshold that ":[6061],"shold that d":[6061],"hold that de":[6061],"old that dec":[6061],"ld that deci":[6061],"d that decid":[6061]," that decide":[6061],"that decides":[6061],"hat decides ":[6061],"at decides i":[6061],"t decides if":[6061]," decides if ":[6061],"decides if a":[6061],"ecides if a ":[6061],"cides if a t":[6061],"ides if a tr":[6061],"des if a tri":[6061],"es if a tria":[6061],"s if a trian":[6061]," if a triang":[6061],"if a triangl":[6061],"f a triangle":[6061]," a triangle ":[6061],"a triangle i":[6061]," triangle is":[6061],"triangle is ":[6061],"riangle is u":[6061],"iangle is up":[6061],"angle is up ":[6061],"ngle is up f":[6061],"gle is up fo":[6061],"le is up for":[6061],"e is up for ":[6061]," is up for a":[6061],"is up for a ":[6061],"s up for a d":[6061]," up for a de":[6061],"up for a del":[6061],"p for a dele":[6061]," for a delet":[6061],"for a deleti":[6061],"or a deletio":[6061],"r a deletion":[6061]," a deletion ":[6061],"a deletion i":[6061]," deletion is":[6061],"deletion is ":[6061],"eletion is d":[6061],"letion is de":[6061],"etion is dec":[6061],"tion is deci":[6061],"ion is decid":[6061],"on is decide":[6061],"n is decided":[6061]," is decided ":[6061],"is decided u":[6061],"s decided us":[6061]," decided usi":[6061],"decided usin":[6061],"ecided using":[6061],"cided using ":[6061],"ed using thi":[6061],"d using this":[6061],"using this v":[6061],"sing this va":[6061],"ing this var":[6061],"ng this vari":[6061],"g this varia":[6061]," this variab":[6061],"this variabl":[6061],"his variable":[6061],"is variable.":[6061],"s variable. ":[6061]," variable. m":[6061],"variable. ma":[6061],"ariable. mak":[6061],"riable. maki":[6061],"iable. makin":[6061],"able. making":[6061],"ble. making ":[6061],"le. making i":[6061],"e. making it":[6061],". making it ":[6061]," making it t":[6061],"making it to":[6061],"aking it to ":[6061],"king it to a":[6061],"ing it to a ":[6061],"ng it to a l":[6061],"g it to a lo":[6061]," it to a low":[6061],"it to a low ":[6061],"t to a low v":[6061]," to a low va":[6061],"to a low val":[6061],"o a low valu":[6061]," a low value":[6061],"a low value ":[6061]," low value (":[6061],"low value (2":[6061],"ow value (2,":[6061],"w value (2, ":[6061]," value (2, f":[6061],"value (2, fo":[6061],"alue (2, for":[6061],"lue (2, for ":[6061],"ue (2, for e":[6061],"e (2, for ex":[6061]," (2, for exa":[6061],"(2, for exam":[6061],"2, for examp":[6061],"for example)":[6061],"or example) ":[6061],"r example) w":[6061]," example) wi":[6061],"example) wil":[6061],"xample) will":[6061],"ample) will ":[6061],"mple) will c":[6061],"ple) will ca":[6061],"le) will cau":[6061],"e) will caus":[6061],") will cause":[6061]," cause the d":[6061],"cause the de":[6061],"ause the dec":[6061],"use the deci":[6061],"se the decim":[6061],"e the decima":[6061],"decimation t":[6061],"ecimation to":[6061],"cimation to ":[6061],"imation to b":[6061],"mation to be":[6061],"tion to be a":[6061],"ion to be a ":[6061],"on to be a l":[6061],"n to be a li":[6061]," to be a lit":[6061],"to be a litt":[6061],"o be a littl":[6061]," be a little":[6061],"be a little ":[6061],"e a little s":[6061]," a little sl":[6061],"a little slo":[6061]," little slow":[6061],"little slowe":[6061],"ittle slower":[6061],"ttle slower ":[6061],"tle slower b":[6061],"le slower bu":[6061],"e slower but":[6061]," slower but ":[6061],"slower but m":[6061],"lower but mo":[6061],"ower but mor":[6061],"wer but more":[6061],"er but more ":[6061],"r but more p":[6061]," but more pe":[6061],"but more per":[6061],"ut more perc":[6061],"t more perci":[6061]," more percis":[6061],"more percise":[6061],"ore percise ":[6061],"re percise i":[6061],"e percise in":[6061]," percise in ":[6061],"percise in s":[6061],"ercise in se":[6061],"rcise in sel":[6061],"cise in sele":[6061],"ise in selec":[6061],"se in select":[6061],"e in selecti":[6061]," in selectin":[6061],"in selecting":[6061],"n selecting ":[6061]," selecting t":[6061],"selecting th":[6061],"electing the":[6061],"lecting the ":[6061],"ecting the t":[6061],"cting the tr":[6061],"ting the tri":[6061],"ing the tria":[6061],"ng the trian":[6061],"g the triang":[6061]," the triangl":[6061],"the triangle":[6061],"he triangles":[6061],"e triangles.":[6061]," triangles. ":[6061],"triangles. s":[6061],"riangles. se":[6061],"iangles. set":[6061],"angles. sett":[6061],"ngles. setti":[6061],"gles. settin":[6061],"les. setting":[6061],"es. settings":[6061],"s. settings ":[6061],". settings i":[6061]," settings it":[6061],"settings it ":[6061],"ettings it t":[6061],"ttings it to":[6061],"tings it to ":[6061],"ings it to a":[6061],"ngs it to a ":[6061],"gs it to a h":[6061],"s it to a hi":[6061]," it to a hig":[6061],"it to a high":[6061],"t to a high ":[6061]," to a high v":[6061],"to a high va":[6061],"o a high val":[6061]," a high valu":[6061],"a high value":[6061]," high value ":[6061],"high value (":[6061],"igh value (1":[6061],"gh value (15":[6061],"h value (15 ":[6061]," value (15 f":[6061],"value (15 fo":[6061],"alue (15 for":[6061],"lue (15 for ":[6061],"ue (15 for e":[6061],"e (15 for ex":[6061]," (15 for exa":[6061],"(15 for exam":[6061],"15 for examp":[6061],"5 for exampl":[6061],"mple) will p":[6061],"ple) will pr":[6061],"le) will pro":[6061],"e) will prob":[6061],") will proba":[6061],"l probably c":[6061]," probably ca":[6061],"probably cau":[6061],"robably caus":[6061],"obably cause":[6061],"bably cause ":[6061],"ably cause t":[6061],"bly cause th":[6061],"ly cause the":[6061],"y cause the ":[6061],"imation to e":[6061],"mation to en":[6061],"ation to end":[6061],"tion to end ":[6061],"ion to end i":[6061],"on to end in":[6061],"n to end in ":[6061]," to end in 1":[6061],"to end in 1 ":[6061],"o end in 1 o":[6061]," end in 1 or":[6061],"end in 1 or ":[6061],"nd in 1 or 2":[6061],"d in 1 or 2 ":[6061]," in 1 or 2 i":[6061],"in 1 or 2 it":[6061],"n 1 or 2 ite":[6061]," 1 or 2 iter":[6061],"1 or 2 itera":[6061]," or 2 iterat":[6061],"or 2 iterati":[6061],"r 2 iteratio":[6061]," 2 iteration":[6061],"2 iterations":[6061],"terations, s":[6061],"erations, si":[6061],"rations, sin":[6061],"ations, sinc":[6061],"tions, since":[6061],"ions, since ":[6061],"ons, since a":[6061],"ns, since a ":[6061],"s, since a l":[6061],", since a lo":[6061]," since a lot":[6061],"since a lot ":[6061],"ince a lot o":[6061],"nce a lot of":[6061],"ce a lot of ":[6061],"e a lot of t":[6061]," a lot of tr":[6061],"a lot of tri":[6061]," lot of tria":[6061],"lot of trian":[6061],"ot of triang":[6061],"riangles wil":[6061],"iangles will":[6061],"angles will ":[6061],"ngles will b":[6061],"gles will be":[6061],"les will be ":[6061],"es will be c":[6061],"s will be ch":[6061]," will be cho":[6061],"will be chos":[6061],"ill be chose":[6061],"ll be chosen":[6061],"l be chosen ":[6061]," be chosen f":[6061],"be chosen fo":[6061],"e chosen for":[6061],"chosen for d":[6061],"hosen for de":[6061],"osen for del":[6061],"sen for dele":[6061],"en for delet":[6061],"n for deleti":[6061]," for deletio":[6061],"for deletion":[6061],"or deletion.":[6061],"r deletion. ":[6061]," deletion. a":[6061],"deletion. an":[6061],"eletion. any":[6061],"letion. anyh":[6061],"etion. anyho":[6061],"tion. anyhow":[6061],"ion. anyhow ":[6061],"on. anyhow o":[6061],"n. anyhow on":[6061],". anyhow onc":[6061]," anyhow once":[6061],"anyhow once ":[6061],"nyhow once t":[6061],"yhow once th":[6061],"how once the":[6061],"ow once the ":[6061],"w once the q":[6061]," once the qu":[6061],"once the qua":[6061],"nce the qual":[6061],"ce the quali":[6061],"e the qualit":[6061],"he quality i":[6061],"e quality is":[6061]," quality is ":[6061],"quality is r":[6061],"uality is re":[6061],"ality is rea":[6061],"lity is reac":[6061],"ity is reach":[6061],"ty is reache":[6061],"y is reached":[6061]," is reached ":[6061],"is reached t":[6061],"s reached th":[6061]," reached the":[6061],"reached the ":[6061],"eached the p":[6061],"ached the pr":[6061],"ched the pro":[6061],"hed the proc":[6061],"ed the proce":[6061],"d the proces":[6061]," the process":[6061,6062],"the process ":[6061,6062],"he process s":[6061],"e process st":[6061]," process sto":[6061],"process stop":[6061],"rocess stops":[6061],"ocess stops.":[6061],"cess stops. ":[6061],"ess stops. t":[6061],"ss stops. th":[6061],"s stops. the":[6061]," stops. the ":[6061],"stops. the q":[6061],"tops. the qu":[6061],"ops. the que":[6061],"ps. the ques":[6061],"s. the quest":[6061],". the questi":[6061]," the questio":[6061],"the question":[6061],"he question ":[6061],"e question -":[6061]," question - ":[6061],"question - d":[6061],"uestion - di":[6061],"estion - did":[6061],"stion - did ":[6061],"tion - did i":[6061],"ion - did it":[6061],"on - did it ":[6061],"n - did it c":[6061]," - did it ch":[6061],"- did it cho":[6061]," did it choo":[6061],"did it choos":[6061],"id it choose":[6061],"d it choose ":[6061]," it choose t":[6061],"it choose th":[6061],"t choose the":[6061],"choose the b":[6061],"hoose the be":[6061],"oose the bet":[6061],"ose the bett":[6061],"se the bette":[6061],"e the better":[6061],"the better t":[6061],"he better tr":[6061],"e better tri":[6061]," better tria":[6061],"better trian":[6061],"etter triang":[6061],"tter triangl":[6061],"ter triangle":[6061],"er triangles":[6061],"r triangles ":[6061]," triangles t":[6061],"triangles to":[6061],"riangles to ":[6061],"iangles to d":[6061],"angles to de":[6061],"ngles to dec":[6061],"gles to deci":[6061],"les to decim":[6061],"es to decima":[6061],"s to decimat":[6061]," to decimate":[6061],"to decimate!":[6061],"o decimate! ":[6061]," decimate! d":[6061],"decimate! de":[6061],"ecimate! def":[6061],"cimate! defa":[6061],"imate! defau":[6061],"mate! defaul":[6061],"ate! default":[6061],"te! default ":[6061],"e! default :":[6061],"! default : ":[6061]," default : 7":[6061],"default : 7.":[6061],"3. syncitera":[6062],". synciterat":[6062]," synciterati":[6062],"synciteratio":[6062],"ynciteration":[6062],"nciterations":[6062],"citerations ":[6062],"erations - t":[6062],"rations - th":[6062],"ations - the":[6062],"tions - the ":[6062],"ions - the n":[6062],"ons - the nu":[6062],"ns - the num":[6062],"s - the numb":[6062]," - the numbe":[6062],"- the number":[6062],"number of sy":[6062],"umber of syn":[6062],"mber of sync":[6062],"ber of synch":[6062],"er of synchr":[6062],"r of synchro":[6062]," of synchron":[6062],"of synchrono":[6062],"f synchronou":[6062]," synchronous":[6062],"ynchronous i":[6062],"nchronous it":[6062],"chronous ite":[6062],"hronous iter":[6062],"ronous itera":[6062],"onous iterat":[6062],"nous iterati":[6062],"ous iteratio":[6062],"us iteration":[6062],"s iterations":[6062],"iterations i":[6062],"terations in":[6062],"erations ins":[6062],"rations insi":[6062],"ations insid":[6062],"tions inside":[6062],"ions inside ":[6062,6495],"ons inside t":[6062],"ns inside th":[6062],"inside the a":[6062],"nside the as":[6062],"side the asy":[6062],"ide the asyn":[6062],"de the async":[6062],"e the async ":[6062]," the async i":[6062],"the async it":[6062],"he async ite":[6062],"e async iter":[6062]," async itera":[6062],"async iterat":[6062],"sync iterati":[6062],"ync iteratio":[6062],"nc iteration":[6062],"c iterations":[6062]," iterations.":[6062],"iterations. ":[6062],"terations. r":[6062],"erations. ra":[6062],"rations. rat":[6062],"ations. rath":[6062],"tions. rathe":[6062],"ions. rather":[6062],"ons. rather ":[6062],"ns. rather h":[6062],"s. rather ha":[6062],". rather har":[6062]," rather hard":[6062],"rather hard ":[6062],"ather hard t":[6062],"ther hard to":[6062],"her hard to ":[6062],"er hard to e":[6062],"r hard to ex":[6062]," hard to exp":[6062],"hard to expl":[6062],"ard to expla":[6062],"rd to explai":[6062],"d to explain":[6062],"lain, but a ":[6062],"ain, but a l":[6062],"in, but a lo":[6062],"n, but a low":[6062],", but a lowe":[6062]," but a lower":[6062],"but a lower ":[6062],"ut a lower n":[6062],"t a lower nu":[6062]," a lower num":[6062],"a lower numb":[6062]," lower numbe":[6062],"lower number":[6062],"ower number ":[6062],"wer number w":[6062],"er number wi":[6062],"r number wil":[6062]," number will":[6062],"number will ":[6062],"umber will h":[6062],"mber will hu":[6062],"ber will hur":[6062],"er will hurt":[6062],"r will hurt ":[6062]," will hurt t":[6062],"will hurt th":[6062],"ill hurt the":[6062],"ll hurt the ":[6062],"l hurt the p":[6062]," hurt the pe":[6062],"hurt the per":[6062],"urt the perf":[6062],"rt the perfo":[6062],"t the perfor":[6062]," the perform":[6062,6557],"the performa":[6062,6557],"he performan":[6062,6557],"erformance l":[6062],"rformance le":[6062],"formance les":[6062],"ormance less":[6062],"rmance less ":[6062],"mance less b":[6062],"ance less bu":[6062],"nce less but":[6062],"ce less but ":[6062],"e less but w":[6062]," less but wi":[6062],"less but wil":[6062],"ess but will":[6062],"ss but will ":[6062],"s but will m":[6062]," but will ma":[6062],"but will mak":[6062],"ut will make":[6062]," will make t":[6062],"will make th":[6062],"ill make the":[6062],"ll make the ":[6062],"l make the p":[6062]," make the pr":[6062],"make the pro":[6062],"ake the proc":[6062],"ke the proce":[6062],"e the proces":[6062],"he process t":[6062],"e process ta":[6062]," process tak":[6062],"process take":[6062],"rocess take ":[6062],"ocess take a":[6062],"cess take a ":[6062],"ess take a b":[6062],"ss take a bi":[6062],"s take a bit":[6062]," take a bit ":[6062],"take a bit m":[6062],"ake a bit mo":[6062],"ke a bit mor":[6062],"e a bit more":[6062]," bit more ti":[6062],"bit more tim":[6062],"it more time":[6062],"t more time.":[6062]," more time. ":[6062],"more time. i":[6062],"ore time. if":[6062],"re time. if ":[6062],"me. if you n":[6062],"e. if you ne":[6062],". if you nee":[6062],"f you need e":[6062]," you need ex":[6062],"you need exp":[6062],"ou need expl":[6062],"u need expla":[6062]," need explan":[6062],"need explana":[6062],"eed explanat":[6062],"ed explanati":[6062],"d explanatio":[6062],"planations l":[6062],"lanations lo":[6062],"anations loo":[6062],"nations look":[6062],"ations look ":[6062],"tions look a":[6062],"ions look at":[6062],"ons look at ":[6062],"ns look at t":[6062],"ook at the a":[6062],"ok at the as":[6062],"k at the asy":[6062]," at the asyn":[6062],"at the async":[6062],"t the asyncl":[6062]," the asynclo":[6062],"the asyncloo":[6062],"he asyncloop":[6062],"e asyncloop ":[6062]," asyncloop c":[6062],"asyncloop cl":[6062],"syncloop cla":[6062],"yncloop clas":[6062],"ncloop class":[6062],"cloop class ":[6062],"loop class i":[6062],"oop class in":[6062],"op class in ":[6062],"p class in b":[6062]," class in ba":[6062],"class in bab":[6062],"lass in baby":[6062],"ass in babyl":[6062],"ss in babylo":[6062],"in babylon.t":[6062],"n babylon.to":[6062]," babylon.too":[6062],"on.tools.js ":[6062],"n.tools.js o":[6062],".tools.js or":[6062],"tools.js or ":[6062],"ools.js or c":[6062],"ols.js or co":[6062],"ls.js or con":[6062],"s.js or cont":[6062],".js or conta":[6062],"js or contac":[6062],"s or contact":[6062]," or contact ":[6062],"or contact @":[6062],"r contact @r":[6062]," contact @ra":[6062],"contact @raa":[6062],"ontact @raan":[6062],"ntact @raana":[6062],"tact @raanan":[6062],"act @raananw":[6062],"ct @raananw ":[6062],"t @raananw .":[6062],"after settin":[6063],"fter setting":[6063],"ter setting ":[6063],"er setting t":[6063],"r setting th":[6063],"tting the va":[6063],"ting the var":[6063],"ing the vari":[6063],"ng the varia":[6063],"g the variab":[6063]," the variabl":[6063,6150,6676],"the variable":[6063,6150,6676],"he variables":[6063]," variables y":[6063],"variables yo":[6063],"ariables you":[6063],"riables you ":[6063],"iables you r":[6063],"ables you ru":[6063],"bles you run":[6063],"les you run ":[6063],"es you run r":[6063],"s you run ru":[6063]," you run run":[6063],"you run run ":[6063],"ou run run t":[6063],"u run run th":[6063]," run run the":[6063],"run run the ":[6063],"un run the s":[6063],"n run the si":[6063]," run the sim":[6063],"run the simp":[6063],"un the simpl":[6063],"n the simpli":[6063],"the simplify":[6063],"he simplify ":[6063],"e simplify f":[6063]," simplify fu":[6063],"y function t":[6063],"that will st":[6063],"hat will sta":[6063],"at will star":[6063],"t will start":[6063]," start the e":[6063],"start the en":[6063],"tart the ent":[6063],"art the enti":[6063],"rt the entir":[6063],"the entire p":[6063],"he entire pr":[6063],"e entire pro":[6063]," entire proc":[6063],"entire proce":[6063],"ntire proces":[6063],"tire process":[6063],"ire process:":[6063],"fy(settings,":[6065],"y(settings, ":[6065],"(settings, s":[6065],"settings, su":[6065],"ettings, suc":[6065],"ttings, succ":[6065],"tings, succe":[6065],"ings, succes":[6065],"ngs, success":[6065],"gs, successc":[6065],"s, successca":[6065],"this custom ":[6067,6082,6168],"his custom f":[6067,6082],"is custom fu":[6067,6082],"s custom fun":[6067,6082],"m function m":[6067,6082],"ction must r":[6067,6082],"tion must re":[6067,6082],"ion must ret":[6067,6082],"on must retu":[6067,6082],"n must retur":[6067,6082],"meric value ":[6067,6082],"eric value w":[6067,6082],"ric value wh":[6067,6082],"ic value whi":[6067,6082],"c value whic":[6067,6082]," value which":[6067,6082],"value which ":[6067,6082],"alue which w":[6067,6082],"lue which wi":[6067,6082],"ue which wil":[6067,6082],"ch will be a":[6067,6082],"h will be ap":[6067,6082]," will be app":[6067,6082],"will be appl":[6067,6082],"ill be appli":[6067,6082],"ll be applie":[6067,6082],"l be applied":[6067,6082],"the shape on":[6067,6082],"he shape on ":[6067,6082],"e shape on t":[6067,6082]," shape on th":[6067,6082],"shape on the":[6067,6082],"hape on the ":[6067,6082],"ape on the _":[6067,6082],"pe on the _i":[6067,6082],"e on the _i-":[6067,6082]," on the _i-t":[6067,6082],"on the _i-th":[6067,6082],"n the _i-th_":[6067,6082]," the _i-th_ ":[6067,6082],"the _i-th_ p":[6067,6082],"he _i-th_ po":[6067,6082],"e _i-th_ poi":[6067,6082],"i-th_ point.":[6067,6082],"-th_ point. ":[6067,6082],"th_ point.  ":[6067,6082],"var myscale ":[6070],"ar myscale =":[6070],"r myscale = ":[6070]," myscale = f":[6070],"myscale = fu":[6070],"yscale = fun":[6070],"scale = func":[6070],"cale = funct":[6070],"ale = functi":[6070],"le = functio":[6070],"  var scale ":[6071]," var scale =":[6071],"ar scale = 2":[6071],"r scale = 2 ":[6071]," scale = 2 *":[6071],"scale = 2 * ":[6071],"cale = 2 * m":[6071],"ale = 2 * ma":[6071],"le = 2 * mat":[6071],"e = 2 * math":[6071]," = 2 * math.":[6071],"= 2 * math.s":[6071]," 2 * math.si":[6071,6341],"2 * math.sin":[6071,6341],"th.sin(i / 5":[6071],"h.sin(i / 5)":[6071],".sin(i / 5);":[6071],"  return sca":[6072]," return scal":[6072],"return scale":[6072],"eturn scale;":[6072],"mple with an":[6075],"ple with an ":[6075],"le with an u":[6075],"e with an un":[6075]," with an unc":[6075],"with an uncl":[6075],"ith an unclo":[6075],"th an unclos":[6075],"h an unclose":[6075],"n unclosed u":[6075]," unclosed un":[6075],"unclosed un-":[6075],"nclosed un-c":[6075],"closed un-ce":[6075],"losed un-cen":[6075],"osed un-cent":[6075],"sed un-cente":[6075],"ed un-center":[6075],"d un-centere":[6075]," un-centered":[6075,6108,6123],"un-centered ":[6075,6108,6123],"n-centered s":[6075,6123],"-centered si":[6075],"centered sim":[6075],"entered simp":[6075],"ntered simpl":[6075],"tered simple":[6075],"ered simple ":[6075],"red simple s":[6075],"ed simple sh":[6075],"d simple sha":[6075],"mple shape w":[6075],"ple shape wh":[6075],"le shape who":[6075],"e shape whos":[6075]," shape whose":[6075],"shape whose ":[6075],"hape whose s":[6075],"ape whose sc":[6075],"pe whose sca":[6075],"e whose scal":[6075]," whose scale":[6075],"whose scale ":[6075],"hose scale e":[6075],"ose scale ev":[6075],"se scale evo":[6075],"e scale evol":[6075]," scale evolv":[6075],"scale evolve":[6075],"cale evolves":[6075],"ale evolves ":[6075],"le evolves l":[6075],"e evolves li":[6075]," evolves lin":[6075],"evolves line":[6075],"volves linea":[6075],"olves linear":[6075],"lves linearl":[6075],"ves linearly":[6075],"es linearly ":[6075],"s linearly a":[6075]," linearly al":[6075],"linearly alo":[6075],"inearly alon":[6075],"nearly along":[6075],"early along ":[6075],"arly along t":[6075],"rly along th":[6075]," along the p":[6075,6123],"along the pa":[6075,6123],"long the pat":[6075,6123],"ong the path":[6075,6123],"ng the path ":[6075,6123],"g the path :":[6075]," the path : ":[6075],"the path : h":[6075],"he path : ht":[6075],"om/#rf9w9#38":[6075],"m/#rf9w9#38 ":[6075],"/#rf9w9#38  ":[6075],"#rf9w9#38   ":[6075],"rf9w9#38    ":[6075],"now if we us":[6076],"ow if we use":[6076],"w if we use ":[6076]," if we use a":[6076],"if we use a ":[6076],"f we use a s":[6076]," we use a si":[6076],"we use a sin":[6076],"e use a sinu":[6076]," use a sinus":[6076],"use a sinus ":[6076],"se a sinus s":[6076],"e a sinus sc":[6076]," a sinus sca":[6076],"a sinus scal":[6076]," sinus scali":[6076],"sinus scalin":[6076],"inus scaling":[6076],"nus scaling ":[6076],"us scaling f":[6076],"s scaling fu":[6076]," scaling fun":[6076],"scaling func":[6076],"caling funct":[6076],"aling functi":[6076],"ling functio":[6076],"g function i":[6076],"function ins":[6076],"unction inst":[6076],"nction inste":[6076],"ction instea":[6076],"tion instead":[6076],"ion instead ":[6076],"on instead a":[6076],"n instead an":[6076]," instead and":[6076],"instead and ":[6076],"nstead and a":[6076],"stead and as":[6076],"tead and as ":[6076],"ead and as t":[6076],"ad and as th":[6076],"d and as the":[6076]," and as the ":[6076],"and as the s":[6076],"nd as the sh":[6076],"d as the sha":[6076]," as the shap":[6076]," the shape i":[6076,6113],"the shape is":[6076,6113,6121],"he shape isn":[6076],"e shape isn'":[6076]," shape isn't":[6076],"shape isn't ":[6076],"hape isn't c":[6076],"ape isn't ce":[6076],"pe isn't cen":[6076],"e isn't cent":[6076]," isn't cente":[6076],"isn't center":[6076],"sn't centere":[6076],"n't centered":[6076],"'t centered,":[6076],"t centered, ":[6076]," centered, w":[6076],"centered, we":[6076],"entered, we ":[6076],"ntered, we g":[6076],"tered, we ge":[6076],"ered, we get":[6076],"red, we get ":[6076],"ed, we get i":[6076],"d, we get in":[6076],", we get int":[6076]," we get inte":[6076],"we get inter":[6076],"e get intere":[6076]," get interes":[6076],"get interest":[6076],"et interesti":[6076],"t interestin":[6076],"nteresting r":[6076],"teresting re":[6076],"eresting res":[6076],"resting resu":[6076],"esting resul":[6076],"sting result":[6076],"ting results":[6076],"ing results ":[6076],"ng results :":[6076],"g results : ":[6076]," results : h":[6076],"results : ht":[6076],"esults : htt":[6076],"sults : http":[6076],"ults : http:":[6076],"lts : http:/":[6076],"ts : http://":[6076],"om/#rf9w9#39":[6076],"m/#rf9w9#39 ":[6076],"/#rf9w9#39  ":[6076],"#rf9w9#39   ":[6076],"rf9w9#39    ":[6076],"we can even ":[6077],"e can even e":[6077]," can even em":[6077],"can even emu":[6077],"an even emul":[6077],"n even emula":[6077]," even emulat":[6077],"even emulate":[6077],"ven emulate ":[6077],"en emulate r":[6077],"n emulate ro":[6077]," emulate rot":[6077],"emulate rota":[6077],"mulate rotat":[6077],"ulate rotati":[6077],"late rotatio":[6077],"ate rotation":[6077],"te rotation ":[6077],"e rotation b":[6077]," rotation by":[6077],"rotation by ":[6077],"otation by a":[6077],"tation by al":[6077],"ation by alt":[6077],"tion by alte":[6077],"ion by alter":[6077],"on by altern":[6077],"n by alterna":[6077]," by alternat":[6077],"by alternate":[6077],"y alternatel":[6077],"lternately s":[6077],"ternately sc":[6077],"ernately sca":[6077],"rnately scal":[6077],"nately scali":[6077],"ately scalin":[6077],"tely scaling":[6077],"ely scaling ":[6077],"ly scaling p":[6077],"y scaling po":[6077]," scaling pos":[6077],"scaling posi":[6077],"caling posit":[6077],"aling positi":[6077],"ling positiv":[6077],"ing positive":[6077,6709],"ng positive/":[6077],"g positive/n":[6077]," positive/ne":[6077],"positive/neg":[6077],"ositive/nega":[6077],"sitive/negat":[6077],"itive/negati":[6077],"tive/negativ":[6077],"ive/negative":[6077],"ve/negative ":[6077],"e/negative :":[6077],"/negative : ":[6077],"negative : h":[6077],"egative : ht":[6077],"gative : htt":[6077],"ative : http":[6077],"tive : http:":[6077],"ive : http:/":[6077],"om/#rf9w9#40":[6077],"m/#rf9w9#40 ":[6077],"/#rf9w9#40  ":[6077],"#rf9w9#40   ":[6077],"rf9w9#40    ":[6077],"  **_rotatef":[6078]," **_rotatefu":[6078],"**_rotatefun":[6078],"*_rotatefunc":[6078],"tefunction_*":[6078]," myrotation ":[6085],"myrotation =":[6085],"yrotation = ":[6085],"rotation = f":[6085,6096],"otation = fu":[6085,6096],"tation = fun":[6085,6096],"  var rotati":[6086]," var rotatio":[6086],"ar rotation ":[6086,6091],"r rotation =":[6086]," rotation = ":[6086],"rotation = d":[6086],"otation = di":[6086],"tation = dis":[6086],"ation = dist":[6086],"tion = dista":[6086],"ion = distan":[6086],"on = distanc":[6086],"n = distance":[6086]," = distance ":[6086],"= distance /":[6086]," distance / ":[6086],"distance / 2":[6086],"istance / 20":[6086],"stance / 20;":[6086],"  return rot":[6087]," return rota":[6087],"return rotat":[6087],"eturn rotati":[6087],"turn rotatio":[6087],"urn rotation":[6087],"rn rotation;":[6087],"mple of cons":[6090],"ple of const":[6090],"le of consta":[6090],"e of constan":[6090]," of constant":[6090],"of constant ":[6090],"f constant s":[6090]," constant sc":[6090,6110],"constant sca":[6090,6110],"onstant scal":[6090,6110],"nstant scale":[6090,6110],"stant scale ":[6090,6110],"tant scale a":[6090,6110],"ant scale an":[6090,6110],"nt scale and":[6090,6110],"t scale and ":[6090,6110],"e and rotati":[6090],"d rotation e":[6090]," rotation ev":[6090],"rotation evo":[6090],"otation evol":[6090],"tation evolv":[6090],"ation evolvi":[6090],"tion evolvin":[6090],"ion evolving":[6090],"on evolving ":[6090],"n evolving w":[6090]," evolving wi":[6090,6292],"evolving wit":[6090,6292],"volving with":[6090,6292],"olving with ":[6090,6292],"lving with t":[6090],"ving with th":[6090]," with the di":[6090,6212],"with the dis":[6090,6212],"ith the dist":[6090,6212],"th the dista":[6090,6212],"h the distan":[6090,6212],"e distance :":[6090]," distance : ":[6090],"distance : h":[6090],"istance : ht":[6090],"stance : htt":[6090],"tance : http":[6090],"ance : http:":[6090],"nce : http:/":[6090],"ce : http://":[6090],"om/#rf9w9#41":[6090,6100],"m/#rf9w9#41 ":[6090,6100],"/#rf9w9#41  ":[6090,6100],"#rf9w9#41   ":[6090,6100],"rf9w9#41    ":[6090],"ou can set a":[6091],"u can set a ":[6091]," can set a n":[6091],"can set a no":[6091],"an set a non":[6091],"n set a non-":[6091]," set a non-l":[6091],"set a non-li":[6091],"et a non-lin":[6091],"t a non-line":[6091]," a non-linea":[6091],"a non-linear":[6091]," non-linear ":[6091],"non-linear r":[6091],"on-linear ro":[6091],"n-linear rot":[6091],"-linear rota":[6091],"linear rotat":[6091],"inear rotati":[6091],"near rotatio":[6091],"ear rotation":[6091]," rotation fu":[6091,6093],"rotation fun":[6091,6093],"otation func":[6091,6093],"tation funct":[6091,6093],"unction of c":[6091],"nction of co":[6091],"ction of cou":[6091],"tion of cour":[6091],"ion of cours":[6091],"on of course":[6091],"n of course,":[6091],"f course, si":[6091]," course, sin":[6091],"course, sinu":[6091],"ourse, sinus":[6091],"urse, sinus ":[6091],"rse, sinus h":[6091],"se, sinus he":[6091],"e, sinus her":[6091],", sinus here":[6091]," sinus here ":[6091],"sinus here :":[6091],"inus here : ":[6091],"nus here : h":[6091],"us here : ht":[6091],"s here : htt":[6091]," here : http":[6091],"here : http:":[6091],"ere : http:/":[6091],"re : http://":[6091],"om/#rf9w9#42":[6091],"m/#rf9w9#42 ":[6091],"/#rf9w9#42  ":[6091],"#rf9w9#42   ":[6091],"rf9w9#42    ":[6091],"  **fixed va":[6092]," **fixed val":[6092],"**fixed valu":[6092],"*fixed value":[6092],"fixed values":[6092],"ixed values*":[6092],"xed values**":[6092],"nced method ":[6093],"ced method n":[6093],"ed method ne":[6093],"d method nee":[6093]," needs two c":[6093],"needs two cu":[6093],"eeds two cus":[6093],"eds two cust":[6093],"ds two custo":[6093],"s two custom":[6093]," two custom ":[6093],"two custom f":[6093],"wo custom fu":[6093],"o custom fun":[6093],"functions. b":[6093],"unctions. bu":[6093],"nctions. but":[6093],"ctions. but ":[6093],"tions. but y":[6093],"ions. but yo":[6093],"ons. but you":[6093],"ns. but you ":[6093],"s. but you m":[6093],". but you ma":[6093],"ay want to u":[6093],"y want to us":[6093],"ant to use a":[6093],"nt to use a ":[6093],"t to use a c":[6093]," to use a cu":[6093],"to use a cus":[6093],"o use a cust":[6093]," use a custo":[6093],"use a custom":[6093],"se a custom ":[6093],"e a custom s":[6093]," a custom sc":[6093],"a custom sca":[6093]," custom scal":[6093],"custom scale":[6093],"ustom scale ":[6093],"stom scale f":[6093],"tom scale fu":[6093],"om scale fun":[6093],"m scale func":[6093]," scale funct":[6093],"scale functi":[6093],"cale functio":[6093],"ale function":[6093],"le function ":[6093],"e function w":[6093],"ion with a f":[6093],"on with a fi":[6093],"n with a fix":[6093]," with a fixe":[6093],"with a fixed":[6093],"ith a fixed ":[6093],"th a fixed (":[6093],"h a fixed (o":[6093]," a fixed (or":[6093],"a fixed (or ":[6093]," fixed (or n":[6093],"fixed (or no":[6093],"ixed (or no)":[6093],"xed (or no) ":[6093],"ed (or no) r":[6093],"d (or no) ro":[6093]," (or no) rot":[6093],"(or no) rota":[6093],"or no) rotat":[6093],"r no) rotati":[6093]," no) rotatio":[6093],"no) rotation":[6093],"o) rotation ":[6093],") rotation f":[6093],"on function,":[6093],"n function, ":[6093,6138]," function, f":[6093],"function, fo":[6093],"unction, for":[6093],"nction, for ":[6093],"ction, for e":[6093],"tion, for ex":[6093],"ion, for exa":[6093],"on, for exam":[6093],"n, for examp":[6093],"for example.":[6093],"or example. ":[6093],"r example. i":[6093]," example. in":[6093],"example. in ":[6093],"xample. in t":[6093],"ample. in th":[6093],"mple. in thi":[6093],"ple. in this":[6093],"this case, j":[6093],"his case, ju":[6093],"is case, jus":[6093],"s case, just":[6093]," case, just ":[6093],"case, just p":[6093],"ase, just pa":[6093],"se, just pas":[6093],"e, just pass":[6093],", just pass ":[6093]," just pass a":[6093],"just pass a ":[6093],"ust pass a c":[6093],"st pass a cu":[6093],"t pass a cus":[6093]," pass a cust":[6093],"pass a custo":[6093],"ass a custom":[6093],"ss a custom ":[6093],"s a custom r":[6093]," a custom ro":[6093],"a custom rot":[6093]," custom rota":[6093],"custom rotat":[6093],"ustom rotati":[6093],"stom rotatio":[6093],"tom rotation":[6093],"om rotation ":[6093],"m rotation f":[6093],"n function r":[6093],"eturning a f":[6093],"turning a fi":[6093],"urning a fix":[6093],"rning a fixe":[6093],"ning a fixed":[6093],"ing a fixed ":[6093],"ng a fixed v":[6093],"g a fixed va":[6093]," a fixed val":[6093],"a fixed valu":[6093]," fixed value":[6093],"fixed value ":[6093],"ixed value :":[6093],"xed value : ":[6093],"ed value :  ":[6093],"var norotati":[6096],"ar norotatio":[6096],"r norotation":[6096]," norotation ":[6096],"norotation =":[6096],"orotation = ":[6096],"if you caref":[6100],"f you carefu":[6100]," you careful":[6100],"you carefull":[6100],"ou carefully":[6100],"u carefully ":[6100]," carefully r":[6100],"carefully re":[6100],"arefully rea":[6100],"refully read":[6100],"efully read ":[6100],"fully read t":[6100],"ully read th":[6100],"lly read the":[6100,6168],"y read the c":[6100,6168]," read the co":[6100,6168],"read the cod":[6100],"ead the code":[6100],"d the code o":[6100]," code of thi":[6100],"code of this":[6100],"ode of this ":[6100],"de of this p":[6100],"e of this pr":[6100,6682]," of this pre":[6100],"of this prev":[6100],"f this previ":[6100]," this previo":[6100],"this previou":[6100],"his previous":[6100],"is previous ":[6100],"s previous e":[6100]," previous ex":[6100],"previous exa":[6100],"revious exam":[6100],"evious examp":[6100],"vious exampl":[6100],"ious example":[6100],"ous example,":[6100],"us example, ":[6100],"s example, y":[6100],"ou can see i":[6100],"u can see in":[6100]," can see in ":[6100],"can see in l":[6100],"an see in li":[6100],"n see in lin":[6100]," see in line":[6100],"see in line ":[6100],"ee in line 4":[6100],"e in line 41":[6100]," in line 41 ":[6100],"in line 41 t":[6100],"n line 41 th":[6100]," line 41 tha":[6100],"line 41 that":[6100],"ine 41 that ":[6100],"ne 41 that t":[6100],"e 41 that th":[6100]," 41 that the":[6100],"41 that the ":[6100],"1 that the _":[6100]," that the _s":[6100],"that the _sc":[6100],"hat the _sca":[6100],"at the _scal":[6100],"t the _scale":[6100]," the _scalef":[6100],"the _scalefu":[6100],"he _scalefun":[6100],"e _scalefunc":[6100],"efunction_ r":[6100],"function_ re":[6100],"unction_ ret":[6100],"nction_ retu":[6100],"ction_ retur":[6100],"tion_ return":[6100],"ion_ returns":[6100],"on_ returns ":[6100],"n_ returns t":[6100],"_ returns th":[6100],"turns the co":[6100],"urns the con":[6100],"rns the cons":[6100],"ns the const":[6100],"e constant 1":[6100]," constant 1 ":[6100],"constant 1 v":[6100],"onstant 1 va":[6100],"nstant 1 val":[6100],"stant 1 valu":[6100],"tant 1 value":[6100],"ant 1 value ":[6100],"nt 1 value :":[6100],"t 1 value : ":[6100]," 1 value : h":[6100],"1 value : ht":[6100]," value : htt":[6100],"value : http":[6100],"alue : http:":[6100],"lue : http:/":[6100],"rf9w9#41    ":[6100],"f9w9#41     ":[6100],"9w9#41      ":[6100],"  **_ribbonc":[6101]," **_ribboncl":[6101,6106,6107],"**_ribbonclo":[6101,6106,6107],"*_ribbonclos":[6101,6106,6107],"_ribbonclose":[6101,6106,6107,6111,6112],"ribbonclosex":[6101],"ibbonclosexx":[6101],"bbonclosexxx":[6101],"bonclosexxx_":[6101],"onclosexxx_ ":[6101],"nclosexxx_ p":[6101]," parameters*":[6101],"ruded mesh i":[6102],"uded mesh is":[6102],"ded mesh is ":[6102],"ed mesh is b":[6102],"d mesh is ba":[6102]," mesh is bas":[6102],"mesh is base":[6102],"esh is based":[6102],"sh is based ":[6102],"h is based o":[6102]," based on an":[6102],"based on an ":[6102],"ased on an u":[6102],"sed on an un":[6102],"ed on an und":[6102],"d on an unde":[6102]," on an under":[6102],"on an underl":[6102],"n an underly":[6102]," an underlyi":[6102],"an underlyin":[6102],"n underlying":[6102],"ying ribbon.":[6102],"ing ribbon. ":[6102],"ng ribbon. w":[6102],"g ribbon. wh":[6102]," ribbon. whe":[6102],"ribbon. when":[6102],"ibbon. when ":[6102],"bbon. when y":[6102],"bon. when yo":[6102],"on. when you":[6102],"n. when you ":[6102],". when you e":[6102]," when you ex":[6102],"when you ext":[6102],"hen you extr":[6102],"en you extru":[6102],"n you extrud":[6102]," you extrude":[6102],"you extrude ":[6102],"ou extrude a":[6102],"u extrude a ":[6102]," extrude a s":[6102],"extrude a sh":[6102],"xtrude a sha":[6102],"trude a shap":[6102],"rude a shape":[6102],"ude a shape,":[6102],"de a shape, ":[6102],"e a shape, y":[6102]," a shape, yo":[6102],"a shape, you":[6102],"shape, you a":[6102],"hape, you ac":[6102],"ape, you act":[6102],"pe, you actu":[6102],"e, you actua":[6102],", you actual":[6102]," you actuall":[6102],"you actually":[6102],"ou actually ":[6102],"u actually m":[6102]," actually ma":[6102],"actually mak":[6102],"ctually make":[6102],"tually make ":[6102],"ually make a":[6102],"ally make a ":[6102],"lly make a p":[6102],"ly make a pa":[6102],"y make a par":[6102]," make a part":[6102],"make a parti":[6102],"ake a partic":[6102],"ke a particu":[6102],"e a particul":[6102]," a particula":[6102],"a particular":[6102]," particular ":[6102],"particular r":[6102],"articular ri":[6102],"rticular rib":[6102],"ticular ribb":[6102],"icular ribbo":[6102],"cular ribbon":[6102],"lar ribbon. ":[6102],"ar ribbon.  ":[6102],"this means y":[6103],"his means yo":[6103],"is means you":[6103],"s means you ":[6103]," means you c":[6103],"means you ca":[6103],"eans you can":[6103],"ans you can ":[6103],"ns you can a":[6103],"s you can al":[6103],"also set thi":[6103],"lso set this":[6103],"so set this ":[6103],"o set this r":[6103]," set this ri":[6103],"set this rib":[6103],"et this ribb":[6103],"t this ribbo":[6103],"his ribbon _":[6103],"is ribbon _c":[6103],"s ribbon _cl":[6103],"parameter if":[6103],"arameter if ":[6103],"rameter if y":[6103],"ameter if yo":[6103],"meter if you":[6103],"eter if you ":[6103],"ter if you n":[6103],"er if you ne":[6103],"r if you nee":[6103],"u need to au":[6103]," need to aut":[6103],"need to auto":[6103],"eed to autom":[6103],"ally close t":[6103],"lly close th":[6103],"ly close the":[6103],"y close the ":[6103]," close the e":[6103],"close the ex":[6103],"lose the ext":[6103],"ose the extr":[6103],"se the extru":[6103],"e the extrud":[6103],"ruded shape.":[6103],"uded shape. ":[6103],"ded shape.  ":[6103],"note : the _":[6104],"ote : the _c":[6104],"te : the _cl":[6104],"e : the _clo":[6104]," : the _clos":[6104],": the _close":[6104]," the _closex":[6104],"the _closexx":[6104],"he _closexxx":[6104],"e _closexxx_":[6104],"_closexxx_ n":[6104],"closexxx_ na":[6104],"losexxx_ nam":[6104],"osexxx_ name":[6104],"sexxx_ names":[6104],"exxx_ names ":[6104],"xxx_ names a":[6104],"xx_ names ar":[6104],"x_ names are":[6104],"_ names are ":[6104]," names are t":[6104],"names are th":[6104],"ames are the":[6104],"mes are the ":[6104],"es are the r":[6104],"s are the ri":[6104]," are the rib":[6104],"are the ribb":[6104],"re the ribbo":[6104],"he ribbon on":[6104],"e ribbon one":[6104]," ribbon ones":[6104],"ribbon ones.":[6104],"ibbon ones. ":[6104],"bbon ones. n":[6104],"bon ones. no":[6104],"on ones. not":[6104],"n ones. not ":[6104]," ones. not t":[6104],"ones. not th":[6104],"nes. not the":[6104],"es. not the ":[6104],"s. not the e":[6104],". not the ex":[6104]," not the ext":[6104],"not the extr":[6104],"ot the extru":[6104],"t the extrud":[6104],"uded shape o":[6104],"ded shape on":[6104],"ed shape one":[6104],"d shape ones":[6104]," shape ones.":[6104],"shape ones. ":[6104],"hape ones.  ":[6104],"so it may be":[6105],"o it may be ":[6105]," it may be c":[6105],"it may be co":[6105],"t may be con":[6105]," may be conf":[6105],"may be confu":[6105],"ay be confus":[6105],"y be confusi":[6105]," be confusin":[6105],"be confusing":[6105],"e confusing ":[6105]," confusing b":[6105],"confusing be":[6105],"onfusing bec":[6105],"nfusing beca":[6105],"fusing becau":[6105],"using becaus":[6105],"sing because":[6105],"ing because ":[6105],"ng because :":[6105],"g because : ":[6105]," because :  ":[6105],"* **_ribbonc":[6106,6107],"nclosearray_":[6106,6111],"closearray_*":[6106],"losearray_**":[6106],"osearray_** ":[6106],"searray_** s":[6106],"earray_** se":[6106],"array_** set":[6106],"rray_** set ":[6106],"ray_** set t":[6106],"ay_** set to":[6106],"y_** set to ":[6106],"_** set to t":[6106,6107],"** set to tr":[6106,6107],"* set to tru":[6106,6107],"et to true w":[6106,6107],"t to true wi":[6106,6107]," true will c":[6106,6107],"true will cl":[6106,6107],"rue will clo":[6106,6107],"ue will clos":[6106,6107],"e will close":[6106,6107]," will close ":[6106,6107],"will close y":[6106,6107],"ill close yo":[6106,6107],"ll close you":[6106,6107],"l close your":[6106,6107]," close your ":[6106,6107],"close your s":[6106,6107],"lose your sh":[6106,6107],"ose your sha":[6106,6107],"se your shap":[6106,6107],"e your shape":[6106,6107],"your shape e":[6106],"our shape ex":[6106],"ur shape ext":[6106],"r shape extr":[6106]," shape extru":[6106],"shape extrus":[6106],"hape extrusi":[6106],"ape extrusio":[6106],"pe extrusion":[6106],"onclosepath_":[6107,6112],"nclosepath_*":[6107],"closepath_**":[6107],"losepath_** ":[6107],"osepath_** s":[6107],"sepath_** se":[6107],"epath_** set":[6107],"path_** set ":[6107],"ath_** set t":[6107],"th_** set to":[6107],"h_** set to ":[6107],"your shape i":[6107],"our shape it":[6107],"ur shape its":[6107],"r shape itse":[6107]," shape itsel":[6107],"shape itself":[6107],"hape itself ":[6107],"ape itself (":[6107],"pe itself (i":[6107],"e itself (if":[6107]," itself (if ":[6107],"itself (if u":[6107],"tself (if un":[6107],"self (if unc":[6107],"elf (if uncl":[6107],"lf (if unclo":[6107],"f (if unclos":[6107]," (if unclose":[6107],"(if unclosed":[6107],"if unclosed)":[6107],"f unclosed).":[6107]," unclosed). ":[6107],"unclosed).  ":[6107],"let's now do":[6108],"et's now do ":[6108],"t's now do t":[6108],"'s now do th":[6108],"s now do thi":[6108]," now do this":[6108],"now do this ":[6108],"ow do this u":[6108],"w do this un":[6108]," do this unc":[6108],"do this uncl":[6108],"o this unclo":[6108]," this unclos":[6108],"this unclose":[6108],"his unclosed":[6108],"is unclosed,":[6108],"s unclosed, ":[6108]," unclosed, u":[6108],"unclosed, un":[6108],"nclosed, un-":[6108],"closed, un-c":[6108],"losed, un-ce":[6108],"osed, un-cen":[6108],"sed, un-cent":[6108],"ed, un-cente":[6108],"d, un-center":[6108],", un-centere":[6108],"n-centered e":[6108],"-centered ex":[6108],"centered ext":[6108],"entered extr":[6108],"ntered extru":[6108],"tered extrud":[6108],"ered extrude":[6108],"red extruded":[6108],"ed extruded ":[6108],"d extruded s":[6108],"uded shape :":[6108],"ded shape : ":[6108],"ed shape : h":[6108],"d shape : ht":[6108],"com/#rf9w9#2":[6108,6109],"om/#rf9w9#20":[6108],"m/#rf9w9#20 ":[6108],"/#rf9w9#20  ":[6108],"and this alm":[6109],"nd this almo":[6109],"d this almos":[6109]," this almost":[6109],"this almost ":[6109],"his almost c":[6109],"is almost ci":[6109],"s almost cir":[6109]," almost circ":[6109],"almost circu":[6109],"lmost circul":[6109],"most circula":[6109],"ost circular":[6109],"st circular ":[6109],"t circular p":[6109],"cular path :":[6109],"ular path : ":[6109],"lar path : h":[6109],"ar path : ht":[6109],"r path : htt":[6109],"om/#rf9w9#21":[6109],"m/#rf9w9#21 ":[6109],"/#rf9w9#21  ":[6109],"usion with c":[6110],"sion with co":[6110],"ion with con":[6110],"on with cons":[6110],"n with const":[6110]," with consta":[6110],"with constan":[6110],"ith constant":[6110],"th constant ":[6110],"h constant s":[6110]," scale and n":[6110],"scale and no":[6110],"cale and no ":[6110],"ale and no r":[6110],"le and no ro":[6110],"e and no rot":[6110]," and no rota":[6110],"and no rotat":[6110],"nd no rotati":[6110],"d no rotatio":[6110],"o rotation :":[6110],"om/#rf9w9#43":[6110],"m/#rf9w9#43 ":[6110],"/#rf9w9#43  ":[6110],"#rf9w9#43   ":[6110],"rf9w9#43    ":[6110],"ow let's set":[6111],"w let's set ":[6111]," let's set t":[6111,6112],"let's set th":[6111,6112],"et's set the":[6111,6112],"t's set the ":[6111,6112],"'s set the _":[6111,6112],"s set the _r":[6111,6112]," set the _ri":[6111,6112],"set the _rib":[6111,6112],"et the _ribb":[6111,6112],"t the _ribbo":[6111,6112]," the _ribbon":[6111,6112],"the _ribbonc":[6111,6112],"he _ribboncl":[6111,6112],"e _ribbonclo":[6111,6112]," _ribbonclos":[6111,6112],"earray_ to t":[6111],"array_ to tr":[6111],"rray_ to tru":[6111],"ray_ to true":[6111],"ay_ to true ":[6111],"y_ to true :":[6111],"_ to true :h":[6111]," to true :ht":[6111],"to true :htt":[6111],"o true :http":[6111]," true :http:":[6111],"true :http:/":[6111],"rue :http://":[6111],"ue :http://w":[6111],"e :http://ww":[6111]," :http://www":[6111],":http://www.":[6111],"om/#rf9w9#44":[6111],"m/#rf9w9#44 ":[6111],"/#rf9w9#44  ":[6111],"#rf9w9#44   ":[6111],"rf9w9#44    ":[6111],"an see, it c":[6112],"n see, it cl":[6112]," see, it clo":[6112],"see, it clos":[6112],"ee, it close":[6112],"e, it closes":[6112],", it closes ":[6112]," it closes t":[6112],"it closes th":[6112],"t closes the":[6112]," closes the ":[6112],"closes the e":[6112],"loses the ex":[6112],"oses the ext":[6112],"ses the extr":[6112],"es the extru":[6112],"s the extrus":[6112],"rusion path.":[6112],"usion path. ":[6112],"sion path. l":[6112],"ion path. le":[6112],"on path. let":[6112],"n path. let'":[6112]," path. let's":[6112],"path. let's ":[6112],"ath. let's s":[6112],"th. let's se":[6112],"h. let's set":[6112],". let's set ":[6112]," let's set i":[6112],"let's set it":[6112],"et's set it ":[6112],"t's set it b":[6112],"'s set it ba":[6112],"s set it bac":[6112]," set it back":[6112],"set it back ":[6112],"et it back t":[6112],"t it back to":[6112]," it back to ":[6112],"it back to f":[6112],"t back to fa":[6112]," back to fal":[6112],"back to fals":[6112],"ack to false":[6112],"ck to false ":[6112],"k to false a":[6112]," to false an":[6112],"to false and":[6112],"o false and ":[6112]," false and l":[6112],"false and le":[6112],"alse and let":[6112],"lse and let'":[6112],"se and let's":[6112],"e and let's ":[6112]," and let's s":[6112],"and let's se":[6112],"nd let's set":[6112],"d let's set ":[6112],"nclosepath_ ":[6112],"sepath_ to t":[6112],"epath_ to tr":[6112],"path_ to tru":[6112],"ath_ to true":[6112],"th_ to true ":[6112],"h_ to true i":[6112],"_ to true in":[6112]," to true ins":[6112,6314],"to true inst":[6112,6314],"o true inste":[6112,6314]," true instea":[6112,6314],"true instead":[6112,6314],"rue instead ":[6112,6314],"ue instead :":[6112],"e instead : ":[6112]," instead : h":[6112],"instead : ht":[6112],"nstead : htt":[6112],"stead : http":[6112],"tead : http:":[6112],"ead : http:/":[6112],"ad : http://":[6112],"om/#rf9w9#45":[6112],"m/#rf9w9#45 ":[6112],"/#rf9w9#45  ":[6112],"#rf9w9#45   ":[6112],"rf9w9#45    ":[6112],"now the shap":[6113],"ow the shape":[6113],"w the shape ":[6113],"he shape is ":[6113,6121],"e shape is c":[6113]," shape is cl":[6113],"shape is clo":[6113],"hape is clos":[6113],"ape is close":[6113],"pe is closed":[6113],"e is closed.":[6113]," is closed. ":[6113],"is closed.  ":[6113],"both togethe":[6114],"oth together":[6114],"th together ":[6114],"h together :":[6114]," together : ":[6114],"together : h":[6114],"ogether : ht":[6114],"gether : htt":[6114],"ether : http":[6114],"ther : http:":[6114],"her : http:/":[6114],"om/#rf9w9#46":[6114],"m/#rf9w9#46 ":[6114],"/#rf9w9#46  ":[6114],"#rf9w9#46   ":[6114],"rf9w9#46    ":[6114]," **summary**":[6115],"**summary** ":[6115],"*summary**  ":[6115],"at last, the":[6116],"t last, the ":[6116]," last, the e":[6116],"last, the ex":[6116],"ast, the ext":[6116],"st, the extr":[6116],"t, the extru":[6116],", the extrud":[6116],"the extrude ":[6116],"he extrude c":[6116],"e extrude cu":[6116]," extrude cus":[6116],"extrude cust":[6116],"xtrude custo":[6116],"trude custom":[6116],"rude custom ":[6116],"ude custom f":[6116],"de custom fu":[6116],"e custom fun":[6116],"m function c":[6116],"nction call ":[6116],"ction call w":[6116],"tion call wo":[6116],"ion call wou":[6116],"on call woul":[6116],"n call would":[6116]," call would ":[6116],"call would b":[6116],"all would be":[6116],"ll would be,":[6116],"l would be, ":[6116]," would be, f":[6116],"would be, fo":[6116],"ould be, for":[6116],"uld be, for ":[6116],"ld be, for e":[6116],"d be, for ex":[6116]," be, for exa":[6116],"be, for exam":[6116],"e, for examp":[6116],"or example: ":[6116],"r example:  ":[6116],"custom(\"extr":[6118],"ustom(\"extru":[6118],"stom(\"extrud":[6118],"tom(\"extrude":[6118],"om(\"extruded":[6118],"m(\"extruded\"":[6118],"(\"extruded\",":[6118],"\"extruded\", ":[6118],"extruded\", s":[6118],"xtruded\", sh":[6118],"truded\", sha":[6118],"ruded\", shap":[6118],"uded\", shape":[6118],"ded\", shape,":[6118],"ed\", shape, ":[6118],"d\", shape, p":[6118],"ape, path, m":[6118],"pe, path, my":[6118],"e, path, mys":[6118],", path, mysc":[6118]," path, mysca":[6118],"path, myscal":[6118],"ath, myscale":[6118],"th, myscale,":[6118],"h, myscale, ":[6118],", myscale, m":[6118]," myscale, my":[6118],"myscale, myr":[6118],"yscale, myro":[6118],"scale, myrot":[6118],"cale, myrota":[6118],"ale, myrotat":[6118],"le, myrotati":[6118],"e, myrotatio":[6118]," myrotation,":[6118],"myrotation, ":[6118],"yrotation, f":[6118],"rotation, fa":[6118],"otation, fal":[6118],"tation, fals":[6118],"ation, false":[6118],"tion, false,":[6118],"ion, false, ":[6118],"on, false, t":[6118],"n, false, tr":[6118],", false, tru":[6118,6322]," false, true":[6118,6322],"false, true,":[6118],"alse, true, ":[6118],"lse, true, s":[6118],"se, true, sc":[6118],"e, true, sce":[6118],", true, scen":[6118]," true, scene":[6118],"true, scene)":[6118]," shape is an":[6120],"shape is an ":[6120],"hape is an a":[6120],"ape is an ar":[6120],"pe is an arr":[6120],"e is an arra":[6120],"e vector3. t":[6120],"vector3. thi":[6120],"ector3. this":[6120],"ctor3. this ":[6120],"tor3. this m":[6120],"or3. this me":[6120],"r3. this mea":[6120],"3. this mean":[6120],"this means 2":[6120],"his means 2d":[6120],"is means 2d ":[6120],"s means 2d o":[6120]," means 2d or":[6120],"means 2d or ":[6120],"eans 2d or 3":[6120],"ans 2d or 3d":[6120],"ns 2d or 3d ":[6120],"s 2d or 3d s":[6120]," 2d or 3d sh":[6120],"2d or 3d sha":[6120],"d or 3d shap":[6120]," or 3d shape":[6120],"or 3d shapes":[6120],"r 3d shapes ":[6120]," 3d shapes c":[6120],"3d shapes ca":[6120],"d shapes can":[6120]," shapes can ":[6120],"shapes can b":[6120],"hapes can be":[6120],"apes can be ":[6120],"pes can be e":[6120],"es can be ex":[6120],"s can be ext":[6120]," can be extr":[6120],"can be extru":[6120],"an be extrud":[6120],"n be extrude":[6120],"e extruded a":[6120]," extruded as":[6120],"extruded as ":[6120],"xtruded as w":[6120],"truded as we":[6120],"ruded as wel":[6120],"uded as well":[6120],"ded as well.":[6120],"ed as well. ":[6120],"d as well.  ":[6120],"e shape is t":[6121]," shape is to":[6121],"shape is to ":[6121],"hape is to b":[6121],"ape is to be":[6121],"pe is to be ":[6121],"e is to be d":[6121]," is to be de":[6121],"is to be des":[6121],"s to be desi":[6121]," to be desig":[6121],"to be design":[6121],"o be designe":[6121],"e designed i":[6121]," designed in":[6121],"designed in ":[6121],"esigned in t":[6121],"signed in th":[6121],"igned in the":[6121],"gned in the ":[6121],"d in the loc":[6121,6122,6253]," in the loca":[6121,6122,6253,7099],"in the local":[6121,6122,6218,6253,7099],"n the local ":[6121,6122,6218,6253,7099]," the local c":[6121,6122],"the local co":[6121,6122],"he local coo":[6121,6122],"e local coor":[6121,6122]," local coord":[6121,6122],"local coordi":[6121,6122],"ocal coordin":[6121,6122],"cal coordina":[6121,6122],"al coordinat":[6121,6122],"l coordinate":[6121,6122],"ate system k":[6121],"te system kn":[6121],"e system kno":[6121]," system know":[6121],"system knowi":[6121],"ystem knowin":[6121],"stem knowing":[6121],"tem knowing ":[6121],"em knowing t":[6121],"m knowing th":[6121]," knowing tha":[6121],"knowing that":[6121],"nowing that ":[6121],"owing that t":[6121],"wing that th":[6121],"g that the z":[6121]," that the z-":[6121],"that the z-a":[6121],"hat the z-ax":[6121],"at the z-axi":[6121],"t the z-axis":[6121],"e z-axis wil":[6121]," z-axis will":[6121],"z-axis will ":[6121],"-axis will b":[6121],"axis will be":[6121],"xis will be ":[6121],"ll be the ex":[6121],"l be the ext":[6121]," be the extr":[6121],"be the extru":[6121],"e the extrus":[6121],"usion path a":[6121],"sion path ax":[6121],"ion path axi":[6121],"on path axis":[6121],"n path axis.":[6121]," path axis. ":[6121,6123],"path axis.  ":[6121,6123],"finally, sha":[6122],"inally, shap":[6122],"nally, shape":[6122],"ally, shapes":[6122],"lly, shapes ":[6122],"ly, shapes d":[6122],"y, shapes do":[6122],", shapes don":[6122]," shapes don'":[6122],"shapes don't":[6122],"hapes don't ":[6122],"apes don't h":[6122],"pes don't ha":[6122],"es don't hav":[6122],"s don't have":[6122]," don't have ":[6122],"don't have t":[6122],"on't have to":[6122],"n't have to ":[6122],"'t have to b":[6122],"t have to be":[6122]," have to be ":[6122],"have to be c":[6122],"ave to be ce":[6122],"ve to be cen":[6122],"e to be cent":[6122],"e centered i":[6122]," centered in":[6122],"centered in ":[6122],"entered in t":[6122],"ntered in th":[6122],"tered in the":[6122],"ered in the ":[6122],"red in the l":[6122],"nate system.":[6122],"ate system. ":[6122],"te system.  ":[6122],"a centered s":[6123]," centered sh":[6123],"centered sha":[6123],"entered shap":[6123],"ntered shape":[6123],"tered shape ":[6123],"ered shape w":[6123],"red shape wi":[6123],"ed shape wil":[6123],"d shape will":[6123]," shape will ":[6123],"shape will b":[6123],"hape will be":[6123],"ape will be ":[6123],"pe will be e":[6123],"e will be ex":[6123]," will be ext":[6123],"will be extr":[6123],"ill be extru":[6123],"ll be extrud":[6123],"l be extrude":[6123]," extruded sy":[6123],"extruded sym":[6123],"xtruded symm":[6123],"truded symme":[6123],"ruded symmet":[6123],"uded symmetr":[6123],"ded symmetri":[6123],"ed symmetric":[6123],"d symmetrica":[6123]," symmetrical":[6123],"symmetricall":[6123],"ymmetrically":[6123],"mmetrically ":[6123],"metrically c":[6123],"etrically ce":[6123],"trically cen":[6123],"rically cent":[6123],"ically cente":[6123],"cally center":[6123],"ally centere":[6123],"lly centered":[6123],"ly centered ":[6123],"y centered a":[6123]," centered al":[6123],"centered alo":[6123],"entered alon":[6123],"ntered along":[6123],"tered along ":[6123],"ered along t":[6123],"red along th":[6123],"g the path a":[6123],"e path axis.":[6123]," path axis. ":[6123],"path axis. a":[6123],"ath axis. an":[6123],"th axis. an ":[6123],"h axis. an u":[6123]," axis. an un":[6123],"axis. an un-":[6123],"xis. an un-c":[6123],"is. an un-ce":[6123],"s. an un-cen":[6123],". an un-cent":[6123]," an un-cente":[6123],"an un-center":[6123],"n un-centere":[6123],"-centered sh":[6123],"e extruded o":[6123]," extruded of":[6123],"extruded off":[6123],"xtruded offs":[6123],"truded offse":[6123],"ruded offset":[6123],"uded offset ":[6123],"ded offset f":[6123],"ed offset fr":[6123],"d offset fro":[6123]," offset from":[6123],"offset from ":[6123],"ffset from t":[6123],"fset from th":[6123],"set from the":[6123],"et from the ":[6123],"t from the p":[6123]," from the pa":[6123],"from the pat":[6123],"rom the path":[6123],"om the path ":[6123],"m the path a":[6123],"the **animat":[6127],"he **animate":[6127],"e **animate*":[6127]," **animate**":[6127],"**animate** ":[6127],"*animate** p":[6127],"animate** pr":[6127],"nimate** pro":[6127],"imate** prop":[6127],"mate** prope":[6127],"ate** proper":[6127,6128],"te** propert":[6127,6128],"* property i":[6127,6128]," property in":[6127],"property ind":[6127],"roperty indi":[6127],"operty indic":[6127],"perty indica":[6127],"erty indicat":[6127],"rty indicate":[6127],"ty indicates":[6127],"y indicates ":[6127],"dicates if a":[6127],"icates if a ":[6127],"cates if a t":[6127],"ates if a ti":[6127],"tes if a tim":[6127],"es if a time":[6127],"s if a time ":[6127]," if a time v":[6127],"if a time va":[6127],"f a time val":[6127]," a time valu":[6127],"a time value":[6127]," time value ":[6127],"time value s":[6127],"ime value sh":[6127],"me value sho":[6127],"e value shou":[6127]," value shoul":[6127],"value should":[6127],"alue should ":[6127],"lue should b":[6127],"ue should be":[6127],"e should be ":[6127,6186,6271]," should be c":[6127],"should be cr":[6127],"hould be cre":[6127],"ould be crea":[6127],"uld be creat":[6127],"ld be create":[6127],"d be created":[6127],"be created a":[6127],"reated and i":[6127],"eated and in":[6127],"ated and inc":[6127],"ted and incr":[6127],"ed and incre":[6127],"d and increa":[6127]," and increas":[6127],"and increase":[6127],"nd increased":[6127],"d increased ":[6127]," increased e":[6127],"increased ea":[6127],"ncreased eac":[6127],"creased each":[6127],"reased each ":[6127],"eased each t":[6127],"ased each ti":[6127],"sed each tim":[6127],"ed each time":[6127],"d each time ":[6127]," each time t":[6127],"each time th":[6127],"ach time the":[6127],"ch time the ":[6127],"h time the f":[6127]," time the fr":[6127],"time the fra":[6127],"ime the frag":[6127],"me the fragm":[6127],"e the fragme":[6127],"ent shader c":[6127],"nt shader co":[6127],"t shader cod":[6127],"hader code i":[6127],"ader code is":[6127],"der code is ":[6127],"er code is e":[6127],"r code is ex":[6127]," code is exe":[6127],"code is exec":[6127],"ode is execu":[6127],"de is execut":[6127],"the **refres":[6128],"he **refresh":[6128],"e **refreshr":[6128]," **refreshra":[6128],"**refreshrat":[6128],"*refreshrate":[6128],"refreshrate*":[6128],"efreshrate**":[6128],"freshrate** ":[6128],"reshrate** p":[6128],"eshrate** pr":[6128],"shrate** pro":[6128],"hrate** prop":[6128],"rate** prope":[6128]," is set to 0":[6128,6554],"is set to 0 ":[6128],"s set to 0 i":[6128]," set to 0 if":[6128],"set to 0 if ":[6128],"et to 0 if y":[6128],"t to 0 if yo":[6128]," to 0 if you":[6128],"to 0 if you ":[6128],"o 0 if you w":[6128]," 0 if you wa":[6128],"0 if you wan":[6128],"u want the t":[6128]," want the te":[6128],"want the tex":[6128],"ant the text":[6128],"nt the textu":[6128],"texture to o":[6128],"exture to on":[6128],"xture to onl":[6128],"ture to only":[6128],"ure to only ":[6128],"re to only r":[6128],"e to only re":[6128]," to only ren":[6128],"to only rend":[6128],"o only rende":[6128]," only render":[6128],"only render ":[6128],"nly render o":[6128],"ly render on":[6128],"y render onc":[6128]," render once":[6128],"render once.":[6128],"ender once. ":[6128],"nder once. i":[6128],"der once. if":[6128],"er once. if ":[6128],"r once. if s":[6128]," once. if se":[6128],"once. if set":[6128],"nce. if set ":[6128],"ce. if set t":[6128]," if set to 1":[6128],"if set to 1,":[6128],"f set to 1, ":[6128]," set to 1, i":[6128],"set to 1, it":[6128],"et to 1, it ":[6128],"t to 1, it w":[6128]," to 1, it wi":[6128],"to 1, it wil":[6128],"o 1, it will":[6128]," 1, it will ":[6128],"1, it will r":[6128],", it will re":[6128]," it will ren":[6128],"it will rend":[6128],"t will rende":[6128]," will render":[6128],"will render ":[6128],"ill render e":[6128],"ll render ev":[6128],"l render eve":[6128]," render ever":[6128],"render every":[6128],"ender every ":[6128],"nder every f":[6128],"der every fr":[6128],"er every fra":[6128],"r every fram":[6128],"every frame,":[6128],"very frame, ":[6128],"ery frame, 2":[6128],"ry frame, 2 ":[6128],"y frame, 2 e":[6128]," frame, 2 ev":[6128],"frame, 2 eve":[6128],"rame, 2 ever":[6128],"ame, 2 every":[6128],"me, 2 every ":[6128],"e, 2 every t":[6128],", 2 every tw":[6128]," 2 every two":[6128],"2 every two ":[6128]," every two f":[6128],"every two fr":[6128],"very two fra":[6128],"ery two fram":[6128],"ry two frame":[6128],"y two frames":[6128]," two frames,":[6128],"two frames, ":[6128],"wo frames, e":[6128],"o frames, et":[6128]," frames, etc":[6128],"frames, etc.":[6128],"**uniforms**":[6129],"*uniforms** ":[6129],"uniforms** a":[6129],"niforms** ar":[6129],"iforms** are":[6129],"forms** are ":[6129],"orms** are t":[6129],"rms** are th":[6129],"ms** are the":[6129],"s** are the ":[6129],"** are the v":[6129],"* are the va":[6129]," are the val":[6129],"are the valu":[6129],"re the value":[6129],"the values t":[6129],"he values th":[6129],"e values tha":[6129]," values that":[6129],"values that ":[6129],"alues that w":[6129],"lues that wi":[6129],"ues that wil":[6129],"es that will":[6129],"at will be p":[6129]," be passed f":[6129],"be passed fr":[6129],"e passed fro":[6129]," passed from":[6129],"passed from ":[6129],"assed from t":[6129],"ssed from th":[6129],"d from the j":[6129]," from the ja":[6129],"from the jav":[6129],"rom the java":[6129],"om the javas":[6129],"m the javasc":[6129],"ript code to":[6129],"ipt code to ":[6129],"pt code to t":[6129],"t code to th":[6129],"ode to the s":[6129],"de to the sh":[6129],"e to the sha":[6129]," to the shad":[6129,6137,7096],"to the shade":[6129,6137,7096],"o the shader":[6129,6137,7096],"the shader c":[6129,6137,6419,7096],"he shader co":[6129,6137,6419,7096],"e shader cod":[6129,6137,6419,6427,7096],"shader code.":[6129,6427,7096],"hader code. ":[6129],"ader code. b":[6129],"der code. by":[6129],"er code. by ":[6129],"r code. by s":[6129]," code. by se":[6129],"code. by set":[6129],"ode. by sett":[6129],"de. by setti":[6129],"e. by settin":[6129],"setting them":[6129],"etting them ":[6129],"tting them t":[6129],"ting them th":[6129],"ing them tha":[6129],"ng them that":[6129],"g them that ":[6129]," them that w":[6129],"them that wa":[6129],"hem that way":[6129],"em that way,":[6129],"m that way, ":[6129]," that way, y":[6129],"that way, yo":[6129],"hat way, you":[6129],"at way, you ":[6129],"t way, you c":[6129]," you can all":[6129],"you can allo":[6129],"ou can allow":[6129],"u can allow ":[6129]," can allow t":[6129],"can allow th":[6129],"an allow the":[6129],"n allow the ":[6129]," allow the c":[6129],"allow the cu":[6129],"llow the cus":[6129],"low the cust":[6129],"ow the custo":[6129],"w the custom":[6129],"the custom t":[6129,6168],"he custom te":[6129,6168],"e custom tex":[6129,6168],"tom texture ":[6129],"om texture u":[6129],"m texture us":[6129],"texture user":[6129],"exture user ":[6129],"xture user t":[6129],"ture user to":[6129],"ure user to ":[6129],"re user to m":[6129]," user to mod":[6129],"user to modi":[6129],"ser to modif":[6129],"er to modify":[6129],"o modify thi":[6129]," modify this":[6129],"modify this ":[6129],"odify this v":[6129],"dify this va":[6129],"ify this val":[6129],"fy this valu":[6129],"y this value":[6129],"this value a":[6129],"his value at":[6129],"is value at ":[6129],"s value at r":[6129]," value at ru":[6129],"value at run":[6129],"alue at runt":[6129],"lue at runti":[6129],"ue at runtim":[6129],"e at runtime":[6129],"at runtime..":[6129],"t runtime...":[6129]," runtime... ":[6129],"runtime... t":[6129],"untime... to":[6129],"ntime... to ":[6129],"time... to c":[6129],"ime... to cu":[6129],"me... to cus":[6129],"e... to cust":[6129],"... to custo":[6129],".. to custom":[6129],". to customi":[6129],"tomize the t":[6129],"omize the te":[6129],"mize the tex":[6129],"ize the text":[6129],"ze the textu":[6129],"uniforms can":[6130],"niforms can ":[6130],"iforms can b":[6130],"forms can be":[6130],"orms can be ":[6130],"rms can be o":[6130],"ms can be of":[6130],"s can be of ":[6130]," can be of t":[6130],"can be of ty":[6130],"an be of typ":[6130],"n be of type":[6130]," be of type:":[6130],"- **float** ":[6132]," **float** (":[6132],"**float** (p":[6132],"*float** (pa":[6132],"float** (par":[6132],"loat** (para":[6132],"oat** (param":[6132],"at** (parame":[6132],"t** (paramet":[6132],"** (paramete":[6132,6133,6134,6135,6136],"* (parameter":[6132,6133,6134,6135,6136]," (parameters":[6132,6133,6134,6135,6136],"(parameters ":[6132],"rameters : v":[6132],"ameters : va":[6132],"meters : val":[6132],"eters : valu":[6132],"ters : value":[6132],"ers : value)":[6132],"- **vector2*":[6133]," **vector2**":[6133],"**vector2** ":[6133],"*vector2** (":[6133],"vector2** (p":[6133],"ector2** (pa":[6133],"ctor2** (par":[6133],"tor2** (para":[6133],"or2** (param":[6133],"r2** (parame":[6133],"2** (paramet":[6133],"(parameters:":[6133,6134,6135,6136],"arameters: x":[6133,6134],"rameters: x,":[6133,6134],"ameters: x, ":[6133,6134],"meters: x, y":[6133,6134],"eters: x, y)":[6133],"- **vector3*":[6134],"**vector3** ":[6134],"*vector3** (":[6134],"vector3** (p":[6134],"ector3** (pa":[6134],"ctor3** (par":[6134],"tor3** (para":[6134],"or3** (param":[6134,6135],"r3** (parame":[6134,6135],"3** (paramet":[6134,6135],"eters: x, y,":[6134],"ters: x, y, ":[6134],"ers: x, y, z":[6134],"rs: x, y, z)":[6134],"- **color3**":[6135]," **color3** ":[6135],"**color3** (":[6135],"*color3** (p":[6135],"color3** (pa":[6135],"olor3** (par":[6135],"lor3** (para":[6135],"arameters: r":[6135,6136],"rameters: r,":[6135,6136],"ameters: r, ":[6135,6136],"meters: r, g":[6135,6136],"eters: r, g,":[6135,6136],"ters: r, g, ":[6135,6136],"ers: r, g, b":[6135,6136],"rs: r, g, b)":[6135],"- **color4**":[6136]," **color4** ":[6136],"**color4** (":[6136],"*color4** (p":[6136],"color4** (pa":[6136],"olor4** (par":[6136],"lor4** (para":[6136],"or4** (param":[6136],"r4** (parame":[6136],"4** (paramet":[6136],"rs: r, g, b,":[6136],"s: r, g, b, ":[6136],": r, g, b, a":[6136]," r, g, b, a)":[6136],"**textures2d":[6137],"*textures2d*":[6137],"textures2d**":[6137],"extures2d** ":[6137],"xtures2d** a":[6137],"tures2d** ar":[6137],"ures2d** are":[6137],"res2d** are ":[6137],"es2d** are 2":[6137],"s2d** are 2d":[6137],"2d** are 2d ":[6137],"d** are 2d i":[6137],"** are 2d im":[6137],"* are 2d ima":[6137],"re 2d image ":[6137],"e 2d image f":[6137]," 2d image fi":[6137],"2d image fil":[6137],"d image file":[6137]," image files":[6137],"image files ":[6137],"mage files t":[6137],"age files th":[6137],"ge files tha":[6137],"e files that":[6137]," files that ":[6137],"files that a":[6137],"iles that ar":[6137],"les that are":[6137],"that are pas":[6137],"hat are pass":[6137],"at are passe":[6137],"t are passed":[6137],"are passed t":[6137],"re passed to":[6137],"sed to the s":[6137,6218],"hader code a":[6137],"ader code as":[6137],"der code as ":[6137],"er code as *":[6137],"r code as **":[6137]," code as **s":[6137],"code as **sa":[6137],"ode as **sam":[6137],"de as **samp":[6137],"e as **sampl":[6137]," as **sample":[6137],"as **sampler":[6137],"s **sampler2":[6137]," **sampler2d":[6137],"**sampler2d*":[6137],"*sampler2d**":[6137],"sampler2d** ":[6137],"ampler2d** v":[6137],"mpler2d** va":[6137],"pler2d** var":[6137],"ler2d** vari":[6137],"er2d** varia":[6137],"r2d** variab":[6137],"2d** variabl":[6137],"d** variable":[6137],"** variables":[6137],"* variables.":[6137]," variables. ":[6137],"variables. t":[6137],"ariables. th":[6137],"riables. the":[6137],"iables. they":[6137],"ables. they ":[6137],"bles. they c":[6137],"les. they ca":[6137],"es. they can":[6137],"s. they can ":[6137],". they can b":[6137],"hey can be r":[6137],"ey can be re":[6137],"y can be rea":[6137]," can be read":[6137],"can be read ":[6137],"an be read b":[6137],"n be read by":[6137]," be read by ":[6137],"be read by t":[6137],"e read by th":[6137],"ead by the s":[6137],"ad by the sh":[6137],"by the shade":[6137],"y the shader":[6137],"ader code an":[6137],"der code and":[6137],"er code and ":[6137],"r code and b":[6137]," code and be":[6137],"code and be ":[6137],"ode and be u":[6137],"de and be us":[6137],"e and be use":[6137]," and be used":[6137],"and be used ":[6137],"nd be used t":[6137],"e used to cr":[6137],"create the f":[6137],"reate the fi":[6137],"eate the fin":[6137],"ate the fina":[6137],"te the final":[6137]," the final p":[6137],"the final pi":[6137],"he final pix":[6137],"e final pixe":[6137]," final pixel":[6137],"final pixel ":[6137],"inal pixel c":[6137],"nal pixel co":[6137],"al pixel col":[6137],"l pixel colo":[6137]," pixel color":[6137],"pixel color.":[6137],"ixel color. ":[6137],"xel color. y":[6137],"el color. yo":[6137],"l color. you":[6137]," color. you ":[6137],"color. you o":[6137],"olor. you on":[6137],"lor. you onl":[6137],"or. you only":[6137],"r. you only ":[6137],". you only n":[6137]," you only ne":[6137],"you only nee":[6137],"ou only need":[6137],"u only need ":[6137]," only need t":[6137],"only need to":[6137],"nly need to ":[6137],"ly need to p":[6137],"y need to pr":[6137]," provide a n":[6137],"provide a na":[6137],"rovide a nam":[6137],"ovide a name":[6137],"vide a name ":[6137],"ide a name a":[6137],"de a name an":[6137],"e a name and":[6137]," a name and ":[6137],"a name and t":[6137]," name and th":[6137],"name and the":[6137],"ame and the ":[6137],"me and the r":[6137],"e and the re":[6137]," and the rel":[6137],"and the rela":[6137],"nd the relat":[6137],"d the relati":[6137]," the relativ":[6137,6168],"the relative":[6137,6168],"he relative ":[6137,6168],"e relative p":[6137,6168]," relative pa":[6137,6168],"relative pat":[6137,6168],"elative path":[6137,6168],"lative path ":[6137,6168],"ative path i":[6137],"tive path in":[6137],"ive path ins":[6137],"ve path insi":[6137],"e path insid":[6137]," path inside":[6137],"path inside ":[6137],"ath inside t":[6137],"th inside th":[6137],"nside the fo":[6137],"side the fol":[6137],"ide the fold":[6137],"de the folde":[6137],"e the folder":[6137]," the folder.":[6137],"the **custom":[6138],"he **custom.":[6138],"e **custom.f":[6138]," **custom.fr":[6138],"**custom.fra":[6138],"*custom.frag":[6138],"fragment.fx*":[6138],"ragment.fx**":[6138],"agment.fx** ":[6138],"gment.fx** f":[6138],"ment.fx** fi":[6138],"ent.fx** fil":[6138],"nt.fx** file":[6138],"t.fx** file ":[6138],".fx** file c":[6138],"fx** file co":[6138],"x** file con":[6138],"** file cont":[6138],"* file conta":[6138],"ile contains":[6138],"le contains ":[6138],"e contains t":[6138],"ntains the g":[6138],"tains the gl":[6138],"ains the gls":[6138],"ins the glsl":[6138],"ns the glsl ":[6138],"s the glsl c":[6138]," the glsl co":[6138],"the glsl cod":[6138],"he glsl code":[6138],"e glsl code.":[6138]," glsl code. ":[6138],"glsl code. t":[6138],"lsl code. th":[6138],"sl code. the":[6138],"l code. the ":[6138]," code. the p":[6138],"code. the pu":[6138],"ode. the pur":[6138],"de. the purp":[6138],"e. the purpo":[6138],". the purpos":[6138],"purpose of t":[6138],"urpose of th":[6138],"rpose of thi":[6138],"pose of this":[6138],"ose of this ":[6138],"se of this w":[6138],"e of this wi":[6138]," of this wik":[6138],"of this wiki":[6138],"f this wiki ":[6138]," this wiki a":[6138],"this wiki ar":[6138],"his wiki art":[6138],"is wiki arti":[6138],"s wiki artic":[6138]," wiki articl":[6138],"wiki article":[6138],"iki article ":[6138],"ki article i":[6138],"i article is":[6138]," article is ":[6138],"article is n":[6138],"rticle is no":[6138],"ticle is not":[6138],"icle is not ":[6138],"cle is not t":[6138],"le is not to":[6138],"e is not to ":[6138]," is not to t":[6138],"is not to te":[6138],"s not to tea":[6138]," not to teac":[6138],"not to teach":[6138],"ot to teach ":[6138],"t to teach y":[6138]," teach you h":[6138],"teach you ho":[6138],"each you how":[6138],"ach you how ":[6138],"ch you how t":[6138],"h you how to":[6138],"you how to c":[6138],"ou how to cr":[6138],"u how to cre":[6138]," create a fr":[6138],"create a fra":[6138],"reate a frag":[6138],"eate a fragm":[6138],"ate a fragme":[6138],"te a fragmen":[6138],"ent shader o":[6138],"nt shader or":[6138],"t shader or ":[6138]," shader or h":[6138],"shader or ho":[6138],"hader or how":[6138],"ader or how ":[6138],"der or how i":[6138],"er or how it":[6138],"r or how it ":[6138]," or how it w":[6138],"or how it wo":[6138],"r how it wor":[6138],"ow it works.":[6138],"w it works. ":[6138]," it works. y":[6138],"it works. yo":[6138],"t works. you":[6138]," works. you ":[6138],"works. you s":[6138],"orks. you si":[6138],"rks. you sim":[6138],"ks. you simp":[6138],"s. you simpl":[6138],". you simply":[6138],"ly need to k":[6138],"y need to kn":[6138],"w that the c":[6138],"t the code c":[6138]," the code co":[6138,6520],"the code con":[6138],"he code cont":[6138],"e code conta":[6138]," code contai":[6138],"code contain":[6138],"ode containe":[6138],"de contained":[6138],"ntained in y":[6138],"tained in yo":[6138],"ained in you":[6138],"ined in your":[6138],"ned in your ":[6138]," in your mai":[6138],"in your main":[6138],"n your main ":[6138]," your main f":[6138],"your main fu":[6138],"our main fun":[6138],"ur main func":[6138],"r main funct":[6138],"n function w":[6138],"e called onc":[6138]," called once":[6138],"called once ":[6138],"alled once f":[6138],"lled once fo":[6138],"led once for":[6138],"ed once for ":[6138],"d once for e":[6138]," once for ea":[6138],"once for eac":[6138],"nce for each":[6138],"ce for each ":[6138]," for each pi":[6138],"for each pix":[6138],"or each pixe":[6138],"r each pixel":[6138],"each pixel t":[6138],"ach pixel to":[6138],"ch pixel to ":[6138],"h pixel to c":[6138]," pixel to cr":[6138],"pixel to cre":[6138],"ixel to crea":[6138],"xel to creat":[6138],"el to create":[6138],"o create on ":[6138]," create on t":[6138],"create on th":[6138],"reate on the":[6138],"eate on the ":[6138],"ate on the t":[6138],"te on the te":[6138],"e on the tex":[6138]," on the text":[6138],"on the textu":[6138]," texture. in":[6138],"texture. in ":[6138],"exture. in t":[6138],"xture. in th":[6138],"ture. in thi":[6138],"ure. in this":[6138],"re. in this ":[6138],"e. in this m":[6138],". in this ma":[6138]," in this mai":[6138],"in this main":[6138],"n this main ":[6138]," this main f":[6138],"this main fu":[6138],"his main fun":[6138],"is main func":[6138],"s main funct":[6138],"in function,":[6138],"ction, you o":[6138],"tion, you on":[6138],"ion, you onl":[6138],"on, you only":[6138],"n, you only ":[6138],"y know the c":[6138]," know the co":[6138],"know the coo":[6138],"now the coor":[6138],"ow the coord":[6138],"w the coordi":[6138],"tes of the c":[6138],"es of the cu":[6138],"s of the cur":[6138],"e current pi":[6138]," current pix":[6138],"current pixe":[6138],"urrent pixel":[6138],"rrent pixel ":[6138],"rent pixel i":[6138],"ent pixel in":[6138],"nt pixel in ":[6138],"t pixel in t":[6138]," pixel in th":[6138],"pixel in the":[6138],"ixel in the ":[6138],"xel in the f":[6138],"el in the fi":[6138],"l in the fin":[6138]," in the fina":[6138],"in the final":[6138],"n the final ":[6138]," the final t":[6138],"the final te":[6138],"he final tex":[6138],"e final text":[6138]," final textu":[6138],"final textur":[6138],"inal texture":[6138],"nal texture.":[6138],"s a simple c":[6139],"a simple cod":[6139]," simple code":[6139],"simple code ":[6139],"imple code w":[6139],"mple code wh":[6139],"ple code whi":[6139],"le code whic":[6139],"e code which":[6139]," code which ":[6139],"code which i":[6139],"ode which is":[6139],"de which is ":[6139],"e which is s":[6139]," which is se":[6139],"which is set":[6139],"hich is sett":[6139],"ich is setti":[6139],"ch is settin":[6139],"h is setting":[6139],"s setting al":[6139]," setting all":[6139],"setting all ":[6139],"etting all p":[6139],"tting all pi":[6139],"ting all pix":[6139],"ing all pixe":[6139],"ng all pixel":[6139],"g all pixels":[6139]," all pixels ":[6139],"all pixels t":[6139],"ll pixels to":[6139],"l pixels to ":[6139]," pixels to a":[6139],"pixels to a ":[6139],"ixels to a s":[6139],"xels to a sp":[6139],"els to a spe":[6139],"ls to a spec":[6139],"s to a speci":[6139],"a specific g":[6139]," specific gr":[6139],"specific gra":[6139],"pecific gray":[6139],"ecific gray.":[6139],"    #ifdef g":[6141,6153,6195],"   #ifdef gl":[6141,6153,6195],"  #ifdef gl_":[6141,6153,6195]," #ifdef gl_e":[6141,6153,6195],"    precisio":[6142,6154,6196],"   precision":[6142,6154,6196],"  precision ":[6142,6154,6196]," precision h":[6142,6154,6196],"    void mai":[6145,6163,6199],"   void main":[6145,6163,6199],"  void main(":[6145,6163,6199]," void main(v":[6145,6163,6199],"main(void) {":[6145,6163,6181,6199],"     vec3 co":[6146,6164],"    vec3 col":[6146,6164],"   vec3 colo":[6146,6164],"  vec3 color":[6146,6164]," vec3 color ":[6146,6164],"vec3 color =":[6146,6164],"ec3 color = ":[6146,6164],"c3 color = v":[6146],"3 color = ve":[6146]," color = vec":[6146],"color = vec3":[6146],"olor = vec3(":[6146],"lor = vec3(0":[6146],"or = vec3(0.":[6146],"r = vec3(0.9":[6146]," = vec3(0.9,":[6146],"= vec3(0.9, ":[6146]," vec3(0.9, 0":[6146],"vec3(0.9, 0.":[6146],"ec3(0.9, 0.9":[6146],"c3(0.9, 0.9,":[6146],".9, 0.9, 0.9":[6146],"9, 0.9, 0.9)":[6146],", 0.9, 0.9);":[6146],"     gl_frag":[6147,6165,6200],"    gl_fragc":[6147,6165,6200],"   gl_fragco":[6147,6165,6200],"  gl_fragcol":[6147,6165,6200]," gl_fragcolo":[6147,6165,6182,6200],"gl_fragcolor":[6147,6150,6165,6182,6200,6406],"l_fragcolor ":[6147,6150,6165,6182,6200,6406],"_fragcolor =":[6147,6165,6182,6200,6406],"fragcolor = ":[6147,6165,6182,6200,6406],"ragcolor = v":[6147,6165,6182,6200],"agcolor = ve":[6147,6165,6182,6200],"gcolor = vec":[6147,6165,6182,6200],"color = vec4":[6147,6165,6182,6200],"olor = vec4(":[6147,6165,6182,6200],"lor = vec4(c":[6147,6165],"or = vec4(co":[6147,6165],"r = vec4(col":[6147,6165]," = vec4(colo":[6147,6165],"= vec4(color":[6147,6165]," vec4(color,":[6147,6165],"vec4(color, ":[6147,6165],"ec4(color, 1":[6147,6165],"c4(color, 1.":[6147,6165],"4(color, 1.0":[6147,6165],"(color, 1.0)":[6147,6165],"color, 1.0);":[6147,6165],"_fragcolor i":[6150],"fragcolor is":[6150],"ragcolor is ":[6150],"agcolor is t":[6150],"gcolor is th":[6150],"olor is the ":[6150],"lor is the v":[6150],"or is the va":[6150],"r is the var":[6150]," is the vari":[6150],"is the varia":[6150],"s the variab":[6150],"he variable ":[6150,6676],"e variable i":[6150]," variable in":[6150],"variable in ":[6150],"ariable in w":[6150],"riable in wh":[6150],"iable in whi":[6150],"able in whic":[6150],"ble in which":[6150],"le in which ":[6150],"e in which y":[6150]," in which yo":[6150,6398],"in which you":[6150,6398],"n which you ":[6150]," which you p":[6150],"which you pu":[6150],"hich you put":[6150],"ich you put ":[6150],"ch you put t":[6150],"h you put th":[6150]," you put the":[6150],"you put the ":[6150],"ou put the c":[6150],"u put the co":[6150]," put the col":[6150],"put the colo":[6150],"ut the color":[6150],"t the color ":[6150],"the color ob":[6150],"he color obj":[6150],"e color obje":[6150]," color objec":[6150],"color object":[6150],"olor object ":[6150],"lor object y":[6150],"or object yo":[6150],"r object you":[6150]," object you ":[6150],"object you w":[6150],"bject you wa":[6150],"ject you wan":[6150],"ect you want":[6150],"ct you want ":[6150],"u want the p":[6150]," want the pi":[6150],"want the pix":[6150],"ant the pixe":[6150],"nt the pixel":[6150],"t the pixel ":[6150]," the pixel t":[6150],"the pixel to":[6150],"he pixel to ":[6150],"e pixel to b":[6150]," pixel to be":[6150],"pixel to be.":[6150]," is a more c":[6151],"is a more co":[6151],"s a more com":[6151],"re complex e":[6151],"e complex ex":[6151]," complex exa":[6151],"complex exam":[6151],"omplex examp":[6151],"mplex exampl":[6151],"plex example":[6151],"lex example ":[6151],"ex example u":[6151],"x example us":[6151]," example usi":[6151],"example usin":[6151],"xample using":[6151],"mple using 2":[6151],"ple using 2 ":[6151],"le using 2 s":[6151],"e using 2 sa":[6151]," using 2 sam":[6151],"using 2 samp":[6151],"sing 2 sampl":[6151],"ing 2 sample":[6151],"ng 2 sampler":[6151],"g 2 samplers":[6151]," 2 samplers ":[6151],"2 samplers a":[6151]," samplers an":[6151],"samplers and":[6151],"amplers and ":[6151],"mplers and m":[6151],"plers and mi":[6151],"lers and mix":[6151],"ers and mixi":[6151],"rs and mixin":[6151],"s and mixing":[6151]," and mixing ":[6151],"and mixing t":[6151],"nd mixing th":[6151],"d mixing the":[6151]," mixing thei":[6151],"mixing their":[6151],"ixing their ":[6151],"xing their c":[6151],"ing their co":[6151],"ng their col":[6151],"g their colo":[6151],"heir color e":[6151],"eir color eq":[6151],"ir color equ":[6151],"r color equa":[6151]," color equal":[6151],"color equall":[6151],"olor equally":[6151],"lor equally.":[6151],"or equally. ":[6151],"    varying ":[6157,6158,6198],"   varying v":[6157,6158,6198],"  varying ve":[6157,6158,6198]," varying vec":[6157,6158,6198],"ying vec2 vp":[6157],"ing vec2 vpo":[6157],"ng vec2 vpos":[6157],"g vec2 vposi":[6157]," vec2 vposit":[6157],"vec2 vpositi":[6157],"ec2 vpositio":[6157],"c2 vposition":[6157],"2 vposition;":[6157],"    uniform ":[6160,6161],"   uniform s":[6160,6161],"  uniform sa":[6160,6161]," uniform sam":[6160,6161]," sampler2d g":[6160],"sampler2d gr":[6160],"ampler2d gra":[6160],"mpler2d gras":[6160],"pler2d grass":[6160],"ler2d grass;":[6160]," sampler2d d":[6161],"sampler2d di":[6161],"ampler2d dir":[6161],"mpler2d dirt":[6161],"pler2d dirt;":[6161],"c3 color = m":[6164],"3 color = mi":[6164]," color = mix":[6164],"color = mix(":[6164],"olor = mix(t":[6164],"lor = mix(te":[6164],"or = mix(tex":[6164],"r = mix(text":[6164]," = mix(textu":[6164],"= mix(textur":[6164]," mix(texture":[6164],"mix(texture2":[6164],"ix(texture2d":[6164],"x(texture2d(":[6164],"(texture2d(d":[6164],"texture2d(di":[6164],"exture2d(dir":[6164],"xture2d(dirt":[6164],"ture2d(dirt,":[6164],"ure2d(dirt, ":[6164],"re2d(dirt, v":[6164],"e2d(dirt, vu":[6164],"2d(dirt, vuv":[6164],"d(dirt, vuv)":[6164],"(dirt, vuv).":[6164],"dirt, vuv).x":[6164],"irt, vuv).xy":[6164],"rt, vuv).xyz":[6164],"t, vuv).xyz,":[6164],", vuv).xyz, ":[6164]," vuv).xyz, t":[6164],"vuv).xyz, te":[6164],"uv).xyz, tex":[6164],"v).xyz, text":[6164],").xyz, textu":[6164],".xyz, textur":[6164],"xyz, texture":[6164],"yz, texture2":[6164],"z, texture2d":[6164],", texture2d(":[6164]," texture2d(g":[6164],"texture2d(gr":[6164],"exture2d(gra":[6164],"xture2d(gras":[6164],"ture2d(grass":[6164],"ure2d(grass,":[6164],"re2d(grass, ":[6164],"e2d(grass, v":[6164],"2d(grass, vu":[6164],"d(grass, vuv":[6164],"(grass, vuv)":[6164],"grass, vuv).":[6164],"rass, vuv).x":[6164],"ass, vuv).xy":[6164],"ss, vuv).xyz":[6164],"s, vuv).xyz,":[6164]," vuv).xyz, 0":[6164],"vuv).xyz, 0.":[6164],"uv).xyz, 0.5":[6164],"v).xyz, 0.5)":[6164],").xyz, 0.5);":[6164],"o use this c":[6168]," use this cu":[6168],"use this cus":[6168],"se this cust":[6168],"e this custo":[6168]," this custom":[6168],"his custom t":[6168],"is custom te":[6168],"s custom tex":[6168],"tom texture,":[6168],"om texture, ":[6168],"m texture, y":[6168],"ou need to m":[6168,6724],"u need to ma":[6168,6724]," need to mak":[6168,6724],"need to make":[6168,6724],"eed to make ":[6168,6724],"ed to make y":[6168],"d to make yo":[6168]," to make you":[6168,6511,6717,6724],"to make your":[6168,6511,6717,6724],"o make your ":[6168,6511,6717,6724]," make your f":[6168],"make your fo":[6168],"ake your fol":[6168],"ke your fold":[6168],"e your folde":[6168]," your folder":[6168],"your folder ":[6168],"our folder a":[6168],"ur folder av":[6168],"r folder ava":[6168]," folder avai":[6168],"folder avail":[6168],"older availa":[6168],"lder availab":[6168],"der availabl":[6168],"ailable to y":[6168],"ilable to yo":[6168],"lable to you":[6168],"able to your":[6168],"ble to your ":[6168],"le to your b":[6168],"e to your ba":[6168]," to your bab":[6168],"to your baby":[6168],"o your babyl":[6168],"our babylon.":[6168],"ur babylon.j":[6168],"r babylon.js":[6168],"lon.js html/":[6168],"on.js html/j":[6168],"n.js html/ja":[6168],".js html/jav":[6168],"js html/java":[6168],"s html/javas":[6168]," html/javasc":[6168],"html/javascr":[6168],"tml/javascri":[6168],"ml/javascrip":[6168],"l/javascript":[6168],"/javascript ":[6168],"ipt files an":[6168],"pt files and":[6168],"t files and ":[6168]," files and u":[6168],"files and us":[6168],"iles and use":[6168],"les and use ":[6168],"es and use a":[6168],"s and use a ":[6168]," and use a *":[6168],"and use a **":[6168],"nd use a **c":[6168],"d use a **cu":[6168]," use a **cus":[6168],"use a **cust":[6168],"se a **custo":[6168],"e a **custom":[6168]," a **customp":[6168],"a **custompr":[6168]," **custompro":[6168],"**customproc":[6168],"*customproce":[6168],"altexture** ":[6168],"ltexture** c":[6168],"texture** cl":[6168],"exture** cla":[6168],"xture** clas":[6168],"ture** class":[6168],"ure** class ":[6168],"re** class i":[6168],"e** class in":[6168],"** class ins":[6168],"* class inst":[6168]," class inste":[6168],"class instea":[6168],"lass instead":[6168],"ass instead ":[6168],"ss instead o":[6168],"instead of a":[6168],"nstead of a ":[6168],"stead of a s":[6168],"tead of a st":[6168],"ead of a sta":[6168],"ad of a stan":[6168],"d of a stand":[6168]," of a standa":[6168],"of a standar":[6168],"f a standard":[6168],"a standard o":[6168]," standard on":[6168],"standard one":[6168],"tandard one.":[6168],"andard one. ":[6168],"ndard one. t":[6168],"dard one. th":[6168],"ard one. the":[6168],"rd one. the ":[6168],"d one. the d":[6168]," one. the di":[6168],"one. the dif":[6168],"ne. the diff":[6168],"e. the diffe":[6168],". the differ":[6168],"he differenc":[6168],"e difference":[6168],"difference i":[6168],"ifference is":[6168],"fference is ":[6168],"ference is o":[6168],"erence is on":[6168],"rence is onl":[6168],"ence is only":[6168],"nce is only ":[6168],"ce is only t":[6168],"e is only th":[6168]," is only tha":[6168],"is only that":[6168],"s only that ":[6168]," only that y":[6168],"only that yo":[6168],"nly that you":[6168],"ly that you ":[6168],"y that you s":[6168]," that you sp":[6168],"that you spe":[6168],"hat you spec":[6168],"at you speci":[6168],"t you specif":[6168]," you specify":[6168],"you specify ":[6168],"ou specify a":[6168],"u specify a ":[6168]," specify a n":[6168],"specify a ne":[6168],"pecify a new":[6168],"ecify a new ":[6168],"cify a new p":[6168],"ify a new pa":[6168],"fy a new par":[6168],"y a new para":[6168],"parameter wh":[6168],"arameter whi":[6168],"rameter whic":[6168],"ameter which":[6168],"meter which ":[6168],"eter which i":[6168],"ter which is":[6168],"er which is ":[6168],"r which is t":[6168],"ich is the r":[6168],"ch is the re":[6168],"h is the rel":[6168]," is the rela":[6168],"is the relat":[6168],"s the relati":[6168],"ative path t":[6168],"tive path to":[6168],"ive path to ":[6168],"ve path to t":[6168],"ath to the f":[6168,6187],"th to the fo":[6168],"h to the fol":[6168]," to the fold":[6168],"to the folde":[6168],"o the folder":[6168]," the folder ":[6168,6717],"the folder c":[6168],"he folder co":[6168],"e folder con":[6168],"aining the c":[6168],"ining the cu":[6168],"ning the cus":[6168],"ing the cust":[6168],"ng the custo":[6168],"g the custom":[6168],"tom texture.":[6168],"om texture. ":[6168],"m texture. b":[6168]," texture. ba":[6168],"texture. bab":[6168],"exture. baby":[6168],"xture. babyl":[6168],"ture. babylo":[6168],"ure. babylon":[6168],"re. babylon.":[6168],"on.js will a":[6168,6186],"n.js will au":[6168,6186],".js will aut":[6168,6186],"js will auto":[6168,6186],"ically read ":[6168],"cally read t":[6168],"ally read th":[6168],"read the con":[6168],"ead the conf":[6168],"ad the confi":[6168],"d the config":[6168]," the config.":[6168,7096],"the config.j":[6168,7096],"he config.js":[6168,7096],"e config.jso":[6168,7096],"config.json ":[6168,7096],"onfig.json a":[6168],"nfig.json an":[6168],"fig.json and":[6168],"ig.json and ":[6168],"g.json and c":[6168],".json and cu":[6168],"json and cus":[6168],"son and cust":[6168],"on and custo":[6168],"n and custom":[6168]," and custom.":[6168],"and custom.f":[6168],"nd custom.fr":[6168],"d custom.fra":[6168],"ent.fx files":[6168],"nt.fx files ":[6168],"t.fx files a":[6168],".fx files an":[6168],"fx files and":[6168],"x files and ":[6168]," files and l":[6168],"files and lo":[6168],"iles and loa":[6168],"les and load":[6168],"es and load ":[6168],"s and load e":[6168]," and load ev":[6168],"and load eve":[6168],"nd load ever":[6168],"d load every":[6168]," load everyt":[6168],"load everyth":[6168],"oad everythi":[6168],"ad everythin":[6168],"everything f":[6168],"verything fo":[6168],"erything for":[6168],"rything for ":[6168],"ything for y":[6168],"thing for yo":[6168],"hing for you":[6168],"ing for you.":[6168]," babylon.cus":[6170,6189,7094],"\"texture\", \"":[6170],"texture\", \".":[6170],"exture\", \"./":[6170],"xture\", \"./p":[6170],"ture\", \"./pa":[6170],"ure\", \"./pat":[6170],"re\", \"./path":[6170],"e\", \"./patht":[6170],"\", \"./pathto":[6170],", \"./pathtot":[6170]," \"./pathtote":[6170],"\"./pathtotex":[6170],"./pathtotext":[6170],"/pathtotextu":[6170],"pathtotextur":[6170],"athtotexture":[6170],"thtotexture\"":[6170],"htotexture\",":[6170],"totexture\", ":[6170],"otexture\", 1":[6170],"## using a s":[6172],"# using a sh":[6172]," using a sha":[6172],"using a shad":[6172],"sing a shade":[6172],"ing a shader":[6172],"ng a shaders":[6172],"g a shaderst":[6172],"haderstore f":[6172],"aderstore fo":[6172],"derstore for":[6172],"erstore for ":[6172],"rstore for s":[6172],"store for sh":[6172],"tore for sha":[6172],"ore for shad":[6172],"re for shade":[6172],"e for shader":[6172]," for shader ":[6172,6191],"for shader s":[6172,6191],"or shader st":[6172,6191],"r shader sto":[6172,6191],"shader stora":[6172,6191],"hader storag":[6172,6191],"ader storage":[6172,6191],"der storage ":[6172,6191],"er storage #":[6172,6191],"r storage ##":[6172,6191]," storage ###":[6172,6191],"n also use t":[6173,6435]," also use th":[6173,6435],"also use the":[6173,6435],"lso use the ":[6173,6435],"so use the s":[6173],"o use the sh":[6173]," use the sha":[6173],"use the shad":[6173],"se the shade":[6173],"the shaderst":[6173],"he shadersto":[6173],"e shaderstor":[6173],"haderstore t":[6173],"aderstore to":[6173],"derstore to ":[6173],"erstore to w":[6173],"rstore to wr":[6173],"store to wri":[6173],"tore to writ":[6173],"ore to write":[6173],"re to write ":[6173],"e to write a":[6173],"to write a s":[6173],"o write a sh":[6173]," write a sha":[6173],"write a shad":[6173],"rite a shade":[6173],"ite a shader":[6173],"te a shader ":[6173],"e a shader i":[6173]," a shader in":[6173],"a shader inl":[6173]," shader inli":[6173],"shader inlin":[6173],"hader inline":[6173],"ader inline ":[6173],"der inline a":[6173],"er inline an":[6173],"r inline and":[6173]," inline and ":[6173],"inline and u":[6173],"nline and us":[6173],"line and use":[6173],"ine and use ":[6173],"ne and use i":[6173],"and use it i":[6173],"nd use it in":[6173],"d use it in ":[6173]," use it in a":[6173],"use it in a ":[6173],"se it in a c":[6173],"e it in a cu":[6173]," it in a cus":[6173],"it in a cust":[6173],"t in a custo":[6173]," in a custom":[6173],"in a customp":[6173],"n a custompr":[6173]," a custompro":[6173,6187],"a customproc":[6173,6187]," customproce":[6173,6187,7096],"an be done e":[6174],"n be done ea":[6174]," be done eas":[6174],"be done easi":[6174],"e done easil":[6174]," done easily":[6174],"done easily ":[6174],"one easily u":[6174],"ne easily us":[6174],"e easily usi":[6174]," easily usin":[6174],"easily using":[6174],"asily using ":[6174],"sily using t":[6174],"ily using th":[6174],"ing the **ba":[6174],"ng the **bab":[6174],"g the **baby":[6174]," the **babyl":[6174],"the **babylo":[6174],"he **babylon":[6174],"e **babylon.":[6174]," **babylon.e":[6174],"**babylon.ef":[6174],"*babylon.eff":[6174],"ect.shaderst":[6174],"ct.shadersto":[6174],"t.shaderstor":[6174],".shaderstore":[6174],"shaderstore*":[6174],"haderstore**":[6174],"aderstore** ":[6174],"derstore** a":[6174],"erstore** ar":[6174],"rstore** arr":[6174],"store** arra":[6174],"tore** array":[6174],"ore** array ":[6174],"re** array :":[6174],"e** array : ":[6174],"dersstore[\"l":[6176],"ersstore[\"li":[6176],"rsstore[\"lin":[6176],"sstore[\"line":[6176],"store[\"lines":[6176],"tore[\"linesp":[6176],"ore[\"linespi":[6176],"re[\"linespix":[6176],"e[\"linespixe":[6176],"[\"linespixel":[6176],"\"linespixels":[6176,6194],"linespixelsh":[6176,6194,7093],"inespixelsha":[6176,6194,7093],"nespixelshad":[6176,6194,7093],"espixelshade":[6176,6194,7093],"spixelshader":[6176,6194,7093],"pixelshader\"":[6176,6194],"ixelshader\"]":[6176],"xelshader\"] ":[6176],"elshader\"] =":[6176],"       \"#ifd":[6177],"      \"#ifde":[6177],"     \"#ifdef":[6177],"    \"#ifdef ":[6177],"   \"#ifdef g":[6177],"  \"#ifdef gl":[6177]," \"#ifdef gl_":[6177],"\"#ifdef gl_e":[6177],"ifdef gl_es\\":[6177],"fdef gl_es\\n":[6177],"def gl_es\\n\"":[6177],"ef gl_es\\n\" ":[6177],"f gl_es\\n\" +":[6177],"       \"prec":[6178],"      \"preci":[6178],"     \"precis":[6178],"    \"precisi":[6178],"   \"precisio":[6178],"  \"precision":[6178]," \"precision ":[6178],"\"precision h":[6178],"ighp float;\\":[6178],"ghp float;\\n":[6178],"hp float;\\n\"":[6178],"p float;\\n\" ":[6178]," float;\\n\" +":[6178],"       \"#end":[6179],"      \"#endi":[6179],"     \"#endif":[6179],"    \"#endif\\":[6179],"   \"#endif\\n":[6179],"  \"#endif\\n\\":[6179]," \"#endif\\n\\n":[6179],"\"#endif\\n\\n\"":[6179],"#endif\\n\\n\" ":[6179],"endif\\n\\n\" +":[6179],"       \"vary":[6180],"      \"varyi":[6180],"     \"varyin":[6180],"    \"varying":[6180],"   \"varying ":[6180],"  \"varying v":[6180]," \"varying ve":[6180],"\"varying vec":[6180],"g vec2 vuv; ":[6180,6198]," vec2 vuv; \\":[6180],"vec2 vuv; \\n":[6180],"ec2 vuv; \\n\"":[6180],"c2 vuv; \\n\" ":[6180],"2 vuv; \\n\" +":[6180],"       \"void":[6181],"      \"void ":[6181],"     \"void m":[6181],"    \"void ma":[6181],"   \"void mai":[6181],"  \"void main":[6181]," \"void main(":[6181],"\"void main(v":[6181],"ain(void) {\\":[6181],"in(void) {\\n":[6181],"n(void) {\\n\"":[6181],"(void) {\\n\" ":[6181],"void) {\\n\" +":[6181],"       \" gl_":[6182],"      \" gl_f":[6182],"     \" gl_fr":[6182],"    \" gl_fra":[6182],"   \" gl_frag":[6182],"  \" gl_fragc":[6182]," \" gl_fragco":[6182],"\" gl_fragcol":[6182],"lor = vec4(v":[6182,6200],"or = vec4(vu":[6182,6200],"r = vec4(vuv":[6182,6200]," = vec4(vuv.":[6182,6200],"= vec4(vuv.x":[6182,6200]," vec4(vuv.x,":[6182,6200],"vec4(vuv.x,v":[6182,6200],"ec4(vuv.x,vu":[6182,6200],"c4(vuv.x,vuv":[6182,6200],"4(vuv.x,vuv.":[6182,6200],"(vuv.x,vuv.y":[6182,6200],"vuv.x,vuv.y,":[6182,6200],"uv.x,vuv.y,-":[6182,6200],"v.x,vuv.y,-v":[6182,6200],".x,vuv.y,-vu":[6182,6200],"x,vuv.y,-vuv":[6182,6200],",vuv.y,-vuv.":[6182,6200],"vuv.y,-vuv.x":[6182,6200],"uv.y,-vuv.x,":[6182,6200],"v.y,-vuv.x, ":[6182,6200],".y,-vuv.x, 1":[6182,6200],"y,-vuv.x, 1.":[6182,6200],",-vuv.x, 1.0":[6182,6200],"-vuv.x, 1.0)":[6182,6200],"vuv.x, 1.0);":[6182,6200],"uv.x, 1.0);\\":[6182],"v.x, 1.0);\\n":[6182],".x, 1.0);\\n\"":[6182],"x, 1.0);\\n\" ":[6182],", 1.0);\\n\" +":[6182],"       \"}\\n\"":[6183],"      \"}\\n\" ":[6183],"     \"}\\n\" +":[6183],"te that your":[6186],"at your shad":[6186],"t your shade":[6186],"our shader n":[6186],"ur shader na":[6186],"r shader nam":[6186]," shader name":[6186],"shader name ":[6186],"hader name s":[6186],"ader name sh":[6186],"der name sho":[6186],"er name shou":[6186],"r name shoul":[6186]," name should":[6186],"name should ":[6186],"ame should b":[6186],"me should be":[6186],"should be su":[6186],"hould be suf":[6186],"ould be suff":[6186],"uld be suffi":[6186],"ld be suffix":[6186],"d be suffixe":[6186]," be suffixed":[6186],"be suffixed ":[6186],"e suffixed w":[6186]," suffixed wi":[6186],"suffixed wit":[6186],"uffixed with":[6186],"ffixed with ":[6186],"fixed with *":[6186],"ixed with **":[6186],"xed with **p":[6186],"ed with **pi":[6186],"d with **pix":[6186]," with **pixe":[6186],"with **pixel":[6186],"ith **pixels":[6186],"th **pixelsh":[6186],"h **pixelsha":[6186]," **pixelshad":[6186],"**pixelshade":[6186],"*pixelshader":[6186],"pixelshader*":[6186],"ixelshader**":[6186],"xelshader** ":[6186],"elshader** a":[6186],"lshader** as":[6186],"shader** as ":[6186],"hader** as t":[6186],"ader** as th":[6186],"der** as the":[6186],"er** as the ":[6186],"r** as the p":[6186],"** as the pr":[6186],"* as the pro":[6186]," as the proc":[6186],"as the proce":[6186],"s the proced":[6186]," the procedu":[6186],"the procedur":[6186],"he procedura":[6186],"al texture s":[6186],"l texture sh":[6186]," texture sha":[6186],"texture shad":[6186],"exture shade":[6186],"xture shader":[6186],"ture shader ":[6186],"ure shader i":[6186],"re shader is":[6186],"e shader is ":[6186]," shader is a":[6186],"shader is al":[6186],"hader is alw":[6186],"ader is alwa":[6186],"der is alway":[6186],"er is always":[6186],"r is always ":[6186]," is always a":[6186,6876],"is always a ":[6186,6876],"s always a p":[6186]," always a pi":[6186],"always a pix":[6186],"lways a pixe":[6186],"ways a pixel":[6186],"ays a pixel ":[6186],"ys a pixel s":[6186],"s a pixel sh":[6186]," a pixel sha":[6186],"a pixel shad":[6186],"ixel shader.":[6186],"xel shader. ":[6186],"el shader. b":[6186],"l shader. ba":[6186]," shader. bab":[6186],"shader. baby":[6186],"hader. babyl":[6186],"ader. babylo":[6186],"der. babylon":[6186],"er. babylon.":[6186],"r. babylon.j":[6186],"omatically u":[6186],"matically un":[6186],"atically und":[6186],"tically unde":[6186],"ically under":[6186],"cally unders":[6186],"ally underst":[6186],"lly understa":[6186],"ly understan":[6186,6705],"nderstand it":[6186],"derstand it ":[6186],"erstand it i":[6186],"rstand it is":[6186],"stand it is ":[6186],"tand it is a":[6186],"nd it is a p":[6186],"d it is a pi":[6186]," it is a pix":[6186],"it is a pixe":[6186],"t is a pixel":[6186]," is a pixel ":[6186],"is a pixel s":[6186],"o use this s":[6187]," use this sh":[6187],"use this sha":[6187],"se this shad":[6187],"e this shade":[6187]," this shader":[6187],"this shader,":[6187],"his shader, ":[6187],"is shader, y":[6187],"s shader, yo":[6187]," shader, you":[6187],"shader, you ":[6187],"hader, you j":[6187],"ader, you ju":[6187],"der, you jus":[6187],"er, you just":[6187],"r, you just ":[6187],"t have to cr":[6187,6192,6204]," create a cu":[6187],"create a cus":[6187],"reate a cust":[6187],"eate a custo":[6187],"ate a custom":[6187],"te a customp":[6187],"e a custompr":[6187],"raltexture a":[6187],"altexture an":[6187],"ltexture and":[6187],"exture and p":[6187],"xture and pu":[6187],"ture and put":[6187],"ure and put ":[6187],"re and put t":[6187],"e and put th":[6187]," and put the":[6187,6717],"and put the ":[6187],"nd put the n":[6187],"d put the na":[6187]," put the nam":[6187],"put the name":[6187],"ut the name ":[6187],"he name of y":[6187],"e name of yo":[6187]," name of you":[6187],"name of your":[6187],"ame of your ":[6187],"me of your s":[6187],"e of your sh":[6187],"our shader i":[6187],"ur shader in":[6187],"r shader in ":[6187]," shader in t":[6187],"shader in th":[6187],"hader in the":[6187],"ader in the ":[6187],"der in the s":[6187],"er in the st":[6187],"r in the sto":[6187]," in the stor":[6187],"in the store":[6187],"n the store ":[6187]," the store i":[6187],"the store in":[6187],"he store ins":[6187],"e store inst":[6187]," store inste":[6187],"store instea":[6187],"tore instead":[6187],"ore instead ":[6187],"re instead o":[6187,6400],"e instead of":[6187,6314,6400],"instead of t":[6187,6633],"nstead of th":[6187,6633],"stead of the":[6187,6633],"tead of the ":[6187,6633],"ead of the p":[6187],"ad of the pa":[6187],"d of the pat":[6187],"th to the fi":[6187],"h to the fil":[6187]," to the file":[6187],"to the files":[6187],"o the files.":[6187],"var custompr":[6189,7094],"ar custompro":[6189,7094],"r customproc":[6189,7094]," customproct":[6189,7094],"customprocte":[6189,7094],"ustomproctex":[6189,7094],"stomproctext":[6189,7094],"tomproctext ":[6189,7094],"omproctext =":[6189,7094],"mproctext = ":[6189,7094],"proctext = n":[6189,7094],"roctext = ne":[6189,7094],"octext = new":[6189,7094],"ctext = new ":[6189,7094],"text = new b":[6189,7094],"ext = new ba":[6189,7094],"xt = new bab":[6189,7094],"altexture(\"c":[6189,7094],"ltexture(\"cu":[6189,7094],"texture(\"cus":[6189,7094],"exture(\"cust":[6189,7094],"xture(\"custo":[6189,7094],"ture(\"custom":[6189,7094],"ure(\"customt":[6189,7094],"re(\"customte":[6189,7094],"e(\"customtex":[6189,7094],"(\"customtext":[6189,7094],"\"customtext\"":[6189,7094],"customtext\",":[6189,7094],"ustomtext\", ":[6189,7094],"stomtext\", \"":[6189],"tomtext\", \"l":[6189],"omtext\", \"li":[6189],"mtext\", \"lin":[6189],"text\", \"line":[6189],"ext\", \"lines":[6189],"xt\", \"lines\"":[6189],"t\", \"lines\",":[6189],"\", \"lines\", ":[6189],", \"lines\", 1":[6189]," \"lines\", 10":[6189],"\"lines\", 102":[6189],"lines\", 1024":[6189],"ines\", 1024,":[6189],"nes\", 1024, ":[6189],"es\", 1024, s":[6189],"s\", 1024, sc":[6189],"## using a d":[6191],"# using a do":[6191]," using a dom":[6191],"using a dom ":[6191],"sing a dom e":[6191],"ing a dom el":[6191],"ng a dom ele":[6191],"g a dom elem":[6191],"dom element ":[6191,7096],"om element f":[6191],"m element fo":[6191]," element for":[6191],"element for ":[6191],"lement for s":[6191],"ement for sh":[6191],"ment for sha":[6191],"ent for shad":[6191],"nt for shade":[6191],"t for shader":[6191],"finally you ":[6192],"inally you c":[6192],"nally you ca":[6192],"ally you can":[6192],"lly you can ":[6192],"ly you can a":[6192],"y you can al":[6192],"n also use *":[6192]," also use **":[6192],"also use **d":[6192],"lso use **do":[6192],"so use **dom":[6192],"o use **dom ":[6192]," use **dom e":[6192],"use **dom el":[6192],"se **dom ele":[6192],"e **dom elem":[6192]," **dom eleme":[6192],"**dom elemen":[6192],"*dom element":[6192],"dom elements":[6192],"om elements*":[6192],"m elements**":[6192]," elements** ":[6192],"elements** t":[6192],"lements** to":[6192],"ements** to ":[6192],"ments** to s":[6192],"ents** to st":[6192],"nts** to sto":[6192],"ts** to stor":[6192],"s** to store":[6192],"** to store ":[6192],"* to store y":[6192]," to store yo":[6192],"to store you":[6192],"o store your":[6192]," store your ":[6192],"store your s":[6192],"tore your sh":[6192],"ore your sha":[6192],"re your shad":[6192],"e your shade":[6192],"your shader.":[6192],"our shader. ":[6192],"ur shader. y":[6192],"r shader. yo":[6192]," shader. you":[6192],"shader. you ":[6192],"hader. you j":[6192],"ader. you ju":[6192],"der. you jus":[6192],"er. you just":[6192],"r. you just ":[6192]," create a sc":[6192],"create a scr":[6192],"reate a scri":[6192],"eate a scrip":[6192],"ate a script":[6192],"te a script ":[6192],"e a script t":[6192]," a script ta":[6192],"a script tag":[6192]," script tag ":[6192],"script tag i":[6192],"cript tag in":[6192],"ript tag in ":[6192],"ipt tag in y":[6192],"pt tag in yo":[6192],"t tag in you":[6192]," tag in your":[6192],"tag in your ":[6192],"ag in your h":[6192],"g in your ht":[6192]," in your htm":[6192],"in your html":[6192],"n your html ":[6192]," your html f":[6192],"your html fi":[6192],"our html fil":[6192],"ur html file":[6192],"r html file ":[6192]," html file l":[6192],"html file li":[6192],"tml file lik":[6192],"ml file like":[6192],"l file like ":[6192],"ile like thi":[6192],"le like this":[6192],"ript type=\"a":[6194],"ipt type=\"ap":[6194],"pt type=\"app":[6194],"t type=\"appl":[6194]," type=\"appli":[6194],"type=\"applic":[6194],"ype=\"applica":[6194],"pe=\"applicat":[6194],"e=\"applicati":[6194],"=\"applicatio":[6194],"\"application":[6194],"application/":[6194],"pplication/p":[6194],"plication/pi":[6194],"lication/pix":[6194],"ication/pixe":[6194],"cation/pixel":[6194],"ation/pixels":[6194],"tion/pixelsh":[6194],"ion/pixelsha":[6194],"on/pixelshad":[6194],"n/pixelshade":[6194],"/pixelshader":[6194],"ixelshader\" ":[6194],"xelshader\" i":[6194],"elshader\" id":[6194],"lshader\" id=":[6194],"shader\" id=\"":[6194],"hader\" id=\"l":[6194],"ader\" id=\"li":[6194],"der\" id=\"lin":[6194],"er\" id=\"line":[6194],"r\" id=\"lines":[6194],"\" id=\"linesp":[6194]," id=\"linespi":[6194],"id=\"linespix":[6194],"d=\"linespixe":[6194],"=\"linespixel":[6194],"ixelshader\">":[6194],"        #ifd":[6195],"       #ifde":[6195],"      #ifdef":[6195],"     #ifdef ":[6195],"        prec":[6196],"       preci":[6196],"      precis":[6196],"     precisi":[6196],"        #end":[6197],"       #endi":[6197],"      #endif":[6197],"        vary":[6198],"       varyi":[6198],"      varyin":[6198],"     varying":[6198],"        void":[6199],"       void ":[6199],"      void m":[6199],"     void ma":[6199],"           g":[6200],"          gl":[6200],"         gl_":[6200],"        gl_f":[6200],"       gl_fr":[6200],"      gl_fra":[6200],"e a simple o":[6204]," a simple ob":[6204],"a simple obj":[6204],"ple object c":[6204],"le object co":[6204],"e object con":[6204],"ect containi":[6204],"ct containin":[6204],"t containing":[6204],"containing o":[6204],"ontaining on":[6204],"ntaining one":[6204],"taining one ":[6204],"aining one p":[6204],"ining one pr":[6204],"ning one pro":[6204],"ing one prop":[6204],"ng one prope":[6204],"g one proper":[6204]," one propert":[6204],"one property":[6204],"ne property ":[6204],"e property w":[6204]," property wh":[6204],"property whi":[6204],"roperty whic":[6204],"operty which":[6204],"perty which ":[6204],"erty which i":[6204],"rty which is":[6204],"ty which is ":[6204],"y which is n":[6204]," which is na":[6204],"which is nam":[6204],"hich is name":[6204],"ich is named":[6204],"ch is named ":[6204],"h is named *":[6204]," is named **":[6204],"is named **f":[6204],"s named **fr":[6204]," named **fra":[6204],"named **frag":[6204],"amed **fragm":[6204],"med **fragme":[6204],"ed **fragmen":[6204],"d **fragment":[6204]," **fragmente":[6204],"**fragmentel":[6204],"*fragmentele":[6204],"fragmentelem":[6204,7093],"ragmenteleme":[6204,7093],"agmentelemen":[6204,7093],"gmentelement":[6204,7093],"mentelement*":[6204],"entelement**":[6204],"ntelement** ":[6204],"telement** a":[6204],"element** an":[6204],"lement** and":[6204],"ement** and ":[6204],"ment** and c":[6204],"ent** and co":[6204],"nt** and con":[6204],"t** and cont":[6204],"** and conta":[6204],"* and contai":[6204]," and contain":[6204],"and contains":[6204],"nd contains ":[6204],"d contains t":[6204],"ntains the i":[6204],"tains the id":[6204],"ains the id ":[6204],"ins the id i":[6204],"ns the id id":[6204],"s the id ide":[6204]," the id iden":[6204],"the id ident":[6204],"he id identi":[6204],"e id identif":[6204]," id identify":[6204],"id identifyi":[6204],"d identifyin":[6204]," identifying":[6204],"identifying ":[6204],"dentifying t":[6204],"entifying th":[6204],"ntifying the":[6204],"tifying the ":[6204],"ifying the s":[6204],"fying the sc":[6204],"ying the scr":[6204],"ing the scri":[6204],"ng the scrip":[6204],"g the script":[6204]," the script ":[6204,6731],"the script d":[6204],"he script do":[6204],"e script dom":[6204]," script dom ":[6204],"script dom e":[6204],"cript dom el":[6204],"ript dom ele":[6204],"ipt dom elem":[6204],"pt dom eleme":[6204],"t dom elemen":[6204],"dom element.":[6204],"##translate ":[6205],"#translate a":[6205],"nslate and r":[6205,6206,6251],"slate and ro":[6205,6206,6251],"late and rot":[6205,6206,6251]," and rotate#":[6205,6251],"and rotate##":[6205,6251],"and rotate c":[6206],"nd rotate ch":[6206],"d rotate cha":[6206]," rotate chan":[6206],"rotate chang":[6206],"otate change":[6206],"tate change ":[6206],"ate change t":[6206],"te change th":[6206],"change the p":[6206,6633],"hange the po":[6206,6633],"ange the pos":[6206,6633],"nge the posi":[6206,6633],"ge the posit":[6206,6633],"sition and o":[6206],"ition and or":[6206],"tion and ori":[6206],"ion and orie":[6206],"on and orien":[6206],"n and orient":[6206],"ation of a m":[6206]," of a mesh a":[6206],"of a mesh al":[6206],"f a mesh alo":[6206],"esh along a ":[6206],"sh along a g":[6206],"h along a gi":[6206]," along a giv":[6206],"along a give":[6206],"long a given":[6206],"ong a given ":[6206],"ng a given v":[6206],"g a given ve":[6206]," a given vec":[6206],"a given vect":[6206]," given vecto":[6206,6213],"given vector":[6206,6213],"iven vector ":[6206,6213],"ven vector o":[6206],"en vector or":[6206],"n vector or ":[6206]," vector or a":[6206],"vector or ax":[6206],"ector or axi":[6206],"ctor or axis":[6206],"tor or axis ":[6206],"or or axis u":[6206],"r or axis us":[6206]," or axis usi":[6206],"or axis usin":[6206],"r axis using":[6206]," axis using ":[6206],"axis using e":[6206],"xis using ei":[6206],"is using eit":[6206],"s using eith":[6206]," using eithe":[6206],"using either":[6206],"sing either ":[6206],"ing either t":[6206],"ng either th":[6206],"g either the":[6206],"either the w":[6206,6208],"ither the wo":[6206,6208],"ther the wor":[6206,6208],"her the worl":[6206,6208],"er the world":[6206,6208],"r the world ":[6206,6208],"he world or ":[6206,6208,6252],"e world or t":[6206,6252]," world or th":[6206,6252],"world or the":[6206,6252],"orld or the ":[6206,6252],"rld or the m":[6206],"ld or the me":[6206],"d or the mes":[6206]," or the mesh":[6206],"or the mesh'":[6206],"r the mesh's":[6206],"the mesh's l":[6206,6701],"he mesh's lo":[6206,6701],"e mesh's loc":[6206,6701]," mesh's loca":[6206,6701],"mesh's local":[6206],"esh's local ":[6206],"sh's local a":[6206],"h's local ax":[6206],"'s local axe":[6206],"s local axes":[6206],"###translate":[6207],"##translate#":[6207],"#translate##":[6207],"translate###":[6207],"ou can use p":[6208],"u can use pi":[6208]," can use pil":[6208],"can use pilo":[6208],"an use pilot":[6208],"n use pilot.":[6208]," use pilot.t":[6208],"use pilot.tr":[6208],"se pilot.tra":[6208],"e pilot.tran":[6208,6211]," pilot.trans":[6208,6211,6252,6253,6254,7099],"pilot.transl":[6208,6211,6252,6253,6254,7099],"ilot.transla":[6208,6211,6252,6253,6254,7099],"lot.translat":[6208,6211,6252,6253,6254,7099],"ot.translate":[6208,6211,6252,6253,6254,7099],"t.translate(":[6208,6254,7099],".translate(v":[6208,6254,7099],"translate(ve":[6208,6254,7099,7104],"ranslate(vec":[6208,6254,7099,7104],"anslate(vect":[6208,6254,7099,7104],"nslate(vecto":[6208,6254,7099,7104],"slate(vector":[6208,6254,7099,7104],"late(vector,":[6208,6254,7099],"ate(vector, ":[6208,6254,7099],"te(vector, d":[6208,6254,7099],"e(vector, di":[6208,6254,7099],"(vector, dis":[6208,6254,7099],"vector, dist":[6208,6254,7099],"ector, dista":[6208,6254,7099],"ctor, distan":[6208,6254,7099],"tor, distanc":[6208,6254,7099],"or, distance":[6208,6254,7099],"r, distance,":[6208,6254,7099],", distance, ":[6208,6254,7099]," distance, s":[6208],"distance, sp":[6208],"istance, spa":[6208],"stance, spac":[6208],"tance, space":[6208],"ance, space)":[6208],"nce, space) ":[6208],"ce, space) t":[6208],"e, space) to":[6208],", space) to ":[6208]," space) to m":[6208],"space) to mo":[6208],"pace) to mov":[6208],"ace) to move":[6208],"ce) to move ":[6208],"e) to move t":[6208],") to move th":[6208],"o move the p":[6208]," move the pi":[6208],"move the pil":[6208],"ove the pilo":[6208],"ve the pilot":[6208],"e the pilot ":[6208],"the pilot th":[6208,6222,6223],"he pilot the":[6208],"e pilot the ":[6208]," pilot the g":[6208],"pilot the gi":[6208],"ilot the giv":[6208],"lot the give":[6208],"ot the given":[6208],"t the given ":[6208],"n distance i":[6208]," distance in":[6208],"distance in ":[6208],"istance in t":[6208],"stance in th":[6208],"tance in the":[6208],"ance in the ":[6208],"nce in the d":[6208],"ce in the di":[6208],"e in the dir":[6208]," in the dire":[6208,6223],"in the direc":[6208,6223],"n the direct":[6208,6223],"ion of the v":[6208],"on of the ve":[6208],"n of the vec":[6208]," of the vect":[6208,6214],"of the vecto":[6208,6214],"f the vector":[6208,6214]," the vector ":[6208],"the vector b":[6208],"he vector ba":[6208],"e vector bas":[6208],"ctor based o":[6208],"tor based on":[6208],"or based on ":[6208],"r based on e":[6208]," based on ei":[6208],"based on eit":[6208],"ased on eith":[6208],"sed on eithe":[6208],"ed on either":[6208],"d on either ":[6208]," on either t":[6208],"on either th":[6208],"n either the":[6208],"e world or l":[6208]," world or lo":[6208],"world or loc":[6208],"orld or loca":[6208],"rld or local":[6208],"ld or local ":[6208],"d or local s":[6208]," or local sp":[6208],"or local spa":[6208],"r local spac":[6208],"####the worl":[6209,6224],"###the world":[6209,6224],"##the world ":[6209,6224],"#the world s":[6209,6224],"the world sp":[6209,6210,6211,6224,6252,6254],"he world spa":[6209,6210,6211,6224,6252,6254],"e world spac":[6209,6210,6211,6224,6252,6254],"world space#":[6209],"orld space##":[6209],"rld space###":[6209],"ld space####":[6209],"world space ":[6210,6211,6252,6254],"orld space i":[6210,6252],"rld space is":[6210,6252],"ld space is ":[6210,6252],"d space is s":[6210]," space is se":[6210,6217],"space is set":[6210,6217],"pace is set ":[6210,6217],"ace is set u":[6210,6217],"ce is set us":[6210,6217],"e is set usi":[6210,6217]," set using b":[6210,6217],"set using ba":[6210,6217],"et using bab":[6210,6217],"t using baby":[6210,6217],"ng babylon.s":[6210,6217],"g babylon.sp":[6210,6217],"[demo 5](htt":[6211],"demo 5](http":[6211],"emo 5](http:":[6211],"mo 5](http:/":[6211],"o 5](http://":[6211]," 5](http://w":[6211],"om/#umr7m#14":[6211],"m/#umr7m#14)":[6211],"/#umr7m#14) ":[6211],"#umr7m#14) u":[6211],"umr7m#14) us":[6211],"mr7m#14) usi":[6211],"r7m#14) usin":[6211],"7m#14) using":[6211],"m#14) using ":[6211],"#14) using t":[6211],"14) using th":[6211],"4) using the":[6211],") using the ":[6211],"using the ve":[6211],"sing the vec":[6211],"ing the vect":[6211],"the vectors ":[6211],"he vectors (":[6211],"e vectors (3":[6211]," vectors (3,":[6211],"vectors (3, ":[6211],"ectors (3, 3":[6211],"ctors (3, 3,":[6211],"tors (3, 3, ":[6211],"ors (3, 3, 3":[6211],"rs (3, 3, 3)":[6211],"s (3, 3, 3) ":[6211]," (3, 3, 3) a":[6211],"(3, 3, 3) an":[6211],"3, 3, 3) and":[6211],", 3, 3) and ":[6211]," 3, 3) and (":[6211],"3, 3) and (2":[6211],", 3) and (2,":[6211]," 3) and (2, ":[6211],"3) and (2, 4":[6211],") and (2, 4,":[6211]," and (2, 4, ":[6211],"and (2, 4, 1":[6211],"nd (2, 4, 1)":[6211],"d (2, 4, 1) ":[6211]," (2, 4, 1) w":[6211],"(2, 4, 1) wi":[6211],"2, 4, 1) wit":[6211],", 4, 1) with":[6211]," 4, 1) with ":[6211],"4, 1) with a":[6211],", 1) with a ":[6211]," 1) with a d":[6211],"1) with a di":[6211],") with a dis":[6211]," with a dist":[6211],"with a dista":[6211],"ith a distan":[6211],"th a distanc":[6211],"h a distance":[6211],"istance of 1":[6211],"stance of 1 ":[6211],"tance of 1 s":[6211],"ance of 1 sh":[6211],"nce of 1 sho":[6211],"ce of 1 show":[6211],"e of 1 shows":[6211]," of 1 shows ":[6211],"of 1 shows t":[6211],"f 1 shows th":[6211]," 1 shows tha":[6211],"1 shows that":[6211],"shows that i":[6211],"hows that in":[6211],"ows that in ":[6211],"ws that in t":[6211],"s that in th":[6211],"hat in the w":[6211],"at in the wo":[6211],"t in the wor":[6211]," in the worl":[6211,6252,6254]," the world s":[6211,6252,6254],"orld space p":[6211],"rld space pi":[6211],"ld space pil":[6211],"d space pilo":[6211]," space pilot":[6211],"space pilot.":[6211],"pace pilot.t":[6211],"ace pilot.tr":[6211],"ce pilot.tra":[6211],"t.translate ":[6211,6252,6253],".translate b":[6211],"translate be":[6211,6218],"ranslate beh":[6211,6218],"anslate beha":[6211,6218],"nslate behav":[6211,6218],"slate behave":[6211,6218],"late behaves":[6211,6218],"ate behaves ":[6211,6218],"te behaves l":[6211],"e behaves li":[6211]," behaves lik":[6211],"behaves like":[6211],"ehaves like ":[6211],"haves like p":[6211],"aves like pi":[6211],"ves like pil":[6211],"es like pilo":[6211],"s like pilot":[6211]," like pilot.":[6211],"like pilot.p":[6211],"ike pilot.po":[6211],"ke pilot.pos":[6211],"e pilot.posi":[6211],"osition set ":[6211],"sition set t":[6211],"ition set to":[6211],"tion set to ":[6211],"ion set to t":[6211],"on set to th":[6211],"n set to the":[6211]," set to thes":[6211],"set to these":[6211],"et to these ":[6211],"t to these v":[6211]," to these ve":[6211],"to these vec":[6211],"o these vect":[6211]," these vecto":[6211],"these vector":[6211],"hese vectors":[6211],"ese vectors.":[6211],"nting with t":[6212],"istance show":[6212],"stance shows":[6212],"tance shows ":[6212],"ance shows t":[6212],"nce shows th":[6212],"ce shows tha":[6212],"e shows that":[6212],"that the pil":[6212],"hat the pilo":[6212],"at the pilot":[6212],"t the pilot ":[6212]," the pilot m":[6212],"the pilot mo":[6212],"he pilot mov":[6212],"e pilot move":[6212]," pilot moves":[6212],"pilot moves ":[6212],"ilot moves d":[6212],"lot moves di":[6212],"ot moves dis":[6212],"t moves dist":[6212]," moves dista":[6212],"moves distan":[6212],"oves distanc":[6212],"ves distance":[6212],"es distance ":[6212],"s distance *":[6212]," distance * ":[6212],"distance * v":[6212],"istance * ve":[6212],"stance * vec":[6212],"tance * vect":[6212],"ance * vecto":[6212],"nce * vector":[6212],"ce * vector ":[6212],"e * vector l":[6212]," * vector le":[6212],"* vector len":[6212]," vector leng":[6212],"vector lengt":[6212],"ector length":[6212],"ctor length.":[6212],"s often usef":[6213]," often usefu":[6213],"often useful":[6213],"ften useful ":[6213],"ten useful i":[6213],"en useful if":[6213],"n useful if ":[6213]," useful if t":[6213],"useful if th":[6213],"seful if the":[6213],"eful if the ":[6213],"ful if the g":[6213],"ul if the gi":[6213],"l if the giv":[6213]," if the give":[6213],"if the given":[6213],"f the given ":[6213]," the given v":[6213],"the given ve":[6213],"he given vec":[6213],"e given vect":[6213],"ven vector i":[6213],"en vector is":[6213],"n vector is ":[6213]," vector is a":[6213,7104],"vector is a ":[6213,7104],"ector is a u":[6213],"ctor is a un":[6213],"tor is a uni":[6213],"or is a unit":[6213],"r is a unit ":[6213]," is a unit v":[6213],"is a unit ve":[6213],"s a unit vec":[6213]," a unit vect":[6213,6214],"a unit vecto":[6213,6214]," unit vector":[6213,6214,6215],"unit vector ":[6213,6214],"nit vector s":[6213],"it vector so":[6213],"t vector so ":[6213]," vector so t":[6213],"vector so th":[6213],"ector so the":[6213],"ctor so the ":[6213],"tor so the d":[6213],"or so the di":[6213],"r so the dis":[6213]," so the dist":[6213],"so the dista":[6213],"o the distan":[6213],"e distance m":[6213]," distance mo":[6213,6556],"distance mov":[6213],"istance move":[6213],"stance moved":[6213],"tance moved ":[6213],"ance moved i":[6213],"nce moved is":[6213],"ce moved is ":[6213],"e moved is p":[6213]," moved is pr":[6213],"moved is pre":[6213],"oved is prec":[6213],"ved is preci":[6213],"ed is precis":[6213],"d is precise":[6213]," is precisel":[6213],"is precisely":[6213],"s precisely ":[6213]," precisely t":[6213],"precisely th":[6213],"recisely the":[6213],"ecisely the ":[6213],"cisely the d":[6213],"isely the di":[6213],"sely the dis":[6213],"ely the dist":[6213],"ly the dista":[6213],"y the distan":[6213],"e distance g":[6213]," distance gi":[6213],"distance giv":[6213],"istance give":[6213],"stance given":[6213],"tance given.":[6213],"or a given v":[6214],"r a given v ":[6214]," a given v =":[6214],"a given v = ":[6214]," given v = n":[6214],"given v = ne":[6214],"iven v = new":[6214],"ven v = new ":[6214],"en v = new b":[6214],"n v = new ba":[6214]," v = new bab":[6214],"v = new baby":[6214],"r3(x, y, z) ":[6214,6287,6305,6346,6371,6382],"3(x, y, z) a":[6214],"(x, y, z) a ":[6214],"x, y, z) a u":[6214],", y, z) a un":[6214]," y, z) a uni":[6214],"y, z) a unit":[6214],", z) a unit ":[6214]," z) a unit v":[6214],"z) a unit ve":[6214],") a unit vec":[6214],"nit vector i":[6214],"it vector in":[6214],"t vector in ":[6214]," vector in t":[6214],"vector in th":[6214],"ector in thi":[6214],"ctor in this":[6214],"tor in this ":[6214],"or in this d":[6214],"r in this di":[6214]," in this dir":[6214],"in this dire":[6214],"n this direc":[6214]," this direct":[6214],"this directi":[6214],"his directio":[6214],"is direction":[6214],"s direction ":[6214]," direction i":[6214],"direction is":[6214],"irection is ":[6214],"rection is g":[6214],"ection is gi":[6214],"ction is giv":[6214],"n is given b":[6214]," is given by":[6214],"is given by ":[6214],"s given by v":[6214]," given by v.":[6214],"given by v.n":[6214],"iven by v.no":[6214],"ven by v.nor":[6214],"en by v.norm":[6214],"n by v.norma":[6214]," by v.normal":[6214],"by v.normali":[6214],"y v.normaliz":[6214]," v.normalize":[6214],"v.normalize(":[6214],".normalize()":[6214],"normalize().":[6214],"ormalize(). ":[6214],"rmalize(). a":[6214],"malize(). al":[6214],"alize(). als":[6214],"lize(). also":[6214],"ize(). also ":[6214],"ze(). also v":[6214],"e(). also v.":[6214],"(). also v.l":[6214],"). also v.le":[6214],". also v.len":[6214]," also v.leng":[6214],"also v.lengt":[6214],"lso v.length":[6214],"so v.length(":[6214],"o v.length()":[6214]," v.length() ":[6214],"v.length() w":[6214],".length() wi":[6214],"length() wil":[6214],"ength() will":[6214],"ngth() will ":[6214],"gth() will g":[6214],"th() will gi":[6214],"h() will giv":[6214],"() will give":[6214],") will give ":[6214],"l give the l":[6214]," give the le":[6214],"give the len":[6214],"ive the leng":[6214],"ve the lengt":[6214],"e the length":[6214]," length of t":[6214],"length of th":[6214],"ength of the":[6214],"ngth of the ":[6214],"gth of the v":[6214],"th of the ve":[6214],"h of the vec":[6214]," the vector.":[6214],"for convenie":[6215],"or convenien":[6215],"convenience ":[6215],"onvenience u":[6215],"nvenience un":[6215],"venience uni":[6215],"enience unit":[6215],"nience unit ":[6215],"ience unit v":[6215],"ence unit ve":[6215],"nce unit vec":[6215],"ce unit vect":[6215],"e unit vecto":[6215],"unit vectors":[6215],"nit vectors ":[6215],"it vectors i":[6215],"t vectors in":[6215]," vectors in ":[6215],"vectors in t":[6215],"ectors in th":[6215],"ctors in the":[6215],"tors in the ":[6215],"ors in the p":[6215],"rs in the po":[6215],"s in the pos":[6215]," in the posi":[6215],"in the posit":[6215],"n the positi":[6215]," the positiv":[6215],"e directions":[6215],"ons of the x":[6215],"ns of the x,":[6215],"s of the x, ":[6215]," of the x, y":[6215],"of the x, y ":[6215],"f the x, y a":[6215],"and z axes a":[6215],"nd z axes ar":[6215],"d z axes are":[6215]," z axes are ":[6215],"z axes are p":[6215]," axes are pr":[6215],"axes are pre":[6215],"xes are pre-":[6215],"es are pre-d":[6215],"s are pre-de":[6215]," are pre-def":[6215],"are pre-defi":[6215],"re pre-defin":[6215],"e pre-define":[6215]," pre-defined":[6215],"pre-defined ":[6215],"re-defined a":[6215],"e-defined as":[6215],"-defined as ":[6215],"defined as t":[6215],"efined as th":[6215],"fined as the":[6215],"ined as the ":[6215],"ned as the c":[6215],"ed as the co":[6215],"d as the con":[6215]," as the cons":[6215],"as the const":[6215],"he constants":[6215],"e constants ":[6215]," constants b":[6215],"constants ba":[6215],"onstants bab":[6215],"nstants baby":[6215],"stants babyl":[6215],"tants babylo":[6215],"ants babylon":[6215],"nts babylon.":[6215],"ts babylon.a":[6215],"s babylon.ax":[6215]," babylon.axi":[6215],"on.axis.x, b":[6215],"n.axis.x, ba":[6215],".axis.x, bab":[6215],"axis.x, baby":[6215],"xis.x, babyl":[6215],"is.x, babylo":[6215],"s.x, babylon":[6215],".x, babylon.":[6215],"x, babylon.a":[6215],", babylon.ax":[6215],"bylon.axis.y":[6215],"ylon.axis.y ":[6215],"lon.axis.y a":[6215],"on.axis.y an":[6215],"n.axis.y and":[6215],".axis.y and ":[6215],"axis.y and b":[6215],"xis.y and ba":[6215],"is.y and bab":[6215],"s.y and baby":[6215],".y and babyl":[6215],"y and babylo":[6215],"nd babylon.a":[6215],"d babylon.ax":[6215],"bylon.axis.z":[6215],"ylon.axis.z ":[6215],"lon.axis.z r":[6215],"on.axis.z re":[6215],"n.axis.z res":[6215],".axis.z resp":[6215],"axis.z respe":[6215],"xis.z respec":[6215],"is.z respect":[6215],"s.z respecti":[6215],".z respectiv":[6215],"z respective":[6215],"espectively.":[6215],"####the loca":[6216,6237],"###the local":[6216,6237],"##the local ":[6216,6237],"#the local s":[6216,6237],"local space#":[6216,6237],"ocal space##":[6216,6237],"cal space###":[6216,6237],"al space####":[6216,6237],"ocal space i":[6217],"cal space is":[6217],"al space is ":[6217],"l space is s":[6217],"space.local.":[6217],"pace.local. ":[6217],"ocal space t":[6218,7099],"cal space tr":[6218],"al space tra":[6218],"l space tran":[6218]," space trans":[6218],"space transl":[6218],"pace transla":[6218],"ace translat":[6218],"ce translate":[6218],"e translate ":[6218]," translate b":[6218],"te behaves a":[6218],"e behaves as":[6218]," behaves as ":[6218],"behaves as w":[6218],"ehaves as wo":[6218],"haves as wou":[6218],"aves as woul":[6218],"ves as would":[6218],"es as would ":[6218],"s as would a":[6218]," as would a ":[6218],"as would a m":[6218],"s would a ma":[6218]," would a mat":[6218],"would a math":[6218],"ould a mathe":[6218],"uld a mathem":[6218],"ld a mathema":[6218],"d a mathemat":[6218],"thematical t":[6218],"hematical tr":[6218],"ematical tra":[6218],"matical tran":[6218],"atical trans":[6218],"tical transl":[6218],"ical transla":[6218],"cal translat":[6218,6255,7102],"al translate":[6218],"l translate.":[6218]," translate. ":[6218],"translate. t":[6218],"ranslate. th":[6218],"anslate. tha":[6218],"nslate. that":[6218],"slate. that ":[6218],"late. that i":[6218],"ate. that is":[6218],"te. that is,":[6218],"e. that is, ":[6218],". that is, a":[6218]," that is, a ":[6218],"that is, a s":[6218],"hat is, a se":[6218],"at is, a seq":[6218],"t is, a sequ":[6218]," is, a seque":[6218],"is, a sequen":[6218],"s, a sequenc":[6218],", a sequence":[6218]," a sequence ":[6218],"a sequence o":[6218]," sequence of":[6218],"sequence of ":[6218],"equence of t":[6218],"quence of tr":[6218],"uence of tra":[6218],"ence of tran":[6218],"nce of trans":[6218],"ce of transl":[6218],"e of transla":[6218]," of translat":[6218],"of translati":[6218],"f translatio":[6218],"anslations i":[6218],"nslations is":[6218],"slations is ":[6218],"lations is a":[6218],"ations is an":[6218],"tions is an ":[6218],"ions is an a":[6218],"ons is an ac":[6218],"ns is an acc":[6218],"s is an accu":[6218]," is an accum":[6218],"is an accumu":[6218],"s an accumul":[6218]," an accumula":[6218],"an accumulat":[6218],"n accumulati":[6218]," accumulatio":[6218],"accumulation":[6218],"ccumulation ":[6218],"cumulation o":[6218],"umulation of":[6218],"ulation of d":[6218],"lation of di":[6218],"ation of dir":[6218],"tion of dire":[6218],"ion of direc":[6218],"on of direct":[6218],"n of directi":[6218]," of directio":[6218],"of direction":[6218],"f direction ":[6218]," direction v":[6218],"direction ve":[6218],"irection vec":[6218],"rection vect":[6218],"ection vecto":[6218],"ction vector":[6218],"tion vectors":[6218],"ion vectors ":[6218],"on vectors a":[6218],"n vectors as":[6218],"vectors as o":[6218],"ectors as op":[6218],"ctors as opp":[6218],"tors as oppo":[6218],"ors as oppos":[6218],"rs as oppose":[6218],"s as opposed":[6218]," as opposed ":[6218],"as opposed t":[6218],"s opposed to":[6218]," opposed to ":[6218],"opposed to t":[6218],"pposed to th":[6218],"posed to the":[6218],"osed to the ":[6218],"ed to the se":[6218],"d to the set":[6218]," to the sett":[6218],"to the setti":[6218],"o the settin":[6218],"the setting ":[6218],"he setting o":[6218],"e setting of":[6218]," setting of ":[6218],"setting of a":[6218],"etting of a ":[6218],"tting of a p":[6218],"ting of a po":[6218],"ing of a pos":[6218],"ng of a posi":[6218],"g of a posit":[6218]," of a positi":[6218],"of a positio":[6218],"f a position":[6218],"tion vector.":[6218],"[demo 6](htt":[6219],"demo 6](http":[6219],"emo 6](http:":[6219],"mo 6](http:/":[6219],"o 6](http://":[6219]," 6](http://w":[6219],"6](http://ww":[6219],"om/#umr7m#15":[6219],"m/#umr7m#15)":[6219],"/#umr7m#15) ":[6219],"#umr7m#15) s":[6219],"umr7m#15) sh":[6219],"mr7m#15) sho":[6219],"r7m#15) show":[6219],"7m#15) shows":[6219],"m#15) shows ":[6219],"#15) shows h":[6219],"15) shows ho":[6219],"5) shows how":[6219],") shows how ":[6219],"shows how th":[6219],"hows how the":[6219],"ows how the ":[6219],"ws how the t":[6219],"s how the tr":[6219]," how the tra":[6219],"how the tran":[6219],"ow the trans":[6219],"w the transl":[6219]," the transla":[6219,7100],"ranslation (":[6219],"anslation (3":[6219],"nslation (3,":[6219],"slation (3, ":[6219],"lation (3, 3":[6219],"ation (3, 3,":[6219],"tion (3, 3, ":[6219],"ion (3, 3, 3":[6219],"on (3, 3, 3)":[6219],"n (3, 3, 3) ":[6219]," (3, 3, 3) f":[6219],"(3, 3, 3) fo":[6219],"3, 3, 3) fol":[6219],", 3, 3) foll":[6219]," 3, 3) follo":[6219],"3, 3) follow":[6219],", 3) followe":[6219]," 3) followed":[6219],"3) followed ":[6219],") followed b":[6219],"wed by the t":[6219],"ed by the tr":[6219],"d by the tra":[6219]," by the tran":[6219],"by the trans":[6219],"y the transl":[6219],"anslation (2":[6219],"nslation (2,":[6219],"slation (2, ":[6219],"lation (2, 4":[6219],"ation (2, 4,":[6219],"tion (2, 4, ":[6219],"ion (2, 4, 1":[6219],"on (2, 4, 1)":[6219],"n (2, 4, 1) ":[6219]," (2, 4, 1) r":[6219],"(2, 4, 1) re":[6219],"2, 4, 1) res":[6219],", 4, 1) resu":[6219]," 4, 1) resul":[6219],"4, 1) result":[6219],", 1) results":[6219]," 1) results ":[6219],"1) results i":[6219],") results in":[6219]," results in ":[6219],"results in t":[6219],"esults in th":[6219],"sults in the":[6219],"ults in the ":[6219],"lts in the t":[6219],"ts in the tr":[6219],"s in the tra":[6219]," in the tran":[6219],"in the trans":[6219],"n the transl":[6219],"anslation (5":[6219],"nslation (5,":[6219],"slation (5, ":[6219],"lation (5, 7":[6219],"ation (5, 7,":[6219],"tion (5, 7, ":[6219],"ion (5, 7, 4":[6219],"on (5, 7, 4)":[6219],"n (5, 7, 4).":[6219],"###rotate###":[6220],"* local-axes":[6222]," local-axes ":[6222,6238,7107,7123],"local-axes m":[6222,6223],"ocal-axes me":[6222,6223],"cal-axes mea":[6222,6223],"al-axes mean":[6222,6223],"l-axes means":[6222,6223],"-axes means ":[6222,6223],"axes means a":[6222,6223],"xes means ax":[6222,6223],"es means axe":[6222,6223],"s means axes":[6222,6223]," means axes ":[6222,6223],"means axes l":[6222,6223],"eans axes lo":[6222,6223],"ans axes loc":[6222,6223],"ns axes loca":[6222,6223],"s axes local":[6222,6223],"o the pilot ":[6222,6223],"he pilot tha":[6222,6223],"e pilot that":[6222,6223]," pilot that ":[6222,6223],"pilot that m":[6222],"ilot that ma":[6222],"lot that mai":[6222],"ot that main":[6222],"t that maint":[6222]," that mainta":[6222],"that maintai":[6222],"hat maintain":[6222],"at maintain ":[6222],"t maintain t":[6222]," maintain th":[6222],"maintain the":[6222],"aintain thei":[6222],"intain their":[6222],"ntain their ":[6222],"tain their o":[6222],"ain their or":[6222],"in their ori":[6222],"n their orig":[6222]," their origi":[6222],"their origin":[6222],"heir origina":[6222],"eir original":[6222],"ir original ":[6222],"r original o":[6222]," original or":[6222],"original ori":[6222],"riginal orie":[6222],"iginal orien":[6222],"ginal orient":[6222],"on to the pi":[6222],"n to the pil":[6222],"o the pilot,":[6222]," the pilot, ":[6222],"the pilot, i":[6222],"he pilot, ie":[6222],"e pilot, ie ":[6222]," pilot, ie a":[6222],"pilot, ie as":[6222],"ilot, ie as ":[6222],"lot, ie as t":[6222],"ot, ie as th":[6222],"t, ie as the":[6222],", ie as the ":[6222]," ie as the p":[6222],"ie as the pi":[6222],"e as the pil":[6222]," as the pilo":[6222],"as the pilot":[6222],"the pilot tu":[6222],"he pilot tur":[6222],"e pilot turn":[6222]," pilot turns":[6222],"pilot turns ":[6222],"ilot turns t":[6222],"lot turns th":[6222],"ot turns the":[6222],"t turns the ":[6222]," turns the l":[6222],"turns the lo":[6222],"urns the loc":[6222],"rns the loca":[6222],"ns the local":[6222],"s the local ":[6222],"he local axe":[6222,7099,7103],"e local axes":[6222,7099,7103]," local axes ":[6222,7099,7103],"local axes t":[6222],"ocal axes tu":[6222],"cal axes tur":[6222],"al axes turn":[6222],"l axes turn ":[6222]," axes turn w":[6222],"axes turn wi":[6222],"xes turn wit":[6222],"es turn with":[6222],"s turn with ":[6222]," turn with i":[6222],"turn with it":[6222],"urn with it.":[6222],"* world-loca":[6223]," world-local":[6223,6225,6233,6234,7097,7099,7100,7106,7115,7116,7117],"world-local-":[6223,6225,6233,6234,7097,7099,7100,7106,7115,7116,7117],"orld-local-a":[6223,6225,6233,6234,7097,7099,7100,7106,7115,7116,7117],"rld-local-ax":[6223,6225,6233,6234,7097,7099,7100,7106,7115,7116,7117],"ld-local-axe":[6223,6225,7097,7099,7106],"d-local-axes":[6223,6225,6254,7097,7099,7106],"-local-axes ":[6223,6225,6254,7097,7099],"pilot that s":[6223],"ilot that st":[6223],"lot that sta":[6223],"ot that stay":[6223],"t that stay ":[6223]," that stay i":[6223],"that stay in":[6223],"hat stay in ":[6223],"at stay in t":[6223],"t stay in th":[6223]," stay in the":[6223],"stay in the ":[6223],"tay in the d":[6223],"ay in the di":[6223],"y in the dir":[6223],"ion of the w":[6223],"on of the wo":[6223],"n of the wor":[6223],"f the world ":[6223],"he world axe":[6223],"e world axes":[6223]," world axes ":[6223],"world axes w":[6223],"orld axes wh":[6223],"rld axes wha":[6223],"ld axes what":[6223],"d axes whate":[6223]," axes whatev":[6223],"axes whateve":[6223],"xes whatever":[6223],"atever the o":[6223],"tever the or":[6223],"ever the ori":[6223],"ver the orie":[6223],"er the orien":[6223],"r the orient":[6223],"n of the pil":[6223]," of the pilo":[6223],"of the pilot":[6223],"f the pilot.":[6223],"orld space.#":[6224],"rld space.##":[6224],"ld space.###":[6224],"d space.####":[6224],"rotations ta":[6225,6238],"otations tak":[6225,6238],"tations take":[6225,6238],"ations take ":[6225,6238],"tions take p":[6225,6238],"ions take pl":[6225,6238],"ons take pla":[6225,6238],"ns take plac":[6225,6238],"s take place":[6225,6238]," take place ":[6225,6238],"take place a":[6225,6238],"ake place ar":[6225,6238],"ke place aro":[6225,6238],"e place arou":[6225,6238]," place aroun":[6225,6238],"place around":[6225,6238],"lace around ":[6225,6238],"ace around t":[6225,6238],"ce around th":[6225,6238],"around the w":[6225,7106],"round the wo":[6225,7106],"ound the wor":[6225,7106],"und the worl":[6225,7106],"nd the world":[6225,7099,7106],"d the world-":[6225,7099,7106]," the world-l":[6225,6233,7099,7100,7106],"the world-lo":[6225,6233,7099,7100,7106],"he world-loc":[6225,6233,7099,7100,7106],"e world-loca":[6225,6233,7099,7100,7106],"local-axes a":[6225,6238,6254,7099],"ocal-axes an":[6225,6238],"cal-axes and":[6225,6238],"al-axes and ":[6225,6238],"l-axes and a":[6225,6238],"-axes and ar":[6225,6238],"axes and are":[6225,6238],"xes and are ":[6225,6238],"es and are a":[6225,6238],"s and are ac":[6225,6238]," and are acc":[6225,6238],"and are accu":[6225,6238],"nd are accum":[6225,6238],"d are accumu":[6225,6238]," are accumul":[6225,6238],"are accumula":[6225,6238],"re accumulat":[6225,6238],"e accumulati":[6225,6238]," accumulativ":[6225,6238],"accumulative":[6225,6238],"ccumulative.":[6225,6238],"cumulative. ":[6225,6238],"umulative. t":[6225,6238],"mulative. th":[6225,6238],"ulative. thi":[6225],"lative. this":[6225],"ative. this ":[6225],"tive. this c":[6225],"ive. this ca":[6225],"ve. this can":[6225],"n in [demo 7":[6225]," in [demo 7]":[6225,6226],"in [demo 7](":[6225,6226],"n [demo 7](h":[6225,6226]," [demo 7](ht":[6225,6226],"[demo 7](htt":[6225,6226],"demo 7](http":[6225,6226],"emo 7](http:":[6225,6226],"mo 7](http:/":[6225,6226],"o 7](http://":[6225,6226]," 7](http://w":[6225,6226],"7](http://ww":[6225,6226],"om/#umr7m#16":[6225,6226],"m/#umr7m#16)":[6225,6226],"/#umr7m#16).":[6225],"commenting t":[6226],"ommenting th":[6226],"mmenting the":[6226],"menting the ":[6226],"nting the co":[6226],"ting the cor":[6226],"ing the corr":[6226],"ng the corre":[6226],"g the correc":[6226],"he correct l":[6226],"e correct li":[6226]," correct lin":[6226],"correct line":[6226],"orrect lines":[6226],"rrect lines ":[6226],"rect lines i":[6226],"ect lines in":[6226],"ct lines in ":[6226],"t lines in [":[6226],"s in [demo 7":[6226],"/#umr7m#16) ":[6226],"#umr7m#16) g":[6226],"umr7m#16) gi":[6226],"mr7m#16) giv":[6226],"r7m#16) give":[6226],"7m#16) gives":[6226],"m#16) gives ":[6226],"#16) gives t":[6226],"16) gives th":[6226],"6) gives the":[6226],") gives the ":[6226]," gives the s":[6226],"gives the se":[6226],"ives the seq":[6226],"ves the sequ":[6226],"es the seque":[6226],"s the sequen":[6226]," the sequenc":[6226],"the sequence":[6226],"he sequence ":[6226],"e sequence i":[6226]," sequence in":[6226],"sequence in ":[6226],"equence in f":[6226],"quence in fi":[6226],"uence in fig":[6226],"ence in figs":[6226],"nce in figs ":[6226],"ce in figs 6":[6226],"e in figs 6a":[6226]," in figs 6a,":[6226],"in figs 6a, ":[6226],"n figs 6a, b":[6226]," figs 6a, b,":[6226],"figs 6a, b, ":[6226],"igs 6a, b, c":[6226],"gs 6a, b, c,":[6226],"s 6a, b, c, ":[6226]," 6a, b, c, d":[6226],"6a, b, c, d.":[6226],"ntent.com/-5":[6227],"tent.com/-5t":[6227],"ent.com/-5ti":[6227],"nt.com/-5ti2":[6227],"t.com/-5ti2a":[6227],".com/-5ti2ah":[6227],"com/-5ti2ahy":[6227],"om/-5ti2ahya":[6227],"m/-5ti2ahyas":[6227],"/-5ti2ahyasz":[6227],"-5ti2ahyaszg":[6227],"5ti2ahyaszg/":[6227],"ti2ahyaszg/v":[6227],"i2ahyaszg/vw":[6227],"2ahyaszg/vw2":[6227],"ahyaszg/vw2q":[6227],"hyaszg/vw2q1":[6227],"yaszg/vw2q1q":[6227],"aszg/vw2q1qw":[6227],"szg/vw2q1qwi":[6227],"zg/vw2q1qwio":[6227],"g/vw2q1qwion":[6227],"/vw2q1qwioni":[6227],"vw2q1qwioni/":[6227],"w2q1qwioni/a":[6227],"2q1qwioni/aa":[6227],"q1qwioni/aaa":[6227],"1qwioni/aaaa":[6227],"qwioni/aaaaa":[6227],"wioni/aaaaaa":[6227],"ioni/aaaaaaa":[6227],"oni/aaaaaaaa":[6227],"ni/aaaaaaaaa":[6227],"/aaaaaaaaadc":[6227],"aaaaaaaaadc/":[6227],"aaaaaaaadc/4":[6227],"aaaaaaadc/4v":[6227],"aaaaaadc/4vo":[6227],"aaaaadc/4vom":[6227],"aaaadc/4vomi":[6227],"aaadc/4vomi3":[6227],"aadc/4vomi3k":[6227],"adc/4vomi3kx":[6227],"dc/4vomi3kxu":[6227],"c/4vomi3kxuv":[6227],"/4vomi3kxuvu":[6227],"4vomi3kxuvu/":[6227],"vomi3kxuvu/s":[6227],"omi3kxuvu/s2":[6227],"mi3kxuvu/s21":[6227],"i3kxuvu/s210":[6227],"3kxuvu/s210/":[6227],"kxuvu/s210/f":[6227],"xuvu/s210/fi":[6227],"uvu/s210/fig":[6227],"vu/s210/fig6":[6227],"u/s210/fig6a":[6227],"/s210/fig6a.":[6227],"s210/fig6a.j":[6227],"210/fig6a.jp":[6227],"10/fig6a.jpg":[6227],"0/fig6a.jpg)":[6227],"1[](https://":[6228],"ntent.com/-o":[6228],"tent.com/-on":[6228],"ent.com/-onm":[6228],"nt.com/-onmk":[6228],"t.com/-onmkq":[6228],".com/-onmkqr":[6228],"com/-onmkqra":[6228],"om/-onmkqrai":[6228],"m/-onmkqraii":[6228],"/-onmkqraiik":[6228],"-onmkqraiikg":[6228],"onmkqraiikg/":[6228],"nmkqraiikg/v":[6228],"mkqraiikg/vw":[6228],"kqraiikg/vw2":[6228],"qraiikg/vw2q":[6228],"raiikg/vw2q2":[6228],"aiikg/vw2q2o":[6228],"iikg/vw2q2om":[6228],"ikg/vw2q2omb":[6228],"kg/vw2q2ombc":[6228],"g/vw2q2ombcs":[6228],"/vw2q2ombcsi":[6228],"vw2q2ombcsi/":[6228],"w2q2ombcsi/a":[6228],"2q2ombcsi/aa":[6228],"q2ombcsi/aaa":[6228],"2ombcsi/aaaa":[6228],"ombcsi/aaaaa":[6228],"mbcsi/aaaaaa":[6228],"bcsi/aaaaaaa":[6228],"csi/aaaaaaaa":[6228],"si/aaaaaaaaa":[6228,6240],"/aaaaaaaaadk":[6228],"aaaaaaaaadk/":[6228],"aaaaaaaadk/y":[6228],"aaaaaaadk/y8":[6228],"aaaaaadk/y8_":[6228],"aaaaadk/y8_s":[6228],"aaaadk/y8_s5":[6228],"aaadk/y8_s5y":[6228],"aadk/y8_s5y3":[6228],"adk/y8_s5y35":[6228],"dk/y8_s5y35b":[6228],"k/y8_s5y35by":[6228],"/y8_s5y35byo":[6228],"y8_s5y35byo/":[6228],"8_s5y35byo/s":[6228],"_s5y35byo/s2":[6228],"s5y35byo/s21":[6228],"5y35byo/s210":[6228],"y35byo/s210/":[6228],"35byo/s210/f":[6228],"5byo/s210/fi":[6228],"byo/s210/fig":[6228],"yo/s210/fig6":[6228],"o/s210/fig6b":[6228],"/s210/fig6b.":[6228],"s210/fig6b.j":[6228],"210/fig6b.jp":[6228],"10/fig6b.jpg":[6228],"0/fig6b.jpg)":[6228],"ntent.com/-a":[6229],"tent.com/-aw":[6229],"ent.com/-awk":[6229],"nt.com/-awkj":[6229],"t.com/-awkju":[6229],".com/-awkjuc":[6229],"com/-awkjuc_":[6229],"om/-awkjuc_t":[6229],"m/-awkjuc_tx":[6229],"/-awkjuc_txo":[6229],"-awkjuc_txou":[6229],"awkjuc_txou/":[6229],"wkjuc_txou/v":[6229],"kjuc_txou/vw":[6229],"juc_txou/vw2":[6229],"uc_txou/vw2q":[6229],"c_txou/vw2q2":[6229],"_txou/vw2q2t":[6229],"txou/vw2q2t_":[6229],"xou/vw2q2t_y":[6229],"ou/vw2q2t_yx":[6229],"u/vw2q2t_yxy":[6229],"/vw2q2t_yxyi":[6229],"vw2q2t_yxyi/":[6229],"w2q2t_yxyi/a":[6229],"2q2t_yxyi/aa":[6229],"q2t_yxyi/aaa":[6229],"2t_yxyi/aaaa":[6229],"t_yxyi/aaaaa":[6229],"_yxyi/aaaaaa":[6229],"yxyi/aaaaaaa":[6229],"xyi/aaaaaaaa":[6229],"yi/aaaaaaaaa":[6229],"/aaaaaaaaad4":[6229],"aaaaaaaaad4/":[6229],"aaaaaaaad4/0":[6229],"aaaaaaad4/09":[6229],"aaaaaad4/09l":[6229],"aaaaad4/09lb":[6229],"aaaad4/09lbs":[6229],"aaad4/09lbs3":[6229],"aad4/09lbs3g":[6229],"ad4/09lbs3gk":[6229],"d4/09lbs3gkk":[6229],"4/09lbs3gkkg":[6229],"/09lbs3gkkgy":[6229],"09lbs3gkkgy/":[6229],"9lbs3gkkgy/s":[6229],"lbs3gkkgy/s2":[6229],"bs3gkkgy/s21":[6229],"s3gkkgy/s210":[6229],"3gkkgy/s210/":[6229],"gkkgy/s210/f":[6229],"kkgy/s210/fi":[6229],"kgy/s210/fig":[6229],"gy/s210/fig6":[6229],"y/s210/fig6c":[6229],"/s210/fig6c.":[6229],"s210/fig6c.j":[6229],"210/fig6c.jp":[6229],"10/fig6c.jpg":[6229],"0/fig6c.jpg)":[6229],"tent.com/-tc":[6230],"ent.com/-tcr":[6230],"nt.com/-tcrv":[6230],"t.com/-tcrvw":[6230],".com/-tcrvwv":[6230],"com/-tcrvwv1":[6230],"om/-tcrvwv1y":[6230],"m/-tcrvwv1yf":[6230],"/-tcrvwv1yfk":[6230],"-tcrvwv1yfko":[6230],"tcrvwv1yfko/":[6230],"crvwv1yfko/v":[6230],"rvwv1yfko/vw":[6230],"vwv1yfko/vw2":[6230],"wv1yfko/vw2q":[6230],"v1yfko/vw2q2":[6230],"1yfko/vw2q2n":[6230],"yfko/vw2q2n1":[6230],"fko/vw2q2n1v":[6230],"ko/vw2q2n1vq":[6230],"o/vw2q2n1vqp":[6230],"/vw2q2n1vqpi":[6230],"vw2q2n1vqpi/":[6230],"w2q2n1vqpi/a":[6230],"2q2n1vqpi/aa":[6230],"q2n1vqpi/aaa":[6230],"2n1vqpi/aaaa":[6230],"n1vqpi/aaaaa":[6230],"1vqpi/aaaaaa":[6230],"vqpi/aaaaaaa":[6230],"qpi/aaaaaaaa":[6230],"pi/aaaaaaaaa":[6230,7101,7111],"/aaaaaaaaads":[6230],"aaaaaaaaads/":[6230],"aaaaaaaads/u":[6230],"aaaaaaads/ux":[6230],"aaaaaads/uxq":[6230],"aaaaads/uxqn":[6230],"aaaads/uxqn-":[6230],"aaads/uxqn-f":[6230],"aads/uxqn-ft":[6230],"ads/uxqn-ft5":[6230],"ds/uxqn-ft5n":[6230],"s/uxqn-ft5np":[6230],"/uxqn-ft5npe":[6230],"uxqn-ft5npe/":[6230],"xqn-ft5npe/s":[6230],"qn-ft5npe/s2":[6230],"n-ft5npe/s21":[6230],"-ft5npe/s210":[6230],"ft5npe/s210/":[6230],"t5npe/s210/f":[6230],"5npe/s210/fi":[6230],"npe/s210/fig":[6230],"pe/s210/fig6":[6230],"e/s210/fig6d":[6230],"/s210/fig6d.":[6230],"s210/fig6d.j":[6230],"210/fig6d.jp":[6230],"10/fig6d.jpg":[6230],"0/fig6d.jpg)":[6230],"       fig 6":[6231],"      fig 6a":[6231],"     fig 6a ":[6231],"    fig 6a  ":[6231],"   fig 6a   ":[6231],"  fig 6a    ":[6231]," fig 6a     ":[6231],"fig 6a      ":[6231],"ig 6a       ":[6231],"g 6a        ":[6231]," 6a         ":[6231],"6a          ":[6231],"        fig6":[6231],"       fig6b":[6231],"      fig6b ":[6231],"     fig6b  ":[6231],"    fig6b   ":[6231],"   fig6b    ":[6231],"  fig6b     ":[6231]," fig6b      ":[6231],"fig6b       ":[6231],"ig6b        ":[6231],"g6b         ":[6231],"6b          ":[6231],"      fig 6c":[6231],"     fig 6c ":[6231],"    fig 6c  ":[6231],"   fig 6c   ":[6231],"  fig 6c    ":[6231]," fig 6c     ":[6231],"fig 6c      ":[6231],"ig 6c       ":[6231],"g 6c        ":[6231]," 6c         ":[6231],"6c          ":[6231],"      fig 6d":[6231],"fig 6a rotat":[6233],"ig 6a rotate":[6233],"g 6a rotate ":[6233]," 6a rotate a":[6233],"6a rotate ab":[6233],"a rotate abo":[6233,6246]," rotate abou":[6233,6234,6235,6246,6247,6248,6249],"rotate about":[6233,6234,6235,6246,6247,6248,6249],"otate about ":[6233,6234,6235,6246,6247,6248,6249],"tate about t":[6233],"ate about th":[6233],"te about the":[6233],"bout the wor":[6233],"out the worl":[6233],"ut the world":[6233],"t the world-":[6233],"ld-local-axi":[6233,6234,7100,7115,7116,7117],"d-local-axis":[6233,6234,7100,7115,7116,7117],"-local-axis ":[6233,6234,7100,7115,7116,7117],"local-axis y":[6233,6234,6246,6247,7115,7116,7131,7132],"ocal-axis y ":[6233,6234,6246,6247,7115,7116,7131,7132],"cal-axis y t":[6233,6234,6246,6247,7115,7116,7131,7132],"al-axis y to":[6233,6234,6246,6247,7115,7116,7131,7132],"l-axis y to ":[6233,6234,6246,6247,7115,7116,7131,7132],"-axis y to o":[6233,6234,6246,6247,7115,7116,7131,7132],"axis y to ob":[6233,6234,6246,6247,7115,7116,7131,7132],"xis y to obt":[6233,6234,6246,6247,7115,7116,7131,7132],"is y to obta":[6233,6234,6246,6247,7115,7116,7131,7132],"s y to obtai":[6233,6234,6246,6247,7115,7116,7131,7132]," y to obtain":[6233,6234,6246,6247,7115,7116,7131,7132],"fig 6b rotat":[6234],"ig 6b rotate":[6234],"g 6b rotate ":[6234]," 6b rotate a":[6234],"6b rotate ab":[6234],"b rotate abo":[6234,6247],"tate about w":[6234,6235],"ate about wo":[6234,6235],"te about wor":[6234,6235],"e about worl":[6234,6235]," about world":[6234,6235],"about world-":[6234],"bout world-l":[6234],"out world-lo":[6234],"ut world-loc":[6234],"t world-loca":[6234],"y to obtain ":[6234,6247]," to obtain  ":[6234,6247],"fig 6c rotat":[6235],"ig 6c rotate":[6235],"g 6c rotate ":[6235]," 6c rotate a":[6235],"6c rotate ab":[6235],"c rotate abo":[6235,6248],"about world ":[6235],"bout world l":[6235],"out world lo":[6235],"ut world loc":[6235],"t world loca":[6235]," world local":[6235],"world local ":[6235],"orld local a":[6235],"rld local ax":[6235],"ld local axi":[6235],"d local axis":[6235],"local axis x":[6235],"ocal axis x ":[6235],"cal axis x t":[6235],"al axis x to":[6235],"l axis x to ":[6235]," axis x to o":[6235],"axis x to ob":[6235,6248,7117,7133],"xis x to obt":[6235,6248,7117,7133],"is x to obta":[6235,6248,7117,7133],"s x to obtai":[6235,6248,7117,7133]," x to obtain":[6235,6248,7117,7133],"[demo 8](htt":[6238],"demo 8](http":[6238],"emo 8](http:":[6238],"mo 8](http:/":[6238],"o 8](http://":[6238]," 8](http://w":[6238],"8](http://ww":[6238],"om/#umr7m#17":[6238],"m/#umr7m#17)":[6238],"/#umr7m#17) ":[6238],"#umr7m#17) s":[6238],"umr7m#17) sh":[6238],"mr7m#17) sho":[6238],"r7m#17) show":[6238],"7m#17) shows":[6238],"m#17) shows ":[6238],"#17) shows t":[6238],"17) shows th":[6238],"7) shows tha":[6238]," rotations t":[6238],"d the local-":[6238,7122]," the local-a":[6238,7107,7122,7123],"the local-ax":[6238,7107,7122,7123],"he local-axe":[6238,7107,7122,7123],"e local-axes":[6238,7107,7122,7123],"ulative. the":[6238],"lative. the ":[6238],"ative. the s":[6238],"tive. the st":[6238],"ive. the sta":[6238],"ve. the stag":[6238],"e. the stage":[6238],". the stages":[6238]," the stages ":[6238],"the stages a":[6238],"he stages ar":[6238],"e stages are":[6238]," stages are ":[6238],"stages are s":[6238],"tages are sh":[6238],"ages are sho":[6238],"ges are show":[6238],"es are shown":[6238],"s are shown ":[6238]," are shown i":[6238],"are shown in":[6238],"re shown in ":[6238],"e shown in f":[6238],"hown in figs":[6238],"own in figs ":[6238],"wn in figs 7":[6238],"n in figs 7a":[6238]," in figs 7a,":[6238],"in figs 7a, ":[6238],"n figs 7a, b":[6238]," figs 7a, b,":[6238],"figs 7a, b, ":[6238],"igs 7a, b, c":[6238],"gs 7a, b, c,":[6238],"s 7a, b, c, ":[6238]," 7a, b, c, d":[6238],"7a, b, c, d,":[6238],"a, b, c, d, ":[6238],", b, c, d, e":[6238],"ntent.com/-9":[6239,7126],"tent.com/-9l":[6239],"ent.com/-9lh":[6239],"nt.com/-9lhi":[6239],"t.com/-9lhig":[6239],".com/-9lhiga":[6239],"com/-9lhigaa":[6239],"om/-9lhigaan":[6239],"m/-9lhigaank":[6239],"/-9lhigaankr":[6239],"-9lhigaankru":[6239],"9lhigaankru/":[6239],"lhigaankru/v":[6239],"higaankru/vw":[6239],"igaankru/vw2":[6239],"gaankru/vw2q":[6239],"aankru/vw2q3":[6239],"ankru/vw2q3t":[6239],"nkru/vw2q3t2":[6239],"kru/vw2q3t2k":[6239],"ru/vw2q3t2kx":[6239],"u/vw2q3t2kxf":[6239],"/vw2q3t2kxfi":[6239],"vw2q3t2kxfi/":[6239],"w2q3t2kxfi/a":[6239],"2q3t2kxfi/aa":[6239],"q3t2kxfi/aaa":[6239],"3t2kxfi/aaaa":[6239],"t2kxfi/aaaaa":[6239],"2kxfi/aaaaaa":[6239],"kxfi/aaaaaaa":[6239],"xfi/aaaaaaaa":[6239],"fi/aaaaaaaaa":[6239],"/aaaaaaaaaec":[6239],"aaaaaaaaaec/":[6239],"aaaaaaaaec/0":[6239],"aaaaaaaec/0q":[6239],"aaaaaaec/0q0":[6239],"aaaaaec/0q0-":[6239],"aaaaec/0q0-f":[6239],"aaaec/0q0-fq":[6239],"aaec/0q0-fqr":[6239],"aec/0q0-fqr9":[6239],"ec/0q0-fqr9s":[6239],"c/0q0-fqr9si":[6239],"/0q0-fqr9sie":[6239],"0q0-fqr9sie/":[6239],"q0-fqr9sie/s":[6239],"0-fqr9sie/s2":[6239],"-fqr9sie/s21":[6239],"fqr9sie/s210":[6239],"qr9sie/s210/":[6239],"r9sie/s210/f":[6239],"9sie/s210/fi":[6239],"sie/s210/fig":[6239],"ie/s210/fig7":[6239],"e/s210/fig7a":[6239],"/s210/fig7a.":[6239],"s210/fig7a.j":[6239],"210/fig7a.jp":[6239],"10/fig7a.jpg":[6239],"0/fig7a.jpg)":[6239],"ntent.com/-d":[6240,6256,6257],"tent.com/-dp":[6240],"ent.com/-dpp":[6240],"nt.com/-dpp7":[6240],"t.com/-dpp79":[6240],".com/-dpp79s":[6240],"com/-dpp79so":[6240],"om/-dpp79soi":[6240],"m/-dpp79soif":[6240],"/-dpp79soifm":[6240],"-dpp79soifmg":[6240],"dpp79soifmg/":[6240],"pp79soifmg/v":[6240],"p79soifmg/vw":[6240],"79soifmg/vw2":[6240],"9soifmg/vw2q":[6240],"soifmg/vw2q3":[6240],"oifmg/vw2q3w":[6240],"ifmg/vw2q3we":[6240],"fmg/vw2q3wem":[6240],"mg/vw2q3wemw":[6240],"g/vw2q3wemws":[6240],"/vw2q3wemwsi":[6240],"vw2q3wemwsi/":[6240],"w2q3wemwsi/a":[6240],"2q3wemwsi/aa":[6240],"q3wemwsi/aaa":[6240],"3wemwsi/aaaa":[6240],"wemwsi/aaaaa":[6240],"emwsi/aaaaaa":[6240],"mwsi/aaaaaaa":[6240],"wsi/aaaaaaaa":[6240],"/aaaaaaaaaem":[6240],"aaaaaaaaaem/":[6240],"aaaaaaaaem/a":[6240],"aaaaaaaem/ao":[6240],"aaaaaaem/aow":[6240],"aaaaaem/aowe":[6240],"aaaaem/aowev":[6240],"aaaem/aowev1":[6240],"aaem/aowev1t":[6240],"aem/aowev1t4":[6240],"em/aowev1t4o":[6240],"m/aowev1t4od":[6240],"/aowev1t4odu":[6240],"aowev1t4odu/":[6240],"owev1t4odu/s":[6240],"wev1t4odu/s2":[6240],"ev1t4odu/s21":[6240],"v1t4odu/s210":[6240],"1t4odu/s210/":[6240],"t4odu/s210/f":[6240],"4odu/s210/fi":[6240],"odu/s210/fig":[6240],"du/s210/fig7":[6240],"u/s210/fig7b":[6240],"/s210/fig7b.":[6240],"s210/fig7b.j":[6240],"210/fig7b.jp":[6240],"10/fig7b.jpg":[6240],"0/fig7b.jpg)":[6240],"ntent.com/-n":[6241,7111],"tent.com/-ny":[6241],"ent.com/-nyb":[6241],"nt.com/-nybw":[6241],"t.com/-nybw5":[6241],".com/-nybw5e":[6241],"com/-nybw5er":[6241],"om/-nybw5ert":[6241],"m/-nybw5ertf":[6241],"/-nybw5ertfg":[6241],"-nybw5ertfgc":[6241],"nybw5ertfgc/":[6241],"ybw5ertfgc/v":[6241],"bw5ertfgc/vw":[6241],"w5ertfgc/vw2":[6241],"5ertfgc/vw2q":[6241],"ertfgc/vw2q4":[6241],"rtfgc/vw2q4z":[6241],"tfgc/vw2q4z4":[6241],"fgc/vw2q4z4i":[6241],"gc/vw2q4z4iv":[6241],"c/vw2q4z4ivw":[6241],"/vw2q4z4ivwi":[6241],"vw2q4z4ivwi/":[6241],"w2q4z4ivwi/a":[6241],"2q4z4ivwi/aa":[6241],"q4z4ivwi/aaa":[6241],"4z4ivwi/aaaa":[6241],"z4ivwi/aaaaa":[6241],"4ivwi/aaaaaa":[6241],"ivwi/aaaaaaa":[6241],"vwi/aaaaaaaa":[6241],"wi/aaaaaaaaa":[6241,7127,7135],"/aaaaaaaaaeg":[6241],"aaaaaaaaaeg/":[6241],"aaaaaaaaeg/i":[6241],"aaaaaaaeg/i1":[6241],"aaaaaaeg/i1z":[6241],"aaaaaeg/i1zc":[6241],"aaaaeg/i1zcm":[6241],"aaaeg/i1zcmb":[6241],"aaeg/i1zcmbc":[6241],"aeg/i1zcmbcj":[6241],"eg/i1zcmbcjb":[6241],"g/i1zcmbcjbn":[6241],"/i1zcmbcjbni":[6241],"i1zcmbcjbni/":[6241],"1zcmbcjbni/s":[6241],"zcmbcjbni/s2":[6241],"cmbcjbni/s21":[6241],"mbcjbni/s210":[6241],"bcjbni/s210/":[6241],"cjbni/s210/f":[6241],"jbni/s210/fi":[6241],"bni/s210/fig":[6241],"ni/s210/fig7":[6241],"i/s210/fig7c":[6241],"/s210/fig7c.":[6241],"s210/fig7c.j":[6241],"210/fig7c.jp":[6241],"10/fig7c.jpg":[6241],"0/fig7c.jpg)":[6241],"ntent.com/-w":[6242],"tent.com/-wc":[6242],"ent.com/-wc2":[6242],"nt.com/-wc2z":[6242],"t.com/-wc2zc":[6242],".com/-wc2zcw":[6242],"com/-wc2zcwt":[6242],"om/-wc2zcwtc":[6242],"m/-wc2zcwtce":[6242],"/-wc2zcwtce9":[6242],"-wc2zcwtce9i":[6242],"wc2zcwtce9i/":[6242],"c2zcwtce9i/v":[6242],"2zcwtce9i/vw":[6242],"zcwtce9i/vw2":[6242],"cwtce9i/vw2q":[6242],"wtce9i/vw2q4":[6242],"tce9i/vw2q4_":[6242],"ce9i/vw2q4_-":[6242],"e9i/vw2q4_-s":[6242],"9i/vw2q4_-s6":[6242],"i/vw2q4_-s6g":[6242],"/vw2q4_-s6gi":[6242],"vw2q4_-s6gi/":[6242],"w2q4_-s6gi/a":[6242],"2q4_-s6gi/aa":[6242],"q4_-s6gi/aaa":[6242],"4_-s6gi/aaaa":[6242],"_-s6gi/aaaaa":[6242],"-s6gi/aaaaaa":[6242],"s6gi/aaaaaaa":[6242],"6gi/aaaaaaaa":[6242],"/aaaaaaaaaek":[6242],"aaaaaaaaaek/":[6242],"aaaaaaaaek/a":[6242],"aaaaaaaek/ap":[6242],"aaaaaaek/apm":[6242],"aaaaaek/apmb":[6242],"aaaaek/apmbi":[6242],"aaaek/apmbi9":[6242],"aaek/apmbi9o":[6242],"aek/apmbi9o4":[6242],"ek/apmbi9o4d":[6242],"k/apmbi9o4dq":[6242],"/apmbi9o4dq0":[6242],"apmbi9o4dq0/":[6242],"pmbi9o4dq0/s":[6242],"mbi9o4dq0/s2":[6242],"bi9o4dq0/s21":[6242],"i9o4dq0/s210":[6242],"9o4dq0/s210/":[6242],"o4dq0/s210/f":[6242],"4dq0/s210/fi":[6242],"dq0/s210/fig":[6242],"q0/s210/fig7":[6242],"0/s210/fig7d":[6242],"/s210/fig7d.":[6242],"s210/fig7d.j":[6242],"210/fig7d.jp":[6242],"10/fig7d.jpg":[6242],"0/fig7d.jpg)":[6242],"ntent.com/-c":[6243],"tent.com/-cc":[6243],"ent.com/-ccx":[6243],"nt.com/-ccxh":[6243],"t.com/-ccxhj":[6243],".com/-ccxhj4":[6243],"com/-ccxhj4d":[6243],"om/-ccxhj4dm":[6243],"m/-ccxhj4dm7":[6243],"/-ccxhj4dm7s":[6243],"-ccxhj4dm7s4":[6243],"ccxhj4dm7s4/":[6243],"cxhj4dm7s4/v":[6243],"xhj4dm7s4/vw":[6243],"hj4dm7s4/vw2":[6243],"j4dm7s4/vw2q":[6243],"4dm7s4/vw2q6":[6243],"dm7s4/vw2q6n":[6243],"m7s4/vw2q6ng":[6243],"7s4/vw2q6ngy":[6243],"s4/vw2q6ngyz":[6243],"4/vw2q6ngyz8":[6243],"/vw2q6ngyz8i":[6243],"vw2q6ngyz8i/":[6243],"w2q6ngyz8i/a":[6243],"2q6ngyz8i/aa":[6243],"q6ngyz8i/aaa":[6243],"6ngyz8i/aaaa":[6243],"ngyz8i/aaaaa":[6243],"gyz8i/aaaaaa":[6243],"yz8i/aaaaaaa":[6243],"z8i/aaaaaaaa":[6243],"/aaaaaaaaae8":[6243],"aaaaaaaaae8/":[6243],"aaaaaaaae8/g":[6243],"aaaaaaae8/gq":[6243],"aaaaaae8/gqh":[6243],"aaaaae8/gqhh":[6243],"aaaae8/gqhh_":[6243],"aaae8/gqhh_6":[6243],"aae8/gqhh_6c":[6243],"ae8/gqhh_6cg":[6243],"e8/gqhh_6cgl":[6243],"8/gqhh_6cgla":[6243],"/gqhh_6cglau":[6243],"gqhh_6cglau/":[6243],"qhh_6cglau/s":[6243],"hh_6cglau/s2":[6243],"h_6cglau/s21":[6243],"_6cglau/s210":[6243],"6cglau/s210/":[6243],"cglau/s210/f":[6243],"glau/s210/fi":[6243],"lau/s210/fig":[6243],"au/s210/fig7":[6243],"u/s210/fig7e":[6243],"/s210/fig7e.":[6243],"s210/fig7e.j":[6243],"210/fig7e.jp":[6243],"10/fig7e.jpg":[6243],"0/fig7e.jpg)":[6243],"       fig 7":[6244],"      fig 7a":[6244],"     fig 7a ":[6244],"    fig 7a  ":[6244],"   fig 7a   ":[6244],"  fig 7a    ":[6244]," fig 7a     ":[6244],"fig 7a      ":[6244],"ig 7a       ":[6244],"g 7a        ":[6244]," 7a         ":[6244],"7a          ":[6244],"        fig7":[6244],"       fig7b":[6244],"      fig7b ":[6244],"     fig7b  ":[6244],"    fig7b   ":[6244],"   fig7b    ":[6244],"  fig7b     ":[6244]," fig7b      ":[6244],"fig7b       ":[6244],"ig7b        ":[6244],"g7b         ":[6244],"7b          ":[6244],"      fig 7c":[6244],"     fig 7c ":[6244],"    fig 7c  ":[6244],"   fig 7c   ":[6244],"  fig 7c    ":[6244]," fig 7c     ":[6244],"fig 7c      ":[6244],"ig 7c       ":[6244],"g 7c        ":[6244]," 7c         ":[6244],"7c          ":[6244],"      fig 7d":[6244],"     fig 7d ":[6244],"    fig 7d  ":[6244],"   fig 7d   ":[6244],"  fig 7d    ":[6244]," fig 7d     ":[6244],"fig 7d      ":[6244],"ig 7d       ":[6244],"g 7d        ":[6244]," 7d         ":[6244],"7d          ":[6244],"d           ":[6244],"      fig 7e":[6244],"fig 7a rotat":[6246],"ig 7a rotate":[6246],"g 7a rotate ":[6246]," 7a rotate a":[6246],"7a rotate ab":[6246],"tate about l":[6246,6247,6248,6249],"ate about lo":[6246,6247,6248,6249],"te about loc":[6246,6247,6248,6249],"e about loca":[6246,6247,6248,6249]," about local":[6246,6247,6248,6249],"about local-":[6246,6247,6248,6249],"bout local-a":[6246,6247,6248,6249],"out local-ax":[6246,6247,6248,6249],"ut local-axi":[6246,6247,6248,6249],"t local-axis":[6246,6247,6248,6249]," local-axis ":[6246,6247,6248,6249,7131,7132,7133],"fig 7b rotat":[6247],"ig 7b rotate":[6247],"g 7b rotate ":[6247]," 7b rotate a":[6247],"7b rotate ab":[6247],"fig 7c rotat":[6248],"ig 7c rotate":[6248],"g 7c rotate ":[6248]," 7c rotate a":[6248],"7c rotate ab":[6248],"local-axis x":[6248,7117,7133],"ocal-axis x ":[6248,7117,7133],"cal-axis x t":[6248,7117,7133],"al-axis x to":[6248,7117,7133],"l-axis x to ":[6248,7117,7133],"-axis x to o":[6248,7117,7133],"fig 7d rotat":[6249],"ig 7d rotate":[6249],"g 7d rotate ":[6249]," 7d rotate a":[6249],"7d rotate ab":[6249],"d rotate abo":[6249],"local-axis z":[6249],"ocal-axis z ":[6249],"cal-axis z t":[6249],"al-axis z to":[6249],"l-axis z to ":[6249],"-axis z to o":[6249],"axis z to ob":[6249],"xis z to obt":[6249],"is z to obta":[6249],"s z to obtai":[6249]," z to obtain":[6249],"###combining":[6251],"##combining ":[6251],"#combining t":[6251],"combining tr":[6251],"ombining tra":[6251],"mbining tran":[6251],"bining trans":[6251],"ining transl":[6251],"ning transla":[6251],"ing translat":[6251],"ng translate":[6251],"g translate ":[6251],"nd rotate###":[6251],"whether the ":[6252],"hether the p":[6252],"ether the pi":[6252],"ther the pil":[6252],"her the pilo":[6252],"er the pilot":[6252],"r the pilot ":[6252]," the pilot i":[6252],"the pilot is":[6252],"he pilot is ":[6252],"e pilot is r":[6252]," pilot is ro":[6252],"pilot is rot":[6252],"ilot is rota":[6252],"lot is rotat":[6252],"ot is rotate":[6252],"t is rotated":[6252],"is rotated i":[6252,6706],"s rotated in":[6252,6706]," rotated in ":[6252,6706],"rotated in t":[6252],"otated in th":[6252],"tated in the":[6252],"ted in the w":[6252],"ed in the wo":[6252],"d in the wor":[6252],"rld or the l":[6252],"ld or the lo":[6252],"d or the loc":[6252]," or the loca":[6252],"or the local":[6252],"r the local ":[6252],"cal space ap":[6252],"al space app":[6252],"l space appl":[6252]," space apply":[6252],"space applyi":[6252],"pace applyin":[6252],"ace applying":[6252],"ce applying ":[6252],"e applying p":[6252]," applying pi":[6252],"applying pil":[6252],"pplying pilo":[6252],"plying pilot":[6252],"lying pilot.":[6252],"ying pilot.t":[6252],"ing pilot.tr":[6252],"ng pilot.tra":[6252],"g pilot.tran":[6252],".translate i":[6252,6253],"translate in":[6252],"ranslate in ":[6252],"anslate in t":[6252],"nslate in th":[6252],"slate in the":[6252],"late in the ":[6252],"ate in the w":[6252],"te in the wo":[6252],"e in the wor":[6252],"d space is e":[6252]," space is es":[6252],"space is ess":[6252],"pace is esse":[6252],"ace is essen":[6252],"ce is essent":[6252],"e is essenti":[6252]," is essentia":[6252],"is essential":[6252],"s essentiall":[6252],"ssentially e":[6252],"sentially eq":[6252],"entially equ":[6252],"ntially equi":[6252],"tially equiv":[6252],"ially equiva":[6252],"ivalent to a":[6252],"valent to ap":[6252],"alent to app":[6252],"lent to appl":[6252],"ent to apply":[6252],"nt to applyi":[6252],"t to applyin":[6252]," to applying":[6252],"to applying ":[6252],"o applying p":[6252],"ying pilot.p":[6252],"ing pilot.po":[6252],"ng pilot.pos":[6252],"g pilot.posi":[6252],"t.position. ":[6252],"so what happ":[6253],"o what happe":[6253]," what happen":[6253],"ppens when p":[6253],"pens when pi":[6253],"ens when pil":[6253],"ns when pilo":[6253],"s when pilot":[6253]," when pilot.":[6253],"when pilot.t":[6253],"hen pilot.tr":[6253],"en pilot.tra":[6253],"n pilot.tran":[6253],"translate is":[6253],"ranslate is ":[6253],"anslate is a":[6253],"nslate is ap":[6253],"slate is app":[6253],"late is appl":[6253],"ate is appli":[6253],"te is applie":[6253],"e is applied":[6253],"is applied i":[6253],"s applied in":[6253]," applied in ":[6253],"applied in t":[6253],"pplied in th":[6253],"plied in the":[6253],"lied in the ":[6253],"ied in the l":[6253],"cal space af":[6253],"al space aft":[6253],"l space afte":[6253]," space after":[6253],"space after ":[6253],"pace after r":[6253],"ace after ro":[6253],"ce after rot":[6253],"e after rota":[6253]," after rotat":[6253],"after rotati":[6253],"fter rotatio":[6253],"ter rotation":[6253],"er rotations":[6253],"r rotations.":[6253],"firstly when":[6254],"irstly when ":[6254],"rstly when r":[6254],"stly when ro":[6254],"tly when rot":[6254],"ly when rota":[6254,7099],"y when rotat":[6254,7099],"n rotating i":[6254,7099]," rotating in":[6254,7099],"rotating in ":[6254,7099],"otating in t":[6254,7099],"tating in th":[6254,7099],"ating in the":[6254,7099],"ting in the ":[6254,7099],"ing in the w":[6254],"ng in the wo":[6254],"g in the wor":[6254],"orld space t":[6254],"rld space th":[6254],"ld space the":[6254],"d space the ":[6254]," space the w":[6254],"space the wo":[6254],"pace the wor":[6254],"ace the word":[6254],"ce the word-":[6254],"e the word-l":[6254]," the word-lo":[6254],"the word-loc":[6254],"he word-loca":[6254],"e word-local":[6254]," word-local-":[6254],"word-local-a":[6254],"ord-local-ax":[6254],"rd-local-axe":[6254],"ocal-axes ar":[6254,7099],"cal-axes are":[6254,7099],"al-axes are ":[6254,7099],"l-axes are u":[6254],"-axes are us":[6254],"axes are use":[6254,7099],"xes are used":[6254,7099],"s are used f":[6254,6658,7099]," are used fo":[6254,6651,6658,7099],"are used for":[6254,6651,6658,7099],"re used for ":[6254,6651,6658,7099],"e used for r":[6254,7099]," used for ro":[6254,7099],"used for rot":[6254,7099],"sed for rota":[6254,7099],"ed for rotat":[6254,7099],"d for rotati":[6254,7099]," for rotatio":[6254,7099],"for rotation":[6254,7099],"or rotation ":[6254,7099],"r rotation a":[6254,7099],"tation and t":[6254,7099],"ation and th":[6254,7099],"tion and the":[6254,7099],"ion and thes":[6254],"on and these":[6254],"n and these ":[6254],"nd these are":[6254],"d these are ":[6254],"ese are then":[6254],"se are then ":[6254],"e are then a":[6254]," are then al":[6254],"are then als":[6254],"re then also":[6254],"e then also ":[6254]," then also u":[6254],"then also us":[6254],"hen also use":[6254],"en also used":[6254],"n also used ":[6254],"o used for p":[6254]," used for pi":[6254,7099],"used for pil":[6254,7099],"sed for pilo":[6254,7099],"ed for pilot":[6254,7099],"d for pilot.":[6254,7099]," for pilot.t":[6254,7099],"for pilot.tr":[6254,7099],"or pilot.tra":[6254,7099],"r pilot.tran":[6254,7099]," distance, b":[6254,7099],"distance, ba":[6254,7099],"istance, bab":[6254,7099],"stance, baby":[6254,7099],"tance, babyl":[6254,7099],"ance, babylo":[6254,7099],"nce, babylon":[6254,7099],"ce, babylon.":[6254,7099],"pace.local).":[6254,7099],"ace.local). ":[6254,7099],"ce.local). s":[6254],"e.local). se":[6254],".local). see":[6254],"local). see ":[6254],"ocal). see f":[6254],"cal). see fi":[6254],"al). see fig":[6254],"l). see figs":[6254],"). see figs ":[6254],". see figs 8":[6254]," see figs 8a":[6254],"see figs 8a,":[6254],"ee figs 8a, ":[6254],"e figs 8a, b":[6254],"[demo 9](htt":[6255],"demo 9](http":[6255],"emo 9](http:":[6255],"mo 9](http:/":[6255],"o 9](http://":[6255]," 9](http://w":[6255],"9](http://ww":[6255],"om/#umr7m#20":[6255],"m/#umr7m#20)":[6255],"/#umr7m#20) ":[6255],"#umr7m#20) c":[6255],"umr7m#20) ca":[6255],"mr7m#20) can":[6255],"r7m#20) can ":[6255],"7m#20) can b":[6255],"m#20) can be":[6255],"#20) can be ":[6255],"20) can be u":[6255],"0) can be us":[6255],") can be use":[6255,7102,7105,7121],"be used to p":[6255,7102,7105,7121],"e used to pl":[6255,7102,7105,7121]," used to pla":[6255,7102,7105,7121],"used to play":[6255,7102,7105,7121],"sed to play ":[6255,7102,7105,7121],"ed to play w":[6255,7102,7105,7121],"d to play wi":[6255,7102,7105,7121]," play with w":[6255,7105],"play with wo":[6255,7105],"lay with wor":[6255,7105],"ay with worl":[6255,7105],"y with world":[6255,7105]," with world ":[6255,7105],"with world r":[6255,7105],"ith world ro":[6255,7105],"th world rot":[6255,7105],"h world rota":[6255,7105]," world rotat":[6255,7105],"world rotati":[6255,7105],"orld rotatio":[6255,7105],"rld rotation":[6255,7105],"ld rotations":[6255,7105],"d rotations ":[6255,7105],"otations fol":[6255,7102,7105,7121],"tations foll":[6255,7102,7105,7121],"ations follo":[6255,7102,7105,7121],"tions follow":[6255,7102,7105,7121],"ions followe":[6255,7102,7105,7121],"ons followed":[6255,7102,7105,7121],"ns followed ":[6255,7102,7105,7121],"s followed b":[6255,7102,7105,7121],"ollowed by l":[6255,7102],"llowed by lo":[6255,7102],"lowed by loc":[6255,7102],"owed by loca":[6255,7102],"wed by local":[6255,7102],"ed by local ":[6255,7102],"d by local t":[6255,7102]," by local tr":[6255,7102],"by local tra":[6255,7102],"y local tran":[6255,7102]," local trans":[6255,7102],"local transl":[6255,7102],"ocal transla":[6255,7102],"al translati":[6255,7102],"l translatio":[6255,7102],"tent.com/-df":[6256],"ent.com/-dfo":[6256],"nt.com/-dfok":[6256],"t.com/-dfoka":[6256],".com/-dfokau":[6256],"com/-dfokauk":[6256],"om/-dfokauku":[6256],"m/-dfokaukuh":[6256],"/-dfokaukuhc":[6256],"-dfokaukuhco":[6256],"dfokaukuhco/":[6256],"fokaukuhco/v":[6256],"okaukuhco/vw":[6256],"kaukuhco/vw2":[6256],"aukuhco/vw2q":[6256],"ukuhco/vw2q6":[6256],"kuhco/vw2q6j":[6256],"uhco/vw2q6jt":[6256],"hco/vw2q6jtu":[6256],"co/vw2q6jtus":[6256],"o/vw2q6jtus7":[6256],"/vw2q6jtus7i":[6256],"vw2q6jtus7i/":[6256],"w2q6jtus7i/a":[6256],"2q6jtus7i/aa":[6256],"q6jtus7i/aaa":[6256],"6jtus7i/aaaa":[6256],"jtus7i/aaaaa":[6256],"tus7i/aaaaaa":[6256],"us7i/aaaaaaa":[6256],"s7i/aaaaaaaa":[6256],"7i/aaaaaaaaa":[6256],"/aaaaaaaaafa":[6256],"aaaaaaaaafa/":[6256],"aaaaaaaafa/h":[6256],"aaaaaaafa/hy":[6256],"aaaaaafa/hys":[6256],"aaaaafa/hys5":[6256],"aaaafa/hys5m":[6256],"aaafa/hys5m-":[6256],"aafa/hys5m-c":[6256],"afa/hys5m-c3":[6256],"fa/hys5m-c3f":[6256],"a/hys5m-c3f5":[6256],"/hys5m-c3f5k":[6256],"hys5m-c3f5k/":[6256],"ys5m-c3f5k/s":[6256],"s5m-c3f5k/s2":[6256],"5m-c3f5k/s21":[6256],"m-c3f5k/s210":[6256],"-c3f5k/s210/":[6256],"c3f5k/s210/f":[6256],"3f5k/s210/fi":[6256],"f5k/s210/fig":[6256],"5k/s210/fig8":[6256],"k/s210/fig8a":[6256],"/s210/fig8a.":[6256],"s210/fig8a.j":[6256],"210/fig8a.jp":[6256],"10/fig8a.jpg":[6256],"0/fig8a.jpg)":[6256],"tent.com/-di":[6257],"ent.com/-di1":[6257],"nt.com/-di1i":[6257],"t.com/-di1ia":[6257],".com/-di1ian":[6257],"com/-di1ianz":[6257],"om/-di1ianzg":[6257],"m/-di1ianzgg":[6257],"/-di1ianzgge":[6257],"-di1ianzggeo":[6257],"di1ianzggeo/":[6257],"i1ianzggeo/v":[6257],"1ianzggeo/vw":[6257],"ianzggeo/vw2":[6257],"anzggeo/vw2q":[6257],"nzggeo/vw2q6":[6257],"zggeo/vw2q6v":[6257],"ggeo/vw2q6vj":[6257],"geo/vw2q6vjt":[6257],"eo/vw2q6vjte":[6257],"o/vw2q6vjtek":[6257],"/vw2q6vjteki":[6257],"vw2q6vjteki/":[6257],"w2q6vjteki/a":[6257],"2q6vjteki/aa":[6257],"q6vjteki/aaa":[6257],"6vjteki/aaaa":[6257],"vjteki/aaaaa":[6257],"jteki/aaaaaa":[6257],"teki/aaaaaaa":[6257],"eki/aaaaaaaa":[6257],"ki/aaaaaaaaa":[6257],"/aaaaaaaaae4":[6257],"aaaaaaaaae4/":[6257],"aaaaaaaae4/_":[6257],"aaaaaaae4/_c":[6257],"aaaaaae4/_cv":[6257],"aaaaae4/_cv4":[6257],"aaaae4/_cv4z":[6257],"aaae4/_cv4zz":[6257],"aae4/_cv4zzn":[6257],"ae4/_cv4zznf":[6257],"e4/_cv4zznfn":[6257],"4/_cv4zznfnw":[6257],"/_cv4zznfnw8":[6257],"_cv4zznfnw8/":[6257],"cv4zznfnw8/s":[6257],"v4zznfnw8/s2":[6257],"4zznfnw8/s21":[6257],"zznfnw8/s210":[6257],"znfnw8/s210/":[6257],"nfnw8/s210/f":[6257],"fnw8/s210/fi":[6257],"nw8/s210/fig":[6257],"w8/s210/fig8":[6257],"8/s210/fig8b":[6257],"/s210/fig8b.":[6257],"s210/fig8b.j":[6257],"210/fig8b.jp":[6257],"10/fig8b.jpg":[6257],"0/fig8b.jpg)":[6257],"       fig 8":[6258],"      fig 8a":[6258],"     fig 8a ":[6258],"    fig 8a  ":[6258],"   fig 8a   ":[6258],"  fig 8a    ":[6258]," fig 8a     ":[6258],"fig 8a      ":[6258],"ig 8a       ":[6258],"g 8a        ":[6258]," 8a         ":[6258],"8a          ":[6258],"        fig8":[6258],"       fig8b":[6258],"      fig8b ":[6258],"* to choose ":[6260]," to choose a":[6260],"to choose a ":[6260],"o choose a 2":[6260]," choose a 2d":[6260],"choose a 2d ":[6260],"hoose a 2d m":[6260],"oose a 2d ma":[6260],"ose a 2d mat":[6260],"se a 2d math":[6260],"e a 2d math ":[6260]," a 2d math c":[6260],"a 2d math cu":[6260]," 2d math cur":[6260],"2d math curv":[6260],"d math curve":[6260]," math curve,":[6260],"* to get its":[6261]," to get its ":[6261],"to get its p":[6261],"o get its pa":[6261]," get its par":[6261],"get its para":[6261],"et its param":[6261],"t its parame":[6261]," its paramet":[6261],"its parametr":[6261],"ts parametri":[6261],"s parametric":[6261],"ic equation,":[6261],"* to fill an":[6262]," to fill an ":[6262],"to fill an a":[6262],"o fill an ar":[6262]," fill an arr":[6262],"fill an arra":[6262],"ill an array":[6262],"ll an array ":[6262],"l an array w":[6262],"array with _":[6262],"rray with _v":[6262],"ray with _ve":[6262],"ay with _vec":[6262],"y with _vect":[6262],"vector3_ com":[6262],"ector3_ comp":[6262],"ctor3_ compu":[6262],"tor3_ comput":[6262],"or3_ compute":[6262],"r3_ computed":[6262],"3_ computed ":[6262],"_ computed w":[6262],"puted with a":[6262],"uted with a ":[6262],"ted with a s":[6262],"ed with a si":[6262],"d with a sim":[6262],"h a simple _":[6262]," a simple _f":[6262],"a simple _fo":[6262]," simple _for":[6262],"simple _for_":[6262],"imple _for_ ":[6262],"mple _for_ l":[6262],"ple _for_ lo":[6262],"le _for_ loo":[6262],"e _for_ loop":[6262,6329],"for_ loop it":[6262,6329],"or_ loop ite":[6262,6329],"r_ loop iter":[6262,6329],"_ loop itera":[6262,6329]," loop iterat":[6262,6329],"loop iterati":[6262,6329],"oop iteratin":[6262,6329],"op iterating":[6262,6329],"p iterating ":[6262,6329]," iterating o":[6262,6264,6329],"iterating on":[6262,6264,6329],"terating on ":[6262,6264,6329],"erating on t":[6262],"rating on th":[6262],"ating on the":[6262],"ting on the ":[6262],"ing on the n":[6262],"ng on the nu":[6262],"g on the num":[6262]," on the numb":[6262],"on the numbe":[6262],"n the number":[6262],"of points wa":[6262],"f points wan":[6262]," points want":[6262],"points wante":[6262],"oints wanted":[6262],"ints wanted ":[6262],"nts wanted (":[6262],"ts wanted (s":[6262],"s wanted (se":[6262]," wanted (set":[6262],"wanted (set ":[6262],"anted (set t":[6262],"nted (set th":[6262],"ted (set the":[6262],"ed (set them":[6262],"d (set them ":[6262]," (set them i":[6262],"(set them in":[6262],"set them in ":[6262],"et them in a":[6262],"t them in a ":[6262]," them in a 2":[6262],"them in a 2d":[6262],"hem in a 2d ":[6262],"em in a 2d p":[6262],"m in a 2d pl":[6262]," in a 2d pla":[6262],"in a 2d plan":[6262],"n a 2d plane":[6262]," a 2d plane ":[6262],"a 2d plane t":[6262]," 2d plane to":[6262],"2d plane to ":[6262],"d plane to s":[6262]," plane to st":[6262],"plane to sta":[6262],"lane to star":[6262],"ane to start":[6262],"ne to start,":[6262],"e to start, ":[6262]," to start, w":[6262],"to start, wi":[6262],"o start, wit":[6262]," start, with":[6262],"start, with ":[6262],"tart, with z":[6262],"art, with z ":[6262],"rt, with z =":[6262],"t, with z = ":[6262],", with z = 0":[6262]," with z = 0 ":[6262],"with z = 0 f":[6262],"ith z = 0 fo":[6262],"th z = 0 for":[6262],"h z = 0 for ":[6262]," z = 0 for i":[6262],"z = 0 for in":[6262]," = 0 for ins":[6262],"= 0 for inst":[6262]," 0 for insta":[6262],"0 for instan":[6262],"* to check y":[6263]," to check yo":[6263],"to check you":[6263],"o check your":[6263]," check your ":[6263],"check your c":[6263],"heck your cu":[6263],"eck your cur":[6263],"ck your curv":[6263],"k your curve":[6263],"your curve w":[6263],"our curve wi":[6263],"ur curve wit":[6263],"r curve with":[6263],"curve with _":[6263],"urve with _b":[6263],"rve with _ba":[6263],"ve with _bab":[6263],"e with _baby":[6263]," with _babyl":[6263,6265,6467],"with _babylo":[6263,6265,6467],"ith _babylon":[6263,6265,6467],"th _babylon.":[6263,6265,6467],"h _babylon.m":[6263,6265,6467],"eatelines(\"n":[6263,6265],"atelines(\"na":[6263,6265],"telines(\"nam":[6263,6265],"elines(\"name":[6263,6265],"lines(\"name\"":[6263,6265],"ines(\"name\",":[6263,6265],"nes(\"name\", ":[6263,6265],"es(\"name\", y":[6263,6265],"s(\"name\", yo":[6263,6265],"(\"name\", you":[6263,6265],"\"name\", your":[6263,6265],"name\", youra":[6263,6265],"ame\", yourar":[6263,6265],"me\", yourarr":[6263,6265],"e\", yourarra":[6263,6265],"\", yourarray":[6263,6265],", yourarray,":[6263,6265]," yourarray, ":[6263,6265],"yourarray, s":[6263,6265],"ourarray, sc":[6263,6265],"urarray, sce":[6263,6265],"rarray, scen":[6263,6265],"ray, scene)_":[6263,6265],"ay, scene)_,":[6263],"* to derivat":[6264]," to derivate":[6264],"to derivate ":[6264],"o derivate y":[6264]," derivate yo":[6264],"derivate you":[6264],"erivate your":[6264],"rivate your ":[6264],"ivate your f":[6264],"vate your fi":[6264],"your first c":[6264],"our first cu":[6264],"ur first cur":[6264],"r first curv":[6264],"irst curve b":[6264],"rst curve by":[6264],"st curve by ":[6264],"t curve by v":[6264]," curve by va":[6264],"curve by var":[6264],"urve by vary":[6264],"rve by varyi":[6264],"ve by varyin":[6264],"e by varying":[6264]," by varying ":[6264],"by varying _":[6264],"y varying _x":[6264]," varying _x_":[6264],"varying _x_ ":[6264],"arying _x_ o":[6264],"rying _x_ or":[6264],"ying _x_ or ":[6264],"ing _x_ or _":[6264],"ng _x_ or _y":[6264],"g _x_ or _y_":[6264]," _x_ or _y_ ":[6264],"_x_ or _y_ a":[6264],"x_ or _y_ an":[6264],"_ or _y_ and":[6264]," or _y_ and ":[6264],"or _y_ and i":[6264],"r _y_ and it":[6264]," _y_ and ite":[6264],"_y_ and iter":[6264],"y_ and itera":[6264],"_ and iterat":[6264]," and iterati":[6264,6325],"and iteratin":[6264],"nd iterating":[6264],"d iterating ":[6264],"erating on _":[6264,6329],"rating on _z":[6264],"ating on _z_":[6264],"ting on _z_ ":[6264],"ing on _z_ s":[6264],"ng on _z_ si":[6264],"g on _z_ sin":[6264]," on _z_ sinc":[6264],"on _z_ since":[6264],"n _z_ since ":[6264]," _z_ since a":[6264],"_z_ since ad":[6264],"z_ since add":[6264],"_ since addi":[6264]," since addin":[6264],"since adding":[6264],"ince adding ":[6264],"nce adding e":[6264],"ce adding ea":[6264],"e adding eac":[6264]," adding each":[6264],"adding each ":[6264],"dding each d":[6264],"ding each de":[6264],"ing each der":[6264],"ng each deri":[6264],"g each deriv":[6264]," each deriva":[6264],"each derivat":[6264],"ach derivate":[6264],"ch derivated":[6264],"h derivated ":[6264]," derivated p":[6264],"derivated pa":[6264],"erivated pat":[6264],"rivated path":[6264],"ivated path ":[6264],"vated path i":[6264],"ated path in":[6264],"ted path int":[6264],"ed path into":[6264],"d path into ":[6264]," path into a":[6264],"path into a ":[6264],"ath into a _":[6264],"th into a _p":[6264],"h into a _pa":[6264]," into a _pat":[6264],"into a _path":[6264],"nto a _paths":[6264],"to a _paths_":[6264],"o a _paths_ ":[6264]," a _paths_ a":[6264],"a _paths_ ar":[6264],"aths_ array,":[6264],"* to check a":[6265]," to check ag":[6265],"to check aga":[6265],"o check agai":[6265]," check again":[6265],"check again ":[6265],"heck again w":[6265],"eck again wi":[6265],"ck again wit":[6265],"k again with":[6265]," again with ":[6265],"again with _":[6265],"gain with _b":[6265],"ain with _ba":[6265],"in with _bab":[6265],"n with _baby":[6265],"ay, scene)_ ":[6265],"y, scene)_ o":[6265],", scene)_ on":[6265]," scene)_ on ":[6265],"scene)_ on e":[6265],"cene)_ on ea":[6265],"ene)_ on eac":[6265],"ne)_ on each":[6265],"e)_ on each ":[6265],")_ on each _":[6265],"_ on each _z":[6265]," on each _z_":[6265],"on each _z_ ":[6265],"n each _z_ i":[6265]," each _z_ it":[6265],"each _z_ ite":[6265],"ach _z_ iter":[6265],"ch _z_ itera":[6265],"h _z_ iterat":[6265]," _z_ iterati":[6265],"_z_ iteratio":[6265],"z_ iteration":[6265],"_ iteration,":[6265],"* to finally":[6266]," to finally ":[6266],"to finally b":[6266],"o finally bu":[6266]," finally bui":[6266],"finally buil":[6266],"inally build":[6266],"nally build ":[6266],"ally build y":[6266],"lly build yo":[6266],"ly build you":[6266],"y build your":[6266]," build your ":[6266],"build your r":[6266],"uild your ri":[6266],"ild your rib":[6266],"ld your ribb":[6266],"d your ribbo":[6266]," your ribbon":[6266],"your ribbon ":[6266],"our ribbon w":[6266],"ur ribbon wi":[6266],"ibbon with t":[6266],"bbon with th":[6266],"bon with the":[6266],"n with the _":[6266]," with the _p":[6266],"with the _pa":[6266],"ith the _pat":[6266],"th the _path":[6266],"h the _paths":[6266],"he _paths_ a":[6266],"e _paths_ ar":[6266],"aths_ array.":[6266],"ths_ array. ":[6266],"## from basi":[6267],"# from basic":[6267]," from basic ":[6267],"from basic s":[6267],"rom basic sh":[6267],"om basic sha":[6267],"m basic shap":[6267],"sic shapes t":[6267],"ic shapes to":[6267],"c shapes to ":[6267]," shapes to c":[6267],"shapes to co":[6267],"hapes to com":[6267],"apes to comp":[6267],"pes to compl":[6267],"es to comple":[6267],"s to complex":[6267]," to complex ":[6267],"to complex o":[6267],"o complex on":[6267]," complex one":[6267],"complex ones":[6267],"on is very v":[6268],"n is very ve":[6268]," is very ver":[6268],"is very vers":[6268],"s very versa":[6268]," very versat":[6268],"very versati":[6268],"ery versatil":[6268],"ry versatile":[6268],"y versatile.":[6268]," versatile. ":[6268],"versatile. s":[6268],"ersatile. so":[6268],"rsatile. so ":[6268],"satile. so y":[6268],"atile. so yo":[6268],"tile. so you":[6268],"ile. so you ":[6268],"le. so you c":[6268],"e. so you ca":[6268],". so you can":[6268,6475],"so you can r":[6268],"o you can re":[6268]," you can red":[6268],"you can redo":[6268],"ou can redo ":[6268],"u can redo e":[6268]," can redo ev":[6268],"can redo eve":[6268],"an redo ever":[6268],"n redo every":[6268]," redo every ":[6268],"redo every b":[6268],"edo every ba":[6268],"do every bab":[6268],"o every baby":[6268]," every babyl":[6268],"every babylo":[6268],"very babylon":[6268],"ery babylonj":[6268],"ry babylonjs":[6268]," babylonjs b":[6268],"babylonjs ba":[6268],"abylonjs bas":[6268],"bylonjs basi":[6268],"ylonjs basic":[6268],"lonjs basic ":[6268],"onjs basic s":[6268],"njs basic sh":[6268],"js basic sha":[6268,6272,6273],"s basic shap":[6268,6272,6273],"asic shapes.":[6268,6270,6272,6273],"sic shapes. ":[6268,6270],"ic shapes.  ":[6268,6270],"c shapes.   ":[6268,6270]," would you w":[6269],"would you wa":[6269],"ould you wan":[6269],"uld you want":[6269],"ld you want ":[6269],"d you want t":[6269]," want to do ":[6269],"want to do t":[6269],"ant to do th":[6269],"nt to do thi":[6269],"t to do this":[6269]," to do this ":[6269],"to do this ?":[6269],"o do this ? ":[6269],"well, you pr":[6270],"ell, you pro":[6270],"ll, you prob":[6270],"l, you proba":[6270],", you probab":[6270]," you probabl":[6270],"you probably":[6270],"ou probably ":[6270],"u probably d":[6270]," probably do":[6270],"probably don":[6270],"robably don'":[6270],"obably don't":[6270],"bably don't.":[6270],"ably don't. ":[6270],"bly don't. t":[6270],"ly don't. th":[6270],"y don't. the":[6270]," don't. ther":[6270],"don't. there":[6270],"on't. there ":[6270],"n't. there i":[6270],"'t. there is":[6270],"t. there is ":[6270],". there is n":[6270],"no need to r":[6270],"o need to re":[6270]," need to re-":[6270],"need to re-i":[6270],"eed to re-in":[6270],"ed to re-inv":[6270],"d to re-inve":[6270]," to re-inven":[6270],"to re-invent":[6270],"o re-invent ":[6270]," re-invent t":[6270],"re-invent th":[6270],"e-invent the":[6270],"-invent the ":[6270],"invent the w":[6270],"nvent the wh":[6270],"vent the whe":[6270],"ent the whee":[6270],"nt the wheel":[6270],"t the wheel.":[6270]," the wheel. ":[6270],"the wheel. b":[6270],"he wheel. bu":[6270],"e wheel. but":[6270]," wheel. but ":[6270],"wheel. but y":[6270],"heel. but yo":[6270],"eel. but you":[6270],"el. but you ":[6270],"l. but you c":[6270,6537],". but you co":[6270]," you could n":[6270],"you could ne":[6270],"ou could nee":[6270],"u could need":[6270]," could need ":[6270],"could need t":[6270],"ould need to":[6270],"uld need to ":[6270],"ld need to m":[6270],"d need to mo":[6270]," need to mod":[6270],"need to mode":[6270],"eed to model":[6270],"ed to model ":[6270],"d to model y":[6270]," to model yo":[6270],"to model you":[6270],"o model your":[6270]," model your ":[6270],"model your o":[6270],"odel your ow":[6270],"del your own":[6270],"el your own ":[6270],"l your own s":[6270],"our own shap":[6270],"ur own shape":[6270],"r own shape ":[6270]," own shape w":[6270],"own shape wh":[6270],"wn shape whi":[6270],"n shape whic":[6270]," shape which":[6270],"shape which ":[6270],"hape which d":[6270],"ape which de":[6270],"pe which der":[6270],"e which deri":[6270]," which deriv":[6270],"which deriva":[6270],"hich derivat":[6270],"ich derivate":[6270],"ch derivates":[6270],"h derivates ":[6270]," derivates f":[6270],"derivates fr":[6270],"erivates fro":[6270],"rivates from":[6270],"ivates from ":[6270],"vates from o":[6270],"ates from on":[6270],"tes from one":[6270],"es from one ":[6270],"s from one o":[6270]," from one of":[6270],"from one of ":[6270],"rom one of t":[6270],"om one of th":[6270],"m one of the":[6270],"one of the b":[6270],"ne of the ba":[6270],"e of the bas":[6270]," of the basi":[6270],"of the basic":[6270],"f the basic ":[6270],"the basic sh":[6270],"he basic sha":[6270],"the main rul":[6271],"he main rule":[6271],"e main rule ":[6271]," main rule s":[6271],"main rule sh":[6271],"ain rule sho":[6271],"in rule shou":[6271],"n rule shoul":[6271]," rule should":[6271],"rule should ":[6271],"ule should b":[6271],"le should be":[6271]," should be :":[6271],"should be : ":[6271],"hould be :  ":[6271],"you need a b":[6272],"ou need a ba":[6272],"u need a bas":[6272]," need a basi":[6272],"need a basic":[6272],"eed a basic ":[6272],"ed a basic s":[6272],"d a basic sh":[6272],"asic shape a":[6272],"sic shape as":[6272],"ic shape as ":[6272],"c shape as i":[6272]," shape as it":[6272],"shape as it ":[6272],"hape as it s":[6272],"ape as it st":[6272],"pe as it sta":[6272],"e as it stan":[6272]," as it stand":[6272],"as it stands":[6272],"s it stands,":[6272]," it stands, ":[6272],"it stands, t":[6272],"t stands, th":[6272]," stands, the":[6272],"stands, then":[6272],"tands, then ":[6272],"ands, then u":[6272],"nds, then us":[6272],"ds, then use":[6272],"s, then use ":[6272,6273,6274],", then use t":[6272,6274,6275],"en use the p":[6272],"n use the pr":[6272]," use the pro":[6272],"use the prov":[6272],"se the provi":[6272],"e provided b":[6272,6273]," provided bj":[6272,6273],"provided bjs":[6272,6273],"rovided bjs ":[6272,6273],"ovided bjs b":[6272,6273],"vided bjs ba":[6272,6273],"ided bjs bas":[6272,6273],"ded bjs basi":[6272,6273],"ed bjs basic":[6272,6273],"d bjs basic ":[6272,6273]," bjs basic s":[6272,6273],"bjs basic sh":[6272,6273],"ou need a sh":[6273],"u need a sha":[6273]," need a shap":[6273],"need a shape":[6273],"eed a shape ":[6273],"ed a shape m":[6273],"d a shape ma":[6273]," a shape mad":[6273],"a shape made":[6273]," shape made ":[6273],"shape made u":[6273],"hape made up":[6273],"ape made up ":[6273],"pe made up o":[6273],"e made up of":[6273]," made up of ":[6273],"made up of m":[6273],"ade up of ma":[6273],"de up of man":[6273],"e up of many":[6273]," up of many ":[6273],"up of many b":[6273],"p of many ba":[6273]," of many bas":[6273],"of many basi":[6273],"f many basic":[6273]," many basic ":[6273],"many basic s":[6273],"any basic sh":[6273],"ny basic sha":[6273],"y basic shap":[6273],"asic shapes,":[6273],"sic shapes, ":[6273],"ic shapes, t":[6273],"c shapes, th":[6273]," shapes, the":[6273],"shapes, then":[6273],"hapes, then ":[6273],"apes, then u":[6273],"pes, then us":[6273],"es, then use":[6273],", then use c":[6273]," then use co":[6273],"then use con":[6273],"hen use cons":[6273],"en use const":[6273],"n use constr":[6273]," use constru":[6273],"use construc":[6273],"se construct":[6273],"lid geometry":[6273],"id geometry ":[6273],"d geometry o":[6273]," geometry or":[6273],"geometry or ":[6273],"eometry or m":[6273],"ometry or me":[6273],"metry or mer":[6273],"etry or merg":[6273],"try or merge":[6273],"ry or merge ":[6273],"y or merge p":[6273]," or merge pr":[6273],"or merge pro":[6273],"r merge prov":[6273]," merge provi":[6273],"merge provid":[6273],"erge provide":[6273],"rge provided":[6273],"ge provided ":[6273],"you need a c":[6274],"ou need a co":[6274],"u need a com":[6274]," need a comp":[6274],"need a compu":[6274],"eed a comput":[6274],"ed a compute":[6274],"d a computed":[6274]," a computed ":[6274],"a computed s":[6274],"puted shape ":[6274],"uted shape h":[6274],"ted shape ha":[6274],"ed shape hav":[6274],"d shape havi":[6274]," shape havin":[6274],"shape having":[6274],"hape having ":[6274],"ape having a":[6274],"pe having a ":[6274],"e having a s":[6274]," having a sy":[6274],"having a sym":[6274],"aving a syme":[6274],"ving a symet":[6274],"ing a symetr":[6274],"ng a symetry":[6274],"g a symetry ":[6274]," a symetry a":[6274],"a symetry ax":[6274]," symetry axi":[6274],"symetry axis":[6274],"ymetry axis,":[6274],"metry axis, ":[6274],"etry axis, t":[6274],"try axis, th":[6274],"ry axis, the":[6274],"y axis, then":[6274]," axis, then ":[6274],"axis, then u":[6274],"xis, then us":[6274],"is, then use":[6274],"n use the tu":[6274]," use the tub":[6274],"use the tube":[6274],"se the tube ":[6274],"e the tube m":[6274],"e tube mesh ":[6274]," tube mesh o":[6274,6363],"tube mesh or":[6274,6363],"ube mesh or ":[6274,6363],"be mesh or t":[6274],"e mesh or th":[6274]," mesh or the":[6274],"mesh or the ":[6274],"esh or the e":[6274],"sh or the ex":[6274],"h or the ext":[6274]," or the extr":[6274],"or the extru":[6274],"r the extrus":[6274],"e extrusion,":[6274]," extrusion, ":[6274],"extrusion, w":[6274],"xtrusion, wh":[6274],"trusion, whi":[6274],"rusion, whic":[6274],"usion, which":[6274],"sion, which ":[6274],"ion, which d":[6274],"on, which do":[6274],"n, which don":[6274],", which don'":[6274]," which don't":[6274],"which don't ":[6274],"hich don't r":[6274],"ich don't re":[6274],"ch don't req":[6274],"h don't requ":[6274]," don't requi":[6274],"don't requir":[6274],"on't require":[6274],"n't require ":[6274],"'t require m":[6274],"t require ma":[6274]," require man":[6274],"require many":[6274],"equire many ":[6274],"quire many m":[6274],"uire many ma":[6274],"ire many mat":[6274],"re many math":[6274],"e many maths":[6274]," many maths.":[6274],"f you need s":[6275]," you need so":[6275],"you need som":[6275],"ou need some":[6275],"u need somet":[6275]," need someth":[6275],"need somethi":[6275],"eed somethin":[6275],"ed something":[6275],"d something ":[6275]," something e":[6275],"something el":[6275],"omething els":[6275],"mething else":[6275],"ething else,":[6275],"hing else, t":[6275],"ing else, th":[6275],"ng else, the":[6275],"g else, then":[6275]," else, then ":[6275],"else, then u":[6275],"lse, then us":[6275],"se, then use":[6275],"e, then use ":[6275],"en use the r":[6275],"n use the ri":[6275]," use the rib":[6275],"use the ribb":[6275],"he ribbon it":[6275],"e ribbon its":[6275]," ribbon itse":[6275],"ribbon itsel":[6275],"ibbon itself":[6275],"bbon itself.":[6275],"bon itself..":[6275],"on itself...":[6275],"n itself... ":[6275]," itself... a":[6275],"itself... an":[6275],"tself... and":[6275],"self... and ":[6275],"elf... and y":[6275],"lf... and yo":[6275],"f... and you":[6275],"... and your":[6275],".. and your ":[6275],". and your m":[6275]," and your ma":[6275],"and your mat":[6275],"nd your math":[6275],"d your maths":[6275]," your maths ":[6275],"your maths s":[6275],"our maths sk":[6275],"ur maths ski":[6275],"r maths skil":[6275]," maths skill":[6275],"maths skills":[6275],"aths skills.":[6275],"let's try he":[6277],"et's try her":[6277],"t's try here":[6277],"'s try here ":[6277],"s try here t":[6277]," try here to":[6277],"try here to ":[6277],"ry here to r":[6277],"y here to re":[6277]," here to red":[6277],"here to redo":[6277],"ere to redo ":[6277],"re to redo a":[6277],"e to redo a ":[6277]," to redo a s":[6277],"to redo a sp":[6277],"o redo a sph":[6277]," redo a sphe":[6277],"redo a spher":[6277],"edo a sphere":[6277],"do a sphere ":[6277],"o a sphere a":[6277]," a sphere an":[6277],"a sphere and":[6277],"sphere and t":[6277],"phere and th":[6277],"ere and then":[6277],"re and then ":[6277],"e and then t":[6277]," and then to":[6277],"and then to ":[6277],"nd then to m":[6277],"d then to mo":[6277]," then to mod":[6277],"then to modi":[6277],"hen to modif":[6277],"en to modify":[6277],"n to modify ":[6277],"odify it int":[6277],"dify it into":[6277],"ify it into ":[6277],"fy it into s":[6277],"y it into so":[6277]," it into som":[6277],"it into some":[6277],"t into somet":[6277]," into someth":[6277],"into somethi":[6277],"nto somethin":[6277],"to something":[6277]," something d":[6277],"something di":[6277],"omething dif":[6277],"mething diff":[6277],"ething diffe":[6277],"hing differe":[6277],"ing differen":[6277],"ng different":[6277],"g different.":[6277]," different. ":[6277],"different.  ":[6277],"ifferent.   ":[6277],"as you've se":[6278],"ou've seen i":[6278],"u've seen in":[6278],"'ve seen in ":[6278],"ve seen in t":[6278],"e seen in th":[6278]," seen in the":[6278],"seen in the ":[6278],"een in the f":[6278],"en in the fo":[6278],"n in the for":[6278]," in the form":[6278],"in the forme":[6278],"the former p":[6278],"he former pa":[6278],"e former par":[6278]," former part":[6278],"former part,":[6278],"ormer part, ":[6278],"rmer part, y":[6278],"mer part, yo":[6278],"er part, you":[6278],"r part, you ":[6278]," part, you n":[6278],"part, you ne":[6278],"art, you nee":[6278],"rt, you need":[6278],"o create man":[6278],"reate many p":[6278],"eate many pa":[6278],"ate many pat":[6278],"te many path":[6278],"e many paths":[6278],"many paths t":[6278],"any paths to":[6278],"ny paths to ":[6278],"y paths to b":[6278]," paths to bu":[6278],"paths to bui":[6278],"aths to buil":[6278],"ths to build":[6278],"hs to build ":[6278],"s to build a":[6278]," to build a ":[6278],"to build a r":[6278],"o build a ri":[6278]," build a rib":[6278],"build a ribb":[6278],"uild a ribbo":[6278],"ild a ribbon":[6278],"ld a ribbon.":[6278],"d a ribbon. ":[6278]," a ribbon. f":[6278],"a ribbon. fo":[6278]," ribbon. for":[6278],"ribbon. for ":[6278],"ibbon. for a":[6278],"bbon. for a ":[6278],"bon. for a s":[6278],"on. for a sp":[6278],"n. for a sph":[6278],". for a sphe":[6278]," for a spher":[6278],"for a sphere":[6278],"or a sphere,":[6278],"r a sphere, ":[6278,6363],"e, you can i":[6278],", you can im":[6278],"an imagine t":[6278],"n imagine th":[6278],"e that you s":[6278]," that you st":[6278],"that you sta":[6278],"hat you stac":[6278],"at you stack":[6278],"t you stack ":[6278]," you stack m":[6278],"you stack ma":[6278],"ou stack man":[6278],"u stack many":[6278]," stack many ":[6278],"stack many c":[6278],"tack many ci":[6278],"ack many cir":[6278],"ck many circ":[6278],"k many circl":[6278]," many circle":[6278],"many circles":[6278],"any circles,":[6278],"ny circles, ":[6278],"y circles, e":[6278]," circles, ea":[6278],"circles, eac":[6278],"ircles, each":[6278],"rcles, each ":[6278],"cles, each c":[6278],"les, each ci":[6278],"es, each cir":[6278],"s, each circ":[6278],", each circl":[6278]," each circle":[6278,6314],"each circle ":[6278,6314],"ach circle b":[6278],"ch circle be":[6278],"h circle bei":[6278]," circle bein":[6278],"circle being":[6278],"ircle being ":[6278],"rcle being a":[6278],"cle being a ":[6278],"le being a p":[6278],"e being a pa":[6278]," being a pat":[6278],"being a path":[6278],"eing a path.":[6278],"ing a path. ":[6278]," create a ci":[6279],"create a cir":[6279],"reate a circ":[6279],"eate a circl":[6279],"ate a circle":[6279],"te a circle,":[6279],"e a circle, ":[6279]," a circle, y":[6279],"a circle, yo":[6279]," circle, you":[6279],"circle, you ":[6279],"ircle, you j":[6279],"rcle, you ju":[6279],"cle, you jus":[6279],"le, you just":[6279],", you just s":[6279]," you just se":[6279],"you just set":[6279],"ou just set ":[6279],"u just set p":[6279],"set points a":[6279],"et points at":[6279],"t points at ":[6279]," points at _":[6279],"points at _x":[6279],"oints at _x ":[6279],"ints at _x =":[6279],"nts at _x = ":[6279],"ts at _x = s":[6279],"s at _x = si":[6279]," at _x = sin":[6279],"at _x = sin(":[6279],"t _x = sin(a":[6279]," _x = sin(an":[6279],"_x = sin(ang":[6279],"x = sin(angl":[6279]," = sin(angle":[6279],"= sin(angle)":[6279]," sin(angle)_":[6279],"sin(angle)_ ":[6279],"in(angle)_ a":[6279],"n(angle)_ an":[6279],"(angle)_ and":[6279],"angle)_ and ":[6279],"ngle)_ and _":[6279],"gle)_ and _z":[6279],"le)_ and _z ":[6279],"e)_ and _z =":[6279],")_ and _z = ":[6279],"_ and _z = c":[6279]," and _z = co":[6279],"and _z = cos":[6279],"nd _z = cos(":[6279],"d _z = cos(a":[6279]," _z = cos(an":[6279],"_z = cos(ang":[6279],"z = cos(angl":[6279]," = cos(angle":[6279],"= cos(angle)":[6279]," cos(angle)_":[6279],"cos(angle)_ ":[6279],"os(angle)_ a":[6279],"s(angle)_ an":[6279],"ngle)_ and g":[6279],"gle)_ and gi":[6279],"le)_ and giv":[6279],"e)_ and give":[6279],")_ and give ":[6279],"_ and give _":[6279]," and give _a":[6279],"and give _an":[6279],"nd give _ang":[6279],"d give _angl":[6279]," give _angle":[6279],"give _angle_":[6279],"ive _angle_ ":[6279],"ve _angle_ s":[6279],"e _angle_ so":[6279]," _angle_ som":[6279],"_angle_ some":[6279],"angle_ some ":[6279],"ngle_ some v":[6279],"gle_ some va":[6279],"le_ some val":[6279],"e_ some valu":[6279],"_ some value":[6279]," some values":[6279],"some values ":[6279],"ome values b":[6279],"me values be":[6279],"e values bet":[6279]," values betw":[6279],"values betwe":[6279],"alues betwee":[6279],"lues between":[6279],"ues between ":[6279],"es between 0":[6279],"ween 0 and 2":[6279],"een 0 and 2 ":[6279],"en 0 and 2 x":[6279],"n 0 and 2 x ":[6279]," 0 and 2 x p":[6279],"0 and 2 x pi":[6279]," and 2 x pi.":[6279],"and 2 x pi. ":[6279],"nd 2 x pi.  ":[6279],"d 2 x pi.   ":[6279],"var pi2 = ma":[6281,6296],"ar pi2 = mat":[6281,6296],"r pi2 = math":[6281,6296]," pi2 = math.":[6281,6296],"pi2 = math.p":[6281,6296],"i2 = math.pi":[6281,6296],"2 = math.pi ":[6281,6296]," = math.pi *":[6281,6296],"= math.pi * ":[6281,6296]," math.pi * 2":[6281,6296],"math.pi * 2;":[6281,6296],"var step = p":[6282,6297],"ar step = pi":[6282,6297],"r step = pi2":[6282,6297]," step = pi2 ":[6282,6297],"step = pi2 /":[6282,6297],"tep = pi2 / ":[6282,6297],"ep = pi2 / 6":[6282],"p = pi2 / 60":[6282]," = pi2 / 60;":[6282],"= pi2 / 60; ":[6282]," pi2 / 60;  ":[6282],"pi2 / 60;   ":[6282],"i2 / 60;    ":[6282],"2 / 60;     ":[6282]," / 60;      ":[6282],"/ 60;       ":[6282]," 60;       /":[6282],"60;       //":[6282],"0;       // ":[6282],";       // w":[6282],"       // we":[6282],"      // we ":[6282],"     // we w":[6282],"    // we wa":[6282],"   // we wan":[6282],"  // we want":[6282]," // we want ":[6282],"// we want 6":[6282],"/ we want 60":[6282]," we want 60 ":[6282],"we want 60 p":[6282],"e want 60 po":[6282]," want 60 poi":[6282],"want 60 poin":[6282],"ant 60 point":[6282],"nt 60 points":[6282]," = 0; i < pi":[6283,6301,6342,6367,6378],"= 0; i < pi2":[6283,6301,6342,6367,6378]," 0; i < pi2;":[6283,6301,6342,6367,6378],"0; i < pi2; ":[6283,6301,6342,6367,6378],"; i < pi2; i":[6283,6301,6342,6367,6378]," i < pi2; i ":[6283,6301,6342,6367,6378],"i < pi2; i +":[6283,6301,6342,6367,6378]," < pi2; i +=":[6283,6301,6342,6367,6378],"< pi2; i += ":[6283,6301,6342,6367,6378]," pi2; i += s":[6283,6301,6342,6367,6378],"pi2; i += st":[6283,6301,6342,6367,6378],"i2; i += ste":[6283,6301,6342,6367,6378],"2; i += step":[6283,6301,6342,6367,6378],"; i += step ":[6283,6301,6342,6367,6378]," i += step )":[6283,6301,6342,6367,6378],"i += step ) ":[6283,6301,6342,6367,6378]," += step ) {":[6283,6301,6317,6342,6367,6378],"  var x = ra":[6284,6302,6343,6368,6379]," var x = rad":[6284,6302,6343,6368,6379],"var x = radi":[6284,6302,6343,6368,6379],"ar x = radiu":[6284,6302,6343,6368,6379],"r x = radius":[6284,6302,6343,6368,6379]," x = radius ":[6284,6302,6343,6368,6379],"x = radius *":[6284,6302,6343,6368,6379]," = radius * ":[6284,6285,6302,6303,6304,6343,6344,6345,6368,6369,6370,6379,6380,6381],"= radius * m":[6284,6285,6302,6303,6304,6343,6344,6368,6369,6379,6380]," radius * ma":[6284,6285,6302,6303,6304,6343,6344,6368,6369,6379,6380],"radius * mat":[6284,6285,6302,6303,6304,6343,6344,6368,6369,6379,6380,6381],"adius * math":[6284,6285,6302,6303,6304,6343,6344,6368,6369,6379,6380,6381],"dius * math.":[6284,6285,6302,6303,6304,6343,6344,6368,6369,6379,6380,6381],"ius * math.s":[6284,6302,6304,6343,6368,6379],"us * math.si":[6284,6302,6304,6343,6368,6379],"s * math.sin":[6284,6302,6304,6343,6368,6379]," math.sin(i)":[6284,6302,6343,6368,6379],"math.sin(i);":[6284],"  var z = ra":[6285,6303,6344,6369,6380]," var z = rad":[6285,6303,6344,6369,6380],"var z = radi":[6285,6303,6344,6369,6380],"ar z = radiu":[6285,6303,6344,6369,6380],"r z = radius":[6285,6303,6344,6369,6380]," z = radius ":[6285,6303,6344,6369,6380],"z = radius *":[6285,6303,6344,6369,6380],"ius * math.c":[6285,6303,6344,6369,6380,6381],"us * math.co":[6285,6303,6344,6369,6380,6381],"s * math.cos":[6285,6303,6344,6369,6380,6381],"* math.cos(i":[6285,6303,6344,6368,6369,6379,6380,6381]," math.cos(i)":[6285,6303,6344,6369,6380],"math.cos(i);":[6285]," path.push( ":[6287,6305,6346,6371,6382],"path.push( n":[6287,6305,6318,6346,6371,6382],"ath.push( ne":[6287,6305,6318,6346,6371,6382],"th.push( new":[6287,6305,6318,6346,6371,6382],"h.push( new ":[6287,6305,6318,6346,6371,6382],"3(x, y, z) )":[6287,6305,6346,6371,6382],"(x, y, z) );":[6287,6305,6346,6371,6382],"path.push(pa":[6289,6307],"ath.push(pat":[6289,6307],"th.push(path":[6289,6307],"h.push(path[":[6289,6307],".push(path[0":[6289,6307],"push(path[0]":[6289,6307],"ush(path[0])":[6289,6307],"sh(path[0]);":[6289,6307],"h(path[0]); ":[6289],"(path[0]);  ":[6289],"path[0]);   ":[6289],"ath[0]);    ":[6289],"th[0]);     ":[6289],"h[0]);      ":[6289],"[0]);       ":[6289],"0]);       /":[6289],"]);       //":[6289],");       // ":[6289],";       // t":[6289],"       // to":[6289],"      // to ":[6289],"     // to c":[6289],"    // to cl":[6289],"   // to clo":[6289],"  // to clos":[6289]," // to close":[6289],"// to close ":[6289],"/ to close t":[6289],"close the ci":[6289],"lose the cir":[6289],"ose the circ":[6289],"se the circl":[6289],"e the circle":[6289],"demo : http:":[6291,6311,6324,6333,6356,6362,6374,6385],"emo : http:/":[6291,6311,6324,6333,6356,6362,6374,6385],"mo : http://":[6291,6311,6324,6333,6356,6362,6374,6385],"o : http://w":[6291,6311,6324,6333,6356,6362,6374,6385],"round.com/#e":[6291,6311,6312,6324,6333,6351,6356,6362,6374,6385],"ound.com/#e6":[6291,6311,6312,6324,6333,6351,6356,6362,6374,6385],"und.com/#e6i":[6291,6311,6312,6324,6333,6351,6356,6362,6374,6385],"nd.com/#e6ix":[6291,6311,6312,6324,6333,6351,6356,6362,6374,6385],"d.com/#e6ix1":[6291,6311,6312,6324,6333,6351,6356,6362,6374,6385],".com/#e6ix1#":[6291,6312,6324,6333,6351,6356,6362,6374,6385],"com/#e6ix1#1":[6291],"om/#e6ix1#1 ":[6291],"m/#e6ix1#1  ":[6291],"/#e6ix1#1   ":[6291],"now, you add":[6292],"ow, you add ":[6292],"w, you add c":[6292],", you add ci":[6292]," you add cir":[6292],"you add circ":[6292],"ou add circl":[6292],"u add circle":[6292]," add circles":[6292],"add circles ":[6292],"dd circles a":[6292],"d circles al":[6292]," circles alo":[6292],"circles alon":[6292],"ircles along":[6292],"rcles along ":[6292],"cles along t":[6292],"les along th":[6292],"es along the":[6292],"he y-axis, m":[6292],"e y-axis, ma":[6292]," y-axis, mak":[6292],"y-axis, maki":[6292],"-axis, makin":[6292],"axis, making":[6292],"xis, making ":[6292],"is, making t":[6292],"s, making th":[6292]," making the ":[6292],"making the r":[6292],"aking the ra":[6292],"king the rad":[6292],"ing the radi":[6292],"ng the radiu":[6292],"g the radius":[6292]," the radius ":[6292],"the radius e":[6292],"he radius ev":[6292],"e radius evo":[6292]," radius evol":[6292],"radius evolv":[6292],"adius evolvi":[6292],"dius evolvin":[6292],"ius evolving":[6292],"us evolving ":[6292],"s evolving w":[6292],"lving with a":[6292],"ving with an":[6292],"ing with ano":[6292],"ng with anot":[6292],"g with anoth":[6292],"th another a":[6292],"h another an":[6292]," another ang":[6292],"another angl":[6292],"nother angle":[6292],"other angle ":[6292],"ther angle _":[6292],"her angle _p":[6292],"er angle _p_":[6292],"r angle _p_ ":[6292]," angle _p_ v":[6292],"angle _p_ va":[6292],"ngle _p_ var":[6292],"gle _p_ vary":[6292],"le _p_ varyi":[6292],"e _p_ varyin":[6292]," _p_ varying":[6292],"_p_ varying ":[6292],"p_ varying f":[6292],"_ varying fr":[6292]," varying fro":[6292],"varying from":[6292],"arying from ":[6292],"rying from t":[6292],"ying from th":[6292],"g from the s":[6292]," from the sp":[6292],"from the sph":[6292],"rom the sphe":[6292],"om the spher":[6292],"m the sphere":[6292],"the sphere s":[6292],"he sphere so":[6292],"e sphere sou":[6292]," sphere sout":[6292],"sphere south":[6292],"phere south ":[6292],"here south p":[6292],"ere south po":[6292],"re south pol":[6292],"e south pole":[6292]," south pole ":[6292],"south pole -":[6292],"outh pole -p":[6292],"uth pole -pi":[6292],"th pole -pi ":[6292],"h pole -pi /":[6292]," pole -pi / ":[6292],"pole -pi / 2":[6292],"ole -pi / 2 ":[6292],"le -pi / 2 t":[6292],"e -pi / 2 to":[6292]," -pi / 2 to ":[6292],"-pi / 2 to i":[6292],"pi / 2 to it":[6292],"i / 2 to its":[6292]," / 2 to its ":[6292],"/ 2 to its n":[6292]," 2 to its no":[6292],"2 to its nor":[6292]," to its nort":[6292],"to its north":[6292],"o its north ":[6292]," its north p":[6292],"its north po":[6292],"ts north pol":[6292],"s north pole":[6292]," north pole ":[6292,6314,6329],"north pole +":[6292],"orth pole +p":[6292],"rth pole +pi":[6292],"th pole +pi ":[6292],"h pole +pi /":[6292]," pole +pi /2":[6292],"pole +pi /2.":[6292],"ole +pi /2. ":[6292],"le +pi /2. t":[6292],"e +pi /2. th":[6292]," +pi /2. the":[6292],"+pi /2. thes":[6292],"pi /2. these":[6292],"i /2. these ":[6292]," /2. these c":[6292],"/2. these ci":[6292],"2. these cir":[6292],". these circ":[6292]," these circl":[6292],"these circle":[6292],"hese circles":[6292],"ese circles ":[6292],"se circles (":[6292],"e circles (p":[6292]," circles (pa":[6292],"circles (pat":[6292],"ircles (path":[6292],"rcles (path)":[6292],"cles (path) ":[6292],"les (path) a":[6292],"es (path) ar":[6292],"s (path) are":[6292]," (path) are ":[6292],"(path) are s":[6292],"path) are st":[6292],"ath) are sto":[6292],"th) are stor":[6292],"h) are store":[6292],") are stored":[6292],"ored in an a":[6292],"red in an ar":[6292],"ed in an arr":[6292],"d in an arra":[6292]," in an array":[6292],"in an array ":[6292],"n an array c":[6292],"ed _paths_ :":[6292],"d _paths_ : ":[6292]," _paths_ :  ":[6292],"_paths_ :   ":[6292],"paths_ :    ":[6292],"aths_ :     ":[6292],"r radius = 1":[6294]," radius = 10":[6294],"radius = 10;":[6294],"var tes = 60":[6295],"ar tes = 60;":[6295],"ep = pi2 / t":[6297],"p = pi2 / te":[6297]," = pi2 / tes":[6297],"= pi2 / tes;":[6297],"for (var p =":[6299,6331,6339,6354],"or (var p = ":[6299,6331,6339,6354],"r (var p = -":[6299,6331,6339,6354]," (var p = -m":[6299,6331,6339,6354],"(var p = -ma":[6299,6331,6339,6354],"var p = -mat":[6299,6331,6339,6354],"ar p = -math":[6299,6331,6339,6354],"r p = -math.":[6299,6331,6339,6354]," p = -math.p":[6299,6331,6339,6354],"p = -math.pi":[6299,6331,6339,6354]," = -math.pi ":[6299,6331,6339,6354],"= -math.pi /":[6299,6331,6339,6354]," -math.pi / ":[6299,6331,6339,6354],"-math.pi / 2":[6299,6331,6339,6354],"math.pi / 2;":[6299,6331,6339],"ath.pi / 2; ":[6299,6331,6339],"th.pi / 2; p":[6299,6331,6339],"h.pi / 2; p ":[6299,6331,6339],".pi / 2; p <":[6299,6331,6339],"pi / 2; p < ":[6299,6331,6339],"i / 2; p < m":[6299,6331,6339]," / 2; p < ma":[6299,6331,6339],"/ 2; p < mat":[6299,6331,6339]," 2; p < math":[6299,6331,6339],"2; p < math.":[6299,6331,6339],"; p < math.p":[6299,6331,6339,6354]," p < math.pi":[6299,6331,6339,6354],"p < math.pi ":[6299,6331,6339,6354]," < math.pi /":[6299,6331,6339,6354],"< math.pi / ":[6299,6331,6339,6354],".pi / 2; p +":[6299,6339],"pi / 2; p +=":[6299,6339],"i / 2; p += ":[6299,6339]," / 2; p += s":[6299,6339],"/ 2; p += st":[6299,6339]," 2; p += ste":[6299,6339],"2; p += step":[6299,6339],"; p += step ":[6299,6331,6339,6354]," p += step /":[6299,6331,6339,6354],"p += step / ":[6299,6331,6339,6354]," += step / 2":[6299,6331,6339,6354],"+= step / 2)":[6299,6331,6339,6354],"= step / 2) ":[6299,6331,6339,6354]," step / 2) {":[6299,6331,6339,6354],"   var x = r":[6302,6343],"math.sin(i) ":[6302,6343,6368,6379],"ath.sin(i) *":[6302,6343,6368,6379],"th.sin(i) * ":[6302,6343,6368,6379],"h.sin(i) * m":[6302,6343,6368,6379],".sin(i) * ma":[6302,6343,6368,6379],"sin(i) * mat":[6302,6343,6368,6379],"in(i) * math":[6302,6343,6368,6379],"n(i) * math.":[6302,6343,6368,6379],"(i) * math.c":[6302,6303,6343,6344,6368,6369,6379,6380],"i) * math.co":[6302,6303,6343,6344,6368,6369,6379,6380],") * math.cos":[6302,6303,6343,6344,6368,6369,6379,6380],"* math.cos(p":[6302,6303,6343,6344,6368,6369,6379,6380]," math.cos(p)":[6302,6303,6343,6344,6368,6369,6379,6380],"math.cos(p);":[6302,6303,6343,6344,6369],"   var z = r":[6303,6344],"math.cos(i) ":[6303,6344,6369,6380],"ath.cos(i) *":[6303,6344,6369,6380],"th.cos(i) * ":[6303,6344,6369,6380],"h.cos(i) * m":[6303,6344,6369,6380],".cos(i) * ma":[6303,6344,6369,6380],"cos(i) * mat":[6303,6344,6369,6380],"os(i) * math":[6303,6344,6369,6380],"s(i) * math.":[6303,6344,6369,6380],"   var y = r":[6304,6345],"  var y = ra":[6304,6345,6370,6381]," var y = rad":[6304,6345,6370,6381],"var y = radi":[6304,6345,6370,6381],"ar y = radiu":[6304,6345,6370,6381],"r y = radius":[6304,6345,6370,6381]," y = radius ":[6304,6345,6370,6381],"y = radius *":[6304,6345,6370,6381],"* math.sin(p":[6304]," math.sin(p)":[6304,6341],"math.sin(p);":[6304]," path.push(p":[6307],"    paths.pu":[6308],"   paths.pus":[6308],".com/#e6ix1 ":[6311],"com/#e6ix1  ":[6311],"let's apply ":[6312],"et's apply a":[6312],"t's apply a ":[6312],"'s apply a r":[6312],"s apply a ri":[6312]," apply a rib":[6312],"apply a ribb":[6312],"pply a ribbo":[6312],"ply a ribbon":[6312],"ly a ribbon ":[6312],"y a ribbon t":[6312]," a ribbon to":[6312],"a ribbon to ":[6312]," ribbon to t":[6312],"ribbon to th":[6312],"ibbon to the":[6312],"bbon to thes":[6312],"bon to these":[6312],"on to these ":[6312],"n to these p":[6312]," to these pa":[6312],"to these pat":[6312],"o these path":[6312],"hese paths :":[6312],"ese paths : ":[6312],"se paths : h":[6312],"e paths : ht":[6312],"com/#e6ix1#2":[6312],"om/#e6ix1#2 ":[6312],"m/#e6ix1#2  ":[6312],"/#e6ix1#2   ":[6312],"you get (alm":[6313],"ou get (almo":[6313],"u get (almos":[6313]," get (almost":[6313],"get (almost)":[6313],"et (almost) ":[6313],"t (almost) a":[6313]," (almost) a ":[6313],"(almost) a s":[6313],"almost) a sp":[6313],"lmost) a sph":[6313],"most) a sphe":[6313],"ost) a spher":[6313],"st) a sphere":[6313],"t) a sphere.":[6313],") a sphere. ":[6313]," a sphere.  ":[6313],"to get a nic":[6314],"o get a nice":[6314],"get a nice f":[6314],"et a nice fu":[6314],"t a nice ful":[6314]," a nice full":[6314],"a nice full ":[6314]," nice full s":[6314],"nice full sp":[6314],"ice full sph":[6314],"ce full sphe":[6314],"e full spher":[6314]," full sphere":[6314],"full sphere,":[6314],"ull sphere, ":[6314],"ll sphere, y":[6314],"l sphere, yo":[6314],"phere, you n":[6314],"here, you ne":[6314],"ere, you nee":[6314],"eed to compl":[6314],"ed to comple":[6314],"d to complet":[6314]," to complete":[6314,6705],"to complete ":[6314],"o complete t":[6314]," complete th":[6314],"complete the":[6314],"omplete the ":[6314],"mplete the m":[6314],"plete the mi":[6314],"lete the mis":[6314],"ete the miss":[6314],"he missing p":[6314],"e missing po":[6314]," missing poi":[6314],"missing poin":[6314],"issing point":[6314],"ssing point ":[6314],"sing point a":[6314],"ing point at":[6314],"ng point at ":[6314],"g point at n":[6314]," point at no":[6314],"point at nor":[6314],"oint at nort":[6314],"int at north":[6314],"nt at north ":[6314],"t at north p":[6314]," at north po":[6314],"at north pol":[6314],"t north pole":[6314],"north pole a":[6314,6329],"orth pole an":[6314,6329],"rth pole and":[6314],"th pole and ":[6314],"h pole and s":[6314]," pole and se":[6314],"pole and set":[6314],"ole and set ":[6314],"le and set t":[6314],"e and set th":[6314],"nd set the r":[6314],"d set the ri":[6314]," set the rib":[6314],"set the ribb":[6314],"et the ribbo":[6314],"t the ribbon":[6314],"the ribbon _":[6314],"he ribbon _c":[6314],"e ribbon _cl":[6314],"ter to true ":[6314],"er to true i":[6314],"r to true in":[6314],"ue instead o":[6314],"stead of man":[6314],"tead of manu":[6314],"ead of manua":[6314],"ad of manual":[6314],"d of manuall":[6314]," of manually":[6314],"of manually ":[6314],"f manually c":[6314]," manually cl":[6314],"manually clo":[6314],"anually clos":[6314],"nually close":[6314],"ually close ":[6314],"ally close e":[6314],"lly close ea":[6314],"ly close eac":[6314],"y close each":[6314]," close each ":[6314],"close each c":[6314],"lose each ci":[6314],"ose each cir":[6314],"se each circ":[6314],"e each circl":[6314],"ach circle a":[6314],"ch circle af":[6314],"h circle aft":[6314]," circle afte":[6314],"circle after":[6314],"ircle after ":[6314],"rcle after t":[6314],"cle after th":[6314],"le after the":[6314]," after the f":[6314],"after the fo":[6314],"fter the for":[6314],"ter the form":[6314],"er the forme":[6314],"r the former":[6314],"the former i":[6314],"he former it":[6314],"e former ite":[6314]," former iter":[6314],"former itera":[6314],"ormer iterat":[6314],"rmer iterati":[6314],"mer iteratio":[6314],"er iteration":[6314],"r iteration ":[6314]," iteration :":[6314],"iteration : ":[6314],"teration :  ":[6314],"eration :   ":[6314],"var lastpath":[6316],"ar lastpath ":[6316],"r lastpath =":[6316]," lastpath = ":[6316],"lastpath = [":[6316],"astpath = []":[6316],"stpath = [];":[6316],"for (var j =":[6317],"or (var j = ":[6317],"r (var j = 0":[6317]," (var j = 0;":[6317],"(var j = 0; ":[6317],"var j = 0; j":[6317],"ar j = 0; j ":[6317],"r j = 0; j <":[6317]," j = 0; j < ":[6317],"j = 0; j < p":[6317]," = 0; j < pi":[6317],"= 0; j < pi2":[6317]," 0; j < pi2;":[6317],"0; j < pi2; ":[6317],"; j < pi2; j":[6317]," j < pi2; j ":[6317],"j < pi2; j +":[6317]," < pi2; j +=":[6317],"< pi2; j += ":[6317]," pi2; j += s":[6317],"pi2; j += st":[6317],"i2; j += ste":[6317],"2; j += step":[6317],"; j += step ":[6317]," j += step )":[6317],"j += step ) ":[6317],"  lastpath.p":[6318]," lastpath.pu":[6318],"lastpath.pus":[6318],"astpath.push":[6318],"stpath.push(":[6318],"tpath.push( ":[6318],"vector3(0, r":[6318],"ector3(0, ra":[6318],"ctor3(0, rad":[6318],"tor3(0, radi":[6318],"or3(0, radiu":[6318],"r3(0, radius":[6318],"3(0, radius,":[6318],"(0, radius, ":[6318],"0, radius, 0":[6318],", radius, 0)":[6318]," radius, 0) ":[6318],"radius, 0) )":[6318],"adius, 0) );":[6318],"paths.push(l":[6320],"aths.push(la":[6320],"ths.push(las":[6320],"hs.push(last":[6320],"s.push(lastp":[6320],".push(lastpa":[6320],"push(lastpat":[6320],"ush(lastpath":[6320],"sh(lastpath)":[6320],"h(lastpath);":[6320],"ateribbon(\"s":[6322,6360],"teribbon(\"sp":[6322,6360],"eribbon(\"sph":[6322,6360],"ribbon(\"sph\"":[6322,6360],"ibbon(\"sph\",":[6322,6360],"bbon(\"sph\", ":[6322,6360],"bon(\"sph\", p":[6322,6360],"on(\"sph\", pa":[6322,6360],"n(\"sph\", pat":[6322,6360],"(\"sph\", path":[6322,6360],"\"sph\", paths":[6322,6360],"sph\", paths,":[6322,6360],"ph\", paths, ":[6322,6360],"h\", paths, f":[6322],"hs, false, t":[6322],"s, false, tr":[6322],"false, true ":[6322],"alse, true ,":[6322],"lse, true , ":[6322],"se, true ,  ":[6322],"e, true ,  0":[6322,6360],", true ,  0,":[6322,6360]," true ,  0, ":[6322,6360],"true ,  0, s":[6322,6360],"rue ,  0, sc":[6322,6360],"ue ,  0, sce":[6322,6360],"e ,  0, scen":[6322,6360]," ,  0, scene":[6322,6360],",  0, scene)":[6322,6360],"  0, scene);":[6322,6360],"com/#e6ix1#3":[6324],"om/#e6ix1#3 ":[6324],"m/#e6ix1#3  ":[6324],"retty much m":[6325],"etty much ma":[6325],"tty much mat":[6325],"ty much math":[6325],"y much maths":[6325]," much maths ":[6325],"much maths a":[6325],"uch maths an":[6325],"ch maths and":[6325],"h maths and ":[6325]," maths and i":[6325],"maths and it":[6325],"aths and ite":[6325],"ths and iter":[6325],"hs and itera":[6325],"s and iterat":[6325],"and iteratio":[6325],"nd iteration":[6325],"d iterations":[6325],"terations o ":[6325],"erations o f":[6325],"rations o fa":[6325],"ations o far":[6325],"tions o far ":[6325],"ions o far t":[6325],"ons o far to":[6325],"ns o far to ":[6325],"s o far to g":[6325]," o far to ge":[6325],"o far to get":[6325]," far to get ":[6325],"far to get a":[6325],"ar to get a ":[6325],"r to get a s":[6325]," to get a si":[6325],"to get a sim":[6325],"o get a simp":[6325],"t a simple s":[6325]," a simple sp":[6325],"a simple sph":[6325]," simple sphe":[6325],"simple spher":[6325],"imple sphere":[6325],"mple sphere,":[6325],"ple sphere, ":[6325],"le sphere, i":[6325],"e sphere, is":[6325]," sphere, isn":[6325],"sphere, isn'":[6325],"phere, isn't":[6325],"here, isn't ":[6325],"ere, isn't i":[6325],"e, isn't it ":[6325],"this is why ":[6326],"his is why y":[6326],"is is why yo":[6326],"s is why you":[6326]," is why you ":[6326],"is why you s":[6326],"s why you sh":[6326]," why you sho":[6326],"why you shou":[6326],"hy you shoul":[6326],"y you should":[6326],"u should rea":[6326]," should real":[6326],"should reall":[6326],"hould really":[6326],"ould really ":[6326],"uld really u":[6326],"ld really us":[6326],"d really use":[6326]," really use ":[6326],"really use t":[6326],"eally use th":[6326],"ally use the":[6326],"lly use the ":[6326],"ly use the b":[6326],"y use the bj":[6326]," use the bjs":[6326],"use the bjs ":[6326],"se the bjs p":[6326],"e the bjs pr":[6326]," the bjs pro":[6326],"the bjs prov":[6326],"he bjs provi":[6326],"e bjs provid":[6326]," bjs provide":[6326],"bjs provided":[6326],"js provided ":[6326],"s provided s":[6326]," provided sp":[6326],"provided sph":[6326],"rovided sphe":[6326],"ovided spher":[6326],"vided sphere":[6326],"ided sphere ":[6326],"ded sphere i":[6326],"ed sphere if":[6326],"d sphere if ":[6326]," sphere if y":[6326],"sphere if yo":[6326],"phere if you":[6326],"here if you ":[6326],"ere if you o":[6326],"re if you on":[6326],"e if you onl":[6326]," only want a":[6326],"only want a ":[6326],"nly want a s":[6326],"ly want a sp":[6326],"y want a sph":[6326]," want a sphe":[6326],"want a spher":[6326],"ant a sphere":[6326],"nt a sphere ":[6326],"t a sphere !":[6326]," a sphere ! ":[6326],"a sphere !  ":[6326],"but don't wo":[6328],"ut don't wor":[6328],"t don't worr":[6328],"don't worry,":[6328],"on't worry, ":[6328],"n't worry, a":[6328],"'t worry, al":[6328],"t worry, all":[6328]," worry, all ":[6328],"worry, all t":[6328],"orry, all th":[6328],"rry, all tho":[6328],"ry, all thos":[6328],"y, all those":[6328],", all those ":[6328]," all those e":[6328],"all those ef":[6328],"ll those eff":[6328],"l those effo":[6328]," those effor":[6328],"those effort":[6328],"hose efforts":[6328],"ose efforts ":[6328],"se efforts s":[6328],"e efforts so":[6328]," efforts so ":[6328],"efforts so f":[6328],"fforts so fa":[6328],"forts so far":[6328],"orts so far ":[6328],"rts so far a":[6328],"ts so far ar":[6328],"s so far are":[6328]," so far aren":[6328],"so far aren'":[6328],"o far aren't":[6328]," far aren't ":[6328],"far aren't v":[6328],"ar aren't va":[6328],"r aren't vai":[6328]," aren't vain":[6328],"aren't vain.":[6328],"ren't vain. ":[6328],"en't vain. f":[6328],"n't vain. fr":[6328],"'t vain. fro":[6328],"t vain. from":[6328]," vain. from ":[6328],"vain. from n":[6328],"ain. from no":[6328],"in. from now":[6328],"n. from now,":[6328],". from now, ":[6328]," from now, l":[6328],"from now, le":[6328],"rom now, let":[6328],"om now, let'":[6328],"m now, let's":[6328]," now, let's ":[6328],"now, let's t":[6328],"ow, let's th":[6328],"w, let's the":[6328],", let's the ":[6328]," let's the m":[6328],"let's the ma":[6328],"et's the mag":[6328],"t's the magi":[6328],"'s the magic":[6328],"s the magic ":[6328]," the magic h":[6328],"the magic ha":[6328],"he magic hap":[6328],"e magic happ":[6328]," magic happe":[6328],"magic happen":[6328],"agic happens":[6328],"gic happens ":[6328],"ic happens w":[6328],"c happens wi":[6328]," happens wit":[6328],"happens with":[6328],"appens with ":[6328],"ppens with o":[6328],"pens with on":[6328],"ens with onl":[6328],"ns with only":[6328],"s with only ":[6328]," with only l":[6328],"with only li":[6328],"ith only lit":[6328],"th only litt":[6328],"h only littl":[6328]," only little":[6328],"only little ":[6328],"nly little c":[6328],"ly little ch":[6328],"y little cha":[6328]," little chan":[6328],"little chang":[6328],"ittle change":[6328],"ttle changes":[6328],"tle changes ":[6328],"le changes .":[6328],"e changes ..":[6328]," changes ...":[6328],"changes ... ":[6328],"hanges ...  ":[6328],"anges ...   ":[6328],"remember : t":[6329],"emember : th":[6329],"member : the":[6329],"ember : the ":[6329],"mber : the _":[6329],"ber : the _f":[6329],"er : the _fo":[6329],"r : the _for":[6329]," : the _for_":[6329],": the _for_ ":[6329]," the _for_ l":[6329],"the _for_ lo":[6329],"he _for_ loo":[6329],"rating on _p":[6329],"ating on _p_":[6329],"ting on _p_ ":[6329],"ing on _p_ i":[6329],"ng on _p_ is":[6329],"g on _p_ is ":[6329]," on _p_ is f":[6329],"on _p_ is fo":[6329],"n _p_ is for":[6329]," _p_ is for ":[6329],"_p_ is for t":[6329],"p_ is for th":[6329],"_ is for the":[6329]," is for the ":[6329],"is for the s":[6329],"s for the so":[6329]," for the sou":[6329],"for the sout":[6329],"or the south":[6329],"r the south ":[6329]," the south t":[6329],"the south to":[6329],"he south to ":[6329],"e south to n":[6329]," south to no":[6329],"south to nor":[6329],"outh to nort":[6329],"uth to north":[6329],"th to north ":[6329],"h to north p":[6329]," to north po":[6329],"to north pol":[6329],"o north pole":[6329],"rth pole ang":[6329],"th pole angl":[6329],"h pole angle":[6329]," pole angle.":[6329],"pole angle. ":[6329],"ole angle. w":[6329],"le angle. wh":[6329],"e angle. wha":[6329]," angle. what":[6329],"angle. what ":[6329],"ngle. what i":[6329],"gle. what if":[6329],"le. what if ":[6329],"e. what if y":[6329],". what if yo":[6329]," what if you":[6329],"what if you ":[6329,7103],"hat if you d":[6329],"at if you do":[6329],"t if you don":[6329]," if you don'":[6329]," you don't i":[6329],"you don't in":[6329],"ou don't inc":[6329],"u don't incr":[6329]," don't incre":[6329],"don't increm":[6329],"on't increme":[6329],"n't incremen":[6329],"'t increment":[6329],"t increment ":[6329]," increment _":[6329],"increment _p":[6329],"ncrement _p_":[6329],"crement _p_ ":[6329],"rement _p_ u":[6329],"ement _p_ un":[6329],"ment _p_ unt":[6329],"ent _p_ unti":[6329],"nt _p_ until":[6329],"t _p_ until ":[6329]," _p_ until p":[6329],"_p_ until pi":[6329],"p_ until pi ":[6329],"_ until pi /":[6329]," until pi / ":[6329],"until pi / 2":[6329],"ntil pi / 2 ":[6329],"til pi / 2 b":[6329],"il pi / 2 bu":[6329],"l pi / 2 but":[6329]," pi / 2 but ":[6329,6335],"pi / 2 but s":[6329],"i / 2 but st":[6329]," / 2 but sto":[6329],"/ 2 but stop":[6329]," 2 but stop ":[6329],"2 but stop b":[6329]," but stop be":[6329],"but stop bef":[6329],"ut stop befo":[6329],"t stop befor":[6329],"stop before,":[6329],"top before, ":[6329],"op before, s":[6329],"p before, sa":[6329]," before, say":[6329],"before, say ":[6329],"efore, say a":[6329],"fore, say at":[6329],"ore, say at ":[6329],"re, say at p":[6329],"e, say at pi":[6329],", say at pi ":[6329]," say at pi /":[6329],"say at pi /2":[6329],"ay at pi /2 ":[6329],"y at pi /2 -":[6329]," at pi /2 - ":[6329],"at pi /2 - 1":[6329],"t pi /2 - 1.":[6329]," pi /2 - 1.5":[6329],"pi /2 - 1.5 ":[6329],"i /2 - 1.5 :":[6329]," /2 - 1.5 : ":[6329],"/2 - 1.5 :  ":[6329],"2 - 1.5 :   ":[6329],"math.pi / 2 ":[6331,6338,6354],"ath.pi / 2 -":[6331,6338],"th.pi / 2 - ":[6331,6338],"h.pi / 2 - 1":[6331,6338],".pi / 2 - 1.":[6331],"pi / 2 - 1.5":[6331],"i / 2 - 1.5;":[6331]," / 2 - 1.5; ":[6331],"/ 2 - 1.5; p":[6331]," 2 - 1.5; p ":[6331],"2 - 1.5; p +":[6331]," - 1.5; p +=":[6331],"- 1.5; p += ":[6331]," 1.5; p += s":[6331],"1.5; p += st":[6331],".5; p += ste":[6331,6354],"5; p += step":[6331,6354],"com/#e6ix1#4":[6333],"om/#e6ix1#4 ":[6333],"m/#e6ix1#4  ":[6333],"/#e6ix1#4   ":[6333],"quite easy. ":[6334],"uite easy. y":[6334],"ite easy. yo":[6334],"te easy. you":[6334],"e easy. you ":[6334]," easy. you j":[6334],"easy. you ju":[6334],"asy. you jus":[6334],"sy. you just":[6334],"y. you just ":[6334],". you just d":[6334]," you just de":[6334],"you just der":[6334],"ou just deri":[6334],"u just deriv":[6334]," just deriva":[6334],"just derivat":[6334],"ust derivate":[6334],"st derivated":[6334],"t derivated ":[6334]," derivated t":[6334],"derivated th":[6334],"erivated the":[6334],"rivated the ":[6334],"ivated the i":[6334],"vated the in":[6334],"ated the ini":[6334],"ted the init":[6334],"ed the initi":[6334],"d the initia":[6334],"e initial sp":[6334,6364]," initial sph":[6334,6364],"initial sphe":[6334,6364],"nitial spher":[6334,6364],"itial sphere":[6334,6364],"tial sphere ":[6334,6364],"ial sphere i":[6334],"al sphere in":[6334],"l sphere int":[6334]," sphere into":[6334],"sphere into ":[6334],"phere into a":[6334],"here into an":[6334],"ere into ano":[6334],"re into anot":[6334],"e into anoth":[6334]," into anothe":[6334],"into another":[6334],"nto another ":[6334],"to another s":[6334],"o another sh":[6334],"another shap":[6334],"nother shape":[6334],"other shape ":[6334],"ther shape y":[6334],"her shape yo":[6334],"er shape you":[6334],"r shape you ":[6334]," shape you w":[6334],"shape you wo":[6334],"hape you wou":[6334],"ape you woul":[6334],"pe you would":[6334],"e you wouldn":[6334]," you wouldn'":[6334],"you wouldn't":[6334],"ou wouldn't ":[6334],"u wouldn't h":[6334]," wouldn't ha":[6334],"wouldn't hav":[6334],"ouldn't have":[6334],"uldn't have ":[6334],"ldn't have g":[6334],"dn't have go":[6334],"n't have got":[6334],"'t have got ":[6334],"t have got a":[6334]," have got an":[6334],"have got ano":[6334],"ave got anot":[6334],"ve got anoth":[6334],"e got anothe":[6334]," got another":[6334],"got another ":[6334],"ot another w":[6334],"t another wa":[6334],"another way.":[6334],"nother way. ":[6334],"other way.  ":[6334],"ther way.   ":[6334],"now, you can":[6335],"ow, you can ":[6335],"w, you can k":[6335],", you can ke":[6335]," you can kee":[6335],"u can keep t":[6335]," can keep th":[6335],"can keep the":[6335],"an keep the ":[6335],"n keep the o":[6335]," original po":[6335],"original pol":[6335],"riginal pole":[6335],"iginal pole ":[6335],"ginal pole a":[6335],"inal pole an":[6335],"nal pole ang":[6335],"al pole angl":[6335],"l pole angle":[6335]," pole angle ":[6335],"pole angle l":[6335],"ole angle li":[6335],"le angle lim":[6335],"e angle limi":[6335]," angle limit":[6335],"angle limit ":[6335],"ngle limit p":[6335],"gle limit pi":[6335],"le limit pi ":[6335],"e limit pi /":[6335]," limit pi / ":[6335],"limit pi / 2":[6335],"imit pi / 2 ":[6335],"mit pi / 2 b":[6335],"it pi / 2 bu":[6335],"t pi / 2 but":[6335],"pi / 2 but a":[6335],"i / 2 but ad":[6335]," / 2 but add":[6335],"/ 2 but add ":[6335]," 2 but add a":[6335],"2 but add a ":[6335]," but add a n":[6335],"but add a ne":[6335],"ut add a new":[6335],"t add a new ":[6335]," add a new b":[6335],"add a new be":[6335],"dd a new beh":[6335],"d a new beha":[6335]," a new behav":[6335],"a new behavi":[6335]," new behavio":[6335],"new behavior":[6335],"ew behavior ":[6335],"w behavior :":[6335]," behavior : ":[6335],"behavior : i":[6335],"ehavior : if":[6335],"havior : if ":[6335],"avior : if a":[6335],"vior : if a ":[6335],"ior : if a c":[6335],"or : if a ce":[6335],"r : if a cer":[6335]," : if a cert":[6335],": if a certa":[6335]," if a certai":[6335],"if a certain":[6335],"f a certain ":[6335]," a certain a":[6335],"a certain an":[6335]," certain ang":[6335],"certain angl":[6335],"ertain angle":[6335],"rtain angle ":[6335],"tain angle l":[6335],"ain angle li":[6335],"in angle lim":[6335],"n angle limi":[6335],"ngle limit i":[6335],"gle limit is":[6335],"le limit is ":[6335],"e limit is r":[6335]," limit is re":[6335],"limit is rea":[6335],"imit is reac":[6335],"mit is reach":[6335],"it is reache":[6335],"t is reached":[6335],"eached, then":[6335],"ached, then ":[6335],"ched, then i":[6335],"hed, then in":[6335],"ed, then inv":[6335],"d, then inve":[6335],", then inver":[6335]," then invers":[6335],"then inverse":[6335],"hen inverse ":[6335],"en inverse t":[6335],"n inverse th":[6335]," inverse the":[6335],"inverse the ":[6335],"nverse the y":[6335],"verse the y ":[6335],"erse the y r":[6335],"rse the y ra":[6335],"se the y rad":[6335],"e the y radi":[6335]," the y radiu":[6335],"the y radius":[6335],"he y radius ":[6335],"e y radius a":[6335]," y radius ar":[6335],"y radius aro":[6335]," radius arou":[6335],"radius aroun":[6335],"adius around":[6335],"dius around ":[6335],"ius around t":[6335],"us around th":[6335],"s around thi":[6335]," around this":[6335],"around this ":[6335],"round this l":[6335],"ound this li":[6335],"und this lim":[6335],"nd this limi":[6335],"d this limit":[6335]," this limit.":[6335],"this limit. ":[6335],"his limit.  ":[6335],"var yradius;":[6337],"var limit = ":[6338],"ar limit = m":[6338],"r limit = ma":[6338]," limit = mat":[6338],"limit = math":[6338],"imit = math.":[6338],"mit = math.p":[6338],"it = math.pi":[6338],"t = math.pi ":[6338]," = math.pi /":[6338],"= math.pi / ":[6338],".pi / 2 - 1;":[6338],"  yradius = ":[6341]," yradius = p":[6341],"yradius = p ":[6341],"radius = p <":[6341],"adius = p < ":[6341],"dius = p < l":[6341],"ius = p < li":[6341],"us = p < lim":[6341],"s = p < limi":[6341]," = p < limit":[6341],"= p < limit ":[6341]," p < limit ?":[6341],"p < limit ? ":[6341]," < limit ? m":[6341],"< limit ? ma":[6341]," limit ? mat":[6341],"limit ? math":[6341],"imit ? math.":[6341],"mit ? math.s":[6341],"it ? math.si":[6341],"t ? math.sin":[6341]," ? math.sin(":[6341],"? math.sin(p":[6341],"math.sin(p) ":[6341],"ath.sin(p) :":[6341],"th.sin(p) : ":[6341],"h.sin(p) : 2":[6341],".sin(p) : 2 ":[6341],"sin(p) : 2 *":[6341],"in(p) : 2 * ":[6341],"n(p) : 2 * m":[6341],"(p) : 2 * ma":[6341],"p) : 2 * mat":[6341],") : 2 * math":[6341]," : 2 * math.":[6341],": 2 * math.s":[6341],"* math.sin(l":[6341]," math.sin(li":[6341],"math.sin(lim":[6341],"ath.sin(limi":[6341],"th.sin(limit":[6341],"h.sin(limit)":[6341],".sin(limit) ":[6341],"sin(limit) -":[6341],"in(limit) - ":[6341],"n(limit) - m":[6341],"(limit) - ma":[6341],"limit) - mat":[6341],"imit) - math":[6341],"mit) - math.":[6341],"it) - math.s":[6341],"t) - math.si":[6341],") - math.sin":[6341]," - math.sin(":[6341],"- math.sin(p":[6341],"ath.sin(p) ;":[6341],"= radius * y":[6345,6370,6381]," radius * yr":[6345,6370,6381],"radius * yra":[6345,6370,6381],"adius * yrad":[6345,6370,6381],"dius * yradi":[6345,6370,6381],"ius * yradiu":[6345,6370,6381],"us * yradius":[6345,6370,6381],"s * yradius;":[6345,6370],"demo :  http":[6351],"emo :  http:":[6351],"mo :  http:/":[6351],"o :  http://":[6351]," :  http://w":[6351],":  http://ww":[6351],"  http://www":[6351],"com/#e6ix1#5":[6351],"om/#e6ix1#5 ":[6351],"m/#e6ix1#5  ":[6351],"/#e6ix1#5   ":[6351],"t's change t":[6352],"'s change th":[6352],"hange the in":[6352],"ange the ini":[6352],"nge the init":[6352],"ge the initi":[6352],"e initial _f":[6352]," initial _fo":[6352],"initial _for":[6352],"nitial _for_":[6352],"itial _for_ ":[6352],"tial _for_ l":[6352],"ial _for_ lo":[6352],"al _for_ loo":[6352],"l _for_ loop":[6352],"_for_ loop l":[6352],"for_ loop li":[6352],"or_ loop lim":[6352],"r_ loop limi":[6352],"_ loop limit":[6352]," loop limits":[6352],"loop limits ":[6352],"oop limits n":[6352],"op limits no":[6352],"p limits now":[6352]," limits now ":[6352],"limits now :":[6352],"imits now : ":[6352],"mits now :  ":[6352],"ath.pi / 2 +":[6354],"th.pi / 2 + ":[6354],"h.pi / 2 + 0":[6354],".pi / 2 + 0.":[6354],"pi / 2 + 0.5":[6354],"i / 2 + 0.5;":[6354]," / 2 + 0.5; ":[6354],"/ 2 + 0.5; p":[6354]," 2 + 0.5; p ":[6354],"2 + 0.5; p <":[6354]," + 0.5; p < ":[6354],"+ 0.5; p < m":[6354]," 0.5; p < ma":[6354],"0.5; p < mat":[6354],".5; p < math":[6354],"5; p < math.":[6354],"ath.pi / 2  ":[6354],"th.pi / 2  -":[6354],"h.pi / 2  - ":[6354],".pi / 2  - 0":[6354],"pi / 2  - 0.":[6354],"i / 2  - 0.5":[6354]," / 2  - 0.5;":[6354],"/ 2  - 0.5; ":[6354]," 2  - 0.5; p":[6354],"2  - 0.5; p ":[6354],"  - 0.5; p +":[6354]," - 0.5; p +=":[6354],"- 0.5; p += ":[6354]," 0.5; p += s":[6354],"0.5; p += st":[6354],"com/#e6ix1#6":[6356],"om/#e6ix1#6 ":[6356],"m/#e6ix1#6  ":[6356],"well, is thi":[6357],"ell, is this":[6357],"ll, is this ":[6357],"l, is this s":[6357],", is this st":[6357]," is this sti":[6357],"is this stil":[6357],"s this still":[6357],"this still a":[6357],"his still a ":[6357],"is still a s":[6357],"s still a sp":[6357]," still a sph":[6357],"still a sphe":[6357],"till a spher":[6357],"ill a sphere":[6357],"ll a sphere ":[6357],"l a sphere ?":[6357]," a sphere ? ":[6357],"a sphere ?  ":[6357]," sphere ?   ":[6357],"let's close ":[6358],"et's close t":[6358],"t's close th":[6358],"'s close the":[6358],"s close the ":[6358],"the ribbon :":[6358],"h\", paths, t":[6360],"ths, true, t":[6360],"hs, true, tr":[6360],"s, true, tru":[6360],", true, true":[6360]," true, true ":[6360],"true, true ,":[6360],"rue, true , ":[6360],"ue, true ,  ":[6360],"com/#e6ix1#7":[6362],"om/#e6ix1#7 ":[6362],"m/#e6ix1#7  ":[6362],"/#e6ix1#7   ":[6362],"well, it's n":[6363],"ell, it's no":[6363],"ll, it's no ":[6363],"l, it's no l":[6363],", it's no lo":[6363]," it's no lon":[6363],"it's no long":[6363],"t's no longe":[6363],"'s no longer":[6363]," no longer a":[6363],"no longer a ":[6363],"o longer a s":[6363]," longer a sp":[6363],"longer a sph":[6363],"onger a sphe":[6363],"nger a spher":[6363],"ger a sphere":[6363],"er a sphere,":[6363]," a sphere, b":[6363],"a sphere, bu":[6363]," sphere, but":[6363],"sphere, but ":[6363],"phere, but a":[6363],"here, but a ":[6363],"ere, but a s":[6363],"re, but a sy":[6363],"e, but a sym":[6363],", but a syme":[6363]," but a symet":[6363],"but a symetr":[6363],"ut a symetri":[6363],"t a symetric":[6363]," a symetric ":[6363],"a symetric s":[6363]," symetric sh":[6363],"symetric sha":[6363],"ymetric shap":[6363],"etric shape ":[6363],"tric shape y":[6363],"ric shape yo":[6363],"ic shape you":[6363],"c shape you ":[6363]," shape you c":[6363],"shape you co":[6363],"hape you cou":[6363],"ape you coul":[6363],"pe you could":[6363]," you could p":[6363,6717],"you could pr":[6363],"ou could pro":[6363],"u could prob":[6363]," could proba":[6363],"could probab":[6363],"d probably h":[6363]," probably ha":[6363],"probably hav":[6363],"robably have":[6363],"obably have ":[6363],"bably have g":[6363],"ably have go":[6363],"bly have got":[6363],"ly have got ":[6363],"y have got i":[6363]," have got in":[6363],"have got in ":[6363],"ave got in a":[6363],"ve got in a ":[6363],"e got in a s":[6363]," got in a si":[6363],"got in a sim":[6363],"ot in a simp":[6363],"t in a simpl":[6363],"in a simpler":[6363],"n a simpler ":[6363]," a simpler w":[6363],"a simpler wa":[6363]," simpler way":[6363,6715],"simpler way ":[6363],"impler way w":[6363],"mpler way wi":[6363],"pler way wit":[6363],"ler way with":[6363],"er way with ":[6363],"r way with a":[6363]," way with a ":[6363],"way with a t":[6363],"ay with a tu":[6363],"y with a tub":[6363]," with a tube":[6363],"with a tube ":[6363],"ith a tube m":[6363],"th a tube me":[6363],"h a tube mes":[6363]," a tube mesh":[6363],"a tube mesh ":[6363],"be mesh or w":[6363],"e mesh or wi":[6363]," mesh or wit":[6363],"mesh or with":[6363],"esh or with ":[6363],"sh or with c":[6363],"h or with cs":[6363]," or with csg":[6363],"or with csg ":[6363],"r with csg .":[6363]," with csg ..":[6363],"with csg ...":[6363],"ith csg ... ":[6363],"th csg ... o":[6363],"h csg ... or":[6363]," csg ... or ":[6363],"csg ... or n":[6363],"sg ... or no":[6363],"g ... or not":[6363]," ... or not.":[6363],"... or not. ":[6363],".. or not.  ":[6363],"since you wr":[6364],"ince you wro":[6364],"nce you wrot":[6364],"ce you wrote":[6364],"e you wrote ":[6364]," you wrote t":[6364],"you wrote th":[6364],"ou wrote the":[6364],"u wrote the ":[6364]," wrote the i":[6364],"wrote the in":[6364],"rote the ini":[6364],"ote the init":[6364],"te the initi":[6364],"ial sphere m":[6364],"al sphere ma":[6364],"l sphere mat":[6364]," sphere math":[6364],"sphere maths":[6364],"phere maths ":[6364],"here maths c":[6364],"ere maths co":[6364],"re maths cod":[6364],"e maths code":[6364]," maths code,":[6364],"maths code, ":[6364],"aths code, y":[6364],"ths code, yo":[6364],"hs code, you":[6364],"s code, you'":[6364]," code, you'v":[6364],"code, you've":[6364],"ode, you've ":[6364],"de, you've a":[6364],"e, you've ad":[6364],", you've add":[6364]," you've adde":[6364],"you've added":[6364],"ou've added ":[6364],"u've added u":[6364],"'ve added un":[6364],"ve added unt":[6364],"e added unti":[6364]," added until":[6364],"added until ":[6364],"dded until n":[6364],"ded until no":[6364],"ed until now":[6364],"d until now ":[6364]," until now v":[6364],"until now ve":[6364],"ntil now ver":[6364],"til now very":[6364],"il now very ":[6364],"l now very f":[6364]," now very fe":[6364],"now very few":[6364],"ow very few ":[6364],"w very few c":[6364]," very few ch":[6364],"very few cha":[6364],"ery few chan":[6364],"ry few chang":[6364],"y few change":[6364]," few changes":[6364],"few changes ":[6364],"ew changes t":[6364],"w changes to":[6364],"changes to g":[6364],"hanges to ge":[6364],"anges to get":[6364],"nges to get ":[6364],"ges to get t":[6364],"es to get th":[6364],"s to get thi":[6364]," to get this":[6364],"to get this ":[6364],"o get this d":[6364]," get this de":[6364],"get this der":[6364],"et this deri":[6364],"t this deriv":[6364]," this deriva":[6364],"this derivat":[6364],"his derivate":[6364],"is derivated":[6364],"s derivated ":[6364]," derivated s":[6364],"derivated sh":[6364],"erivated sha":[6364],"rivated shap":[6364],"ivated shape":[6364],"vated shape.":[6364],"too symetric":[6365],"oo symetric,":[6365],"o symetric, ":[6365]," symetric, n":[6365],"symetric, no":[6365],"ymetric, not":[6365],"metric, not ":[6365],"etric, not e":[6365],"tric, not en":[6365],"ric, not eno":[6365],"ic, not enou":[6365],"c, not enoug":[6365],", not enough":[6365]," not enough,":[6365],"not enough, ":[6365],"ot enough, o":[6365],"t enough, ok":[6365]," enough, ok ":[6365],"enough, ok ?":[6365],"nough, ok ? ":[6365],"ough, ok ? l":[6365],"ugh, ok ? le":[6365],"gh, ok ? let":[6365],"h, ok ? let'":[6365],", ok ? let's":[6365]," ok ? let's ":[6365],"ok ? let's m":[6365],"k ? let's mo":[6365]," ? let's mor":[6365],"? let's morp":[6365]," let's morph":[6365],"let's morph ":[6365],"et's morph i":[6365],"t's morph it":[6365],"'s morph it ":[6365],"s morph it o":[6365]," morph it on":[6365],"morph it onc":[6365],"orph it once":[6365],"rph it once ":[6365],"ph it once m":[6365],"h it once mo":[6365]," it once mor":[6365],"it once more":[6365],"t once more ":[6365]," once more s":[6365],"once more so":[6365],"nce more so ":[6365],"ce more so y":[6365],"e more so yo":[6365]," more so you":[6365],"more so you ":[6365],"ore so you g":[6365],"re so you ge":[6365],"e so you get":[6365]," so you get ":[6365],"so you get o":[6365],"o you get ou":[6365]," you get out":[6365],"you get out ":[6365],"ou get out t":[6365],"u get out th":[6365]," get out the":[6365],"get out the ":[6365],"et out the c":[6365],"t out the cs":[6365]," out the csg":[6365],"out the csg ":[6365],"ut the csg o":[6365],"t the csg or":[6365]," the csg or ":[6365],"the csg or t":[6365],"he csg or tu":[6365],"e csg or tub":[6365]," csg or tube":[6365],"csg or tube ":[6365],"sg or tube w":[6365],"g or tube wa":[6365]," or tube way":[6365],"or tube way ":[6365],"r tube way :":[6365]," tube way : ":[6365],"tube way :  ":[6365],"ube way :  l":[6365],"be way :  le":[6365],"e way :  let":[6365]," way :  let'":[6365],"way :  let's":[6365],"ay :  let's ":[6365],"y :  let's m":[6365]," :  let's mo":[6365],":  let's mod":[6365],"  let's mode":[6365]," let's moder":[6365,6376],"let's modera":[6365,6376],"et's moderat":[6365,6376],"t's moderate":[6365,6376],"'s moderate ":[6365,6376],"s moderate _":[6365,6376]," moderate _x":[6365],"moderate _x_":[6365],"oderate _x_ ":[6365],"derate _x_ w":[6365],"erate _x_ wi":[6365],"rate _x_ wit":[6365],"ate _x_ with":[6365],"te _x_ with ":[6365],"e _x_ with a":[6365]," _x_ with an":[6365],"_x_ with an ":[6365],"x_ with an e":[6365],"_ with an ex":[6365]," an extra _c":[6365],"an extra _co":[6365],"n extra _cos":[6365]," extra _cosi":[6365],"extra _cosin":[6365],"xtra _cosinu":[6365],"tra _cosinus":[6365],"ra _cosinus_":[6365],"a _cosinus_ ":[6365]," _cosinus_ f":[6365,6376],"_cosinus_ fu":[6365,6376],"cosinus_ fun":[6365,6376],"osinus_ func":[6365,6376],"sinus_ funct":[6365,6376],"inus_ functi":[6365,6376],"nus_ functio":[6365,6376],"us_ function":[6365,6376],"math.cos(p) ":[6368,6379,6380],"ath.cos(p) *":[6368,6379,6380],"th.cos(p) * ":[6368,6379,6380],"h.cos(p) * m":[6368,6379],".cos(p) * ma":[6368,6379],"cos(p) * mat":[6368,6379],"os(p) * math":[6368,6379],"s(p) * math.":[6368,6379],"(p) * math.c":[6368,6379],"p) * math.co":[6368,6379]," math.cos(i ":[6368,6379,6381],"math.cos(i /":[6368,6379],"ath.cos(i / ":[6368,6379],"th.cos(i / 6":[6368,6379],"h.cos(i / 6)":[6368,6379],".cos(i / 6);":[6368,6379],"com/#e6ix1#8":[6374],"om/#e6ix1#8 ":[6374],"m/#e6ix1#8  ":[6374],"you are now ":[6375],"ou are now i":[6375],"u are now in":[6375]," are now in ":[6375],"are now in t":[6375],"re now in th":[6375],"e now in the":[6375]," now in the ":[6375],"now in the r":[6375],"ow in the re":[6375],"w in the rea":[6375]," in the real":[6375],"in the real ":[6375],"n the real r":[6375]," the real ri":[6375],"the real rib":[6375],"he real ribb":[6375],"e real ribbo":[6375]," real ribbon":[6375],"real ribbon ":[6375],"eal ribbon w":[6375],"al ribbon wo":[6375],"l ribbon wor":[6375]," ribbon worl":[6375],"ribbon world":[6375],"ibbon world ":[6375],"bbon world !":[6375],"want more ? ":[6376],"ant more ? l":[6376],"nt more ? le":[6376],"t more ? let":[6376]," more ? let'":[6376],"more ? let's":[6376],"ore ? let's ":[6376],"re ? let's m":[6376],"e ? let's mo":[6376]," ? let's mod":[6376],"? let's mode":[6376]," moderate _y":[6376],"moderate _y_":[6376],"oderate _y_ ":[6376],"derate _y_ w":[6376],"erate _y_ wi":[6376],"rate _y_ wit":[6376],"ate _y_ with":[6376],"te _y_ with ":[6376],"e _y_ with a":[6376]," _y_ with an":[6376],"_y_ with ano":[6376],"y_ with anot":[6376],"_ with anoth":[6376],"th another _":[6376],"h another _c":[6376]," another _co":[6376],"another _cos":[6376],"nother _cosi":[6376],"other _cosin":[6376],"ther _cosinu":[6376],"her _cosinus":[6376],"er _cosinus_":[6376],"r _cosinus_ ":[6376],"s_ function ":[6376],"_ function a":[6376],"nction and m":[6376],"ction and mu":[6376],"tion and mul":[6376],"ion and mult":[6376],"on and multi":[6376],"n and multip":[6376]," and multipl":[6376],"and multiply":[6376],"nd multiply ":[6376],"d multiply _":[6376]," multiply _z":[6376],"multiply _z_":[6376],"ultiply _z_ ":[6376],"ltiply _z_ b":[6376],"tiply _z_ by":[6376],"iply _z_ by ":[6376],"ply _z_ by 2":[6376],"ly _z_ by 2 ":[6376],"y _z_ by 2 (":[6376]," _z_ by 2 (w":[6376],"_z_ by 2 (wh":[6376],"z_ by 2 (why":[6376],"_ by 2 (why ":[6376]," by 2 (why ?":[6376],"by 2 (why ? ":[6376],"y 2 (why ? w":[6376]," 2 (why ? wh":[6376],"2 (why ? why":[6376]," (why ? why ":[6376],"(why ? why n":[6376],"why ? why no":[6376],"hy ? why not":[6376],"y ? why not ":[6376]," ? why not !":[6376],"? why not !)":[6376]," why not !).":[6376],"h.cos(p) * 2":[6380],".cos(p) * 2;":[6380],"s * yradius ":[6381]," * yradius *":[6381],"* yradius * ":[6381]," yradius * m":[6381],"yradius * ma":[6381],"math.cos(i *":[6381],"ath.cos(i * ":[6381],"th.cos(i * 2":[6381],"h.cos(i * 2)":[6381],".cos(i * 2);":[6381],"com/#e6ix1#9":[6385],"om/#e6ix1#9 ":[6385],"m/#e6ix1#9  ":[6385],"## various p":[6386],"# various pa":[6386]," various pat":[6386],"various path":[6386],"arious paths":[6386],"rious paths ":[6386],"ious paths c":[6386],"ous paths co":[6386],"us paths con":[6386],"s paths conc":[6386]," paths conca":[6386],"paths concat":[6386],"aths concate":[6386],"ths concaten":[6386],"hs concatena":[6386],"s concatenat":[6386],"catenation  ":[6386],"_make many d":[6387],"make many di":[6387],"ake many dif":[6387],"ke many diff":[6387],"e many diffe":[6387]," many differ":[6387],"many differe":[6387],"any differen":[6387],"ny different":[6387],"ifferent com":[6387],"fferent comp":[6387],"ferent compu":[6387],"erent comput":[6387],"rent compute":[6387],"ent computed":[6387],"nt computed ":[6387],"t computed o":[6387]," computed or":[6387],"computed or ":[6387],"omputed or m":[6387],"mputed or ma":[6387],"puted or man":[6387],"uted or manu":[6387],"ted or manua":[6387],"ed or manual":[6387],"d or manual ":[6387]," or manual p":[6387],"or manual pa":[6387],"r manual pat":[6387]," manual path":[6387],"manual patha":[6387],"anual pathar":[6387],"nual patharr":[6387],"ual patharra":[6387],"al patharray":[6387],"l patharrays":[6387]," patharrays,":[6387],"patharrays, ":[6387],"atharrays, t":[6387],"tharrays, th":[6387],"harrays, the":[6387],"arrays, then":[6387],"rrays, then ":[6387],"rays, then c":[6387],"ays, then co":[6387],"ys, then con":[6387],"s, then conc":[6387],", then conca":[6387]," then concat":[6387],"then concate":[6387],"hen concaten":[6387],"en concatena":[6387],"n concatenat":[6387]," concatenate":[6387],"concatenate ":[6387],"oncatenate t":[6387],"ncatenate th":[6387],"catenate the":[6387],"atenate them":[6387],"tenate them_":[6387],"enate them_ ":[6387],"nate them_  ":[6387],"occasionally":[6388],"ccasionally,":[6388],"casionally, ":[6388],"asionally, y":[6388],"sionally, yo":[6388],"ionally, you":[6388],"onally, you ":[6388],"nally, you m":[6388],"ally, you ma":[6388],"lly, you may":[6388],"y, you may h":[6388],"u may have s":[6388]," may have so":[6388],"may have som":[6388],"ay have some":[6388]," have some o":[6388],"have some of":[6388],"ave some of ":[6388],"ve some of y":[6388],"e some of yo":[6388]," some of you":[6388],"some of your":[6388],"ome of your ":[6388],"me of your m":[6388],"f your meshe":[6388],"our meshes f":[6388],"ur meshes fa":[6388],"r meshes fal":[6388]," meshes fall":[6388],"meshes falli":[6388],"eshes fallin":[6388],"shes falling":[6388],"hes falling ":[6388],"es falling i":[6388],"s falling in":[6388]," falling int":[6388],"falling into":[6388],"alling into ":[6388],"lling into t":[6388],"ling into th":[6388],"g into the w":[6388]," into the wr":[6388],"into the wro":[6388],"nto the wron":[6388],"to the wrong":[6388],"o the wrong ":[6388]," the wrong c":[6388],"the wrong ca":[6388],"he wrong cat":[6388],"e wrong cate":[6388]," wrong categ":[6388],"wrong catego":[6388],"rong categor":[6388],"ong category":[6388],"ng category,":[6388],"g category, ":[6388]," category, e":[6388],"category, e.":[6388],"ategory, e.g":[6388],"tegory, e.g.":[6388],"egory, e.g. ":[6388],"gory, e.g. a":[6388],"ory, e.g. an":[6388],"ry, e.g. an ":[6388],"y, e.g. an a":[6388],", e.g. an al":[6388]," e.g. an alp":[6388],"e.g. an alph":[6388],".g. an alpha":[6388],"g. an alpha ":[6388],". an alpha t":[6388]," an alpha te":[6388],"an alpha tes":[6388],"n alpha test":[6388],"tested mesh ":[6388],"ested mesh u":[6388],"sted mesh un":[6388],"ted mesh unn":[6388],"ed mesh unne":[6388],"d mesh unnec":[6388]," mesh unnece":[6388],"mesh unneces":[6388],"esh unnecess":[6388],"sh unnecessa":[6388],"h unnecessar":[6388]," unnecessari":[6388],"unnecessaril":[6388],"nnecessarily":[6388],"ecessarily m":[6388],"cessarily ma":[6388],"essarily mar":[6388],"ssarily mark":[6388],"sarily marke":[6388],"arily marked":[6388],"rily marked ":[6388],"ily marked a":[6388],"ly marked as":[6388],"y marked as ":[6388]," marked as a":[6388],"marked as al":[6388],"arked as alp":[6388],"rked as alph":[6388],"ked as alpha":[6388],"ed as alpha-":[6388],"d as alpha-b":[6388]," as alpha-bl":[6388],"as alpha-ble":[6388],"pha-blended,":[6388],"ha-blended, ":[6388],"a-blended, o":[6388],"-blended, or":[6388],"blended, or ":[6388],"lended, or a":[6388],"ended, or a ":[6388],"nded, or a m":[6388],"ded, or a me":[6388],"ed, or a mes":[6388],"d, or a mesh":[6388],", or a mesh ":[6388]," or a mesh s":[6388],"or a mesh st":[6388],"r a mesh sta":[6388]," a mesh stay":[6388],"a mesh stayi":[6388]," mesh stayin":[6388],"mesh staying":[6388],"esh staying ":[6388],"sh staying o":[6388],"h staying op":[6388]," staying opa":[6388],"staying opaq":[6388],"taying opaqu":[6388],"aying opaque":[6388],"ying opaque ":[6388],"ing opaque w":[6388],"ng opaque wh":[6388],"g opaque whe":[6388]," opaque when":[6388],"opaque when ":[6388],"paque when i":[6388],"aque when it":[6388],"que when it ":[6388],"ue when it s":[6388],"e when it sh":[6388]," when it sho":[6388],"when it shou":[6388],"hen it shoul":[6388],"en it should":[6388],"n it shouldn":[6388]," it shouldn'":[6388],"it shouldn't":[6388],"t shouldn't.":[6388]," shouldn't. ":[6388],"shouldn't. t":[6388],"houldn't. th":[6388],"ouldn't. thi":[6388],"uldn't. this":[6388],"ldn't. this ":[6388],"dn't. this w":[6388],"n't. this wi":[6388],"'t. this wil":[6388],"t. this will":[6388]," this will g":[6388],"this will gi":[6388],"his will giv":[6388],"is will give":[6388],"l give you w":[6388]," give you we":[6388],"give you wei":[6388],"ive you weir":[6388],"ve you weird":[6388],"e you weird ":[6388]," you weird g":[6388],"you weird gl":[6388],"ou weird gli":[6388],"u weird glit":[6388]," weird glitc":[6388],"weird glitch":[6388],"eird glitche":[6388],"ird glitches":[6388],"rd glitches,":[6388],"d glitches, ":[6388]," glitches, w":[6388],"glitches, wh":[6388],"litches, whi":[6388],"itches, whic":[6388],"tches, which":[6388],"ches, which ":[6388],"hes, which c":[6388],"es, which ca":[6388],"s, which can":[6388],", which can ":[6388]," which can s":[6388],"which can so":[6388],"hich can som":[6388],"ich can some":[6388],"ch can somet":[6388],"h can someti":[6388]," can sometim":[6388],"can sometime":[6388],"an sometimes":[6388],"n sometimes ":[6388],"metimes be v":[6388],"etimes be ve":[6388],"times be ver":[6388],"imes be very":[6388],"mes be very ":[6388],"es be very a":[6388],"s be very an":[6388]," be very ann":[6388],"be very anno":[6388],"e very annoy":[6388]," very annoyi":[6388],"very annoyin":[6388],"ery annoying":[6388],"ry annoying.":[6388],"y annoying. ":[6388]," annoying. y":[6388],"annoying. yo":[6388],"nnoying. you":[6388],"noying. you ":[6388],"oying. you s":[6388],"ying. you sh":[6388],"ing. you sho":[6388],"ng. you shou":[6388],"g. you shoul":[6388],". you should":[6388],"u should ref":[6388]," should refe":[6388],"should refer":[6388],"hould refer ":[6388],"ould refer t":[6388],"uld refer to":[6388],"ld refer to ":[6388],"d refer to t":[6388]," refer to th":[6388],"refer to thi":[6388],"efer to this":[6388],"fer to this ":[6388],"er to this a":[6388],"r to this ar":[6388]," to this art":[6388],"to this arti":[6388],"o this artic":[6388],"is article t":[6388],"s article to":[6388]," article to ":[6388],"article to c":[6388],"rticle to ch":[6388],"ticle to che":[6388],"icle to chec":[6388],"cle to check":[6388],"le to check ":[6388],"e to check h":[6388]," to check ho":[6388],"to check how":[6388],"o check how ":[6388]," check how y":[6388],"check how yo":[6388],"heck how you":[6388],"eck how your":[6388],"ck how your ":[6388],"k how your m":[6388]," how your me":[6388],"ur meshes an":[6388],"r meshes and":[6388],"meshes and m":[6388],"eshes and ma":[6388],"shes and mat":[6388],"hes and mate":[6388],"es and mater":[6388],"s and materi":[6388],"nd materials":[6388],"d materials ":[6388]," materials p":[6388],"materials pr":[6388],"aterials pro":[6388],"terials prop":[6388],"erials prope":[6388],"rials proper":[6388],"ials propert":[6388],"als properti":[6388],"ls propertie":[6388],"erties are s":[6388,6681],"rties are se":[6388,6681],"ties are set":[6388,6681],"ies are set.":[6388],"you're welco":[6389],"ou're welcom":[6389],"u're welcome":[6389],"'re welcome ":[6389],"re welcome t":[6389],"e welcome to":[6389],"welcome to u":[6389],"elcome to us":[6389],"lcome to use":[6389],"come to use ":[6389],"ome to use t":[6389],"me to use th":[6389],"o use this [":[6389]," use this [p":[6389],"use this [pl":[6389],"se this [pla":[6389],"e this [play":[6389]," this [playg":[6389],"this [playgr":[6389],"his [playgro":[6389],"is [playgrou":[6389],"s [playgroun":[6389],"und example]":[6389],"nd example](":[6389],"d example](h":[6389],"le](http://b":[6389],"ites.net/#1p":[6389],"tes.net/#1ph":[6389],"es.net/#1phy":[6389],"s.net/#1phyb":[6389],".net/#1phyb0":[6389],"net/#1phyb0#":[6389],"et/#1phyb0#6":[6389],"t/#1phyb0#6)":[6389],"/#1phyb0#6) ":[6389],"#1phyb0#6) t":[6389],"1phyb0#6) to":[6389],"phyb0#6) to ":[6389],"hyb0#6) to e":[6389],"yb0#6) to ex":[6389],"b0#6) to exp":[6389],"0#6) to expe":[6389],"#6) to exper":[6389],"6) to experi":[6389],") to experim":[6389],"experiment o":[6389],"xperiment on":[6389],"periment on ":[6389],"eriment on t":[6389],"riment on th":[6389],"iment on the":[6389],"ment on the ":[6389],"ent on the d":[6389],"nt on the di":[6389],"t on the dif":[6389]," on the diff":[6389],"on the diffe":[6389],"n the differ":[6389],"different th":[6389],"ifferent thi":[6389],"fferent thin":[6389],"ferent thing":[6389],"erent things":[6389],"rent things ":[6389],"ent things e":[6389],"nt things ex":[6389],"t things exp":[6389]," things expl":[6389],"things expla":[6389],"hings explai":[6389],"ings explain":[6389],"ngs explaine":[6389],"gs explained":[6389]," explained h":[6389],"explained he":[6389],"xplained her":[6389],"plained here":[6389],"lained here.":[6389],"ained here. ":[6389],"ined here. p":[6389],"ned here. pr":[6389],"ed here. pre":[6389],"d here. pres":[6389]," here. press":[6389],"here. pressi":[6389],"ere. pressin":[6389],"re. pressing":[6389],"e. pressing ":[6389],". pressing f":[6389]," pressing f9":[6389],"pressing f9 ":[6389],"ressing f9 w":[6389],"essing f9 wi":[6389],"ssing f9 wil":[6389],"sing f9 will":[6389],"ing f9 will ":[6389],"ng f9 will s":[6389],"g f9 will sw":[6389]," f9 will swi":[6389],"f9 will swit":[6389],"9 will switc":[6389]," will switch":[6389],"will switch ":[6389],"ill switch b":[6389],"ll switch be":[6389],"l switch bet":[6389],"ch between n":[6389],"h between no":[6389]," between nor":[6389],"between norm":[6389],"etween norma":[6389],"tween normal":[6389],"ween normal ":[6389],"een normal r":[6389],"en normal re":[6389],"n normal ren":[6389]," normal rend":[6389],"normal rende":[6389],"ormal render":[6389],"rmal render ":[6389],"mal render a":[6389],"al render an":[6389],"l render and":[6389]," render and ":[6389],"render and d":[6389],"ender and de":[6389],"nder and dep":[6389],"der and dept":[6389],"er and depth":[6389],"r and depth ":[6389]," and depth b":[6389],"and depth bu":[6389],"nd depth buf":[6389],"d depth buff":[6389],"pth buffer r":[6389],"th buffer re":[6389],"h buffer ren":[6389]," buffer rend":[6389],"buffer rende":[6389],"uffer render":[6389],"ffer render.":[6389],"## things to":[6390],"# things to ":[6390]," things to d":[6390,6651],"things to do":[6390],"hings to do ":[6390],"ings to do a":[6390],"ngs to do an":[6390],"gs to do and":[6390],"s to do and ":[6390]," to do and n":[6390],"to do and no":[6390],"o do and not":[6390]," do and not ":[6390],"do and not t":[6390],"o and not to":[6390]," and not to ":[6390],"and not to d":[6390],"nd not to do":[6390],"- make sure ":[6391],"ke sure your":[6391],"e sure your ":[6391]," sure your a":[6391],"sure your al":[6391],"ure your alp":[6391],"re your alph":[6391],"e your alpha":[6391]," your alpha ":[6391,6394],"your alpha b":[6391],"our alpha bl":[6391],"ur alpha ble":[6391],"ded meshes d":[6391],"ed meshes do":[6391],"d meshes do ":[6391]," meshes do n":[6391],"meshes do no":[6391],"eshes do not":[6391],"shes do not ":[6391],"hes do not i":[6391],"es do not in":[6391],"s do not int":[6391]," do not inte":[6391],"do not inter":[6391],"o not inters":[6391]," not interse":[6391],"not intersec":[6391],"ot intersect":[6391],"t intersect,":[6391]," intersect, ":[6391],"intersect, a":[6391],"ntersect, as":[6391],"tersect, as ":[6391],"ersect, as t":[6391],"rsect, as th":[6391],"sect, as thi":[6391],"ect, as this":[6391],"ct, as this ":[6391],"t, as this w":[6391],", as this wi":[6391]," as this wil":[6391],"as this will":[6391],"s this will ":[6391]," this will i":[6391],"this will in":[6391],"his will ine":[6391],"is will inev":[6391],"s will inevi":[6391]," will inevit":[6391],"will inevita":[6391],"ill inevitab":[6391],"ll inevitabl":[6391],"l inevitably":[6391]," inevitably ":[6391],"inevitably l":[6391],"nevitably le":[6391],"evitably lea":[6391],"vitably lead":[6391],"itably lead ":[6391],"tably lead t":[6391],"ably lead to":[6391],"bly lead to ":[6391],"ly lead to r":[6391],"y lead to re":[6391]," lead to ren":[6391],"lead to rend":[6391],"ead to rende":[6391],"ad to render":[6391],"d to render ":[6391]," to render g":[6391],"to render gl":[6391],"o render gli":[6391]," render glit":[6391],"render glitc":[6391],"ender glitch":[6391],"nder glitche":[6391],"der glitches":[6391],"er glitches.":[6391],"- avoid havi":[6392]," avoid havin":[6392],"avoid having":[6392],"void having ":[6392],"oid having h":[6392],"id having he":[6392],"d having hea":[6392]," having heav":[6392],"having heavi":[6392],"aving heavil":[6392],"ving heavily":[6392],"ing heavily ":[6392],"ng heavily s":[6392],"g heavily st":[6392]," heavily str":[6392],"heavily stre":[6392],"eavily stret":[6392],"avily stretc":[6392],"vily stretch":[6392],"ily stretche":[6392],"ly stretched":[6392],"y stretched ":[6392],"tretched alp":[6392],"retched alph":[6392],"etched alpha":[6392],"tched alpha ":[6392],"ched alpha b":[6392],"hed alpha bl":[6392],"ed alpha ble":[6392],"d alpha blen":[6392],"ded meshes (":[6392],"ed meshes (i":[6392],"d meshes (i.":[6392]," meshes (i.e":[6392],"meshes (i.e.":[6392],"eshes (i.e. ":[6392],"shes (i.e. l":[6392],"hes (i.e. la":[6392],"es (i.e. lar":[6392],"s (i.e. larg":[6392]," (i.e. large":[6392],"(i.e. large ":[6392],"i.e. large p":[6392],".e. large pl":[6392],"e. large pla":[6392],". large plan":[6392]," large plane":[6392],"large planes":[6392],"arge planes)":[6392],"rge planes);":[6392],"ge planes); ":[6392],"e planes); s":[6392]," planes); si":[6392],"planes); sin":[6392],"lanes); sinc":[6392],"anes); since":[6392],"nes); since ":[6392],"es); since t":[6392],"s); since th":[6392],"); since the":[6392],"; since the ":[6392]," since the c":[6392],"since the ce":[6392],"ince the cen":[6392],"nce the cent":[6392],"ce the cente":[6392]," center of i":[6392],"center of it":[6392],"enter of its":[6392],"nter of its ":[6392],"ter of its b":[6392],"er of its bo":[6392],"r of its bou":[6392]," of its boun":[6392],"of its bound":[6392],"f its boundi":[6392]," its boundin":[6392],"its bounding":[6392],"ts bounding ":[6392],"s bounding s":[6392],"ding sphere ":[6392],"ing sphere i":[6392],"ng sphere is":[6392],"g sphere is ":[6392]," sphere is u":[6392],"sphere is us":[6392],"phere is use":[6392],"here is used":[6392],"ere is used ":[6392],"re is used f":[6392],"e is used fo":[6392],"s used for d":[6392]," used for de":[6392],"used for dep":[6392],"sed for dept":[6392],"ed for depth":[6392],"d for depth ":[6392]," for depth s":[6392],"for depth so":[6392],"or depth sor":[6392],"r depth sort":[6392]," depth sorti":[6392,6399],"depth sortin":[6392,6399],"epth sorting":[6392,6399],"pth sorting,":[6392],"th sorting, ":[6392],"h sorting, d":[6392]," sorting, do":[6392],"sorting, doi":[6392],"orting, doin":[6392],"rting, doing":[6392],"ting, doing ":[6392],"ing, doing t":[6392],"ng, doing th":[6392],"g, doing thi":[6392],", doing this":[6392]," doing this ":[6392],"doing this m":[6392],"oing this ma":[6392],"ing this may":[6392],"ng this may ":[6392],"g this may r":[6392]," this may re":[6392],"this may res":[6392],"his may resu":[6392],"is may resul":[6392],"s may result":[6392]," may result ":[6392],"may result i":[6392],"ay result in":[6392],"y result in ":[6392]," result in a":[6392],"result in a ":[6392],"esult in a m":[6392],"sult in a me":[6392],"ult in a mes":[6392],"lt in a mesh":[6392],"t in a mesh ":[6392]," in a mesh b":[6392],"in a mesh be":[6392],"n a mesh bei":[6392]," a mesh bein":[6392],"a mesh being":[6392]," mesh being ":[6392],"mesh being s":[6392],"esh being so":[6392],"sh being sor":[6392],"h being sort":[6392]," being sorte":[6392],"being sorted":[6392],"eing sorted ":[6392],"ing sorted a":[6392],"ng sorted as":[6392],"g sorted as ":[6392]," sorted as f":[6392],"sorted as fa":[6392],"orted as far":[6392],"rted as far ":[6392],"ted as far a":[6392],"ed as far aw":[6392],"d as far awa":[6392]," as far away":[6392],"as far away ":[6392],"s far away f":[6392]," far away fr":[6392],"far away fro":[6392],"ar away from":[6392],"r away from ":[6392]," away from t":[6392],"away from th":[6392],"way from the":[6392],"ay from the ":[6392],"y from the c":[6392],"the camera b":[6392],"he camera bu":[6392],"e camera but":[6392]," camera but ":[6392],"camera but a":[6392],"amera but ac":[6392],"mera but act":[6392],"era but actu":[6392],"ra but actua":[6392],"a but actual":[6392],"t actually c":[6392]," actually cl":[6392],"actually clo":[6392],"ctually clos":[6392],"tually close":[6392],"ually closer":[6392],"ally closer ":[6392],"lly closer t":[6392],"ly closer to":[6392],"y closer to ":[6392]," closer to m":[6392],"closer to ma":[6392],"loser to man":[6392],"oser to many":[6392],"ser to many ":[6392],"er to many o":[6392],"r to many ot":[6392]," to many oth":[6392],"to many othe":[6392],"o many other":[6392]," many other ":[6392,6681],"many other m":[6392],"ther meshes.":[6392],"- use alpha ":[6393]," use alpha t":[6393],"use alpha te":[6393],"se alpha tes":[6393],"e alpha test":[6393],"alpha test a":[6393],"lpha test as":[6393],"pha test as ":[6393],"ha test as m":[6393],"a test as mu":[6393]," test as muc":[6393],"test as much":[6393],"est as much ":[6393],"st as much a":[6393],"t as much as":[6393]," as much as ":[6393],"as much as p":[6393],"s much as po":[6393]," much as pos":[6393],"much as poss":[6393],"uch as possi":[6393],"ch as possib":[6393],"h as possibl":[6393],"as possible;":[6393],"s possible; ":[6393]," possible; t":[6393],"possible; th":[6393],"ossible; thi":[6393],"ssible; this":[6393],"sible; this ":[6393],"ible; this m":[6393],"ble; this ma":[6393],"le; this may":[6393],"e; this may ":[6393],"; this may l":[6393]," this may lo":[6393],"this may loo":[6393],"his may look":[6393],"is may look ":[6393],"s may look p":[6393]," may look pe":[6393],"may look per":[6393],"ay look perf":[6393],"y look perfe":[6393]," look perfec":[6393],"look perfect":[6393],"ook perfect ":[6393],"ok perfect f":[6393],"k perfect fo":[6393]," perfect for":[6393],"perfect for ":[6393],"erfect for a":[6393],"rfect for a ":[6393],"fect for a p":[6393],"ect for a pi":[6393],"ct for a pix":[6393],"t for a pixe":[6393]," for a pixel":[6393],"for a pixel ":[6393],"or a pixel a":[6393],"r a pixel ar":[6393]," a pixel art":[6393],"a pixel art ":[6393]," pixel art s":[6393],"pixel art st":[6393],"ixel art sty":[6393],"xel art styl":[6393],"el art style":[6393],"l art style,":[6393]," art style, ":[6393],"art style, o":[6393],"rt style, or":[6393],"t style, or ":[6393]," style, or i":[6393],"style, or if":[6393],"tyle, or if ":[6393],"yle, or if t":[6393],"le, or if th":[6393],"e, or if the":[6393],", or if the ":[6393]," or if the t":[6393],"or if the tr":[6393],"r if the tra":[6393]," if the tran":[6393],"if the trans":[6393],"f the transp":[6393]," the transpa":[6393],"the transpar":[6393],"he transpare":[6393],"e transparen":[6393],"ransparent p":[6393],"ansparent pa":[6393],"nsparent par":[6393],"sparent part":[6393],"parent parts":[6393],"arent parts ":[6393],"rent parts b":[6393],"ent parts bo":[6393],"nt parts bou":[6393],"t parts boun":[6393]," parts bound":[6393],"parts bounda":[6393],"arts boundar":[6393],"rts boundari":[6393],"ts boundarie":[6393],"s boundaries":[6393]," boundaries ":[6393],"boundaries a":[6393],"oundaries ar":[6393],"undaries are":[6393],"ndaries are ":[6393],"daries are s":[6393],"aries are st":[6393],"ries are str":[6393],"ies are stra":[6393],"es are strai":[6393],"s are straig":[6393]," are straigh":[6393],"are straight":[6393],"re straight ":[6393],"e straight h":[6393]," straight ho":[6393],"straight hor":[6393],"traight hori":[6393],"raight horiz":[6393],"aight horizo":[6393],"ight horizon":[6393],"ght horizont":[6393],"ht horizonta":[6393],"t horizontal":[6393],"horizontal o":[6393],"orizontal or":[6393],"rizontal or ":[6393],"izontal or v":[6393],"zontal or ve":[6393],"ontal or ver":[6393],"ntal or vert":[6393],"tal or verti":[6393],"al or vertic":[6393],"l or vertica":[6393]," or vertical":[6393],"or vertical ":[6393],"r vertical l":[6393]," vertical li":[6393],"vertical lin":[6393],"ertical line":[6393],"rtical lines":[6393],"tical lines.":[6393],"- to get rid":[6394]," to get rid ":[6394],"to get rid o":[6394],"o get rid of":[6394]," get rid of ":[6394],"get rid of j":[6394],"et rid of ja":[6394],"t rid of jag":[6394]," rid of jagg":[6394],"rid of jagge":[6394],"id of jagged":[6394],"d of jagged ":[6394]," of jagged e":[6394],"of jagged ed":[6394],"f jagged edg":[6394]," jagged edge":[6394],"jagged edges":[6394],"agged edges ":[6394],"gged edges o":[6394],"ged edges on":[6394],"ed edges on ":[6394],"d edges on y":[6394]," edges on yo":[6394],"edges on you":[6394],"dges on your":[6394],"ges on your ":[6394],"es on your a":[6394],"s on your al":[6394]," on your alp":[6394],"on your alph":[6394],"n your alpha":[6394],"your alpha t":[6394],"our alpha te":[6394],"ur alpha tes":[6394],"r alpha test":[6394],"ed meshes, u":[6394],"d meshes, us":[6394]," meshes, use":[6394],"meshes, use ":[6394],"eshes, use a":[6394],"shes, use an":[6394],"hes, use ant":[6394],"es, use anti":[6394],"s, use anti-":[6394],", use anti-a":[6394]," use anti-al":[6394],"use anti-ali":[6394],"se anti-alia":[6394],"e anti-alias":[6394]," anti-aliasi":[6394],"anti-aliasin":[6394],"nti-aliasing":[6394],"ti-aliasing ":[6394],"i-aliasing f":[6394],"-aliasing fo":[6394],"iasing for y":[6394],"asing for yo":[6394],"sing for you":[6394],"ing for your":[6394],"ng for your ":[6394],"g for your s":[6394],"our scene ([":[6394],"ur scene ([f":[6394],"r scene ([fx":[6394]," scene ([fxa":[6394],"scene ([fxaa":[6394],"cene ([fxaap":[6394],"ene ([fxaapo":[6394],"ne ([fxaapos":[6394],"e ([fxaapost":[6394]," ([fxaapostp":[6394],"([fxaapostpr":[6394],"[fxaapostpro":[6394],"postprocess]":[6394],"ostprocess](":[6394],"stprocess](p":[6394],"tprocess](pa":[6394],"process](pag":[6394],"rocess](page":[6394],"ocess](page.":[6394],"cess](page.p":[6394],"ess](page.ph":[6394],"ss](page.php":[6394],"s](page.php?":[6394],"hp?p=22431))":[6394],"p?p=22431));":[6394],"?p=22431)); ":[6394],"p=22431)); w":[6394],"=22431)); wh":[6394],"22431)); whe":[6394],"2431)); when":[6394],"431)); when ":[6394],"31)); when u":[6394],"1)); when us":[6394],")); when usi":[6394],"); when usin":[6394],"; when using":[6394],"hen using an":[6394],"en using ant":[6394],"n using anti":[6394]," using anti-":[6394],"using anti-a":[6394],"sing anti-al":[6394],"ing anti-ali":[6394],"ng anti-alia":[6394],"g anti-alias":[6394],"ti-aliasing,":[6394],"i-aliasing, ":[6394],"-aliasing, y":[6394],"aliasing, yo":[6394],"liasing, you":[6394],"iasing, you ":[6394],"asing, you c":[6394],"sing, you ca":[6394],"g, you can e":[6394],"u can even d":[6394]," can even di":[6394],"can even dis":[6394],"an even disa":[6394],"n even disab":[6394]," even disabl":[6394],"even disable":[6394],"ven disable ":[6394],"en disable t":[6394],"isable the b":[6394],"sable the bu":[6394],"able the bui":[6394],"ble the buil":[6394],"le the built":[6394],"e the built-":[6394]," the built-i":[6394],"the built-in":[6394],"he built-in ":[6394],"e built-in s":[6394]," built-in sm":[6394,6395],"built-in smo":[6394,6395],"uilt-in smoo":[6394,6395],"ilt-in smoot":[6394,6395],"lt-in smooth":[6394,6395],"t-in smoothi":[6394,6395],"-in smoothin":[6394,6395],"in smoothing":[6394,6395],"n smoothing ":[6394,6395]," smoothing o":[6394],"smoothing of":[6394],"moothing of ":[6394],"oothing of w":[6394],"othing of we":[6394],"thing of web":[6394],"hing of webg":[6394],"ing of webgl":[6394],"ng of webgl ":[6394],"g of webgl w":[6394]," of webgl wh":[6394],"of webgl whe":[6394],"f webgl when":[6394]," webgl when ":[6394],"webgl when c":[6394],"ebgl when cr":[6394],"bgl when cre":[6394],"gl when crea":[6394],"l when creat":[6394],"n creating t":[6394],"eating the e":[6394],"ating the en":[6394],"ting the eng":[6394],"ing the engi":[6394],"ng the engin":[6394],"g the engine":[6394],"the engine o":[6394],"he engine ob":[6394],"e engine obj":[6394]," engine obje":[6394],"engine objec":[6394],"ngine object":[6394],"gine object:":[6394],"`engine = ne":[6395],"ne(canvas, f":[6395],"e(canvas, fa":[6395],"as, false); ":[6395],"s, false); /":[6395],", false); //":[6395]," false); // ":[6395],"false); // b":[6395],"alse); // bu":[6395],"lse); // bui":[6395],"se); // buil":[6395],"e); // built":[6395],"); // built-":[6395],"; // built-i":[6395]," // built-in":[6395],"// built-in ":[6395],"/ built-in s":[6395]," smoothing w":[6395],"smoothing wi":[6395],"moothing wil":[6395],"oothing will":[6395],"othing will ":[6395],"thing will b":[6395],"hing will be":[6395],"ing will be ":[6395],"ng will be d":[6395],"g will be di":[6395],"be disabled`":[6395],"this may hel":[6396],"his may help":[6396],"is may help ":[6396],"s may help y":[6396]," may help yo":[6396],"may help you":[6396],"ay help you ":[6396],"y help you w":[6396]," help you wi":[6396,6462],"help you wit":[6396,6462],"elp you with":[6396,6462],"lp you with ":[6396,6462],"p you with v":[6396]," you with vi":[6396],"you with vis":[6396],"ou with visi":[6396],"u with visib":[6396]," with visibl":[6396],"with visible":[6396],"ith visible ":[6396],"th visible s":[6396],"h visible se":[6396]," visible sea":[6396],"visible seam":[6396],"isible seams":[6396],"sible seams ":[6396],"ible seams b":[6396],"ble seams be":[6396],"le seams bet":[6396],"e seams betw":[6396]," seams betwe":[6396],"seams betwee":[6396],"eams between":[6396],"ams between ":[6396],"ms between m":[6396],"s between me":[6396]," between mes":[6396],"between mesh":[6396],"etween meshe":[6396],"tween meshes":[6396],"ween meshes ":[6396],"een meshes &":[6396],"en meshes & ":[6396],"n meshes & o":[6396]," meshes & ot":[6396],"meshes & oth":[6396],"eshes & othe":[6396],"shes & other":[6396],"hes & other ":[6396],"es & other s":[6396],"s & other si":[6396]," & other sim":[6396],"& other simi":[6396],"er similar i":[6396],"r similar is":[6396]," similar iss":[6396],"similar issu":[6396],"imilar issue":[6396],"milar issues":[6396],"ilar issues.":[6396],"- do not for":[6397],"ot forget to":[6397]," forget to e":[6397],"forget to en":[6397],"orget to ena":[6397],"rget to enab":[6397],"get to enabl":[6397],"et to enable":[6397],"t to enable ":[6397]," to enable b":[6397],"to enable ba":[6397],"o enable bac":[6397]," enable back":[6397],"enable backf":[6397],"nable backfa":[6397],"able backfac":[6397],"ble backface":[6397],"le backface ":[6397],"e backface c":[6397],"ce culling w":[6397],"e culling wi":[6397]," culling wit":[6397],"culling with":[6397],"ulling with ":[6397],"ling with al":[6397],"ing with alp":[6397],"ng with alph":[6397],"g with alpha":[6397],"with alpha b":[6397],"ith alpha bl":[6397],"th alpha ble":[6397],"h alpha blen":[6397],"nded meshes!":[6397],"- use render":[6398],"ing groups t":[6398],"ng groups to":[6398],"g groups to ":[6398]," groups to h":[6398],"groups to ha":[6398],"roups to hav":[6398],"oups to have":[6398],"ups to have ":[6398],"ps to have b":[6398],"s to have be":[6398]," to have bet":[6398],"to have bett":[6398],"o have bette":[6398]," have better":[6398],"have better ":[6398],"ave better c":[6398],"ve better co":[6398],"e better con":[6398]," better cont":[6398],"better contr":[6398],"etter contro":[6398],"tter control":[6398],"ter control ":[6398],"er control o":[6398],"r control ov":[6398],"ntrol over t":[6398],"trol over th":[6398],"rol over the":[6398],"ol over the ":[6398],"l over the o":[6398]," over the or":[6398],"over the ord":[6398],"ver the orde":[6398],"er the order":[6398],"r the order ":[6398],"r in which y":[6398],"n which your":[6398]," which your ":[6398],"which your m":[6398],"hich your me":[6398],"ich your mes":[6398],"ch your mesh":[6398],"h your meshe":[6398],"meshes are d":[6398],"eshes are di":[6398],"shes are dis":[6398],"hes are disp":[6398],"es are displ":[6398],"s are displa":[6398]," are display":[6398],"are displaye":[6398],"re displayed":[6398]," displayed. ":[6398],"displayed. t":[6398],"isplayed. th":[6398],"splayed. the":[6398],"played. thes":[6398],"layed. these":[6398],"ayed. these ":[6398],"yed. these a":[6398],"ed. these ar":[6398],"d. these are":[6398],". these are ":[6398]," these are e":[6398],"these are es":[6398],"hese are esp":[6398],"ese are espe":[6398],"se are espec":[6398],"e are especi":[6398]," are especia":[6398],"are especial":[6398],"re especiall":[6398],"e especially":[6398],"ful if you k":[6398],"ul if you kn":[6398],"l if you kno":[6398]," if you know":[6398],"if you know ":[6398],"f you know t":[6398]," know that s":[6398],"know that so":[6398],"now that som":[6398],"ow that some":[6398],"w that some ":[6398]," that some m":[6398],"that some me":[6398],"hat some mes":[6398],"at some mesh":[6398],"t some meshe":[6398]," some meshes":[6398],"some meshes ":[6398],"ome meshes w":[6398],"me meshes wi":[6398],"e meshes wil":[6398],"es will be a":[6398]," will be abo":[6398],"will be abov":[6398],"ill be above":[6398],"ll be above ":[6398],"l be above o":[6398]," be above ot":[6398],"be above oth":[6398],"e above othe":[6398]," above other":[6398],"above others":[6398],"bove others ":[6398],"ove others 1":[6398],"ve others 10":[6398],"e others 100":[6398]," others 100%":[6398],"others 100% ":[6398],"thers 100% o":[6398],"hers 100% of":[6398],"ers 100% of ":[6398],"rs 100% of t":[6398],"s 100% of th":[6398]," 100% of the":[6398],"100% of the ":[6398],"00% of the t":[6398],"0% of the ti":[6398],"% of the tim":[6398],"of the time ":[6398],"f the time (":[6398]," the time (f":[6398],"the time (fo":[6398],"he time (for":[6398],"e time (for ":[6398]," time (for e":[6398],"time (for ex":[6398],"ime (for exa":[6398],"me (for exam":[6398],"e (for examp":[6398],"example, an ":[6398],"xample, an o":[6398],"ample, an ov":[6398],"mple, an ove":[6398],"ple, an over":[6398],"le, an overl":[6398],"e, an overla":[6398],", an overlay":[6398]," an overlaye":[6398],"an overlayed":[6398],"n overlayed ":[6398]," overlayed u":[6398],"overlayed ui":[6398],"verlayed ui ":[6398],"erlayed ui d":[6398],"rlayed ui dr":[6398],"layed ui dra":[6398],"ayed ui draw":[6398],"yed ui drawn":[6398],"ed ui drawn ":[6398],"d ui drawn o":[6398]," ui drawn on":[6398],"ui drawn on ":[6398],"i drawn on t":[6398]," drawn on to":[6398],"drawn on top":[6398],"rawn on top ":[6398],"awn on top o":[6398],"wn on top of":[6398],"n on top of ":[6398],"top of the s":[6398,6631,6703],"op of the sc":[6398,6631,6703],"p of the sce":[6398,6703],"f the scene)":[6398]," the scene).":[6398],"- a mesh's a":[6399]," a mesh's al":[6399],"a mesh's alp":[6399]," mesh's alph":[6399],"mesh's alpha":[6399],"esh's alphai":[6399],"sh's alphain":[6399],"h's alphaind":[6399],"'s alphainde":[6399],"s alphaindex":[6399]," alphaindex ":[6399],"alphaindex p":[6399],"lphaindex pr":[6399],"phaindex pro":[6399],"haindex prop":[6399],"aindex prope":[6399],"index proper":[6399],"ndex propert":[6399],"dex property":[6399],"ex property ":[6399],"x property c":[6399],"rty can be v":[6399],"ty can be ve":[6399],"y can be ver":[6399]," can be very":[6399,6526],"can be very ":[6399,6526],"an be very u":[6399,6526],"n be very us":[6399,6526],"ery useful a":[6399],"ry useful as":[6399]," useful as w":[6399],"useful as we":[6399],"seful as wel":[6399],"eful as well":[6399],"ful as well,":[6399],"ul as well, ":[6399],"l as well, s":[6399],", since they":[6399]," since they ":[6399],"since they a":[6399],"ince they al":[6399],"nce they all":[6399],"ce they allo":[6399],"e they allow":[6399]," they allow ":[6399],"they allow y":[6399],"hey allow yo":[6399],"ey allow you":[6399],"y allow you ":[6399],"low you to o":[6399],"ow you to ov":[6399],"w you to ove":[6399],"override the":[6399],"verride the ":[6399],"erride the d":[6399],"rride the de":[6399],"ride the dep":[6399],"ide the dept":[6399],"de the depth":[6399]," the depth s":[6399],"the depth so":[6399],"he depth sor":[6399],"e depth sort":[6399],"pth sorting ":[6399],"th sorting o":[6399],"h sorting of":[6399]," sorting of ":[6399],"sorting of a":[6399],"orting of al":[6399],"rting of alp":[6399],"ting of alph":[6399],"ing of alpha":[6399],"ng of alpha-":[6399],"g of alpha-b":[6399]," of alpha-bl":[6399],"of alpha-ble":[6399],"f alpha-blen":[6399],"nded meshes.":[6399],"ded meshes. ":[6399],"ed meshes. a":[6399],"d meshes. al":[6399]," meshes. als":[6399],"meshes. also":[6399],"eshes. also ":[6399],"shes. also t":[6399],"hes. also th":[6399],"es. also thi":[6399],"s. also this":[6399],". also this ":[6399]," also this p":[6399],"also this pr":[6399],"lso this pro":[6399],"so this prop":[6399],"o this prope":[6399],"s property d":[6399]," property do":[6399],"property doe":[6399],"roperty does":[6399],"operty does ":[6399],"perty does n":[6399],"erty does no":[6399],"rty does not":[6399],"ty does not ":[6399],"y does not s":[6399],"does not suf":[6399],"oes not suff":[6399],"es not suffe":[6399],"s not suffer":[6399]," not suffer ":[6399],"not suffer f":[6399],"ot suffer fr":[6399],"t suffer fro":[6399]," suffer from":[6399],"suffer from ":[6399],"uffer from t":[6399],"ffer from th":[6399],"fer from the":[6399],"er from the ":[6399],"r from the s":[6399]," from the sa":[6399],"from the sam":[6399],"rom the same":[6399],"om the same ":[6399],"m the same l":[6399],"the same lim":[6399],"he same limi":[6399],"e same limit":[6399]," same limita":[6399],"same limitat":[6399],"ame limitati":[6399],"me limitatio":[6399],"e limitation":[6399]," limitation ":[6399],"limitation a":[6399],"imitation as":[6399],"mitation as ":[6399],"itation as r":[6399],"tation as re":[6399],"ation as ren":[6399],"tion as rend":[6399],"ion as rende":[6399],"on as render":[6399],"n as renderi":[6399]," as renderin":[6399],"as rendering":[6399],"ing groups (":[6399],"ng groups (4":[6399],"g groups (4 ":[6399]," groups (4 l":[6399],"groups (4 la":[6399],"roups (4 lay":[6399],"oups (4 laye":[6399],"ups (4 layer":[6399],"ps (4 layers":[6399],"s (4 layers ":[6399]," (4 layers a":[6399],"(4 layers at":[6399],"4 layers at ":[6399]," layers at m":[6399],"layers at mo":[6399],"ayers at mos":[6399],"yers at most":[6399],"ers at most)":[6399],"rs at most),":[6399],"s at most), ":[6399]," at most), a":[6399],"at most), an":[6399],"t most), and":[6399]," most), and ":[6399],"most), and o":[6399],"ost), and on":[6399],"st), and onl":[6399],"t), and only":[6399],"), and only ":[6399],", and only h":[6399]," and only ha":[6399],"and only has":[6399],"nd only has ":[6399],"d only has a":[6399]," only has an":[6399],"only has an ":[6399],"nly has an e":[6399],"ly has an ef":[6399],"y has an eff":[6399]," has an effe":[6399],"has an effec":[6399],"as an effect":[6399],"s an effect ":[6399]," an effect o":[6399],"an effect on":[6399],"n effect on ":[6399]," effect on a":[6399],"effect on al":[6399],"ffect on alp":[6399],"fect on alph":[6399],"ect on alpha":[6399],"ct on alpha-":[6399],"t on alpha-b":[6399]," on alpha-bl":[6399],"on alpha-ble":[6399],"n alpha-blen":[6399],"finally, the":[6400],"inally, thes":[6400],"nally, these":[6400],"ally, these ":[6400],"lly, these e":[6400],"ly, these ef":[6400],"y, these eff":[6400],", these effe":[6400]," these effec":[6400],"se effects c":[6400],"e effects ca":[6400]," effects can":[6400],"effects can ":[6400],"ffects can b":[6400],"fects can be":[6400],"cts can be p":[6400],"ts can be pr":[6400],"s can be pre":[6400]," can be pret":[6400],"can be prett":[6400],"an be pretty":[6400],"n be pretty ":[6400]," be pretty i":[6400],"be pretty in":[6400],"e pretty int":[6400]," pretty inte":[6400],"pretty inten":[6400],"retty intens":[6400],"etty intensi":[6400],"tty intensiv":[6400],"ty intensive":[6400],"y intensive ":[6400]," intensive o":[6400],"intensive on":[6400],"ntensive on ":[6400],"tensive on t":[6400],"ensive on th":[6400],"nsive on the":[6400],"sive on the ":[6400],"ive on the g":[6400],"ve on the gp":[6400],"e on the gpu":[6400]," on the gpu.":[6400],"on the gpu. ":[6400],"n the gpu. a":[6400]," the gpu. a ":[6400],"the gpu. a l":[6400],"he gpu. a lo":[6400],"e gpu. a low":[6400]," gpu. a lowe":[6400],"gpu. a lower":[6400],"pu. a lower ":[6400],"u. a lower b":[6400],". a lower bl":[6400]," a lower blu":[6400],"a lower blur":[6400]," lower blur ":[6400],"lower blur e":[6400],"ower blur ef":[6400],"wer blur eff":[6400],"er blur effe":[6400],"r blur effec":[6400],"lur effect (":[6400],"ur effect (i":[6400],"r effect (i.":[6400]," effect (i.e":[6400],"effect (i.e.":[6400],"ffect (i.e. ":[6400],"fect (i.e. s":[6400],"ect (i.e. sm":[6400],"ct (i.e. sma":[6400],"t (i.e. smal":[6400]," (i.e. small":[6400],"(i.e. smalle":[6400],"i.e. smaller":[6400],".e. smaller ":[6400],"e. smaller b":[6400],". smaller bl":[6400]," smaller blu":[6400],"smaller blur":[6400],"maller blur ":[6400],"aller blur r":[6400],"ller blur ra":[6400],"ler blur rad":[6400],"er blur radi":[6400],"r blur radiu":[6400]," blur radius":[6400],"blur radius)":[6400],"lur radius) ":[6400],"ur radius) w":[6400],"r radius) wi":[6400]," radius) wil":[6400],"radius) will":[6400],"adius) will ":[6400],"dius) will b":[6400],"ius) will be":[6400],"us) will be ":[6400],"s) will be l":[6400],") will be le":[6400]," will be les":[6400],"will be less":[6400],"ill be less ":[6400],"ll be less d":[6400],"l be less de":[6400]," be less dem":[6400],"be less dema":[6400],"e less deman":[6400]," less demand":[6400],"less demandi":[6400],"ess demandin":[6400],"ss demanding":[6400],"s demanding,":[6400]," demanding, ":[6400],"demanding, s":[6400],"emanding, so":[6400],"manding, so ":[6400],"anding, so y":[6400],"nding, so yo":[6400],"ding, so you":[6400],"ing, so you ":[6400],"ng, so you c":[6400],"g, so you ca":[6400],"so you can t":[6400,6723],"o you can tr":[6400],"u can try to":[6400]," can try to ":[6400],"can try to l":[6400],"an try to lo":[6400],"n try to low":[6400]," try to lowe":[6400],"try to lower":[6400],"ry to lower ":[6400],"y to lower a":[6400]," to lower ap":[6400],"to lower ape":[6400],"o lower aper":[6400]," lower apert":[6400],"lower apertu":[6400],"ower apertur":[6400],"wer aperture":[6400],"er aperture ":[6400],"r aperture i":[6400],"aperture ins":[6400],"perture inst":[6400],"erture inste":[6400],"rture instea":[6400],"ture instead":[6400],"ure instead ":[6400],"instead of d":[6400],"nstead of di":[6400],"stead of dis":[6400],"tead of disa":[6400],"ead of disab":[6400],"ad of disabl":[6400],"d of disabli":[6400]," of disablin":[6400],"of disabling":[6400],"f disabling ":[6400]," disabling i":[6400],"disabling it":[6400],"isabling it ":[6400],"sabling it a":[6400],"abling it al":[6400],"bling it alt":[6400],"ling it alto":[6400],"ing it altog":[6400],"ng it altoge":[6400],"g it altoget":[6400]," it altogeth":[6400],"it altogethe":[6400],"t altogether":[6400]," altogether.":[6400],"altogether. ":[6400],"ltogether. h":[6400],"together. hi":[6400],"ogether. hig":[6400],"gether. high":[6400],"ether. highl":[6400],"ther. highli":[6400],"her. highlig":[6400],"er. highligh":[6400],"r. highlight":[6400],". highlight ":[6400]," highlight e":[6400],"highlight en":[6400],"ighlight enh":[6400],"ghlight enha":[6400],"hlight enhan":[6400],"light enhanc":[6400],"ight enhanci":[6400],"ght enhancin":[6400],"ht enhancing":[6400],"t enhancing ":[6400]," enhancing i":[6400],"enhancing is":[6400],"nhancing is ":[6400],"hancing is a":[6400],"ancing is al":[6400],"ncing is als":[6400],"cing is also":[6400],"ing is also ":[6400],"ng is also q":[6400],"g is also qu":[6400]," is also qui":[6400],"is also quit":[6400],"s also quite":[6400]," also quite ":[6400],"also quite i":[6400],"lso quite in":[6400],"so quite int":[6400],"o quite inte":[6400]," quite inten":[6400],"quite intens":[6400],"uite intensi":[6400],"ite intensiv":[6400],"te intensive":[6400],"intensive, s":[6400],"ntensive, so":[6400],"tensive, so ":[6400],"ensive, so b":[6400],"nsive, so be":[6400],"sive, so be ":[6400],"ive, so be s":[6400],"ve, so be su":[6400],"e, so be sur":[6400],", so be sure":[6400]," so be sure ":[6400],"so be sure t":[6400],"ure that thi":[6400]," that this e":[6400],"that this ef":[6400],"hat this eff":[6400],"at this effe":[6400],"t this effec":[6400],"his effect c":[6400],"is effect co":[6400],"s effect con":[6400]," effect cont":[6400],"effect contr":[6400],"ffect contri":[6400],"fect contrib":[6400],"ect contribu":[6400],"ct contribut":[6400],"t contribute":[6400],"tribute to t":[6400],"ribute to th":[6400],"ibute to the":[6400],"bute to the ":[6400],"ute to the q":[6400],"te to the qu":[6400],"e to the qua":[6400]," to the qual":[6400],"to the quali":[6400],"o the qualit":[6400],"quality of y":[6400],"uality of yo":[6400],"ality of you":[6400],"lity of your":[6400],"ity of your ":[6400],"ty of your r":[6400],"y of your re":[6400]," of your ren":[6400],"of your rend":[6400],"f your rende":[6400]," your render":[6400],"your render ":[6400],"our render i":[6400],"ur render if":[6400],"r render if ":[6400]," render if y":[6400],"render if yo":[6400],"ender if you":[6400],"der if you h":[6400],"er if you ha":[6400],"f you have i":[6400],"you have it ":[6400],"ou have it a":[6400],"u have it ac":[6400]," have it act":[6400],"have it acti":[6400],"ave it activ":[6400],"ve it active":[6400],"e it active.":[6400],"l free to te":[6401]," free to tes":[6401],"free to test":[6401],"ree to test ":[6401],"ee to test i":[6401],"e to test it":[6401]," to test it ":[6401],"to test it o":[6401],"o test it on":[6401]," test it on ":[6401],"test it on t":[6401],"est it on th":[6401],"st it on the":[6401],"t it on the ":[6401]," it on the [":[6401],"it on the [p":[6401],"t on the [pl":[6401]," on the [pla":[6401],"on the [play":[6401],"n the [playg":[6401]," the [playgr":[6401],"the [playgro":[6401],"he [playgrou":[6401],"e [playgroun":[6401],"[playground]":[6401],"ound.com/#1i":[6401],"und.com/#1ig":[6401],"nd.com/#1ig8":[6401],"d.com/#1ig87":[6401],".com/#1ig874":[6401],"com/#1ig874)":[6401]," vec2(1.0, 1":[6402],"vec2(1.0, 1.":[6402],"ec2(1.0, 1.0":[6402],"c2(1.0, 1.0)":[6402],"2(1.0, 1.0) ":[6402],"(1.0, 1.0) *":[6402],"1.0, 1.0) * ":[6402,6403],".0, 1.0) * t":[6402,6403],"0, 1.0) * te":[6402,6403],", 1.0) * tex":[6402,6403]," 1.0) * texe":[6402,6403],"vec2(-1.0, 1":[6403],"ec2(-1.0, 1.":[6403],"c2(-1.0, 1.0":[6403],"2(-1.0, 1.0)":[6403],"(-1.0, 1.0) ":[6403],"-1.0, 1.0) *":[6403]," basecolor.a":[6405],"basecolor.a ":[6405],"asecolor.a =":[6405],"secolor.a = ":[6405],"ecolor.a = h":[6405],"color.a = hi":[6405],"olor.a = hig":[6405],"lor.a = high":[6405],"or.a = highl":[6405],"r.a = highli":[6405],".a = highlig":[6405],"a = highligh":[6405]," = highlight":[6405],"= highlights":[6405],"highlights(b":[6405],"ighlights(ba":[6405],"ghlights(bas":[6405],"hlights(base":[6405],"lights(basec":[6405],"ights(baseco":[6405],"ghts(basecol":[6405],"hts(basecolo":[6405],"ts(basecolor":[6405],"s(basecolor.":[6405],"(basecolor.r":[6405],"basecolor.rg":[6405],"asecolor.rgb":[6405],"secolor.rgb)":[6405],"ecolor.rgb);":[6405]," gl_fragcolo":[6406],"ragcolor = b":[6406],"agcolor = ba":[6406],"gcolor = bas":[6406],"color = base":[6406],"olor = basec":[6406],"lor = baseco":[6406],"or = basecol":[6406],"r = basecolo":[6406]," = basecolor":[6406],"= basecolor;":[6406],"our shader m":[6409],"ur shader mu":[6409],"r shader mus":[6409]," shader must":[6409],"shader must ":[6409],"hader must d":[6409],"ader must de":[6409],"der must def":[6409],"er must defi":[6409],"r must defin":[6409]," must define":[6409],"must define ":[6409],"ust define t":[6409],"st define th":[6409],"t define the":[6409],"fine the fol":[6409],"ine the foll":[6409],"ne the follo":[6409]," following v":[6409],"following va":[6409],"ollowing val":[6409],"llowing valu":[6409],"lowing value":[6409],"owing values":[6409],"wing values:":[6409],"* precision ":[6410]," precision m":[6410],"precision mu":[6410],"recision mus":[6410],"ecision must":[6410],"cision must ":[6410],"ision must b":[6410],"sion must be":[6410],"ion must be ":[6410],"on must be s":[6410],"n must be se":[6410],"ust be set t":[6410],"st be set to":[6410],"t be set to ":[6410]," be set to h":[6410],"be set to hi":[6410],"e set to hig":[6410]," set to high":[6410],"set to highp":[6410],"* a varying ":[6411],"a varying vu":[6411]," varying vuv":[6411],"varying vuv ":[6411],"arying vuv m":[6411],"rying vuv mu":[6411],"ying vuv mus":[6411],"ing vuv must":[6411],"ng vuv must ":[6411],"g vuv must b":[6411]," vuv must be":[6411],"vuv must be ":[6411],"uv must be u":[6411],"v must be us":[6411],"st be used t":[6411],"t be used to":[6411],"ed to read t":[6411],"d to read te":[6411]," to read tex":[6411],"to read text":[6411],"o read textu":[6411]," read textur":[6411],"read texture":[6411],"ead texture ":[6411],"ad texture c":[6411],"the first sa":[6412],"he first sam":[6412],"e first samp":[6412],"irst sampler":[6412],"rst sampler ":[6412],"st sampler m":[6412],"t sampler mu":[6412]," sampler mus":[6412],"sampler must":[6412],"ampler must ":[6412],"mpler must b":[6412],"pler must be":[6412],"ler must be ":[6412],"er must be n":[6412],"r must be na":[6412],"t be named t":[6412]," be named te":[6412],"be named tex":[6412],"e named text":[6412]," named textu":[6412],"named textur":[6412],"amed texture":[6412],"med textures":[6412],"ed texturesa":[6412],"once you cre":[6413],"nce you crea":[6413],"ce you creat":[6413],"ou created y":[6413],"u created yo":[6413]," created you":[6413],"created your":[6413],"reated your ":[6413],"eated your s":[6413],"ated your sa":[6413],"ted your sam":[6413],"ed your samp":[6413],"d your sampl":[6413]," your sample":[6413],"your sampler":[6413],"our sampler,":[6413],"ur sampler, ":[6413],"r sampler, y":[6413]," sampler, yo":[6413],"sampler, you":[6413],"ampler, you ":[6413],"mpler, you c":[6413],"pler, you ca":[6413],"ler, you can":[6413],"n create a p":[6413]," create a po":[6413],"create a pos":[6413],"reate a post":[6413],"eate a postp":[6413],"ate a postpr":[6413],"te a postpro":[6413],"e a postproc":[6413],"postprocess:":[6413],"stprocess(\"d":[6415,6444],"tprocess(\"do":[6415,6444],"process(\"dow":[6415,6444],"rocess(\"down":[6415,6444],"ocess(\"down ":[6415,6444],"cess(\"down s":[6415,6444],"ess(\"down sa":[6415,6444],"ss(\"down sam":[6415,6444],"s(\"down samp":[6415,6444],"(\"down sampl":[6415,6444],"\"down sample":[6415,6444],"down sample\"":[6415,6444],"own sample\",":[6415,6444],"wn sample\", ":[6415,6444],"n sample\", \"":[6415,6444]," sample\", \".":[6415,6444],"sample\", \"./":[6415,6444],"ample\", \"./s":[6415,6444],"mple\", \"./sc":[6415,6444],"ple\", \"./sce":[6415,6444],"le\", \"./scen":[6415,6444],"e\", \"./scene":[6415,6444,6451],"\", \"./scenes":[6415,6444,6451],", \"./scenes/":[6415,6444,6451]," \"./scenes/c":[6415,6444,6451],"\"./scenes/cu":[6415,6444,6451],"./scenes/cus":[6415,6444,6451],"/scenes/cust":[6415,6444,6451],"es/customs/p":[6415,6444,6451],"s/customs/po":[6415,6444,6451],"/customs/pos":[6415,6444,6451],"customs/post":[6415,6444,6451],"ustoms/postp":[6415,6444,6451],"stoms/postpr":[6415,6444,6451],"toms/postpro":[6415,6444,6451],"oms/postproc":[6415,6444,6451],"ms/postproce":[6415,6444,6451],"s/postproces":[6415,6444,6451],"stprocesses/":[6415,6444,6451],"tprocesses/d":[6415,6444],"processes/do":[6415,6444],"rocesses/dow":[6415,6444],"ocesses/down":[6415,6444],"cesses/downs":[6415,6444],"esses/downsa":[6415,6444],"sses/downsam":[6415,6444],"ses/downsamp":[6415,6444],"es/downsampl":[6415,6444],"s/downsample":[6415,6444],"/downsample\"":[6415,6444],"downsample\",":[6415,6444],"ownsample\", ":[6415,6444],"wnsample\", [":[6415,6444],"nsample\", [\"":[6415,6444],"sample\", [\"s":[6415,6444],"ample\", [\"sc":[6415,6444],"mple\", [\"scr":[6415,6444],"ple\", [\"scre":[6415,6444],"le\", [\"scree":[6415,6444],"e\", [\"screen":[6415,6444],"\", [\"screens":[6415,6444],", [\"screensi":[6415,6444]," [\"screensiz":[6415,6444],"[\"screensize":[6415,6444],"\"screensize\"":[6415,6431,6444,6446],"screensize\",":[6415,6431,6444,6446],"creensize\", ":[6415,6431,6444,6446],"reensize\", \"":[6415,6444],"eensize\", \"h":[6415,6444],"ensize\", \"hi":[6415,6444],"nsize\", \"hig":[6415,6444],"size\", \"high":[6415,6444],"ize\", \"highl":[6415,6444],"ze\", \"highli":[6415,6444],"e\", \"highlig":[6415,6444],"\", \"highligh":[6415,6444,6451],", \"highlight":[6415,6444,6451]," \"highlightt":[6415,6444],"\"highlightth":[6415,6432,6444,6447],"htthreshold\"":[6415,6432,6444,6447],"tthreshold\"]":[6415,6444],"threshold\"],":[6415,6444],"hreshold\"], ":[6415,6444],"reshold\"], n":[6415,6444],"eshold\"], nu":[6415,6444],"shold\"], nul":[6415,6444],"hold\"], null":[6415,6444],"old\"], null,":[6415,6444],"ld\"], null, ":[6415,6444],"d\"], null, 0":[6415,6444],"\"], null, 0.":[6415,6444],"], null, 0.2":[6415,6444],", null, 0.25":[6415,6444]," null, 0.25,":[6415,6444],"null, 0.25, ":[6415,6444],"ull, 0.25, n":[6415],"ll, 0.25, nu":[6415],"l, 0.25, nul":[6415],".25, null, b":[6415],"25, null, ba":[6415],"5, null, bab":[6415],"l, babylon.t":[6415],"e, engine, t":[6415]," to specify:":[6417],"* the url of":[6419],"url of the s":[6419],"rl of the sh":[6419],"l of the sha":[6419],"of the shade":[6419],"f the shader":[6419],"shader coder":[6419],"hader coder*":[6419]," a list of y":[6420],"a list of yo":[6420]," list of you":[6420],"list of your":[6420],"ist of your ":[6420],"st of your u":[6420],"t of your un":[6420]," of your uni":[6420],"of your unif":[6420],"f your unifo":[6420]," your unifor":[6420],"your uniform":[6420],"our uniforms":[6420],"ur uniforms ":[6420],"r uniforms p":[6420]," uniforms pa":[6420],"uniforms par":[6420],"niforms para":[6420],"iforms param":[6420],"forms parame":[6420],"orms paramet":[6420],"rms paramete":[6420],"ms parameter":[6420]," a list of a":[6421],"a list of ad":[6421]," list of add":[6421],"list of addi":[6421],"ist of addit":[6421],"st of additi":[6421],"t of additio":[6421],"* the parent":[6423],"the parent c":[6423],"he parent ca":[6423],"e parent cam":[6423]," parent came":[6423],"parent camer":[6423],"arent camera":[6423],"ent camera (":[6423],"nt camera (d":[6423],"t camera (de":[6423]," camera (dep":[6423],"camera (depr":[6423],"amera (depre":[6423],"mera (deprec":[6423],"era (depreca":[6423],"ra (deprecat":[6423],"a (deprecate":[6423]," (deprecated":[6423],"(deprecated)":[6423],"* the sampli":[6424]," the samplin":[6424],"the sampling":[6424],"he sampling ":[6424],"e sampling m":[6424]," sampling mo":[6424],"sampling mod":[6424],"ampling mode":[6424],"* the engine":[6425],"* can be reu":[6426],"can be reusa":[6426],"an be reusab":[6426],"n be reusabl":[6426]," be reusable":[6426],"(*please see":[6427],"*please see ":[6427],"se see the l":[6427],"e see the li":[6427]," the link at":[6427],"the link at ":[6427],"he link at t":[6427],"e link at th":[6427]," link at the":[6427],"link at the ":[6427],"ink at the b":[6427],"nk at the bo":[6427],"k at the bot":[6427],"om of this d":[6427],"m of this do":[6427]," of this doc":[6427],"of this docu":[6427],"f this docum":[6427],"is document ":[6427],"s document t":[6427]," document to":[6427],"document to ":[6427],"ocument to l":[6427],"cument to le":[6427],"ument to lea":[6427],"ment to lear":[6427],"ent to learn":[6427],"nt to learn ":[6427],"t to learn m":[6427],"learn more w":[6427],"earn more wa":[6427],"arn more way":[6427],"rn more ways":[6427],"n more ways ":[6427],"more ways to":[6427],"ore ways to ":[6427],"re ways to s":[6427],"e ways to st":[6427]," ways to sto":[6427],"ways to stor":[6427],"ays to store":[6427],"ys to store ":[6427],"s to store s":[6427]," to store sh":[6427],"to store sha":[6427],"o store shad":[6427]," store shade":[6427],"store shader":[6427],"tore shader ":[6427],"ore shader c":[6427],"re shader co":[6427],"hader code.)":[6427],"ou can set u":[6428],"u can set up":[6428]," can set up ":[6428],"can set up t":[6428],"an set up th":[6428],"n set up thi":[6428]," set up thin":[6428],"set up thing":[6428],"et up things":[6428],"t up things ":[6428]," up things b":[6428],"up things be":[6428],"p things bef":[6428]," things befo":[6428],"things befor":[6428],"hings before":[6428],"ings before ":[6428],"ngs before t":[6428],"gs before th":[6428],"s before the":[6428],"re the postp":[6428],"e the postpr":[6428],"rocess is ap":[6428],"ocess is app":[6428],"cess is appl":[6428],"ess is appli":[6428],"ss is applie":[6428],"s is applied":[6428],"applied by s":[6428],"pplied by sp":[6428],"plied by spe":[6428],"lied by spec":[6428],"ied by speci":[6428],"ed by specif":[6428],"d by specify":[6428]," by specifyi":[6428],"by specifyin":[6428],"y specifying":[6428]," specifying ":[6428],"specifying a":[6428],"pecifying a ":[6428],"ecifying a o":[6428],"cifying a on":[6428],"ifying a ona":[6428],"fying a onap":[6428],"ying a onapp":[6428],"ing a onappl":[6428],"ng a onapply":[6428],"g a onapply ":[6428]," a onapply f":[6428],"a onapply fu":[6428]," onapply fun":[6428],"onapply func":[6428],"napply funct":[6428],"apply functi":[6428],"pply functio":[6428],"ply function":[6428],"ly function:":[6428],"ostprocess.o":[6430],"stprocess.on":[6430],"tprocess.ona":[6430],"process.onap":[6430],"rocess.onapp":[6430],"ocess.onappl":[6430],"cess.onapply":[6430],"ess.onapply ":[6430],"ss.onapply =":[6430],"s.onapply = ":[6430],".onapply = f":[6430,6445,6452],"onapply = fu":[6430,6445,6452],"napply = fun":[6430,6445,6452],"function (ef":[6430,6445,6452],"unction (eff":[6430,6445,6452],"nction (effe":[6430,6445,6452],"ction (effec":[6430,6445,6452],"tion (effect":[6430,6445,6452],"ion (effect)":[6430,6445,6452],"on (effect) ":[6430,6445,6452],"n (effect) {":[6430,6445,6452],"    effect.s":[6431,6432,6446,6447,6453,6454,6455,6456],"   effect.se":[6431,6432,6446,6447,6453,6454,6455,6456],"  effect.set":[6431,6432,6446,6447,6453,6454,6455,6456]," effect.setf":[6431,6432,6446,6447,6454,6455,6456],"ct.setfloat2":[6431,6446],"t.setfloat2(":[6431,6446],".setfloat2(\"":[6431,6446],"setfloat2(\"s":[6431,6446],"etfloat2(\"sc":[6431,6446],"tfloat2(\"scr":[6431,6446],"float2(\"scre":[6431,6446],"loat2(\"scree":[6431,6446],"oat2(\"screen":[6431,6446],"at2(\"screens":[6431,6446],"t2(\"screensi":[6431,6446],"2(\"screensiz":[6431,6446],"(\"screensize":[6431,6446],"reensize\", p":[6431,6446],"eensize\", po":[6431,6446],"ensize\", pos":[6431,6446],"nsize\", post":[6431,6446],"size\", postp":[6431,6446],"ize\", postpr":[6431,6446],"ze\", postpro":[6431,6446],"e\", postproc":[6431,6446],"\", postproce":[6431,6437,6446,6453],", postproces":[6431,6437,6446,6453],"postprocess1":[6431,6444,6445,6446],"ostprocess1.":[6431,6445,6446],"stprocess1.w":[6431,6446],"tprocess1.wi":[6431,6446],"process1.wid":[6431,6446],"rocess1.widt":[6431,6446],"ocess1.width":[6431,6446],"cess1.width,":[6431,6446],"ess1.width, ":[6431,6446],"ss1.width, p":[6431,6446],"s1.width, po":[6431,6446],"1.width, pos":[6431,6446],".width, post":[6431,6446],"width, postp":[6431,6446],"idth, postpr":[6431,6446],"dth, postpro":[6431,6446],"th, postproc":[6431,6446],"h, postproce":[6431,6446],"stprocess1.h":[6431,6446],"tprocess1.he":[6431,6446],"process1.hei":[6431,6446],"rocess1.heig":[6431,6446],"ocess1.heigh":[6431,6446],"cess1.height":[6431,6446],"ess1.height)":[6431,6446],"ss1.height);":[6431,6446],"ct.setfloat(":[6432,6447,6454,6455,6456],"t.setfloat(\"":[6432,6447,6454,6455,6456],".setfloat(\"h":[6432,6447,6456],"setfloat(\"hi":[6432,6447,6456],"etfloat(\"hig":[6432,6447,6456],"tfloat(\"high":[6432,6447,6456],"float(\"highl":[6432,6447,6456],"loat(\"highli":[6432,6447,6456],"oat(\"highlig":[6432,6447,6456],"at(\"highligh":[6432,6447,6456],"t(\"highlight":[6432,6447,6456],"(\"highlightt":[6432,6447],"tthreshold\",":[6432,6447],"threshold\", ":[6432,6447],"hreshold\", 0":[6432,6447],"reshold\", 0.":[6432,6447],"eshold\", 0.9":[6432,6447],"shold\", 0.90":[6432,6447],"hold\", 0.90)":[6432,6447],"old\", 0.90);":[6432,6447],"so use the o":[6435],"o use the ou":[6435]," use the out":[6435],"use the outp":[6435],"se the outpu":[6435],"e the output":[6435]," output of a":[6435],"output of a ":[6435],"utput of a p":[6435],"tput of a pr":[6435],"put of a pre":[6435],"ut of a prev":[6435],"a previous p":[6435]," previous po":[6435],"previous pos":[6435],"revious post":[6435],"evious postp":[6435],"vious postpr":[6435],"ious postpro":[6435],"ous postproc":[6435],"us postproce":[6435],"ostprocess a":[6435],"stprocess as":[6435],"tprocess as ":[6435],"process as t":[6435],"rocess as th":[6435],"ocess as the":[6435],"cess as the ":[6435],"ess as the s":[6435],"ss as the so":[6435],"the source f":[6435],"he source fo":[6435],"e source for":[6435]," source for ":[6435],"source for y":[6435],"ource for yo":[6435],"urce for you":[6435],"rce for your":[6435],"ce for your ":[6435],"e for your o":[6435]," for your ow":[6435],"for your own":[6435],"or your own ":[6435],"r your own s":[6435]," your own sa":[6435],"your own sam":[6435],"our own samp":[6435],"ur own sampl":[6435],"r own sample":[6435]," own sampler":[6435],"own sampler:":[6435],"effect.sette":[6437,6453],"ffect.settex":[6437,6453],"fect.settext":[6437,6453],"ect.settextu":[6437,6453],"ct.settextur":[6437,6453],"t.settexture":[6437,6453],".settexturef":[6437,6453],"settexturefr":[6437,6453],"ettexturefro":[6437,6453],"ttexturefrom":[6437,6453],"texturefromp":[6437,6453],"exturefrompo":[6437,6453],"xturefrompos":[6437,6453],"turefrompost":[6437,6453],"urefrompostp":[6437,6453],"refrompostpr":[6437,6453],"efrompostpro":[6437,6453],"frompostproc":[6437,6453],"rompostproce":[6437,6453],"ompostproces":[6437,6453],"mpostprocess":[6437,6453],"cess(\"scenes":[6437,6453],"ess(\"scenesa":[6437,6453],"ss(\"scenesam":[6437,6453],"s(\"scenesamp":[6437,6453],"(\"scenesampl":[6437,6453],"\"scenesample":[6437,6451,6453],"scenesampler":[6437,6451,6453],"cenesampler\"":[6437,6451,6453],"enesampler\",":[6437,6453],"nesampler\", ":[6437,6453],"esampler\", p":[6437,6453],"sampler\", po":[6437,6453],"ampler\", pos":[6437,6453],"mpler\", post":[6437,6453],"pler\", postp":[6437,6453],"ler\", postpr":[6437,6453],"er\", postpro":[6437,6453],"r\", postproc":[6437,6453],"postprocess0":[6437,6443,6453],"ostprocess0)":[6437,6453],"stprocess0);":[6437,6453],"# chaining p":[6439]," chaining po":[6439],"chaining pos":[6439],"haining post":[6439],"aining postp":[6439],"ining postpr":[6439],"ning postpro":[6439],"you can chai":[6440],"ou can chain":[6440],"u can chain ":[6440]," can chain p":[6440],"can chain po":[6440],"an chain pos":[6440],"n chain post":[6440]," chain postp":[6440],"chain postpr":[6440],"hain postpro":[6440],"ain postproc":[6440],"tprocesses o":[6440],"processes on":[6440],"rocesses on ":[6440],"ocesses on a":[6440],"cesses on a ":[6440],"esses on a s":[6440],"sses on a sp":[6440],"ses on a spe":[6440],"es on a spec":[6440],"s on a speci":[6440,6606],"specific cam":[6440],"pecific came":[6440],"ecific camer":[6440],"cific camera":[6440],"ific camera.":[6440],"fic camera. ":[6440],"ic camera. t":[6440],"c camera. th":[6440]," camera. the":[6440],"camera. they":[6440],"amera. they ":[6440],"mera. they a":[6440],"era. they ar":[6440],"ra. they are":[6440],"a. they are ":[6440],". they are p":[6440]," they are pr":[6440],"they are pro":[6440],"hey are proc":[6440],"ey are proce":[6440],"y are proces":[6440]," are process":[6440],"are processe":[6440],"re processed":[6440],"e processed ":[6440]," processed u":[6440],"processed us":[6440],"rocessed usi":[6440],"ocessed usin":[6440],"cessed using":[6440],"essed using ":[6440],"ssed using t":[6440],"sed using th":[6440],"using the cr":[6440],"sing the cre":[6440],"ing the crea":[6440],"ng the creat":[6440],"g the creati":[6440],"creation ord":[6440],"reation orde":[6440],"eation order":[6440],"ation order.":[6440],"tion order. ":[6440],"ion order. f":[6440],"on order. fo":[6440],"n order. for":[6440]," order. for ":[6440],"order. for i":[6440],"rder. for in":[6440],"der. for ins":[6440],"r instance h":[6440]," instance he":[6440],"instance her":[6440],"nstance here":[6440],"stance here ":[6440],"tance here i":[6440],"ance here is":[6440],"nce here is ":[6440],"ce here is t":[6440],"e here is th":[6440],"s the code u":[6440],"de used to s":[6440],"o simulate a":[6440]," simulate a ":[6440],"simulate a b":[6440],"imulate a bl":[6440],"mulate a blo":[6440],"ulate a bloo":[6440],"late a bloom":[6440],"ate a bloom ":[6440],"te a bloom e":[6440],"e a bloom ef":[6440]," a bloom eff":[6440],"a bloom effe":[6440]," bloom effec":[6440],"bloom effect":[6440],"loom effect:":[6440],"var blurwidt":[6442],"ar blurwidth":[6442],"r blurwidth ":[6442]," blurwidth =":[6442],"blurwidth = ":[6442],"lurwidth = 1":[6442],"urwidth = 1.":[6442],"rwidth = 1.0":[6442],"width = 1.0;":[6442],"ostprocess0 ":[6443],"stprocess0 =":[6443],"tprocess0 = ":[6443],"process0 = n":[6443],"rocess0 = ne":[6443],"ocess0 = new":[6443],"cess0 = new ":[6443],"ess0 = new b":[6443],"ss0 = new ba":[6443],"s0 = new bab":[6443],"opy\", 1.0, c":[6443],"py\", 1.0, ca":[6443],"y\", 1.0, cam":[6443],"\", 1.0, came":[6443],"ostprocess1 ":[6444],"stprocess1 =":[6444],"tprocess1 = ":[6444],"process1 = n":[6444],"rocess1 = ne":[6444],"ocess1 = new":[6444],"cess1 = new ":[6444],"ess1 = new b":[6444],"ss1 = new ba":[6444],"s1 = new bab":[6444],"ull, 0.25, c":[6444],"ll, 0.25, ca":[6444],"l, 0.25, cam":[6444],", 0.25, came":[6444,6449,6450]," 0.25, camer":[6444,6449,6450],"0.25, camera":[6444,6449,6450],".25, camera,":[6444],"25, camera, ":[6444],"5, camera, b":[6444],", camera, ba":[6444]," camera, bab":[6444],"camera, baby":[6444],"amera, babyl":[6444],"mera, babylo":[6444],"era, babylon":[6444],"ra, babylon.":[6444],"a, babylon.t":[6444],"amplingmode)":[6444],"mplingmode);":[6444],"stprocess1.o":[6445],"tprocess1.on":[6445],"process1.ona":[6445],"rocess1.onap":[6445],"ocess1.onapp":[6445],"cess1.onappl":[6445],"ess1.onapply":[6445],"ss1.onapply ":[6445],"s1.onapply =":[6445],"1.onapply = ":[6445],"postprocess2":[6449],"ostprocess2 ":[6449],"stprocess2 =":[6449],"tprocess2 = ":[6449],"process2 = n":[6449],"rocess2 = ne":[6449],"ocess2 = new":[6449],"cess2 = new ":[6449],"ess2 = new b":[6449],"ss2 = new ba":[6449],"s2 = new bab":[6449],"dth, 0.25, c":[6449,6450],"th, 0.25, ca":[6449,6450],"h, 0.25, cam":[6449,6450],".25, camera)":[6449,6450],"25, camera);":[6449,6450],"postprocess3":[6450],"ostprocess3 ":[6450],"stprocess3 =":[6450],"tprocess3 = ":[6450],"process3 = n":[6450],"rocess3 = ne":[6450],"ocess3 = new":[6450],"cess3 = new ":[6450],"ess3 = new b":[6450],"ss3 = new ba":[6450],"s3 = new bab":[6450],"tprocess(\"ve":[6450],"process(\"ver":[6450],"rocess(\"vert":[6450],"ocess(\"verti":[6450],"cess(\"vertic":[6450],"ess(\"vertica":[6450],"ss(\"vertical":[6450],"s(\"vertical ":[6450],"(\"vertical b":[6450],"\"vertical bl":[6450],"rtical blur\"":[6450],"tical blur\",":[6450],"ical blur\", ":[6450],"cal blur\", n":[6450],"2(0, 1.0), b":[6450],"(0, 1.0), bl":[6450],"0, 1.0), blu":[6450],", 1.0), blur":[6450]," 1.0), blurw":[6450],"1.0), blurwi":[6450],".0), blurwid":[6450],"postprocess4":[6451,6452],"ostprocess4 ":[6451],"stprocess4 =":[6451],"tprocess4 = ":[6451],"process4 = n":[6451],"rocess4 = ne":[6451],"ocess4 = new":[6451],"cess4 = new ":[6451],"ess4 = new b":[6451],"ss4 = new ba":[6451],"s4 = new bab":[6451],"tprocess(\"fi":[6451],"process(\"fin":[6451],"rocess(\"fina":[6451],"ocess(\"final":[6451],"cess(\"final ":[6451],"ess(\"final c":[6451],"ss(\"final co":[6451],"s(\"final com":[6451],"(\"final comp":[6451],"\"final compo":[6451],"final compos":[6451],"inal compose":[6451],"nal compose\"":[6451],"al compose\",":[6451],"l compose\", ":[6451]," compose\", \"":[6451],"compose\", \".":[6451],"ompose\", \"./":[6451],"mpose\", \"./s":[6451],"pose\", \"./sc":[6451],"ose\", \"./sce":[6451],"se\", \"./scen":[6451],"tprocesses/c":[6451],"processes/co":[6451],"rocesses/com":[6451],"ocesses/comp":[6451],"cesses/compo":[6451],"esses/compos":[6451],"sses/compose":[6451],"ses/compose\"":[6451],"es/compose\",":[6451],"s/compose\", ":[6451],"/compose\", [":[6451],"compose\", [\"":[6451],"ompose\", [\"s":[6451],"mpose\", [\"sc":[6451],"pose\", [\"sce":[6451],"ose\", [\"scen":[6451],"se\", [\"scene":[6451],"e\", [\"scenei":[6451],"\", [\"scenein":[6451],", [\"sceneint":[6451]," [\"sceneinte":[6451],"[\"sceneinten":[6451],"\"sceneintens":[6451,6454],"sceneintensi":[6451,6454],"ceneintensit":[6451,6454],"eneintensity":[6451,6454],"neintensity\"":[6451,6454],"eintensity\",":[6451,6454],"intensity\", ":[6451,6454,6455,6456],"ntensity\", \"":[6451],"tensity\", \"g":[6451],"ensity\", \"gl":[6451],"nsity\", \"glo":[6451],"sity\", \"glow":[6451],"ity\", \"glowi":[6451],"ty\", \"glowin":[6451],"y\", \"glowint":[6451],"\", \"glowinte":[6451],", \"glowinten":[6451]," \"glowintens":[6451],"\"glowintensi":[6451,6455],"glowintensit":[6451,6455],"lowintensity":[6451,6455],"owintensity\"":[6451,6455],"wintensity\",":[6451,6455],"tensity\", \"h":[6451],"ensity\", \"hi":[6451],"nsity\", \"hig":[6451],"sity\", \"high":[6451],"ity\", \"highl":[6451],"ty\", \"highli":[6451],"y\", \"highlig":[6451]," \"highlighti":[6451],"\"highlightin":[6451,6456],"highlightint":[6451,6456],"ighlightinte":[6451,6456],"ghlightinten":[6451,6456],"hlightintens":[6451,6456],"lightintensi":[6451,6456],"ightintensit":[6451,6456],"ghtintensity":[6451,6456],"htintensity\"":[6451,6456],"tintensity\"]":[6451],"intensity\"],":[6451],"ntensity\"], ":[6451],"tensity\"], [":[6451],"ensity\"], [\"":[6451],"nsity\"], [\"s":[6451],"sity\"], [\"sc":[6451],"ity\"], [\"sce":[6451],"ty\"], [\"scen":[6451],"y\"], [\"scene":[6451],"\"], [\"scenes":[6451],"], [\"scenesa":[6451],", [\"scenesam":[6451]," [\"scenesamp":[6451],"[\"scenesampl":[6451],"enesampler\"]":[6451],"nesampler\"],":[6451],"esampler\"], ":[6451],"sampler\"], 1":[6451],"ampler\"], 1,":[6451],"mpler\"], 1, ":[6451],"pler\"], 1, c":[6451],"ler\"], 1, ca":[6451],"er\"], 1, cam":[6451],"r\"], 1, came":[6451],"\"], 1, camer":[6451],"], 1, camera":[6451],", 1, camera)":[6451]," 1, camera);":[6451],"ostprocess4.":[6452],"stprocess4.o":[6452],"tprocess4.on":[6452],"process4.ona":[6452],"rocess4.onap":[6452],"ocess4.onapp":[6452],"cess4.onappl":[6452],"ess4.onapply":[6452],"ss4.onapply ":[6452],"s4.onapply =":[6452],"4.onapply = ":[6452]," effect.sett":[6453],".setfloat(\"s":[6454],"setfloat(\"sc":[6454],"etfloat(\"sce":[6454],"tfloat(\"scen":[6454],"float(\"scene":[6454],"loat(\"scenei":[6454],"oat(\"scenein":[6454],"at(\"sceneint":[6454],"t(\"sceneinte":[6454],"(\"sceneinten":[6454],"ntensity\", 0":[6454,6455],"tensity\", 0.":[6454,6455],"ensity\", 0.5":[6454],"nsity\", 0.5)":[6454],"sity\", 0.5);":[6454],".setfloat(\"g":[6455],"setfloat(\"gl":[6455],"etfloat(\"glo":[6455],"tfloat(\"glow":[6455],"float(\"glowi":[6455],"loat(\"glowin":[6455],"oat(\"glowint":[6455],"at(\"glowinte":[6455],"t(\"glowinten":[6455],"(\"glowintens":[6455],"ensity\", 0.4":[6455],"nsity\", 0.4)":[6455],"sity\", 0.4);":[6455],"(\"highlighti":[6456],"tintensity\",":[6456],"ntensity\", 1":[6456],"tensity\", 1.":[6456],"ensity\", 1.0":[6456],"nsity\", 1.0)":[6456],"sity\", 1.0);":[6456],"more about s":[6459,6646],"ore about sh":[6459],"re about sha":[6459],"e about shad":[6459],"haders and t":[6459],"aders and tr":[6459],"ders and try":[6459],"ers and try ":[6459],"rs and try o":[6459],"s and try ou":[6459]," and try our":[6459],"and try our ":[6459],"nd try our c":[6459],"d try our cy":[6459]," try our cyo":[6459],"try our cyos":[6459],"ry our cyos ":[6459],"y our cyos s":[6459]," our cyos sh":[6459],"our cyos sha":[6459],"ur cyos shad":[6459],"r cyos shade":[6459]," cyos shader":[6459],"cyos shader ":[6459],"yos shader e":[6459],"os shader ed":[6459],"s shader edi":[6459]," shader edit":[6459],"shader edito":[6459],"hader editor":[6459],"ader editor ":[6459],"der editor [":[6459],"er editor [*":[6459],"r editor [**":[6459]," editor [**r":[6459],"editor [**ri":[6459],"ditor [**rig":[6459],"itor [**righ":[6459],"tor [**right":[6459],"or [**right ":[6459],"r [**right h":[6459],"on-js.aspx).":[6459],"try to memor":[6462],"ry to memori":[6462],"y to memoriz":[6462]," to memorize":[6462],"to memorize ":[6462],"o memorize t":[6462]," memorize th":[6462],"memorize thi":[6462],"emorize this":[6462],"morize this ":[6462],"orize this w":[6462],"rize this we":[6462],"ize this web":[6462],"ze this web ":[6462],"e this web p":[6462]," this web pa":[6462],"this web pag":[6462],"his web page":[6462],"is web page ":[6462],"s web page l":[6462]," web page la":[6462],"web page lay":[6462],"eb page layo":[6462],"b page layou":[6462]," page layout":[6462],"page layout,":[6462],"age layout, ":[6462],"ge layout, a":[6462],"e layout, an":[6462]," layout, and":[6462],"layout, and ":[6462],"ayout, and s":[6462],"yout, and se":[6462],"out, and see":[6462],"ut, and see ":[6462],"t, and see h":[6462],"nction is at":[6462],"ction is at ":[6462],"tion is at t":[6462],"ion is at th":[6462],"on is at the":[6462],"n is at the ":[6462]," is at the h":[6462],"is at the he":[6462],"s at the hea":[6462]," at the hear":[6462],"at the heart":[6462],"t the heart ":[6462]," the heart o":[6462],"the heart of":[6462],"he heart of ":[6462],"e heart of i":[6462]," heart of it":[6462],"heart of it.":[6462],"eart of it. ":[6462],"art of it. a":[6462],"rt of it. af":[6462],"t of it. aft":[6462]," of it. afte":[6462],"of it. after":[6462],"f it. after ":[6462]," it. after y":[6462],"it. after yo":[6462],"t. after you":[6462],"r you have s":[6462],"ou have spen":[6462],"u have spent":[6462]," have spent ":[6462],"have spent s":[6462],"ave spent so":[6462],"ve spent som":[6462],"e spent some":[6462]," spent some ":[6462],"spent some t":[6462],"pent some ti":[6462],"ent some tim":[6462],"nt some time":[6462],"t some time ":[6462],"layground, y":[6462,6716],"ayground, yo":[6462,6716],"yground, you":[6462,6716],"ground, you ":[6462,6716],"round, you w":[6462],"ound, you wi":[6462],"und, you wil":[6462],"nd, you will":[6462],"u will see h":[6462]," will see ho":[6462,6501],"will see how":[6462,6501],"ill see how ":[6462,6501],"ll see how c":[6462],"l see how cr":[6462]," see how cre":[6462],"see how crea":[6462],"ee how creat":[6462],"e how create":[6462]," how creates":[6462],"how createsc":[6462],"ow createsce":[6462],"w createscen":[6462],"scene() is p":[6462],"cene() is po":[6462],"ene() is por":[6462],"ne() is port":[6462],"e() is porta":[6462],"() is portab":[6462],") is portabl":[6462]," is portable":[6462],"is portable,":[6462],"s portable, ":[6462]," portable, a":[6462],"portable, an":[6462],"ortable, and":[6462],"rtable, and ":[6462],"table, and c":[6462],"able, and ca":[6462],"ble, and can":[6462],"le, and can ":[6462],"e, and can b":[6462],"and can be e":[6462],"nd can be ea":[6462],"d can be eas":[6462]," can be easi":[6462],"can be easil":[6462],"an be easily":[6462],"n be easily ":[6462]," be easily c":[6462],"be easily co":[6462],"e easily cop":[6462]," easily copi":[6462],"easily copie":[6462],"asily copied":[6462],"sily copied ":[6462],"ily copied a":[6462],"ly copied an":[6462],"y copied and":[6462]," copied and ":[6462],"copied and p":[6462],"opied and pa":[6462],"pied and pas":[6462],"ied and past":[6462],"ed and paste":[6462],"d and pasted":[6462]," and pasted ":[6462],"and pasted t":[6462],"nd pasted to":[6462],"d pasted to ":[6462]," pasted to a":[6462],"pasted to an":[6462],"asted to and":[6462],"sted to and ":[6462],"ted to and f":[6462],"ed to and fr":[6462],"d to and fro":[6462]," to and from":[6462],"to and from ":[6462],"o and from t":[6462]," and from th":[6462],"and from the":[6462],"nd from the ":[6462],"d from the p":[6462]," from the pl":[6462],"und editor w":[6462],"nd editor wi":[6462],"d editor win":[6462],"itor window.":[6462],"tor window. ":[6462],"or window. t":[6462],"r window. th":[6462]," window. thi":[6462],"window. this":[6462],"indow. this ":[6462],"ndow. this w":[6462],"dow. this wi":[6462],"ow. this wil":[6462],"w. this will":[6462],"this will al":[6462],"his will all":[6462],"is will allo":[6462],"s will allow":[6462],"will allow o":[6462],"ill allow ot":[6462],"ll allow oth":[6462],"l allow othe":[6462]," allow other":[6462],"allow others":[6462],"llow others ":[6462],"low others t":[6462],"ow others to":[6462],"w others to ":[6462]," others to h":[6462],"others to he":[6462],"thers to hel":[6462],"hers to help":[6462],"ers to help ":[6462],"rs to help y":[6462],"s to help yo":[6462],"o help you w":[6462],"p you with p":[6462]," you with pr":[6462],"you with pro":[6462],"ou with prob":[6462],"u with probl":[6462]," with proble":[6462],"with problem":[6462],"ith problems":[6462],"th problems,":[6462],"h problems, ":[6462]," problems, a":[6462],"problems, an":[6462],"roblems, and":[6462],"oblems, and ":[6462],"blems, and w":[6462],"lems, and wi":[6462],"ems, and wil":[6462],"ms, and will":[6462],"s, and will ":[6462],", and will a":[6462]," and will al":[6462],"and will als":[6462],"nd will also":[6462],"d will also ":[6462]," will also a":[6462],"will also al":[6462],"ill also all":[6462],"ll also allo":[6462],"l also allow":[6462]," also allow ":[6462],"also allow y":[6462],"lso allow yo":[6462],"so allow you":[6462],"low you to h":[6462],"ow you to he":[6462],"w you to hel":[6462]," you to help":[6462],"you to help ":[6462],"ou to help o":[6462],"u to help ot":[6462]," to help oth":[6462],"to help othe":[6462],"o help other":[6462],"help others ":[6462],"elp others w":[6462],"lp others wi":[6462],"p others wit":[6462]," others with":[6462],"others with ":[6462],"thers with t":[6462],"hers with th":[6462],"ers with the":[6462],"rs with thei":[6462],"s with their":[6462],"with their p":[6462],"ith their pr":[6462],"th their pro":[6462],"h their prob":[6462]," their probl":[6462],"their proble":[6462],"heir problem":[6462],"eir problems":[6462],"ir problems.":[6462],"ow you are r":[6465],"w you are re":[6465]," you are rea":[6465],"you are read":[6465],"ou are ready":[6465],"u are ready ":[6465]," are ready t":[6465],"are ready to":[6465],"re ready to ":[6465],"e ready to g":[6465]," ready to go":[6465],"ready to go ":[6465],"eady to go f":[6465],"ady to go fu":[6465],"dy to go fur":[6465],"y to go furt":[6465]," go further ":[6465],"go further a":[6465],"o further an":[6465]," further and":[6465],"further and ":[6465],"urther and l":[6465],"rther and le":[6465],"ther and lea":[6465],"her and lear":[6465],"er and learn":[6465],"r and learn ":[6465]," and learn h":[6465],"and learn ho":[6465],"nd learn how":[6465],"d learn how ":[6465],"to create mo":[6465],"o create mor":[6465]," create more":[6465],"create more ":[6465],"reate more e":[6465],"eate more el":[6465],"ate more ele":[6465],"te more elem":[6465],"e more eleme":[6465]," more elemen":[6465],"more element":[6465],"ore elements":[6465],"re elements ":[6465],"e elements l":[6465]," elements li":[6465],"elements lik":[6465],"lements like":[6465],"ements like ":[6465],"ments like s":[6465],"ents like sp":[6465],"nts like sph":[6465],"ts like sphe":[6465],"s like spher":[6465]," like sphere":[6465],"like spheres":[6465],"ike spheres,":[6465],"ke spheres, ":[6465],"e spheres, c":[6465],"cylinders, b":[6465],"ylinders, bo":[6465],"linders, box":[6465],"inders, boxe":[6465],"nders, boxes":[6465],"ders, boxes,":[6465],"ers, boxes, ":[6465],"rs, boxes, e":[6465],"s, boxes, et":[6465],", boxes, etc":[6465]," boxes, etc.":[6465],"cause this v":[6466],"ause this va":[6466],"use this val":[6466],"se this valu":[6466],"this value c":[6466],"his value cr":[6466],"is value cre":[6466],"s value crea":[6466]," value creat":[6466],"value create":[6466],"alue creates":[6466],"lue creates ":[6466],"ue creates t":[6466],"e creates tw":[6466]," creates twi":[6466],"creates twic":[6466],"reates twice":[6466],"eates twice ":[6466],"ates twice m":[6466],"tes twice mo":[6466],"es twice mor":[6466],"s twice more":[6466]," twice more ":[6466],"twice more v":[6466],"wice more ve":[6466],"ice more ver":[6466],"ce more vert":[6466],"e more verti":[6466]," more vertic":[6466],"more vertice":[6466],"ore vertices":[6466],"e vertices t":[6466]," vertices th":[6466],"vertices tha":[6466],"ertices than":[6466],"rtices than ":[6466],"tices than t":[6466],"ices than th":[6466],"ces than the":[6466],"es than the ":[6466],"s than the m":[6466]," than the me":[6466],"than the mes":[6466],"han the mesh":[6466],"an the mesh ":[6466],"n the mesh n":[6466]," the mesh ne":[6466],"the mesh nee":[6466],"he mesh need":[6466],"e mesh needs":[6466]," mesh needs ":[6466],"mesh needs t":[6466],"esh needs to":[6466],"sh needs to ":[6466],"h needs to b":[6466]," needs to be":[6466],"needs to be ":[6466],"eeds to be r":[6466],"eds to be re":[6466],"ds to be ren":[6466],"s to be rend":[6466]," to be rende":[6466],"to be render":[6466],"o be rendere":[6466],"e rendered w":[6466]," rendered wi":[6466],"rendered wit":[6466],"endered with":[6466],"ndered with ":[6466],"dered with o":[6466],"ered with on":[6466],"red with onl":[6466],"ed with only":[6466]," with only o":[6466],"with only on":[6466],"ith only one":[6466],"th only one ":[6466],"h only one s":[6466],"only one sid":[6466],"nly one side":[6466],"ly one side.":[6466],"y one side. ":[6466]," one side. i":[6466],"one side. in":[6466],"ne side. in ":[6466],"e side. in o":[6466]," side. in ot":[6466],"side. in oth":[6466],"ide. in othe":[6466],"de. in other":[6466],"e. in other ":[6466],". in other t":[6466]," in other te":[6466],"in other ter":[6466],"n other term":[6466]," other terms":[6466],"other terms,":[6466],"ther terms, ":[6466],"her terms, y":[6466],"er terms, yo":[6466],"r terms, you":[6466]," terms, your":[6466],"terms, your ":[6466],"erms, your m":[6466],"rms, your me":[6466],"ms, your mes":[6466],"s, your mesh":[6466],", your mesh ":[6466],"your mesh wi":[6466],"our mesh wil":[6466],"ur mesh will":[6466],"r mesh will ":[6466],"sh will be t":[6466],"h will be tw":[6466]," will be twi":[6466],"will be twic":[6466],"ill be twice":[6466],"ll be twice ":[6466],"l be twice h":[6466]," be twice he":[6466],"be twice hea":[6466],"e twice heav":[6466]," twice heavi":[6466],"twice heavie":[6466],"wice heavier":[6466],"ice heavier.":[6466],"ce heavier.&":[6466],"e heavier.&n":[6466]," heavier.&nb":[6466],"heavier.&nbs":[6466],"eavier.&nbsp":[6466],"avier.&nbsp;":[6466],"vier.&nbsp; ":[6466],"*(you should":[6467],"(you shouldn":[6467],"you shouldn'":[6467],"ou shouldn't":[6467],"u shouldn't ":[6467]," shouldn't d":[6467],"shouldn't di":[6467],"houldn't dis":[6467],"ouldn't disa":[6467],"uldn't disab":[6467],"ldn't disabl":[6467],"dn't disable":[6467],"n't disable ":[6467],"'t disable _":[6467],"t disable _b":[6467],"ling_ with _":[6467],"ing_ with _b":[6467],"ng_ with _ba":[6467],"g_ with _bab":[6467],"_ with _baby":[6467],"oubleside_ v":[6467],"ubleside_ va":[6467],"bleside_ val":[6467],"leside_ valu":[6467],"eside_ value":[6467],"side_ value)":[6467],"ide_ value)*":[6467],"### more bas":[6468],"## more basi":[6468],"# more basic":[6468]," more basic ":[6468],"more basic e":[6468],"ore basic el":[6468],"re basic ele":[6468],"c elements -":[6468]," elements - ":[6468],"elements - g":[6468],"lements - gr":[6468],"ements - gro":[6468],"ments - grou":[6468],"ents - groun":[6468],"nts - ground":[6468],"ts - grounds":[6468],"up to this p":[6469],"p to this po":[6469]," to this poi":[6469],"to this poin":[6469],"o this point":[6469],"is point, we":[6469],"s point, we ":[6469]," point, we h":[6469],"point, we ha":[6469],"oint, we hav":[6469],"int, we have":[6469],"t, we have b":[6469],", we have be":[6469]," we have bee":[6469],"we have been":[6469],"e have been ":[6469]," have been t":[6469],"have been ta":[6469],"ave been tal":[6469],"ve been talk":[6469],"e been talki":[6469]," been talkin":[6469],"been talking":[6469],"een talking ":[6469],"king about b":[6469],"ng about bas":[6469],"g about basi":[6469]," about basic":[6469],"about basic ":[6469],"bout basic e":[6469],"out basic el":[6469],"ut basic ele":[6469],"c elements f":[6469,7139]," elements fr":[6469,7139],"elements fro":[6469,7139],"lements from":[6469,7139],"ements from ":[6469,7139],"ments from o":[6469],"ents from ou":[6469],"nts from our":[6469],"ts from our ":[6469,6686],"s from our [":[6469]," from our [*":[6469],"from our [**":[6469],"rom our [**p":[6469],"om our [**pl":[6469],"m our [**pla":[6469]," our [**play":[6469],"our [**playg":[6469,6475],"ur [**playgr":[6469,6475],"r [**playgro":[6469,6475],"tes.net/?2),":[6469],"es.net/?2), ":[6469],"s.net/?2), b":[6469],".net/?2), bu":[6469],"net/?2), but":[6469],"et/?2), but ":[6469],"t/?2), but t":[6469],"/?2), but th":[6469],"?2), but thr":[6469],"2), but thre":[6469],"), but three":[6469],", but three ":[6469]," but three i":[6469],"but three im":[6469],"ut three imp":[6469],"t three impo":[6469]," three impor":[6469],"three import":[6469],"hree importa":[6469],"ree importan":[6469],"ee important":[6469]," important m":[6469],"important me":[6469],"mportant mes":[6469],"portant mesh":[6469],"ortant mesh ":[6469],"rtant mesh s":[6469],"tant mesh sh":[6469],"ant mesh sha":[6469],"nt mesh shap":[6469],"t mesh shape":[6469]," mesh shapes":[6469],"mesh shapes ":[6469],"esh shapes (":[6469],"sh shapes (b":[6469],"h shapes (ba":[6469]," shapes (bas":[6469],"shapes (basi":[6469],"hapes (basic":[6469],"apes (basic ":[6469],"pes (basic e":[6469],"es (basic el":[6469],"s (basic ele":[6469]," (basic elem":[6469],"(basic eleme":[6469]," elements) a":[6469],"elements) ar":[6469],"lements) are":[6469],"ements) are ":[6469],"ments) are n":[6469],"ents) are no":[6469],"nts) are not":[6469],"ts) are not ":[6469],"s) are not i":[6469],") are not in":[6469]," are not inc":[6469],"are not incl":[6469],"re not inclu":[6469],"e not includ":[6469],"luded in tha":[6469],"uded in that":[6469],"ded in that ":[6469],"ed in that d":[6469],"d in that de":[6469]," in that dem":[6469],"in that demo":[6469],"n that demo ":[6469]," that demo s":[6469],"that demo sc":[6469],"hat demo sce":[6469],"at demo scen":[6469],"t demo scene":[6469,6709]," demo scene.":[6469],"demo scene.&":[6469],"emo scene.&n":[6469],"mo scene.&nb":[6469],"o scene.&nbs":[6469],"; they are e":[6469]," they are ea":[6469],"they are eac":[6469],"hey are each":[6469],"ey are each ":[6469],"y are each w":[6469]," are each wa":[6469],"are each way":[6469],"re each ways":[6469],"e each ways ":[6469]," each ways o":[6469],"each ways of":[6469],"ach ways of ":[6469],"ch ways of m":[6469],"h ways of ma":[6469]," ways of mak":[6469],"ways of maki":[6469],"ays of makin":[6469],"ys of making":[6469],"s of making ":[6469]," of making '":[6469],"of making 'g":[6469],"f making 'gr":[6469]," making 'gro":[6469],"making 'grou":[6469],"aking 'groun":[6469],"king 'ground":[6469],"ing 'ground'":[6469],"ng 'ground' ":[6469],"g 'ground' i":[6469]," 'ground' in":[6469],"'ground' in ":[6469],"ground' in b":[6469],"round' in ba":[6469],"ound' in bab":[6469],"und' in baby":[6469],"nd' in babyl":[6469],"d' in babylo":[6469],"' in babylon":[6469],".js.&nbsp; l":[6469],"js.&nbsp; le":[6469],"bsp; let's t":[6469,6682,6700],"sp; let's ta":[6469,6682,6700],"p; let's tak":[6469,6682,6700],"; let's take":[6469,6682,6700],"t's take a l":[6469,6682,6700,6707],"'s take a lo":[6469,6682,6700,6707],"s take a loo":[6469,6682,6700,6707],"take a look:":[6469],"ake a look: ":[6469],"ation of a g":[6470,6476],"tion of a gr":[6470,6476],"ion of a gro":[6470,6476],"on of a grou":[6470,6476],"n of a groun":[6470,6476]," of a ground":[6470,6476],"of a ground*":[6470],"f a ground**":[6470],"und(\"ground\"":[6472],"nd(\"ground\",":[6472],"d(\"ground\", ":[6472],"(\"ground\", 6":[6472],"\"ground\", 6,":[6472],"ground\", 6, ":[6472],"round\", 6, 6":[6472],"ound\", 6, 6,":[6472],"und\", 6, 6, ":[6472],"nd\", 6, 6, 2":[6472],"d\", 6, 6, 2,":[6472],"are: name, w":[6474],"re: name, wi":[6474],"e: name, wid":[6474],"pth, subdivs":[6474,6480],"th, subdivs,":[6474,6480],"h, subdivs, ":[6474,6480],", subdivs, s":[6474]," subdivs, sc":[6474],"subdivs, sce":[6474],"ubdivs, scen":[6474],"bdivs, scene":[6474],"emo scene 01":[6475],"mo scene 01*":[6475],"o scene 01**":[6475]," scene 01**]":[6475],"scene 01**](":[6475],"cene 01**](h":[6475],"ene 01**](ht":[6475],"ne 01**](htt":[6475],"e 01**](http":[6475]," 01**](http:":[6475],"01**](http:/":[6475],"1**](http://":[6475],"round.com/?1":[6475],"ound.com/?1)":[6475],"und.com/?1) ":[6475],"nd.com/?1) u":[6475],"d.com/?1) us":[6475],".com/?1) use":[6475],"com/?1) uses":[6475],"om/?1) uses ":[6475],"m/?1) uses a":[6475],"/?1) uses a ":[6475],"?1) uses a c":[6475],"1) uses a cr":[6475],") uses a cre":[6475]," uses a crea":[6475],"uses a creat":[6475],"ses a create":[6475],"es a createg":[6475],"s a creategr":[6475]," a creategro":[6475],"a creategrou":[6475]," creategroun":[6475],"reateground ":[6475],"eateground c":[6475],"ateground co":[6475],"teground con":[6475],"eground cons":[6475],"ground const":[6475,6483],"round constr":[6475,6483],"ound constru":[6475,6483],"und construc":[6475,6483],"nd construct":[6475,6483],"d constructo":[6475,6483],"tructor... s":[6475],"ructor... so":[6475],"uctor... so ":[6475],"ctor... so y":[6475],"tor... so yo":[6475],"or... so you":[6475],"r... so you ":[6475],"... so you c":[6475],".. so you ca":[6475],"o you can se":[6475],"ou can see o":[6475],"u can see on":[6475]," can see one":[6475],"can see one ":[6475],"an see one i":[6475],"n see one in":[6475]," see one in ":[6475],"see one in a":[6475],"ee one in ac":[6475],"e one in act":[6475]," one in acti":[6475],"one in actio":[6475],"ne in action":[6475],"e in action ":[6475]," in action b":[6475],"in action by":[6475],"n action by ":[6475]," action by u":[6475],"action by us":[6475],"ction by usi":[6475],"tion by usin":[6475],"ion by using":[6475],"on by using ":[6475],"n by using t":[6475],"using the ab":[6475,6533,6715],"sing the abo":[6475,6533],"ing the abov":[6475,6533],"ng the above":[6475,6533],"g the above ":[6475,6533]," the above l":[6475],"the above li":[6475],"he above lin":[6475],"e above link":[6475]," above link.":[6475],"of a ground ":[6476],"f a ground f":[6476]," a ground fr":[6476],"a ground fro":[6476]," ground from":[6476],"ground from ":[6476],"round from h":[6476],"ound from he":[6476],"und from hei":[6476],"nd from heig":[6476],"d from heigh":[6476]," from height":[6476],"from heightm":[6476],"rom heightma":[6476],"om heightmap":[6476],"m heightmap*":[6476]," heightmap**":[6476],"\"ground\", \"h":[6478],"ground\", \"he":[6478],"round\", \"hei":[6478],"ound\", \"heig":[6478],"und\", \"heigh":[6478],"nd\", \"height":[6478],"d\", \"heightm":[6478],"\", \"heightma":[6478],", \"heightmap":[6478]," \"heightmap.":[6478],"\"heightmap.j":[6478],"ame, heightm":[6480],"me, heightma":[6480],"e, heightmap":[6480],", heightmapp":[6480]," heightmappa":[6480],"heightmappat":[6480],"eightmappath":[6480],"ightmappath,":[6480],"ghtmappath, ":[6480],"htmappath, w":[6480],"tmappath, wi":[6480],"mappath, wid":[6480],"appath, widt":[6480],"ppath, width":[6480],"path, width,":[6480],"ath, width, ":[6480],"th, width, d":[6480],"h, width, de":[6480],", subdivs, m":[6480]," subdivs, mi":[6480],"subdivs, min":[6480],"ubdivs, minh":[6480],"bdivs, minhe":[6480],"divs, minhei":[6480],"ivs, minheig":[6480],"vs, minheigh":[6480],"s, minheight":[6480],", minheight,":[6480]," minheight, ":[6480],"minheight, m":[6480],"inheight, ma":[6480],"nheight, max":[6480],"height, maxh":[6480],"eight, maxhe":[6480],"ight, maxhei":[6480],"ght, maxheig":[6480],"ht, maxheigh":[6480],"t, maxheight":[6480],", maxheight,":[6480]," maxheight, ":[6480],"maxheight, s":[6480],"axheight, sc":[6480],"xheight, sce":[6480],"height, scen":[6480],"eight, scene":[6480],"ight, scene,":[6480],"ght, scene, ":[6480],"ht, scene, u":[6480],"pdatable, su":[6480],"datable, suc":[6480],"atable, succ":[6480],"table, succe":[6480],"able, succes":[6480],"ble, success":[6480],"le, successc":[6480],"heightmap gr":[6481],"eightmap gro":[6481],"ightmap grou":[6481],"ghtmap groun":[6481],"htmap ground":[6481],"tmap grounds":[6481],"map grounds ":[6481],"ap grounds a":[6481],"p grounds ar":[6481]," grounds are":[6481],"grounds are ":[6481],"rounds are e":[6481],"ounds are ea":[6481],"unds are eas":[6481],"nds are easy":[6481],"ds are easy,":[6481],"s are easy, ":[6481]," are easy, b":[6481],"are easy, bu":[6481],"re easy, but":[6481],"e easy, but ":[6481]," easy, but w":[6481],"easy, but we":[6481],"asy, but we ":[6481],"sy, but we d":[6481],"y, but we de":[6481],", but we dec":[6481]," but we deci":[6481],"but we decid":[6481],"ut we decide":[6481],"t we decided":[6481],"we decided t":[6481],"decided to c":[6481],"ecided to cr":[6481],"cided to cre":[6481],"ided to crea":[6481]," separate tu":[6481],"separate tut":[6481],"eparate tuto":[6481],"parate tutor":[6481],"arate tutori":[6481],"rate tutoria":[6481],"ate tutorial":[6481],"te tutorial ":[6481],"e tutorial s":[6481]," tutorial so":[6481],"tutorial so ":[6481],"utorial so w":[6481],"torial so we":[6481],"orial so we ":[6481],"rial so we c":[6481],"ial so we co":[6481],"al so we cou":[6481],"l so we coul":[6481]," so we could":[6481],"so we could ":[6481],"o we could s":[6481]," we could sa":[6481],"we could say":[6481],"e could say ":[6481]," could say m":[6481],"could say mo":[6481],"ould say mor":[6481],"uld say more":[6481],"ld say more ":[6481],"d say more a":[6481]," say more ab":[6481],"say more abo":[6481],"ay more abou":[6481],"y more about":[6481],"re about thi":[6481],"e about this":[6481],"about this i":[6481],"bout this im":[6481],"out this imp":[6481],"ut this impo":[6481],"t this impor":[6481]," this import":[6481],"this importa":[6481],"his importan":[6481]," important b":[6481],"important ba":[6481],"mportant bab":[6481],"portant baby":[6481],"ortant babyl":[6481],"rtant babylo":[6481],"tant babylon":[6481],"abylon.js fe":[6481],"bylon.js fea":[6481],"ylon.js feat":[6481],"lon.js featu":[6481],"on.js featur":[6481],"n.js feature":[6481],".js feature.":[6481],"js feature. ":[6481],"s feature. p":[6481]," feature. pl":[6481],"feature. ple":[6481],"eature. plea":[6481],"ature. pleas":[6481],"ture. please":[6481],"ure. please ":[6481],"re. please s":[6481],"e. please se":[6481],"please see o":[6481],"lease see ou":[6481],"ease see our":[6481],"ase see our ":[6481],"se see our [":[6481],"e see our [*":[6481]," see our [**":[6481],"see our [**h":[6481],"ee our [**he":[6481],"e our [**hei":[6481]," our [**heig":[6481],"our [**heigh":[6481],"ur [**height":[6481],"r [**heightm":[6481]," [**heightma":[6481],"[**heightmap":[6481],"**heightmap ":[6481],"*heightmap t":[6481],"heightmap tu":[6481],"eightmap tut":[6481],"ightmap tuto":[6481],"ghtmap tutor":[6481],"htmap tutori":[6481],"tmap tutoria":[6481],"map tutorial":[6481],"ap tutorial*":[6481],"p tutorial**":[6481],"hp?p=22141) ":[6481],"p?p=22141) t":[6481],"?p=22141) to":[6481],"p=22141) to ":[6481],"=22141) to l":[6481],"22141) to le":[6481],"2141) to lea":[6481],"141) to lear":[6481],"41) to learn":[6481],"1) to learn ":[6481],") to learn a":[6481]," to learn al":[6481],"to learn all":[6481],"o learn all ":[6481]," all about h":[6481],"all about he":[6481],"ll about hei":[6481],"l about heig":[6481]," about heigh":[6481],"about height":[6481],"bout heightm":[6481],"out heightma":[6481],"ut heightmap":[6481],"t heightmap ":[6481]," heightmap g":[6481],"map grounds.":[6481],"* **create o":[6482]," **create of":[6482],"**create of ":[6482],"*create of a":[6482],"create of a ":[6482],"reate of a t":[6482],"eate of a ti":[6482],"ate of a til":[6482],"te of a tile":[6482],"e of a tiled":[6482]," of a tiled ":[6482],"of a tiled g":[6482],"f a tiled gr":[6482]," a tiled gro":[6482,6483],"a tiled grou":[6482,6483],"iled ground*":[6482],"led ground**":[6482],"thanks to fo":[6483],"hanks to for":[6483],"anks to foru":[6483],"nks to forum":[6483],"ks to forum ":[6483],"s to forum u":[6483]," to forum us":[6483],"to forum use":[6483],"o forum user":[6483],"forum user k":[6483],"orum user ko":[6483],"rum user kos":[6483],"um user kost":[6483],"m user kosta":[6483]," user kostar":[6483],"user kostar1":[6483],"ser kostar11":[6483],"er kostar111":[6483],"r kostar111 ":[6483]," kostar111 f":[6483],"kostar111 fo":[6483],"ostar111 for":[6483],"star111 for ":[6483],"tar111 for t":[6483],"ar111 for th":[6483],"r111 for thi":[6483],"111 for this":[6483],"11 for this ":[6483],"1 for this h":[6483]," for this ha":[6483],"for this han":[6483],"or this hand":[6483],"r this handy":[6483]," this handy ":[6483],"this handy t":[6483],"his handy ti":[6483],"is handy til":[6483],"s handy tile":[6483]," handy tiled":[6483],"handy tiled ":[6483],"andy tiled g":[6483],"ndy tiled gr":[6483],"dy tiled gro":[6483],"y tiled grou":[6483],"iled ground ":[6483,6496],"led ground c":[6483],"ed ground co":[6483],"d ground con":[6483]," ground cons":[6483],"onstructor. ":[6483],"nstructor. h":[6483],"structor. he":[6483],"tructor. her":[6483],"ructor. here":[6483],"uctor. here ":[6483],"ctor. here i":[6483],"tor. here is":[6483],"or. here is ":[6483],"r. here is t":[6483],". here is th":[6483],"ere is the b":[6483],"re is the ba":[6483],"e is the bas":[6483]," is the basi":[6483],"is the basic":[6483],"s the basic ":[6483]," the basic c":[6483],"the basic co":[6483],"he basic cod":[6483],"e basic code":[6483]," basic code ":[6483],"basic code n":[6483],"asic code ne":[6483],"sic code nee":[6483],"ic code need":[6483],"c code neede":[6483]," code needed":[6483],"code needed ":[6483],"ode needed t":[6483],"de needed to":[6483],"o create a t":[6483]," create a ti":[6483],"create a til":[6483],"reate a tile":[6483],"eate a tiled":[6483],"ate a tiled ":[6483],"te a tiled g":[6483],"e a tiled gr":[6483],"iled ground.":[6483],"var precisio":[6485],"ar precision":[6485],"r precision ":[6485]," precision =":[6485,6495],"precision = ":[6485,6495],"recision = {":[6485],"bsp; &nbsp;\"":[6486,6487],"sp; &nbsp;\"w":[6486],"p; &nbsp;\"w\"":[6486],"; &nbsp;\"w\" ":[6486]," &nbsp;\"w\" :":[6486],"&nbsp;\"w\" : ":[6486],"nbsp;\"w\" : 2":[6486],"bsp;\"w\" : 2,":[6486],"sp; &nbsp;\"h":[6487],"p; &nbsp;\"h\"":[6487],"; &nbsp;\"h\" ":[6487]," &nbsp;\"h\" :":[6487],"&nbsp;\"h\" : ":[6487],"nbsp;\"h\" : 2":[6487],"var subdivis":[6489],"ar subdivisi":[6489],"r subdivisio":[6489],"ubdivisions ":[6489,6495],"bdivisions =":[6489,6495],"divisions = ":[6489,6495],"ivisions = {":[6489],"bsp; &nbsp;'":[6490,6491],"sp; &nbsp;'h":[6490],"p; &nbsp;'h'":[6490],"; &nbsp;'h' ":[6490]," &nbsp;'h' :":[6490],"&nbsp;'h' : ":[6490],"nbsp;'h' : 8":[6490],"bsp;'h' : 8,":[6490],"sp; &nbsp;'w":[6491],"p; &nbsp;'w'":[6491],"; &nbsp;'w' ":[6491]," &nbsp;'w' :":[6491],"&nbsp;'w' : ":[6491],"nbsp;'w' : 8":[6491],"var tiledgro":[6493],"ar tiledgrou":[6493],"r tiledgroun":[6493]," tiledground":[6493],"tiledground ":[6493],"iledground =":[6493],"ledground = ":[6493],"edground = b":[6493],"dground = ba":[6493],"esh.createti":[6493],"sh.createtil":[6493],"h.createtile":[6493],".createtiled":[6493],"createtiledg":[6493],"reatetiledgr":[6493],"eatetiledgro":[6493],"atetiledgrou":[6493],"tetiledgroun":[6493],"etiledground":[6493],"tiledground(":[6493],"iledground(\"":[6493],"ledground(\"t":[6493],"edground(\"ti":[6493],"dground(\"til":[6493],"ground(\"tile":[6493],"round(\"tiled":[6493],"ound(\"tiled ":[6493],"und(\"tiled g":[6493],"nd(\"tiled gr":[6493],"d(\"tiled gro":[6493],"(\"tiled grou":[6493],"\"tiled groun":[6493],"iled ground\"":[6493],"led ground\",":[6493],"ed ground\", ":[6493],"d ground\", -":[6493]," ground\", -3":[6493],"ground\", -3,":[6493],"round\", -3, ":[6493],"ound\", -3, -":[6493],"und\", -3, -3":[6493],"nd\", -3, -3,":[6493],"d\", -3, -3, ":[6493],"\", -3, -3, 3":[6493],", -3, -3, 3,":[6493]," -3, -3, 3, ":[6493],"-3, -3, 3, 3":[6493],"3, -3, 3, 3,":[6493],", -3, 3, 3, ":[6493]," -3, 3, 3, s":[6493],"-3, 3, 3, su":[6493],"3, 3, 3, sub":[6493],", 3, 3, subd":[6493]," 3, 3, subdi":[6493],"3, 3, subdiv":[6493],", 3, subdivi":[6493]," 3, subdivis":[6493],"3, subdivisi":[6493],"divisions, p":[6493],"ivisions, pr":[6493],"visions, pre":[6493],"isions, prec":[6493],"sions, preci":[6493],"ions, precis":[6493],"ons, precisi":[6493],"ns, precisio":[6493],"s, precision":[6493],", precision,":[6493]," precision, ":[6493],"precision, s":[6493],"recision, sc":[6493],"ecision, sce":[6493],"cision, scen":[6493],"ision, scene":[6493],"sion, scene,":[6493],"on, scene, f":[6493],"n, scene, fa":[6493],"are: name, x":[6495],"re: name, xm":[6495],"e: name, xmi":[6495],": name, xmin":[6495]," name, xmin,":[6495],"name, xmin, ":[6495],"ame, xmin, z":[6495],"me, xmin, zm":[6495],"e, xmin, zmi":[6495],", xmin, zmin":[6495]," xmin, zmin,":[6495],"xmin, zmin, ":[6495],"min, zmin, x":[6495],"in, zmin, xm":[6495],"n, zmin, xma":[6495],", zmin, xmax":[6495]," zmin, xmax,":[6495],"zmin, xmax, ":[6495],"min, xmax, z":[6495],"in, xmax, zm":[6495],"n, xmax, zma":[6495],", xmax, zmax":[6495]," xmax, zmax,":[6495],"xmax, zmax, ":[6495],"max, zmax, s":[6495],"ax, zmax, su":[6495],"x, zmax, sub":[6495],", zmax, subd":[6495]," zmax, subdi":[6495],"zmax, subdiv":[6495],"max, subdivi":[6495],"ax, subdivis":[6495],"x, subdivisi":[6495],"ivisions = t":[6495],"visions = th":[6495],"isions = the":[6495],"sions = the ":[6495],"ions = the n":[6495],"ons = the nu":[6495],"ns = the num":[6495],"s = the numb":[6495]," = the numbe":[6495],"= the number":[6495],"er of tiles.":[6495],"r of tiles. ":[6495]," of tiles. (":[6495],"of tiles. (s":[6495],"f tiles. (su":[6495]," tiles. (sub":[6495],"tiles. (subd":[6495],"iles. (subdi":[6495],"les. (subdiv":[6495],"es. (subdivi":[6495],"s. (subdivis":[6495],". (subdivisi":[6495]," (subdivisio":[6495],"(subdivision":[6495],"ubdivisions.":[6495],"bdivisions.w":[6495],"divisions.w ":[6495],"ivisions.w :":[6495],"visions.w : ":[6495],"isions.w : i":[6495],"sions.w : in":[6495],"ions.w : in ":[6495],"ons.w : in w":[6495],"ns.w : in wi":[6495],"s.w : in wid":[6495],".w : in widt":[6495],"w : in width":[6495]," : in width;":[6495],": in width; ":[6495]," in width; s":[6495],"in width; su":[6495],"n width; sub":[6495]," width; subd":[6495],"width; subdi":[6495],"idth; subdiv":[6495],"dth; subdivi":[6495],"th; subdivis":[6495],"h; subdivisi":[6495],"; subdivisio":[6495],"bdivisions.h":[6495],"divisions.h:":[6495],"ivisions.h: ":[6495],"visions.h: i":[6495],"isions.h: in":[6495],"sions.h: in ":[6495],"ions.h: in h":[6495],"ons.h: in he":[6495],"ns.h: in hei":[6495],"s.h: in heig":[6495],".h: in heigh":[6495],"h: in height":[6495],": in height)":[6495]," in height),":[6495],"in height), ":[6495],"n height), p":[6495]," height), pr":[6495],"height), pre":[6495],"eight), prec":[6495],"ight), preci":[6495],"ght), precis":[6495],"ht), precisi":[6495],"t), precisio":[6495],"), precision":[6495],", precision ":[6495],"recision = t":[6495],"ecision = th":[6495],"cision = the":[6495],"ision = the ":[6495],"sion = the n":[6495],"ion = the nu":[6495],"on = the num":[6495],"n = the numb":[6495],"bdivisions i":[6495],"divisions in":[6495],"ivisions ins":[6495],"visions insi":[6495],"isions insid":[6495],"sions inside":[6495],"ons inside a":[6495],"ns inside a ":[6495],"s inside a t":[6495]," inside a ti":[6495],"inside a til":[6495],"nside a tile":[6495],"side a tile.":[6495],"ide a tile. ":[6495],"de a tile. (":[6495],"e a tile. (p":[6495]," a tile. (pr":[6495],"a tile. (pre":[6495]," tile. (prec":[6495],"tile. (preci":[6495],"ile. (precis":[6495],"le. (precisi":[6495],"e. (precisio":[6495],". (precision":[6495]," (precision.":[6495],"(precision.w":[6495],"precision.w ":[6495],"recision.w :":[6495],"ecision.w : ":[6495],"cision.w : i":[6495],"ision.w : in":[6495],"sion.w : in ":[6495],"ion.w : in w":[6495],"on.w : in wi":[6495],"n.w : in wid":[6495]," in width; p":[6495],"in width; pr":[6495],"n width; pre":[6495]," width; prec":[6495],"width; preci":[6495],"idth; precis":[6495],"dth; precisi":[6495],"th; precisio":[6495],"h; precision":[6495],"; precision.":[6495]," precision.h":[6495],"precision.h:":[6495],"recision.h: ":[6495],"ecision.h: i":[6495],"cision.h: in":[6495],"ision.h: in ":[6495],"sion.h: in h":[6495],"ion.h: in he":[6495],"on.h: in hei":[6495],"n.h: in heig":[6495],"n height), s":[6495]," height), sc":[6495],"height), sce":[6495],"eight), scen":[6495],"ight), scene":[6495],"ght), scene,":[6495],"ht), scene, ":[6495],", updatable.":[6495],"kostar111 wa":[6496],"ostar111 was":[6496],"star111 was ":[6496],"tar111 was a":[6496],"ar111 was al":[6496],"r111 was als":[6496],"111 was also":[6496],"11 was also ":[6496],"1 was also k":[6496]," was also ki":[6496],"was also kin":[6496],"as also kind":[6496],"s also kind ":[6496]," also kind e":[6496],"also kind en":[6496],"lso kind eno":[6496],"so kind enou":[6496],"o kind enoug":[6496]," enough to g":[6496],"enough to gi":[6496],"nough to giv":[6496],"ough to give":[6496],"ugh to give ":[6496],"gh to give u":[6496],"h to give us":[6496]," to give us ":[6496],"to give us a":[6496],"o give us a ":[6496]," give us a f":[6496],"give us a fi":[6496],"ive us a fin":[6496],"ve us a fine":[6496],"e us a fine ":[6496]," us a fine t":[6496],"us a fine tu":[6496],"s a fine tut":[6496]," a fine tuto":[6496],"a fine tutor":[6496]," fine tutori":[6496],"fine tutoria":[6496],"ine tutorial":[6496],"ne tutorial ":[6496],"e tutorial a":[6496],"rial about h":[6496],"ial about ho":[6496],"al about how":[6496],"l about how ":[6496],"out how to u":[6496],"ut how to us":[6496],"t how to use":[6496],"led grounds.":[6496],"ed grounds. ":[6496],"d grounds. [":[6496]," grounds. [*":[6496],"grounds. [**":[6496],"rounds. [**c":[6496],"ounds. [**cl":[6496],"unds. [**cli":[6496],"nds. [**clic":[6496],"ds. [**click":[6496],"s. [**click ":[6496],". [**click r":[6496],"**](http://m":[6496],"*](http://ma":[6496],"babylonjs) t":[6496],"abylonjs) to":[6496],"bylonjs) to ":[6496],"ylonjs) to v":[6496],"lonjs) to vi":[6496],"onjs) to vie":[6496],"njs) to view":[6496],"js) to view ":[6496],"s) to view i":[6496],") to view it":[6496]," to view it.":[6496],"to view it. ":[6496],"o view it. a":[6496]," view it. at":[6496],"view it. at ":[6496],"iew it. at t":[6496],"ew it. at th":[6496],"w it. at tha":[6496]," it. at that":[6496],"it. at that ":[6496],"t. at that l":[6496],". at that li":[6496]," at that lin":[6496],"at that link":[6496],"that link, k":[6496],"hat link, ko":[6496],"at link, kos":[6496],"t link, kost":[6496]," link, kosta":[6496],"link, kostar":[6496],"ink, kostar1":[6496],"nk, kostar11":[6496],"k, kostar111":[6496],", kostar111 ":[6496]," kostar111 t":[6496],"kostar111 th":[6496],"ostar111 tho":[6496],"star111 thor":[6496],"tar111 thoro":[6496],"ar111 thorou":[6496],"r111 thoroug":[6496],"111 thorough":[6496],"11 thoroughl":[6496],"1 thoroughly":[6496]," thoroughly ":[6496],"thoroughly e":[6496],"horoughly ex":[6496],"oroughly exp":[6496],"roughly expl":[6496],"oughly expla":[6496],"ughly explai":[6496],"ghly explain":[6496],"hly explains":[6496],"ly explains ":[6496],"y explains h":[6496]," explains ho":[6496],"explains how":[6496],"xplains how ":[6496],"plains how t":[6496],"lains how th":[6496],"ains how the":[6496],"ins how the ":[6496],"ns how the t":[6496],"s how the ti":[6496]," how the til":[6496],"how the tile":[6496],"ow the tiled":[6496],"w the tiled ":[6496]," the tiled g":[6496],"the tiled gr":[6496],"he tiled gro":[6496],"led ground w":[6496],"ed ground wo":[6496],"d ground wor":[6496]," ground work":[6496],"ground works":[6496],"round works,":[6496],"ound works, ":[6496],"und works, a":[6496],"nd works, an":[6496],"d works, and":[6496]," works, and ":[6496],"works, and a":[6496],"orks, and al":[6496],"rks, and als":[6496],"ks, and also":[6496],", and also p":[6496]," and also pr":[6496],"and also pro":[6496],"nd also prov":[6496],"d also provi":[6496],"lso provides":[6496],"so provides ":[6496],"o provides s":[6496]," provides so":[6496],"provides som":[6496],"rovides some":[6496],"ovides some ":[6496],"vides some b":[6496],"ides some ba":[6496],"des some bab":[6496],"es some baby":[6496],"s some babyl":[6496],"und scenes t":[6496],"nd scenes th":[6496],"d scenes tha":[6496]," scenes that":[6496],"scenes that ":[6496],"cenes that n":[6496],"enes that ni":[6496],"nes that nic":[6496],"es that nice":[6496],"s that nicel":[6496]," that nicely":[6496],"that nicely ":[6496],"hat nicely d":[6496],"at nicely de":[6496],"t nicely dem":[6496]," nicely demo":[6496],"nicely demon":[6496],"icely demons":[6496],"cely demonst":[6496],"ely demonstr":[6496],"ly demonstra":[6496],"y demonstrat":[6496],"demonstrate ":[6496],"emonstrate s":[6496],"monstrate so":[6496],"onstrate som":[6496],"nstrate some":[6496],"strate some ":[6496],"trate some o":[6496],"rate some of":[6496],"ate some of ":[6496],"te some of i":[6496],"e some of it":[6496]," some of its":[6496],"some of its ":[6496],"ome of its m":[6496],"me of its ma":[6496],"e of its man":[6496]," of its many":[6496],"of its many ":[6496],"f its many u":[6496]," its many us":[6496],"its many use":[6496],"ts many uses":[6496],"s many uses.":[6496],"and that’s i":[6498],"nd that’s it":[6498],"d that’s it!":[6498]," that’s it! ":[6498],"that’s it! n":[6498],"hat’s it! no":[6498],"at’s it! now":[6498],"t’s it! now ":[6498],"’s it! now y":[6498],"s it! now yo":[6498]," it! now you":[6498],"it! now you ":[6498],"t! now you h":[6498],"! now you ha":[6498]," now you hav":[6498],"now you have":[6498],"w you have s":[6498],"have seen al":[6498],"ave seen all":[6498],"ve seen all ":[6498],"e seen all o":[6498]," seen all of":[6498],"seen all of ":[6498],"een all of o":[6498],"en all of ou":[6498],"n all of our":[6498],"ll of our ba":[6498],"l of our bas":[6498]," of our basi":[6498],"of our basic":[6498],"f our basic ":[6498]," our basic e":[6498,6698,7139],"our basic el":[6498,6698,7139],"ur basic ele":[6498,6698,7139],"ments, and s":[6498],"ents, and so":[6498],"nts, and som":[6498],"ts, and some":[6498],", and some w":[6498]," and some wa":[6498],"and some way":[6498],"nd some ways":[6498],"d some ways ":[6498]," some ways t":[6498],"some ways to":[6498],"ome ways to ":[6498],"me ways to u":[6498],"e ways to us":[6498]," ways to use":[6498],"ways to use ":[6498],"ays to use t":[6498],"ys to use th":[6498],"s to use the":[6498]," to use them":[6498,6531],"to use them.":[6498],"o use them. ":[6498]," use them. k":[6498],"use them. ke":[6498],"se them. kee":[6498],"e them. keep":[6498]," them. keep ":[6498],"them. keep w":[6498],"hem. keep wa":[6498],"em. keep wat":[6498],"m. keep watc":[6498],". keep watch":[6498]," keep watchi":[6498],"keep watchin":[6498],"eep watching":[6498],"ep watching ":[6498],"p watching t":[6498]," watching th":[6498],"watching thi":[6498],"atching this":[6498],"tching this ":[6498],"ching this a":[6498],"hing this ar":[6498],"ing this are":[6498],"ng this area":[6498],"g this area ":[6498]," this area o":[6498],"this area of":[6498],"his area of ":[6498],"is area of t":[6498],"s area of th":[6498],"rea of the t":[6498],"ea of the tu":[6498],"a of the tut":[6498],"e tutorial f":[6498],"torial for n":[6498],"orial for ne":[6498],"rial for new":[6498],"ial for new ":[6498],"al for new b":[6498],"l for new ba":[6498]," for new bas":[6498],"for new basi":[6498],"or new basic":[6498],"r new basic ":[6498]," new basic e":[6498],"new basic el":[6498],"ew basic ele":[6498],"w basic elem":[6498],"elements, as":[6498],"lements, as ":[6498],"ements, as t":[6498],"ments, as th":[6498],"ents, as the":[6498],"nts, as they":[6498],"ts, as they ":[6498],"s, as they a":[6498],", as they ar":[6498]," as they are":[6498,6531],"as they are ":[6498,6531],"s they are b":[6498]," they are be":[6498],"they are bei":[6498],"hey are bein":[6498],"ey are being":[6498],"y are being ":[6498]," are being a":[6498,6723],"are being ad":[6498,6723],"re being add":[6498,6723],"e being adde":[6498,6723]," being added":[6498,6723],"being added ":[6498,6723],"eing added q":[6498],"ing added qu":[6498],"ng added qui":[6498],"g added quit":[6498]," added quite":[6498],"added quite ":[6498],"dded quite q":[6498],"ded quite qu":[6498],"ed quite qui":[6498],"d quite quic":[6498]," quite quick":[6498],"quite quickl":[6498],"uite quickly":[6498],"ite quickly.":[6498],"te quickly. ":[6498],"e quickly. f":[6498]," quickly. fe":[6498],"quickly. fee":[6498],"uickly. feel":[6498],"ickly. feel ":[6498],"ckly. feel f":[6498],"kly. feel fr":[6498],"ly. feel fre":[6498],"y. feel free":[6498],"el free to i":[6498],"l free to im":[6498]," free to ima":[6498],"free to imag":[6498],"ree to imagi":[6498],"ee to imagin":[6498],"e to imagine":[6498]," to imagine ":[6498],"to imagine a":[6498],"o imagine a ":[6498],"imagine a fe":[6498],"magine a few":[6498],"agine a few ":[6498],"gine a few o":[6498],"ine a few of":[6498],"ne a few of ":[6498],"e a few of y":[6498]," a few of yo":[6498],"a few of you":[6498]," few of your":[6498],"few of your ":[6498],"ew of your o":[6498],"w of your ow":[6498],"f your own b":[6498]," your own ba":[6498],"your own bas":[6498],"our own basi":[6498],"ur own basic":[6498],"r own basic ":[6498]," own basic e":[6498],"own basic el":[6498],"wn basic ele":[6498],"n basic elem":[6498],"sic element ":[6498],"ic element i":[6498],"c element id":[6498]," element ide":[6498],"element idea":[6498],"lement ideas":[6498],"ement ideas,":[6498],"ment ideas, ":[6498],"ent ideas, a":[6498],"nt ideas, an":[6498],"t ideas, and":[6498]," ideas, and ":[6498],"ideas, and p":[6498],"deas, and pr":[6498],"eas, and pre":[6498],"as, and pres":[6498],"s, and prese":[6498],", and presen":[6498]," and present":[6498],"and present ":[6498],"nd present t":[6498],"d present th":[6498],"present them":[6498],"resent them ":[6498],"esent them o":[6498],"sent them on":[6498],"ent them on ":[6498],"nt them on t":[6498],"t them on th":[6498]," them on the":[6498],"them on the ":[6498],"hem on the f":[6498],"em on the fo":[6498],"m on the for":[6498],"the forum. h":[6498],"he forum. he":[6498],"e forum. hel":[6498]," forum. help":[6498],"forum. help ":[6498],"orum. help u":[6498],"rum. help us":[6498],"um. help us ":[6498],"m. help us m":[6498],". help us ma":[6498]," help us mak":[6498],"help us make":[6498],"elp us make ":[6498],"lp us make o":[6498],"p us make ou":[6498]," us make our":[6498],"us make our ":[6498],"s make our l":[6498]," make our li":[6498],"make our lis":[6498],"ake our list":[6498],"ke our list ":[6498],"e our list o":[6498]," our list of":[6498],"our list of ":[6498],"ur list of b":[6498],"r list of ba":[6498]," list of bas":[6498],"list of basi":[6498],"ist of basic":[6498],"st of basic ":[6498],"t of basic e":[6498]," of basic el":[6498],"of basic ele":[6498],"f basic elem":[6498],"c elements g":[6498]," elements gr":[6498],"elements gro":[6498],"lements grow":[6498],"ements grow,":[6498],"ments grow, ":[6498],"ents grow, i":[6498],"nts grow, if":[6498],"ts grow, if ":[6498],"s grow, if y":[6498]," grow, if yo":[6498],"grow, if you":[6498],"row, if you ":[6498],"ow, if you c":[6498],"w, if you ca":[6498],", if you can":[6498]," if you can.":[6498],"great, your ":[6501],"reat, your s":[6501],"eat, your sc":[6501],"at, your sce":[6501],"t, your scen":[6501],"scene is loo":[6501],"cene is look":[6501],"ene is looki":[6501],"ne is lookin":[6501],"e is looking":[6501]," is looking ":[6501],"is looking b":[6501],"s looking be":[6501]," looking bet":[6501],"looking bett":[6501],"ooking bette":[6501],"oking better":[6501],"king better ":[6501],"ing better t":[6501],"ng better th":[6501],"g better tha":[6501],"etter than e":[6501],"tter than ev":[6501],"ter than eve":[6501],"er than ever":[6501],"r than ever ":[6501]," than ever w":[6501],"than ever wi":[6501],"han ever wit":[6501],"an ever with":[6501],"n ever with ":[6501]," ever with t":[6501],"ever with th":[6501],"ver with tho":[6501],"er with thos":[6501],"r with those":[6501],"with those m":[6501],"ith those ma":[6501],"th those mat":[6501],"h those mate":[6501]," those mater":[6501],"those materi":[6501],"hose materia":[6501],"ose material":[6501],"se materials":[6501],"e materials!":[6501]," materials! ":[6501],"materials! l":[6501],"aterials! la":[6501],"terials! lat":[6501],"erials! late":[6501],"rials! later":[6501],"ials! later ":[6501],"als! later w":[6501],"ls! later we":[6501],"s! later we ":[6501],"! later we w":[6501]," later we wi":[6501],"later we wil":[6501],"ater we will":[6501],"ter we will ":[6501],"er we will s":[6501],"r we will se":[6501]," we will see":[6501],"we will see ":[6501],"e will see h":[6501],"ll see how t":[6501],"l see how to":[6501]," see how to ":[6501],"see how to u":[6501],"ee how to us":[6501],"e how to use":[6501],"ow to use ad":[6501],"w to use adv":[6501]," to use adva":[6501],"to use advan":[6501],"o use advanc":[6501]," use advance":[6501],"use advanced":[6501],"se advanced ":[6501],"advanced tec":[6501],"dvanced tech":[6501],"vanced techn":[6501],"anced techni":[6501],"nced techniq":[6501],"ced techniqu":[6501],"ed technique":[6501],"d techniques":[6501]," techniques ":[6501],"techniques w":[6501],"echniques wi":[6501],"chniques wit":[6501],"hniques with":[6501],"niques with ":[6501],"iques with m":[6501],"ques with ma":[6501],"ues with mat":[6501],"es with mate":[6501],"s with mater":[6501]," with materi":[6501],"with materia":[6501],"ith material":[6501],"th materials":[6501],"h materials.":[6501],"materials. b":[6501],"aterials. bu":[6501],"terials. but":[6501],"erials. but ":[6501],"rials. but f":[6501],"ials. but fo":[6501],"als. but for":[6501],"ls. but for ":[6501],"s. but for n":[6501],". but for no":[6501]," but for now":[6501],"but for now,":[6501],"ut for now, ":[6501],"t for now, w":[6501]," for now, we":[6501],"or now, we h":[6501],"r now, we ha":[6501]," now, we hav":[6501],"now, we have":[6501],"ow, we have ":[6501],"w, we have t":[6501],"we have to l":[6501],"e have to le":[6501]," have to lea":[6501],"have to lear":[6501],"ave to learn":[6501],"ve to learn ":[6501],"e to learn [":[6501]," to learn [*":[6501,6502],"to learn [**":[6501,6502],"o learn [**h":[6501,6502]," learn [**ho":[6501,6502],"learn [**how":[6501,6502],"earn [**how ":[6501,6502],"arn [**how t":[6501,6502],"rn [**how to":[6501,6502],"n [**how to ":[6501,6502]," [**how to u":[6501],"[**how to us":[6501],"**how to use":[6501],"*how to use ":[6501],"ow to use ca":[6501],"w to use cam":[6501]," to use came":[6501],"to use camer":[6501],"o use camera":[6501]," use cameras":[6501],"use cameras*":[6501],"se cameras**":[6501],"e cameras**]":[6501]," cameras**](":[6501],"cameras**](h":[6501],"ameras**](ht":[6501],"meras**](htt":[6501],"eras**](http":[6501],"ras**](http:":[6501],"as**](http:/":[6501],"hp?p=22061).":[6501],"you have now":[6502],"ou have now ":[6502],"u have now l":[6502]," have now le":[6502],"have now lea":[6502],"ave now lear":[6502],"ve now learn":[6502],"e now learne":[6502]," now learned":[6502],"now learned ":[6502],"ow learned h":[6502],"w learned ho":[6502]," learned how":[6502],"learned how ":[6502],"earned how t":[6502],"arned how to":[6502],"rned how to ":[6502],"ned how to u":[6502],"ed how to us":[6502],"d how to use":[6502],"o use the tw":[6502]," use the two":[6502],"use the two ":[6502],"se the two m":[6502],"e the two mo":[6502],"ost-common c":[6502],"st-common ca":[6502],"t-common cam":[6502],"-common came":[6502],"common camer":[6502],"ommon camera":[6502],"mmon cameras":[6502],"mon cameras,":[6502],"on cameras, ":[6502],"n cameras, a":[6502],"meras, and y":[6502],"eras, and yo":[6502],"ras, and you":[6502],"as, and you ":[6502],"roduced to a":[6502],"oduced to al":[6502],"duced to all":[6502],"uced to all ":[6502],"ced to all o":[6502],"ed to all of":[6502],"d to all of ":[6502]," to all of o":[6502],"to all of ou":[6502],"o all of our":[6502],"all of our i":[6502],"ll of our in":[6502],"l of our inn":[6502]," of our inno":[6502],"of our innov":[6502],"f our innova":[6502]," our innovat":[6502],"our innovati":[6502],"ur innovativ":[6502],"r innovative":[6502]," innovative ":[6502],"innovative '":[6502],"nnovative 'u":[6502],"novative 'un":[6502],"ovative 'uni":[6502],"vative 'uniq":[6502],"ative 'uniqu":[6502],"tive 'unique":[6502],"ive 'unique ":[6502],"ve 'unique p":[6502],"e 'unique pu":[6502]," 'unique pur":[6502],"'unique purp":[6502],"que purpose'":[6502],"ue purpose' ":[6502],"e purpose' c":[6502]," purpose' ca":[6502],"purpose' cam":[6502],"urpose' came":[6502],"rpose' camer":[6502],"pose' camera":[6502],"ose' cameras":[6502],"se' cameras.":[6502],"e' cameras. ":[6502],"' cameras. y":[6502]," cameras. yo":[6502],"cameras. you":[6502],"ameras. you ":[6502],"meras. you c":[6502],"eras. you ca":[6502],"ras. you can":[6502],"as. you can ":[6502],". you can co":[6502],"ontrol how y":[6502],"ntrol how yo":[6502],"trol how you":[6502],"rol how you ":[6502],"ol how you s":[6502],"l how you se":[6502]," how you see":[6502],"how you see ":[6502],"ow you see y":[6502],"w you see yo":[6502]," you see you":[6502],"you see your":[6502],"ou see your ":[6502],"u see your s":[6502]," see your sc":[6502],"see your sce":[6502],"ee your scen":[6502],"our scene, y":[6502,6731],"ur scene, yo":[6502,6731],"r scene, you":[6502,6731],"can choose y":[6502],"an choose yo":[6502],"n choose you":[6502]," choose your":[6502],"choose your ":[6502],"hoose your i":[6502],"oose your in":[6502],"ose your inp":[6502],"se your inpu":[6502],"e your input":[6502]," your input ":[6502],"your input a":[6502],"our input an":[6502],"ur input and":[6502],"r input and ":[6502]," input and v":[6502],"input and vi":[6502],"nput and vie":[6502],"put and view":[6502],"ut and viewi":[6502],"t and viewin":[6502]," and viewing":[6502],"and viewing ":[6502],"nd viewing d":[6502],"d viewing de":[6502]," viewing dev":[6502],"viewing devi":[6502],"iewing devic":[6502],"ewing device":[6502],"wing devices":[6502],"ing devices,":[6502],"ng devices, ":[6502],"g devices, a":[6502]," devices, an":[6502],"devices, and":[6502],"evices, and ":[6502],"vices, and y":[6502],"ices, and yo":[6502],"ces, and you":[6502],"s, and you n":[6502],", and you no":[6502]," and you now":[6502],"and you now ":[6502],"nd you now k":[6502],"d you now kn":[6502]," you now kno":[6502],"u now know h":[6502]," now know ho":[6502],"now know how":[6502],"ow know how ":[6502],"w know how t":[6502],"now how to m":[6502],"ow how to mo":[6502],"w how to mov":[6502]," how to move":[6502],"how to move ":[6502],"ow to move c":[6502],"w to move ca":[6502]," to move cam":[6502],"to move came":[6502],"o move camer":[6502]," move camera":[6502],"move cameras":[6502],"ove cameras ":[6502],"ve cameras a":[6502]," cameras aro":[6502],"cameras arou":[6502],"ameras aroun":[6502],"meras around":[6502],"eras around.":[6502],"ras around. ":[6502],"as around. t":[6502],"s around. to":[6502]," around. to ":[6502],"around. to g":[6502],"round. to gi":[6502],"ound. to giv":[6502],"und. to give":[6502],"nd. to give ":[6502],"d. to give y":[6502],". to give yo":[6502]," to give you":[6502],"to give your":[6502],"o give your ":[6502],"ur scene a m":[6502],"r scene a mo":[6502]," scene a mor":[6502],"scene a more":[6502],"cene a more ":[6502],"ene a more r":[6502],"ne a more re":[6502],"e a more rea":[6502]," a more real":[6502],"a more reali":[6502]," realistic e":[6502],"realistic ef":[6502],"ealistic eff":[6502],"alistic effe":[6502],"listic effec":[6502],"istic effect":[6502],"stic effect,":[6502],"tic effect, ":[6502],"ic effect, w":[6502],"c effect, we":[6502]," effect, we ":[6502],"effect, we a":[6502],"ffect, we ar":[6502],"fect, we are":[6502],"ect, we are ":[6502],"ct, we are n":[6502],"t, we are no":[6502],", we are now":[6502]," we are now ":[6502],"we are now g":[6502],"e are now go":[6502]," are now goi":[6502],"are now goin":[6502],"re now going":[6502],"e now going ":[6502]," now going t":[6502],"now going to":[6502],"ow going to ":[6502],"w going to l":[6502],"g to learn [":[6502]," [**how to m":[6502],"[**how to ma":[6502],"**how to man":[6502],"*how to mana":[6502],"how to manag":[6502],"ow to manage":[6502],"w to manage ":[6502]," to manage l":[6502],"to manage li":[6502],"o manage lig":[6502]," manage ligh":[6502],"manage light":[6502],"anage lights":[6502],"nage lights*":[6502],"age lights**":[6502],"ge lights**]":[6502],"e lights**](":[6502]," lights**](h":[6502],"lights**](ht":[6502],"ights**](htt":[6502],"ghts**](http":[6502],"hts**](http:":[6502],"hp?p=22071).":[6502],"p?p=22071). ":[6502],"?p=22071). s":[6502],"p=22071). se":[6502],"=22071). see":[6502],"22071). see ":[6502],"2071). see y":[6502],"071). see yo":[6502],"71). see you":[6502],"1). see you ":[6502],"). see you s":[6502],". see you so":[6502]," see you soo":[6502],"see you soon":[6502],"ee you soon.":[6502],"guess what! ":[6503],"uess what! t":[6503],"ess what! th":[6503],"ss what! the":[6503],"s what! the ":[6503]," what! the n":[6503],"what! the ne":[6503],"hat! the nex":[6503],"at! the next":[6503],"t! the next ":[6503],"! the next t":[6503]," the next tu":[6503,7139,7143],"the next tut":[6503,7139,7143],"he next tuto":[6503,7139,7143],"e next tutor":[6503,7139,7143],"xt tutorial.":[6503,7139],"t tutorial..":[6503],"utorial... i":[6503],"torial... is":[6503],"orial... is ":[6503],"rial... is a":[6503],"ial... is ab":[6503],"al... is abo":[6503],"l... is abou":[6503],"... is about":[6503,7143],".. is about ":[6503,7143],". is about a":[6503]," is about an":[6503],"is about ani":[6503],"s about anim":[6503]," about anima":[6503],"about animat":[6503],"bout animati":[6503],"out animatio":[6503],"ut animation":[6503],"t animation!":[6503]," animation! ":[6503],"animation! [":[6503],"nimation! [c":[6503],"imation! [cl":[6503],"mation! [cli":[6503],"ation! [clic":[6503],"tion! [click":[6503],"ion! [click ":[6503],"on! [click t":[6503],"n! [click th":[6503],"! [click thi":[6503]," [click this":[6503],"[click this ":[6503],"click this a":[6503],"lick this an":[6503],"ick this and":[6503],"ck this and ":[6503],"k this and l":[6503]," this and le":[6503],"this and let":[6503],"his and let'":[6503],"is and let's":[6503],"s and let's ":[6503]," and let's g":[6503],"and let's go":[6503],"nd let's go!":[6503],"d let's go!]":[6503]," let's go!](":[6503],"let's go!](h":[6503],"et's go!](ht":[6503],"t's go!](htt":[6503],"'s go!](http":[6503],"s go!](http:":[6503]," go!](http:/":[6503],"go!](http://":[6503],"o!](http://b":[6503],"var funnyeas":[6505],"ar funnyease":[6505],"r funnyease ":[6505]," funnyease =":[6505],"funnyease = ":[6505],"unnyease = (":[6505],"nnyease = (f":[6505],"nyease = (fu":[6505],"yease = (fun":[6505],"ease = (func":[6505],"ase = (funct":[6505],"se = (functi":[6505],"e = (functio":[6505]," = (function":[6505],"= (function ":[6505]," (function (":[6505],"(function (_":[6505],"function (_s":[6505],"unction (_su":[6505],"nction (_sup":[6505],"ction (_supe":[6505],"tion (_super":[6505],"ion (_super)":[6505],"on (_super) ":[6505],"n (_super) {":[6505],"bsp; &nbsp;_":[6506],"sp; &nbsp;__":[6506],"p; &nbsp;__e":[6506],"; &nbsp;__ex":[6506]," &nbsp;__ext":[6506],"&nbsp;__exte":[6506],"nbsp;__exten":[6506],"bsp;__extend":[6506],"sp;__extends":[6506],"p;__extends(":[6506],";__extends(f":[6506],"__extends(fu":[6506],"_extends(fun":[6506],"extends(funn":[6506],"xtends(funny":[6506],"tends(funnye":[6506],"ends(funnyea":[6506],"nds(funnyeas":[6506],"ds(funnyease":[6506],"s(funnyease,":[6506],"(funnyease, ":[6506],"funnyease, _":[6506],"unnyease, _s":[6506],"nnyease, _su":[6506],"nyease, _sup":[6506],"yease, _supe":[6506],"ease, _super":[6506],"ase, _super)":[6506],"se, _super);":[6506],"sp; &nbsp;fu":[6507,6510],"p; &nbsp;fun":[6507,6510],"; &nbsp;func":[6507]," &nbsp;funct":[6507],"&nbsp;functi":[6507],"nbsp;functio":[6507],"bsp;function":[6507],"sp;function ":[6507],"p;function f":[6507],";function fu":[6507],"function fun":[6507],"unction funn":[6507],"nction funny":[6507],"ction funnye":[6507],"tion funnyea":[6507],"ion funnyeas":[6507],"on funnyease":[6507],"n funnyease(":[6507]," funnyease()":[6507],"funnyease() ":[6507],"unnyease() {":[6507],"sp; &nbsp; _":[6508],"p; &nbsp; _s":[6508],"; &nbsp; _su":[6508]," &nbsp; _sup":[6508],"&nbsp; _supe":[6508],"nbsp; _super":[6508],"bsp; _super.":[6508],"sp; _super.a":[6508],"p; _super.ap":[6508],"; _super.app":[6508]," _super.appl":[6508],"_super.apply":[6508],"super.apply(":[6508],"uper.apply(t":[6508],"per.apply(th":[6508],"er.apply(thi":[6508],"r.apply(this":[6508],".apply(this,":[6508],"apply(this, ":[6508],"pply(this, a":[6508],"ply(this, ar":[6508],"ly(this, arg":[6508],"y(this, argu":[6508],"(this, argum":[6508],"this, argume":[6508],"his, argumen":[6508],"is, argument":[6508],"s, arguments":[6508],", arguments)":[6508]," arguments);":[6508],"; &nbsp;funn":[6510]," &nbsp;funny":[6510],"&nbsp;funnye":[6510],"nbsp;funnyea":[6510],"bsp;funnyeas":[6510],"sp;funnyease":[6510],"p;funnyease.":[6510],";funnyease.p":[6510],"funnyease.pr":[6510],"unnyease.pro":[6510],"nnyease.prot":[6510],"nyease.proto":[6510],"yease.protot":[6510],"ease.prototy":[6510],"ase.prototyp":[6510],"se.prototype":[6510],"e.prototype.":[6510],".prototype.e":[6510],"prototype.ea":[6510],"rototype.eas":[6510],"ototype.ease":[6510],"totype.easei":[6510],"otype.easein":[6510],"type.easeinc":[6510],"ype.easeinco":[6510],"pe.easeincor":[6510],"e.easeincore":[6510],".easeincore ":[6510],"easeincore =":[6510],"aseincore = ":[6510],"seincore = f":[6510],"eincore = fu":[6510],"incore = fun":[6510],"ncore = func":[6510],"core = funct":[6510],"ore = functi":[6510],"re = functio":[6510]," function (g":[6510],"function (gr":[6510],"unction (gra":[6510],"nction (grad":[6510],"ction (gradi":[6510],"tion (gradie":[6510],"ion (gradien":[6510],"on (gradient":[6510],"n (gradient)":[6510]," (gradient) ":[6510],"(gradient) {":[6510]," &nbsp; // h":[6511],"&nbsp; // he":[6511],"nbsp; // her":[6511],"bsp; // here":[6511],"sp; // here ":[6511],"p; // here i":[6511],"; // here is":[6511]," // here is ":[6511],"// here is t":[6511],"/ here is th":[6511],"e is the cor":[6511]," is the core":[6511],"is the core ":[6511],"s the core m":[6511]," the core me":[6511],"the core met":[6511],"he core meth":[6511],"e core metho":[6511]," core method":[6511],"core method ":[6511],"ore method y":[6511],"re method yo":[6511],"e method you":[6511]," method you ":[6511],"method you s":[6511],"ethod you sh":[6511],"thod you sho":[6511],"hod you shou":[6511],"od you shoul":[6511],"d you should":[6511],"ou should ch":[6511],"u should cha":[6511]," should chan":[6511],"should chang":[6511],"hould change":[6511],"ould change ":[6511],"uld change t":[6511],"ld change to":[6511],"d change to ":[6511]," change to m":[6511],"change to ma":[6511],"hange to mak":[6511],"ange to make":[6511],"nge to make ":[6511],"ge to make y":[6511],"e to make yo":[6511]," make your o":[6511],"make your ow":[6511],"ake your own":[6511],"ke your own ":[6511]," &nbsp; // g":[6512],"&nbsp; // gr":[6512],"nbsp; // gra":[6512],"bsp; // grad":[6512],"sp; // gradi":[6512],"p; // gradie":[6512],"; // gradien":[6512]," // gradient":[6512],"// gradient ":[6512],"/ gradient i":[6512]," gradient is":[6512],"gradient is ":[6512],"radient is t":[6512],"adient is th":[6512],"dient is the":[6512],"ient is the ":[6512],"ent is the p":[6512],"nt is the pe":[6512],"t is the per":[6512]," is the perc":[6512],"is the perce":[6512],"s the percen":[6512],"the percent ":[6512],"he percent o":[6512],"e percent of":[6512]," percent of ":[6512],"percent of v":[6512],"ercent of va":[6512],"rcent of val":[6512],"cent of valu":[6512],"ent of value":[6512],"nt of value ":[6512],"t of value c":[6512]," of value ch":[6512],"of value cha":[6512],"f value chan":[6512]," value chang":[6512],"value change":[6512],"sp; &nbsp; r":[6513],"p; &nbsp; re":[6513],"; &nbsp; ret":[6513]," &nbsp; retu":[6513],"&nbsp; retur":[6513],"nbsp; return":[6513],"bsp; return ":[6513],"sp; return m":[6513],"p; return ma":[6513],"; return mat":[6513]," return math":[6513],"return math.":[6513],"eturn math.p":[6513],"turn math.po":[6513],"urn math.pow":[6513],"rn math.pow(":[6513],"n math.pow(m":[6513]," math.pow(ma":[6513],"math.pow(mat":[6513],"ath.pow(math":[6513],"th.pow(math.":[6513],"h.pow(math.p":[6513],".pow(math.po":[6513],"pow(math.pow":[6513],"ow(math.pow(":[6513],"w(math.pow(g":[6513],"(math.pow(gr":[6513],"math.pow(gra":[6513],"ath.pow(grad":[6513],"th.pow(gradi":[6513],"h.pow(gradie":[6513],".pow(gradien":[6513],"pow(gradient":[6513],"ow(gradient,":[6513],"w(gradient, ":[6513],"(gradient, 4":[6513],"gradient, 4)":[6513],"radient, 4),":[6513],"adient, 4), ":[6513],"dient, 4), g":[6513],"ient, 4), gr":[6513],"ent, 4), gra":[6513],"nt, 4), grad":[6513],"t, 4), gradi":[6513],", 4), gradie":[6513]," 4), gradien":[6513],"4), gradient":[6513],"), gradient)":[6513],"sp; &nbsp;};":[6514],"bsp;return f":[6515],"sp;return fu":[6515],"p;return fun":[6515],";return funn":[6515],"return funny":[6515],"eturn funnye":[6515],"turn funnyea":[6515],"urn funnyeas":[6515],"rn funnyease":[6515],"n funnyease;":[6515],"})(babylon.e":[6516],")(babylon.ea":[6516]," will find a":[6518],"will find a ":[6518],"ill find a c":[6518],"ll find a co":[6518],"l find a com":[6518]," find a comp":[6518],"find a compl":[6518],"ind a comple":[6518],"nd a complet":[6518],"d a complete":[6518],"mplete demon":[6518],"plete demons":[6518],"lete demonst":[6518],"ete demonstr":[6518],"te demonstra":[6518],"monstration ":[6518],"onstration o":[6518],"nstration of":[6518],"stration of ":[6518],"tration of t":[6518],"ration of th":[6518],"n of the eas":[6518]," of the easi":[6518],"of the easin":[6518],"f the easing":[6518]," functions b":[6518],"functions be":[6518],"unctions beh":[6518],"nctions beha":[6518],"ctions behav":[6518],"tions behavi":[6518],"ions behavio":[6518],"ons behavior":[6518],"ns behaviors":[6518],"s behaviors,":[6518]," behaviors, ":[6518],"behaviors, i":[6518],"ehaviors, in":[6518],"haviors, in ":[6518],"aviors, in t":[6518],"viors, in th":[6518],"iors, in the":[6518],"ors, in the ":[6518],"rs, in the p":[6518],"s, in the pl":[6518],", in the pla":[6518],"layground : ":[6518],"ayground : [":[6518],"yground : [*":[6518],"ground : [**":[6518],"round : [**e":[6518],"ound : [**ea":[6518],"und : [**eas":[6518],"nd : [**easi":[6518],"d : [**easin":[6518]," : [**easing":[6518],": [**easing ":[6518]," [**easing f":[6518],"[**easing fu":[6518],"**easing fun":[6518],"*easing func":[6518],"g function p":[6518],"nction playg":[6518],"ction playgr":[6518],"tion playgro":[6518],"ion playgrou":[6518],"on playgroun":[6518],"ites.net/?20":[6518],"tes.net/?20)":[6518],"**5 - comple":[6519],"*5 - complex":[6519],"5 - complex ":[6519]," - complex a":[6519],"- complex an":[6519],"x animation*":[6519],"the complex ":[6520],"he complex a":[6520],"x animation ":[6520,6526]," animation l":[6520,6526],"animation le":[6520],"nimation let":[6520],"imation lets":[6520],"mation lets ":[6520],"ation lets y":[6520],"tion lets yo":[6520],"ion lets you":[6520],"on lets you ":[6520],"n lets you c":[6520]," lets you ch":[6520],"lets you cho":[6520],"ets you choo":[6520],"ts you choos":[6520],"you choose e":[6520],"ou choose ev":[6520],"u choose eve":[6520]," choose ever":[6520],"choose every":[6520],"hoose everyt":[6520],"oose everyth":[6520],"ose everythi":[6520],"se everythin":[6520],"verything at":[6520],"erything at ":[6520],"rything at e":[6520],"ything at ea":[6520],"thing at eac":[6520],"hing at each":[6520],"ing at each ":[6520],"ng at each f":[6520],"g at each fr":[6520],"each frame o":[6520],"ach frame of":[6520],"ch frame of ":[6520],"h frame of t":[6520]," frame of th":[6520],"frame of the":[6520],"rame of the ":[6520],"ame of the a":[6520,6869],"me of the an":[6520],"animation (e":[6520],"nimation (ea":[6520],"imation (eac":[6520],"mation (each":[6520],"ation (each ":[6520],"tion (each t":[6520],"ion (each ti":[6520],"on (each tic":[6520],"n (each tick":[6520]," (each tick)":[6520],"(each tick).":[6520],"each tick). ":[6520],"ach tick). t":[6520],"ch tick). th":[6520],"h tick). the":[6520]," tick). the ":[6520],"tick). the c":[6520],"ick). the co":[6520],"ck). the cod":[6520],"k). the code":[6520],"). the code ":[6520],". the code c":[6520],"the code com":[6520],"he code comp":[6520],"e code compu":[6520]," code comput":[6520],"code compute":[6520],"ode computed":[6520],"de computed ":[6520],"e computed a":[6520]," computed at":[6520],"computed at ":[6520],"omputed at r":[6520],"mputed at ru":[6520],"puted at run":[6520],"uted at run ":[6520],"ted at run t":[6520],"ed at run ti":[6520],"d at run tim":[6520],"at run time ":[6520],"t run time m":[6520]," run time mu":[6520],"run time mus":[6520],"un time must":[6520],"n time must ":[6520]," time must b":[6520],"time must be":[6520],"ime must be ":[6520],"me must be l":[6520],"e must be lo":[6520]," must be loc":[6520],"must be loca":[6520],"ust be locat":[6520],"st be locate":[6520],"t be located":[6520]," be located ":[6520,6717],"be located i":[6520],"e located in":[6520]," located in ":[6520],"located in t":[6520],"ocated in th":[6520],"cated in thi":[6520],"ated in this":[6520],"ted in this ":[6520],"ed in this f":[6520],"d in this fu":[6520]," in this fun":[6520],"in this func":[6520],"n this funct":[6520],"er(function ":[6522],"r(function (":[6522],"&nbsp;//your":[6523],"nbsp;//your ":[6523],"bsp;//your c":[6523],"sp;//your co":[6523],"p;//your cod":[6523],";//your code":[6523],"//your code ":[6523],"/your code h":[6523],"your code he":[6523],"our code her":[6523],"ur code here":[6523],"ion can be v":[6526],"on can be ve":[6526],"n can be ver":[6526],"useful for c":[6526],"seful for co":[6526],"eful for com":[6526],"ful for comp":[6526],"ul for compl":[6526],"l for comple":[6526]," for complex":[6526],"for complex ":[6526],"or complex a":[6526],"r complex an":[6526],"animation li":[6526],"nimation lik":[6526],"imation like":[6526],"mation like ":[6526],"ation like g":[6526],"tion like ga":[6526],"ion like gam":[6526],"on like game":[6526],"n like games":[6526]," like games,":[6526],"like games, ":[6526],"ike games, w":[6526],"ke games, wh":[6526],"e games, whe":[6526]," games, wher":[6526],"games, where":[6526],"ames, where ":[6526],"mes, where c":[6526],"es, where ch":[6526],"s, where cha":[6526],", where char":[6526]," where chara":[6526],"where charac":[6526],"here charact":[6526],"ere characte":[6526],"re character":[6526],"e characters":[6526]," characters ":[6526],"characters h":[6526],"haracters ha":[6526],"aracters hav":[6526],"racters have":[6526],"acters have ":[6526],"cters have t":[6526],"ters have to":[6526],"ers have to ":[6526],"rs have to m":[6526],"s have to mo":[6526]," have to mov":[6526],"have to move":[6526],"ave to move ":[6526],"ve to move d":[6526],"e to move de":[6526]," to move dep":[6526],"to move depe":[6526],"o move depen":[6526]," move depend":[6526],"move dependi":[6526],"ove dependin":[6526],"ve depending":[6526],"pending on m":[6526],"ending on ma":[6526],"nding on man":[6526],"ding on many":[6526],"ing on many ":[6526],"ng on many p":[6526],"g on many pa":[6526]," on many par":[6526],"on many para":[6526],"n many param":[6526]," many parame":[6526],"to combine a":[6527],"o combine al":[6527]," combine all":[6527],"combine all ":[6527],"ombine all t":[6527],"mbine all th":[6527],"bine all tho":[6527],"ine all thos":[6527],"ne all those":[6527],"e all those ":[6527]," all those t":[6527],"all those ty":[6527],"ll those typ":[6527],"l those type":[6527]," those types":[6527],"those types ":[6527],"hose types o":[6527],"ose types of":[6527],"se types of ":[6527],"e types of a":[6527],"types of ani":[6527],"ypes of anim":[6527],"pes of anima":[6527],"es of animat":[6527],"s of animati":[6527],"nimations. i":[6527],"imations. if":[6527],"mations. if ":[6527],"ations. if w":[6527],"tions. if we":[6527],"ions. if wel":[6527],"ons. if well":[6527],"ns. if well ":[6527],"s. if well d":[6527],". if well do":[6527]," if well don":[6527],"if well done":[6527],"f well done,":[6527]," well done, ":[6527],"well done, i":[6527],"ell done, it":[6527],"ll done, it’":[6527],"l done, it’s":[6527]," done, it’s ":[6527],"done, it’s v":[6527],"one, it’s ve":[6527],"ne, it’s ver":[6527],"e, it’s very":[6527],", it’s very ":[6527]," it’s very p":[6527],"it’s very po":[6527],"t’s very pow":[6527],"’s very powe":[6527],"s very power":[6527],"ry powerful.":[6527]," forget to [":[6528],"forget to [v":[6528],"orget to [vi":[6528],"rget to [vis":[6528],"get to [visi":[6528],"et to [visit":[6528],"t to [visit ":[6528]," to [visit o":[6528],"to [visit ou":[6528],"o [visit our":[6528]," [visit our ":[6528],"[visit our a":[6528],"visit our ap":[6528],"isit our api":[6528],"sit our api ":[6528],"it our api d":[6528],"t our api do":[6528],"age.php?p=29":[6528],"ge.php?p=29)":[6528],"e.php?p=29) ":[6528],".php?p=29) i":[6528],"php?p=29) in":[6528],"hp?p=29) in ":[6528],"p?p=29) in o":[6528],"?p=29) in or":[6528],"p=29) in ord":[6528],"=29) in orde":[6528],"29) in order":[6528],"9) in order ":[6528],") in order t":[6528],"n order to l":[6528]," order to le":[6528],"order to lea":[6528],"rder to lear":[6528],"der to learn":[6528],"er to learn ":[6528],"r to learn m":[6528]," about the [":[6528],"about the [*":[6528],"bout the [**":[6528],"out the [**b":[6528],"ut the [**ba":[6528],"t the [**bab":[6528]," the [**baby":[6528],"the [**babyl":[6528],"he [**babylo":[6528],"e [**babylon":[6528],"bylon.js ani":[6528],"ylon.js anim":[6528],"lon.js anima":[6528],"on.js animat":[6528],"n.js animati":[6528],".js animatio":[6528],"js animation":[6528],"s animation*":[6528],"p?p=24916) c":[6528],"?p=24916) cl":[6528],"p=24916) cla":[6528],"=24916) clas":[6528],"24916) class":[6528],"4916) class.":[6528],"ou can view,":[6529],"u can view, ":[6529]," can view, e":[6529],"can view, ed":[6529],"an view, edi":[6529],"n view, edit":[6529]," view, edit,":[6529],"view, edit, ":[6529],"iew, edit, a":[6529],"ew, edit, an":[6529],"w, edit, and":[6529],", edit, and ":[6529]," edit, and g":[6529],"edit, and ge":[6529],"dit, and get":[6529],"it, and get ":[6529],"t, and get a":[6529],", and get a ":[6529]," and get a z":[6529],"and get a zi":[6529],"nd get a zip":[6529],"d get a zip ":[6529]," get a zip o":[6529],"get a zip of":[6529],"et a zip of ":[6529],"t a zip of t":[6529]," a zip of th":[6529],"a zip of the":[6529]," zip of the ":[6529],"zip of the c":[6529],"ip of the co":[6529],"p of the cod":[6529],"f the code u":[6529],"torial... [*":[6529],"orial... [**":[6529],"rial... [**r":[6529],"ial... [**ri":[6529],"al... [**rig":[6529],"l... [**righ":[6529],"sites.net/?7":[6529],"ites.net/?7)":[6529],"tes.net/?7) ":[6529],"es.net/?7) .":[6529],"s.net/?7) ..":[6529],".net/?7) ...":[6529],"net/?7) ...a":[6529],"et/?7) ...at":[6529],"t/?7) ...at ":[6529],"/?7) ...at t":[6529],"?7) ...at th":[6529],"7) ...at the":[6529],") ...at the ":[6529]," ...at the b":[6529],"...at the ba":[6529],"..at the bab":[6529],".at the baby":[6529],"&nbsp; the d":[6529],"nbsp; the de":[6529],"bsp; the dem":[6529],"sp; the demo":[6529],"p; the demo ":[6529],"; the demo f":[6529]," the demo fo":[6529],"the demo for":[6529],"he demo for ":[6529],"e demo for t":[6529]," demo for th":[6529],"demo for the":[6529],"emo for the ":[6529],"mo for the e":[6529],"o for the ea":[6529]," for the eas":[6529],"for the easi":[6529],"or the easin":[6529],"r the easing":[6529],"the easing s":[6529],"he easing se":[6529],"e easing sec":[6529]," easing sect":[6529],"easing secti":[6529],"asing sectio":[6529],"sing section":[6529],"ing section ":[6529],"ng section i":[6529],"g section is":[6529]," section is ":[6529],"section is l":[6529],"ection is li":[6529],"ction is lis":[6529],"tion is list":[6529],"ion is liste":[6529],"on is listed":[6529],"n is listed ":[6529]," is listed a":[6529],"is listed a ":[6529],"s listed a f":[6529]," listed a fe":[6529],"listed a few":[6529],"isted a few ":[6529],"sted a few l":[6529],"ted a few li":[6529],"ed a few lin":[6529],"d a few line":[6529]," a few lines":[6529],"a few lines ":[6529]," few lines e":[6529],"few lines ea":[6529],"ew lines ear":[6529],"w lines earl":[6529]," lines earli":[6529],"lines earlie":[6529],"ines earlier":[6529],"nes earlier.":[6529],"clesystems a":[6531],"lesystems ar":[6531],"esystems are":[6531],"systems are ":[6531],"ystems are v":[6531],"stems are ve":[6531],"tems are ver":[6531],"ems are very":[6531],"ms are very ":[6531],"s are very p":[6531]," are very po":[6531],"are very pow":[6531],"re very powe":[6531],"e very power":[6531],"werful and v":[6531],"erful and ve":[6531],"rful and ver":[6531],"ful and vers":[6531],"ul and versa":[6531],"l and versat":[6531]," versatile t":[6531],"versatile to":[6531],"ersatile too":[6531],"rsatile tool":[6531],"satile tools":[6531],"atile tools ":[6531],"tile tools t":[6531],"ile tools th":[6531],"le tools tha":[6531],"ools that ca":[6531],"ols that can":[6531],"ls that can ":[6531],"s that can h":[6531]," that can he":[6531],"that can hel":[6531],"hat can help":[6531],"at can help ":[6531],"t can help b":[6531]," can help br":[6531],"can help bri":[6531],"an help brin":[6531],"n help bring":[6531]," help bring ":[6531],"help bring r":[6531],"elp bring re":[6531],"lp bring rea":[6531],"p bring real":[6531]," bring realn":[6531],"bring realne":[6531],"ring realnes":[6531],"ing realness":[6531],"ng realness ":[6531],"g realness a":[6531]," realness an":[6531],"realness and":[6531],"ealness and ":[6531],"alness and m":[6531],"lness and mo":[6531],"ness and mov":[6531],"ess and move":[6531],"ss and movem":[6531],"s and moveme":[6531],"d movement t":[6531]," movement to":[6531],"movement to ":[6531],"ovement to y":[6531],"vement to yo":[6531],"ement to you":[6531],"nt to your s":[6531],"ur scenes. d":[6531],"r scenes. do":[6531]," scenes. don":[6531],"scenes. don’":[6531],"cenes. don’t":[6531],"enes. don’t ":[6531],"nes. don’t h":[6531],"es. don’t he":[6531],"s. don’t hes":[6531],". don’t hesi":[6531]," don’t hesit":[6531],"ate to use t":[6531],"te to use th":[6531],"to use them ":[6531],"o use them a":[6531]," use them as":[6531],"use them as ":[6531],"se them as t":[6531],"e them as th":[6531]," them as the":[6531],"them as they":[6531],"hem as they ":[6531],"em as they a":[6531],"m as they ar":[6531],"s they are n":[6531],"ot resource-":[6531],"t resource-i":[6531]," resource-in":[6531],"resource-int":[6531],"esource-inte":[6531],"source-inten":[6531],"ource-intens":[6531],"urce-intensi":[6531],"rce-intensiv":[6531],"ce-intensive":[6531],"e-intensive.":[6531],"lling the *a":[6533],"ling the *at":[6533],"ing the *att":[6533],"ng the *atta":[6533],"g the *attac":[6533]," the *attach":[6533],"the *attacht":[6533],"he *attachto":[6533],"e *attachtom":[6533]," *attachtome":[6533],"*attachtomes":[6533],"tachtomesh()":[6533],"achtomesh()*":[6533],"chtomesh()* ":[6533],"htomesh()* f":[6533],"tomesh()* fu":[6533],"omesh()* fun":[6533],"mesh()* func":[6533],"esh()* funct":[6533],"sh()* functi":[6533],"h()* functio":[6533],"function on ":[6533,6582],"unction on a":[6533],"nction on a ":[6533],"ction on a s":[6533],"tion on a so":[6533],"ion on a sou":[6533],"on on a soun":[6533],"n on a sound":[6533]," on a sound ":[6533,6633],"on a sound w":[6533],"n a sound wi":[6533]," a sound wil":[6533],"a sound will":[6533],"sound will t":[6533],"ound will tr":[6533],"und will tra":[6533],"nd will tran":[6533],"d will trans":[6533]," will transf":[6533],"will transfo":[6533],"ill transfor":[6533],"l transform ":[6533]," transform i":[6533],"transform it":[6533],"ransform it ":[6533],"ansform it a":[6533],"nsform it au":[6533],"sform it aut":[6533],"form it auto":[6533],"orm it autom":[6533],"rm it automa":[6533],"m it automat":[6533],"omatically i":[6533],"matically in":[6533],"atically int":[6533],"tically into":[6533],"ically into ":[6533],"cally into a":[6533],"ally into a ":[6533],"lly into a s":[6533],"ly into a sp":[6533],"y into a spa":[6533],"al 3d sound.":[6533],"l 3d sound. ":[6533]," 3d sound. u":[6533],"3d sound. us":[6533],"d sound. usi":[6533]," sound. usin":[6533],"sound. using":[6533],"ound. using ":[6533],"und. using t":[6533],"nd. using th":[6533],"d. using the":[6533],"the above co":[6533],"he above cod":[6533],"e above code":[6533]," above code,":[6533],"above code, ":[6533],"bove code, y":[6533],"ove code, yo":[6533],"ve code, you":[6533],"e code, you’":[6533]," code, you’l":[6533],"code, you’ll":[6533],"ode, you’ll ":[6533],"de, you’ll f":[6533],"e, you’ll fa":[6533],", you’ll fal":[6533]," you’ll fall":[6533],"you’ll fall ":[6533],"ou’ll fall i":[6533],"u’ll fall in":[6533],"’ll fall int":[6533],"ll fall into":[6533],"l fall into ":[6533]," fall into d":[6533],"fall into de":[6533],"all into def":[6533],"ll into defa":[6533],"l into defau":[6533]," into defaul":[6533],"into default":[6533],"nto default ":[6533],"to default b":[6533],"o default ba":[6533],"abylon.js va":[6533],"bylon.js val":[6533],"ylon.js valu":[6533],"lon.js value":[6533],"on.js values":[6533],"n.js values:":[6533],".js values: ":[6533],"js values: a":[6533],"s values: a ":[6533]," values: a *":[6533],"values: a *l":[6533],"alues: a *li":[6533],"lues: a *lin":[6533],"ues: a *line":[6533],"es: a *linea":[6533],"s: a *linear":[6533],": a *linear*":[6533]," a *linear* ":[6533],"a *linear* a":[6533]," *linear* at":[6533],"*linear* att":[6533],"linear* atte":[6533],"inear* atten":[6533],"near* attenu":[6533],"ear* attenua":[6533],"ar* attenuat":[6533],"r* attenuati":[6533],"* attenuatio":[6533],"ttenuation w":[6533,6557,6558],"tenuation wi":[6533,6557,6558],"enuation wit":[6533],"nuation with":[6533],"uation with ":[6533],"ion with a *":[6533],"on with a *m":[6533],"n with a *ma":[6533]," with a *max":[6533],"with a *maxd":[6533],"ith a *maxdi":[6533],"th a *maxdis":[6533],"h a *maxdist":[6533]," a *maxdista":[6533],"a *maxdistan":[6533]," *maxdistanc":[6533],"axdistance* ":[6533],"xdistance* o":[6533],"distance* of":[6533],"istance* of ":[6533],"stance* of 1":[6533],"tance* of 10":[6533],"ance* of 100":[6533],"nce* of 100 ":[6533],"ce* of 100 a":[6533],"e* of 100 an":[6533],"* of 100 and":[6533]," of 100 and ":[6533],"of 100 and a":[6533],"f 100 and a ":[6533]," 100 and a p":[6533],"100 and a pa":[6533],"00 and a pan":[6533],"0 and a pann":[6533]," and a panni":[6533],"and a pannin":[6533],"nd a panning":[6533],"d a panning ":[6533]," a panning m":[6533],"a panning mo":[6533]," panning mod":[6533],"panning mode":[6533],"anning model":[6533],"nning model ":[6533],"ning model o":[6533],"ing model of":[6533],"ng model of ":[6533],"g model of t":[6533]," model of ty":[6533],"model of typ":[6533],"odel of type":[6533],"del of type ":[6533],"el of type “":[6533],"l of type “*":[6533]," of type “*h":[6533],"of type “*hr":[6533],"f type “*hrt":[6533]," type “*hrtf":[6533],"type “*hrtf*":[6533],"ype “*hrtf*”":[6533],"pe “*hrtf*”.":[6533],"put your hea":[6534],"ut your head":[6534],"t your headp":[6534]," your headph":[6534],"your headpho":[6534],"our headphon":[6534],"ur headphone":[6534],"r headphone ":[6534]," headphone a":[6534],"headphone an":[6534],"eadphone and":[6534],"adphone and ":[6534],"dphone and l":[6534],"phone and la":[6534],"hone and lau":[6534],"one and laun":[6534],"ne and launc":[6534],"e and launch":[6534]," and launch ":[6534],"and launch t":[6534],"nd launch th":[6534],"d launch thi":[6534]," launch this":[6534],"launch this ":[6534],"aunch this s":[6534],"unch this sa":[6534],"nch this sam":[6534],"ch this samp":[6534],"h this sampl":[6534,6552],"ground.com/i":[6535],"round.com/in":[6535],"ound.com/ind":[6535],"und.com/inde":[6535],"nd.com/index":[6535],"d.com/index.":[6535],"index.html?2":[6535],"ndex.html?23":[6535],"dex.html?23 ":[6535],"ex.html?23 #":[6535],"x.html?23 ##":[6535],".html?23 ###":[6535]," a spatial d":[6536],"a spatial di":[6536]," spatial dir":[6536],"spatial dire":[6536],"patial direc":[6536],"atial direct":[6536],"l directiona":[6536],"irectional 3":[6536],"rectional 3d":[6536],"ectional 3d ":[6536],"ctional 3d s":[6536],"tional 3d so":[6536],"ional 3d sou":[6536],"onal 3d soun":[6536],"nal 3d sound":[6536],"y default, s":[6537]," default, sp":[6537],"default, spa":[6537],"efault, spat":[6537],"fault, spati":[6537],"ault, spatia":[6537],"ult, spatial":[6537],"lt, spatial ":[6537],"t, spatial s":[6537],", spatial so":[6537],"atial sounds":[6537,6538,6558],"tial sounds ":[6537,6538,6558],"ial sounds a":[6537,6538],"al sounds ar":[6537],"l sounds are":[6537]," sounds are ":[6537],"sounds are o":[6537],"ounds are om":[6537],"unds are omn":[6537],"nds are omni":[6537],"ds are omnid":[6537],"s are omnidi":[6537]," are omnidir":[6537],"are omnidire":[6537],"re omnidirec":[6537],"e omnidirect":[6537]," omnidirecti":[6537],"omnidirectio":[6537],"mnidirection":[6537],"nidirectiona":[6537],"idirectional":[6537],"directional.":[6537],"irectional. ":[6537],"rectional. b":[6537],"ectional. bu":[6537],"ctional. but":[6537],"tional. but ":[6537],"ional. but y":[6537],"onal. but yo":[6537],"nal. but you":[6537],"al. but you ":[6537],"ut you can h":[6537],"t you can ha":[6537],"u can have d":[6537]," can have di":[6537],"can have dir":[6537],"an have dire":[6537],"n have direc":[6537]," have direct":[6537],"have directi":[6537],"ave directio":[6537],"irectional s":[6537,6538,6550,6857,6858,6859],"rectional so":[6537,6538,6550,6857,6858,6859],"ectional sou":[6537,6538,6550,6857,6858,6859],"ctional soun":[6537,6538,6550,6857,6858,6859],"tional sound":[6537,6538,6550,6857,6858,6859],"ional sounds":[6537,6538],"onal sounds ":[6537,6538],"nal sounds i":[6537],"al sounds if":[6537],"l sounds if ":[6537]," sounds if y":[6537],"sounds if yo":[6537],"ounds if you":[6537],"unds if you’":[6537],"nds if you’d":[6537],"ds if you’d ":[6537],"s if you’d l":[6537]," if you’d li":[6537],"if you’d lik":[6537],"f you’d like":[6537]," you’d like ":[6537,6572],"you’d like t":[6537],"ou’d like to":[6537],"u’d like to.":[6537],"**note:** di":[6538],"*note:** dir":[6538],"note:** dire":[6538],"ote:** direc":[6538],"te:** direct":[6538],"e:** directi":[6538],":** directio":[6538],"** direction":[6538],"* directiona":[6538],"nal sounds o":[6538],"al sounds on":[6538],"ounds only w":[6538],"unds only wo":[6538],"nds only wor":[6538],"ds only work":[6538],"s only work ":[6538]," only work f":[6538],"only work fo":[6538],"nly work for":[6538],"ly work for ":[6538],"y work for s":[6538]," work for sp":[6538],"work for spa":[6538],"ork for spat":[6538],"rk for spati":[6538],"k for spatia":[6538]," for spatial":[6538],"for spatial ":[6538],"or spatial s":[6538],"r spatial so":[6538],"al sounds at":[6538],"l sounds att":[6538]," sounds atta":[6538],"sounds attac":[6538],"ounds attach":[6538],"unds attache":[6538],"nds attached":[6538],"ds attached ":[6538],"s attached t":[6538],"ttached to a":[6538],"tached to a ":[6538],"ached to a m":[6538],"ched to a me":[6538],"hed to a mes":[6538],"d to a mesh.":[6538]," to a mesh. ":[6538],"violons\", \"v":[6541],"iolons\", \"vi":[6541],"olons\", \"vio":[6541],"lons\", \"viol":[6541],"ons\", \"violo":[6541],"ns\", \"violon":[6541],"s\", \"violons":[6541],"\", \"violons1":[6541],", \"violons11":[6541]," \"violons11.":[6541,7199],"\"violons11.w":[6541,7199],"music.setdir":[6542],"usic.setdire":[6542],"sic.setdirec":[6542],"ic.setdirect":[6542],"c.setdirecti":[6542],".setdirectio":[6542],"setdirection":[6542,6546],"etdirectiona":[6542,6546],"tdirectional":[6542,6546],"directionalc":[6542,6546],"irectionalco":[6542,6546],"rectionalcon":[6542,6546],"ectionalcone":[6542,6546],"ctionalcone(":[6542],"tionalcone(9":[6542],"ionalcone(90":[6542],"onalcone(90,":[6542],"nalcone(90, ":[6542],"alcone(90, 1":[6542],"lcone(90, 18":[6542],"cone(90, 180":[6542],"one(90, 180,":[6542],"ne(90, 180, ":[6542],"e(90, 180, 0":[6542],"(90, 180, 0)":[6542],"90, 180, 0);":[6542],"music.setloc":[6543],"usic.setloca":[6543],"sic.setlocal":[6543],"ic.setlocald":[6543],"c.setlocaldi":[6543],".setlocaldir":[6543],"setlocaldire":[6543,6551],"etlocaldirec":[6543,6551],"tlocaldirect":[6543,6551],"localdirecti":[6543,6551,6861,7216],"ocaldirectio":[6543,6551,6861,7216],"caldirection":[6543,6551,6861,7216],"aldirectiont":[6543,6551,6861,7216],"ldirectionto":[6543,6551,6861,7216],"directiontom":[6543,6551,6861,7216],"irectiontome":[6543,6551,6861,7216],"rectiontomes":[6543,6551,6861,7216],"ectiontomesh":[6543,6551,6861,7216],"ctiontomesh(":[6543,6551],"tiontomesh(n":[6543],"iontomesh(ne":[6543],"ontomesh(new":[6543],"ntomesh(new ":[6543],"tomesh(new b":[6543],"omesh(new ba":[6543],"mesh(new bab":[6543],"esh(new baby":[6543],"r3(1, 0, 0))":[6543],"3(1, 0, 0));":[6543],"ctionalcone ":[6546],"tionalcone t":[6546],"ionalcone ta":[6546],"onalcone tak":[6546],"nalcone take":[6546],"alcone takes":[6546],"lcone takes ":[6546],"cone takes 3":[6546],"one takes 3 ":[6546],"ne takes 3 p":[6546],"e takes 3 pa":[6546]," takes 3 par":[6546],"takes 3 para":[6546],"akes 3 param":[6546],"kes 3 parame":[6546],"es 3 paramet":[6546],"s 3 paramete":[6546],"* **coneinne":[6547]," **coneinner":[6547],"**coneinnera":[6547],"*coneinneran":[6547],"coneinnerang":[6547,6857,7212],"oneinnerangl":[6547,6857,7212],"neinnerangle":[6547,6857,7212],"einnerangle*":[6547],"innerangle**":[6547],"nnerangle**:":[6547],"nerangle**: ":[6547],"erangle**: s":[6547,6548],"rangle**: si":[6547,6548],"angle**: siz":[6547,6548],"ngle**: size":[6547,6548],"gle**: size ":[6547,6548],"le**: size o":[6547,6548],"e**: size of":[6547,6548],"**: size of ":[6547,6548],"*: size of t":[6547,6548],": size of th":[6547,6548],"ize of the i":[6547],"ze of the in":[6547],"e of the inn":[6547]," of the inne":[6547],"of the inner":[6547],"f the inner ":[6547]," the inner c":[6547],"the inner co":[6547],"he inner con":[6547],"e inner cone":[6547]," inner cone ":[6547],"inner cone i":[6547],"nner cone in":[6547],"ner cone in ":[6547],"er cone in d":[6547,6548],"r cone in de":[6547,6548]," cone in deg":[6547,6548],"cone in degr":[6547,6548],"one in degre":[6547,6548],"ne in degree":[6547,6548],"* **coneoute":[6548,6549]," **coneouter":[6548,6549,6554],"**coneoutera":[6548],"*coneouteran":[6548],"coneouterang":[6548,6858,7213],"oneouterangl":[6548,6858,7213],"neouterangle":[6548,6858,7213],"eouterangle*":[6548],"outerangle**":[6548],"uterangle**:":[6548],"terangle**: ":[6548],"ize of the o":[6548],"ze of the ou":[6548],"e of the out":[6548]," of the oute":[6548],"of the outer":[6548],"f the outer ":[6548]," the outer c":[6548,6549],"the outer co":[6548,6549],"he outer con":[6548,6549],"e outer cone":[6548,6549]," outer cone ":[6548,6549],"outer cone i":[6548],"uter cone in":[6548],"ter cone in ":[6548],"**coneouterg":[6549,6554],"*coneouterga":[6549,6554],"coneoutergai":[6549,6554,6859,7214],"oneoutergain":[6549,6554,6859,7214],"neoutergain*":[6549,6554],"eoutergain**":[6549,6554],"outergain**:":[6549],"utergain**: ":[6549],"tergain**: v":[6549],"ergain**: vo":[6549],"rgain**: vol":[6549],"gain**: volu":[6549],"ain**: volum":[6549],"in**: volume":[6549],"n**: volume ":[6549],"**: volume o":[6549],"*: volume of":[6549],": volume of ":[6549]," volume of t":[6549,6613,6631],"volume of th":[6549,6613,6631],"olume of the":[6549,6631],"lume of the ":[6549,6631],"ume of the s":[6549],"me of the so":[6549],"the sound wh":[6549],"he sound whe":[6549],"e sound when":[6549]," sound when ":[6549],"sound when y":[6549],"ound when yo":[6549],"und when you":[6549],"nd when you’":[6549],"d when you’r":[6549],"hen you’re o":[6549],"en you’re ou":[6549],"n you’re out":[6549]," you’re outs":[6549],"you’re outsi":[6549],"ou’re outsid":[6549],"u’re outside":[6549],"’re outside ":[6549],"re outside t":[6549],"utside the o":[6549],"tside the ou":[6549],"side the out":[6549],"ide the oute":[6549],"de the outer":[6549],"e the outer ":[6549],"outer cone (":[6549],"uter cone (b":[6549],"ter cone (be":[6549],"er cone (bet":[6549],"r cone (betw":[6549]," cone (betwe":[6549],"cone (betwee":[6549],"one (between":[6549],"ne (between ":[6549],"e (between 0":[6549]," (between 0.":[6549],"(between 0.0":[6549],"0.0 and 1.0)":[6549],"outer angle ":[6550],"uter angle o":[6550],"ter angle of":[6550],"er angle of ":[6550],"r angle of t":[6550]," angle of th":[6550],"angle of the":[6550],"ngle of the ":[6550],"gle of the c":[6550],"le of the co":[6550],"e of the con":[6550]," of the cone":[6550,6551],"of the cone ":[6550,6551],"f the cone m":[6550]," the cone mu":[6550],"the cone mus":[6550],"he cone must":[6550],"e cone must ":[6550]," cone must b":[6550],"cone must be":[6550],"one must be ":[6550],"ne must be s":[6550],"e must be su":[6550]," must be sup":[6550],"must be supe":[6550],"ust be super":[6550],"st be superi":[6550],"t be superio":[6550]," be superior":[6550],"be superior ":[6550],"e superior o":[6550]," superior or":[6550],"superior or ":[6550],"uperior or e":[6550],"perior or eq":[6550],"erior or equ":[6550],"rior or equa":[6550],"ior or equal":[6550],"or or equal ":[6550],"r or equal t":[6550]," or equal to":[6550],"or equal to ":[6550],"r equal to t":[6550]," equal to th":[6550],"equal to the":[6550],"qual to the ":[6550],"ual to the i":[6550],"al to the in":[6550],"l to the inn":[6550]," to the inne":[6550],"to the inner":[6550],"o the inner ":[6550]," the inner a":[6550],"the inner an":[6550],"he inner ang":[6550],"e inner angl":[6550]," inner angle":[6550],"inner angle,":[6550],"nner angle, ":[6550],"ner angle, o":[6550],"er angle, ot":[6550],"r angle, oth":[6550]," angle, othe":[6550],"angle, other":[6550],"ngle, otherw":[6550],"gle, otherwi":[6550],"le, otherwis":[6550],"e, otherwise":[6550]," otherwise a":[6550],"otherwise an":[6550],"therwise an ":[6550],"herwise an e":[6550],"erwise an er":[6550],"rwise an err":[6550],"wise an erro":[6550],"ise an error":[6550],"se an error ":[6550],"e an error w":[6550]," an error wi":[6550],"an error wil":[6550],"n error will":[6550]," error will ":[6550],"error will b":[6550],"rror will be":[6550],"ror will be ":[6550],"or will be l":[6550],"r will be lo":[6550]," will be log":[6550],"will be logg":[6550],"ill be logge":[6550],"ll be logged":[6550],"l be logged ":[6550]," be logged a":[6550],"be logged an":[6550],"e logged and":[6550]," logged and ":[6550],"logged and t":[6550],"ogged and th":[6550],"gged and the":[6550],"ged and the ":[6550],"ed and the d":[6550],"d and the di":[6550]," and the dir":[6550],"and the dire":[6550],"nd the direc":[6550],"ional sound ":[6550],"onal sound w":[6550],"nal sound wo":[6550],"al sound won":[6550],"l sound won’":[6550]," sound won’t":[6550],"sound won’t ":[6550],"ound won’t w":[6550],"und won’t wo":[6550],"nd won’t wor":[6550],"d won’t work":[6550]," won’t work.":[6550],"won’t work. ":[6550],"*setlocaldir":[6551],"tiontomesh()":[6551],"iontomesh()*":[6551],"ontomesh()* ":[6551],"ntomesh()* i":[6551],"tomesh()* is":[6551],"omesh()* is ":[6551],"mesh()* is s":[6551],"esh()* is si":[6551],"sh()* is sim":[6551],"h()* is simp":[6551],"()* is simpl":[6551],")* is simply":[6551],"* is simply ":[6551],"simply the o":[6551],"imply the or":[6551],"mply the ori":[6551],"ply the orie":[6551],"ly the orien":[6551],"y the orient":[6551],"on of the co":[6551],"n of the con":[6551],"f the cone r":[6551]," the cone re":[6551],"the cone rel":[6551],"he cone rela":[6551],"e cone relat":[6551]," cone relate":[6551],"cone related":[6551],"one related ":[6551],"ne related t":[6551],"e related to":[6551]," related to ":[6551],"related to t":[6551],"elated to th":[6551],"lated to the":[6551],"ted to the m":[6551],"ed to the me":[6551],"d to the mes":[6551],"o the mesh y":[6551]," the mesh yo":[6551],"the mesh you":[6551],"he mesh you’":[6551],"e mesh you’r":[6551]," mesh you’re":[6551],"mesh you’re ":[6551],"esh you’re a":[6551],"sh you’re at":[6551],"h you’re att":[6551]," you’re atta":[6551],"you’re attac":[6551],"ou’re attach":[6551],"u’re attache":[6551],"’re attached":[6551],"ttached to. ":[6551],"tached to. b":[6551],"ached to. by":[6551],"ched to. by ":[6551],"hed to. by d":[6551],"ed to. by de":[6551],"d to. by def":[6551]," to. by defa":[6551],"to. by defau":[6551],"o. by defaul":[6551]," default, it":[6551],"default, it’":[6551],"efault, it’s":[6551],"fault, it’s ":[6551],"ault, it’s *":[6551],"ult, it’s *(":[6551],"lt, it’s *(1":[6551],"t, it’s *(1,":[6551],", it’s *(1,0":[6551]," it’s *(1,0,":[6551],"it’s *(1,0,0":[6551],"t’s *(1,0,0)":[6551],"’s *(1,0,0)*":[6551],"s *(1,0,0)*.":[6551],"with this sa":[6552],"ith this sam":[6552],"th this samp":[6552],"his sample f":[6552],"is sample fr":[6552],"s sample fro":[6552]," sample from":[6552],"sample from ":[6552],"e from our p":[6552]," from our pl":[6552],"from our pla":[6552],"rom our play":[6552],"om our playg":[6552],"m our playgr":[6552],"yground to b":[6552],"ground to be":[6552],"round to bet":[6552],"ound to bett":[6552],"und to bette":[6552],"nd to better":[6552],"d to better ":[6552]," to better u":[6552],"to better un":[6552],"o better und":[6552],"rstand the o":[6552],"stand the ou":[6552],"tand the out":[6552],"and the outp":[6552],"nd the outpu":[6552],"d the output":[6552]," the output:":[6552],"the output: ":[6552],"und.com/#1bo":[6553],"nd.com/#1bo0":[6553],"d.com/#1bo0y":[6553],".com/#1bo0ys":[6553],"com/#1bo0ys ":[6553],"om/#1bo0ys #":[6553],"m/#1bo0ys ##":[6553],"/#1bo0ys ###":[6553],"e into the 3":[6554]," into the 3d":[6554],"into the 3d ":[6554],"nto the 3d s":[6554],"to the 3d sc":[6554],"o the 3d sce":[6554]," the 3d scen":[6554],"the 3d scene":[6554],"he 3d scene.":[6554],"e 3d scene. ":[6554]," 3d scene. i":[6554],"3d scene. if":[6554],"d scene. if ":[6554]," scene. if y":[6554],"scene. if yo":[6554],"cene. if you":[6554],"ene. if you’":[6554],"ne. if you’r":[6554],"e. if you’re":[6554]," if you’re i":[6554],"if you’re in":[6554],"f you’re ins":[6554]," you’re insi":[6554],"you’re insid":[6554],"ou’re inside":[6554],"u’re inside ":[6554],"’re inside t":[6554],"re inside th":[6554],"nside the sp":[6554],"side the spa":[6554],"ide the spac":[6554],"de the space":[6554],"e the space ":[6554]," the space d":[6554],"the space de":[6554],"he space def":[6554],"e space defi":[6554]," space defin":[6554],"space define":[6554],"pace defined":[6554],"ace defined ":[6554],"ce defined b":[6554],"ned by the g":[6554],"ed by the gr":[6554],"d by the gre":[6554]," by the grey":[6554],"by the grey ":[6554],"y the grey c":[6554]," the grey co":[6554],"the grey con":[6554],"he grey cone":[6554],"e grey cone,":[6554]," grey cone, ":[6554],"grey cone, y":[6554],"rey cone, yo":[6554],"ey cone, you":[6554],"y cone, you ":[6554]," cone, you s":[6554],"cone, you sh":[6554],"one, you sho":[6554],"ne, you shou":[6554],"e, you shoul":[6554],"ou should he":[6554],"u should hea":[6554]," should hear":[6554],"should hear ":[6554],"hould hear t":[6554],"ould hear th":[6554],"uld hear the":[6554],"ld hear the ":[6554],"d hear the m":[6554]," hear the mu":[6554],"hear the mus":[6554],"ear the musi":[6554],"ar the music":[6554],"r the music,":[6554]," the music, ":[6554],"the music, i":[6554],"he music, if":[6554],"e music, if ":[6554]," music, if n":[6554],"music, if no":[6554],"usic, if not":[6554],"sic, if not ":[6554],"ic, if not y":[6554],"c, if not yo":[6554],", if not you":[6554]," if not you’":[6554],"if not you’l":[6554],"f not you’ll":[6554]," not you’ll ":[6554],"not you’ll n":[6554],"ot you’ll no":[6554],"t you’ll not":[6554]," you’ll not ":[6554],"you’ll not h":[6554],"ou’ll not he":[6554],"u’ll not hea":[6554],"’ll not hear":[6554],"ll not hear ":[6554],"l not hear i":[6554]," not hear it":[6554],"not hear it ":[6554],"ot hear it a":[6554],"t hear it as":[6554]," hear it as ":[6554],"hear it as t":[6554],"ear it as th":[6554],"ar it as the":[6554],"r it as the ":[6554]," it as the *":[6554],"it as the **":[6554],"t as the **c":[6554]," as the **co":[6554],"as the **con":[6554],"s the **cone":[6554]," the **coneo":[6554],"the **coneou":[6554],"he **coneout":[6554],"e **coneoute":[6554],"outergain** ":[6554],"utergain** i":[6554],"tergain** is":[6554],"ergain** is ":[6554],"rgain** is s":[6554],"gain** is se":[6554],"ain** is set":[6554],"in** is set ":[6554],"n** is set t":[6554],"is set to 0.":[6554],"s set to 0. ":[6554],"# creating y":[6555],"g your own c":[6555],"your own cus":[6555],"our own cust":[6555],"ur own custo":[6555],"r own custom":[6555]," own custom ":[6555],"own custom a":[6555],"wn custom at":[6555],"n custom att":[6555]," custom atte":[6555,6556,6557,6558,6563,6566,6576],"custom atten":[6555,6556,6557,6558,6563,6566,6576],"ustom attenu":[6555,6556,6557,6558,6563,6566,6576],"stom attenua":[6555,6556,6557,6558,6563,6566,6576],"tom attenuat":[6555,6556,6557,6558,6563,6566,6576],"om attenuati":[6555,6556,6557,6558,6563,6566,6576],"m attenuatio":[6555,6556,6557,6558,6563,6566,6576],"ttenuation f":[6555,6556,6563,6566],"tenuation fu":[6555,6556,6563,6566],"enuation fun":[6555,6556,6563,6566],"nuation func":[6555,6556,6563,6566],"uation funct":[6555,6556,6563,6566],"on function#":[6555],"n function##":[6555],"u want to ma":[6556,6717]," want to man":[6556],"want to mana":[6556],"ant to manag":[6556],"nt to manage":[6556]," to manage t":[6556],"to manage th":[6556],"o manage the":[6556]," manage the ":[6556],"manage the a":[6556],"anage the at":[6556],"nage the att":[6556],"age the atte":[6556],"ge the atten":[6556],"ttenuation (":[6556],"tenuation (o":[6556],"enuation (or":[6556],"nuation (or ":[6556],"uation (or d":[6556],"ation (or di":[6556],"tion (or dis":[6556],"ion (or dist":[6556],"on (or dista":[6556],"n (or distan":[6556]," (or distanc":[6556],"(or distance":[6556],"or distance ":[6556],"r distance m":[6556],"distance mod":[6556],"istance mode":[6556],"stance model":[6556],"tance model ":[6556],"ance model i":[6556],"nce model in":[6556],"ce model in ":[6556],"e model in w":[6556]," model in we":[6556],"model in web":[6556],"odel in web ":[6556],"del in web a":[6556],"el in web au":[6556],"l in web aud":[6556]," in web audi":[6556],"in web audio":[6556],"n web audio)":[6556]," web audio) ":[6556],"web audio) u":[6556],"eb audio) us":[6556],"b audio) usi":[6556]," audio) usin":[6556],"audio) using":[6556],"udio) using ":[6556],"dio) using a":[6556],"io) using a ":[6556],"o) using a s":[6556],") using a sp":[6556]," using a spe":[6556],"using a spec":[6556],"sing a speci":[6556]," specific al":[6556],"specific alg":[6556],"pecific algo":[6556],"ecific algor":[6556],"cific algori":[6556],"ific algorit":[6556],"fic algorith":[6556],"ic algorithm":[6556],"c algorithm,":[6556]," algorithm, ":[6556],"algorithm, y":[6556],"lgorithm, yo":[6556],"gorithm, you":[6556],"orithm, you ":[6556],"rithm, you c":[6556],"ithm, you ca":[6556],"thm, you can":[6556],"hm, you can ":[6556],"m, you can b":[6556],", you can by":[6556]," you can by-":[6556],"you can by-p":[6556],"ou can by-pa":[6556],"u can by-pas":[6556]," can by-pass":[6556],"can by-pass ":[6556],"an by-pass t":[6556],"n by-pass th":[6556]," by-pass the":[6556],"by-pass the ":[6556],"y-pass the n":[6556],"-pass the na":[6556],"pass the nat":[6556],"ass the nati":[6556],"ss the nativ":[6556],"the native w":[6556],"he native we":[6556],"e native web":[6556]," native web ":[6556],"native web a":[6556],"ative web au":[6556],"tive web aud":[6556],"ive web audi":[6556],"ve web audio":[6556],"e web audio ":[6556]," web audio a":[6556],"web audio at":[6556],"eb audio att":[6556],"b audio atte":[6556]," audio atten":[6556],"audio attenu":[6556],"udio attenua":[6556],"dio attenuat":[6556],"io attenuati":[6556],"o attenuatio":[6556],"ttenuation u":[6556],"tenuation us":[6556],"enuation usi":[6556],"nuation usin":[6556],"uation using":[6556],"tion using b":[6556],"ion using ba":[6556],"on using bab":[6556],"n using baby":[6556],"abylon.js cu":[6556],"bylon.js cus":[6556],"ylon.js cust":[6556],"lon.js custo":[6556],"on.js custom":[6556],"n.js custom ":[6556],".js custom a":[6556],"js custom at":[6556],"s custom att":[6556],"on function.":[6556,6566],"*note:** web":[6557],"note:** web ":[6557],"ote:** web a":[6557],"te:** web au":[6557],"e:** web aud":[6557],":** web audi":[6557],"** web audio":[6557],"* web audio ":[6557]," web audio i":[6557,6576],"web audio is":[6557],"eb audio is ":[6557],"b audio is “":[6557]," audio is “*":[6557],"audio is “*h":[6557],"udio is “*ha":[6557],"dio is “*har":[6557],"io is “*hard":[6557],"o is “*hardw":[6557]," is “*hardwa":[6557],"is “*hardwar":[6557],"s “*hardware":[6557]," “*hardware ":[6557],"“*hardware a":[6557],"*hardware ac":[6557],"accelerated*":[6557],"ccelerated*”":[6557],"celerated*”.":[6557],"elerated*”. ":[6557],"lerated*”. i":[6557],"erated*”. it":[6557],"rated*”. it ":[6557],"ated*”. it m":[6557],"ted*”. it me":[6557],"ed*”. it mea":[6557],"d*”. it mean":[6557],"*”. it means":[6557],"”. it means ":[6557],". it means i":[6557]," it means it":[6557],"it means it’":[6557],"t means it’s":[6557]," means it’s ":[6557],"means it’s m":[6557],"eans it’s ma":[6557],"ans it’s mai":[6557],"ns it’s main":[6557],"s it’s mainl":[6557]," it’s mainly":[6557],"it’s mainly ":[6557],"t’s mainly h":[6557],"’s mainly ha":[6557],"s mainly han":[6557]," mainly hand":[6557],"mainly handl":[6557],"ainly handle":[6557],"inly handled":[6557],"nly handled ":[6557],"ly handled b":[6557],"y handled by":[6557],"handled by a":[6557],"andled by a ":[6557],"ndled by a d":[6557],"dled by a de":[6557],"led by a ded":[6557],"ed by a dedi":[6557],"d by a dedic":[6557]," by a dedica":[6557],"by a dedicat":[6557],"y a dedicate":[6557]," dedicated a":[6557],"dedicated au":[6557],"edicated aud":[6557],"dicated audi":[6557],"icated audio":[6557],"cated audio ":[6557],"ated audio c":[6557],"ted audio ch":[6557],"ed audio chi":[6557],"d audio chip":[6557]," audio chip ":[6557],"audio chip o":[6557],"udio chip on":[6557],"dio chip on ":[6557],"io chip on y":[6557],"o chip on yo":[6557]," chip on you":[6557],"chip on your":[6557],"hip on your ":[6557],"ip on your d":[6557],"p on your de":[6557]," on your dev":[6557],"on your devi":[6557],"n your devic":[6557]," your device":[6557],"your device ":[6557],"our device v":[6557],"ur device vi":[6557],"r device via":[6557]," device via ":[6557],"device via n":[6557],"evice via na":[6557],"vice via nat":[6557],"ice via nati":[6557],"ce via nativ":[6557],"e via native":[6557]," via native ":[6557],"via native c":[6557],"ia native co":[6557],"a native cod":[6557]," native code":[6557],"native code ":[6557],"ative code (":[6557],"tive code (t":[6557],"ive code (th":[6557],"ve code (the":[6557],"e code (the ":[6557]," code (the b":[6557],"code (the br":[6557],"ode (the bro":[6557],"de (the brow":[6557],"e (the brows":[6557]," (the browse":[6557],"(the browser":[6557],"the browser)":[6557],"he browser).":[6557],"e browser). ":[6557]," browser). t":[6557],"browser). th":[6557],"rowser). thi":[6557],"owser). this":[6557],"wser). this ":[6557],"ser). this t":[6557],"er). this th":[6557],"r). this the":[6557],"). this then":[6557],". this then ":[6557]," this then a":[6557],"this then al":[6557],"his then alm":[6557],"is then almo":[6557],"s then almos":[6557]," then almost":[6557],"then almost ":[6557],"hen almost c":[6557],"en almost co":[6557],"n almost cos":[6557]," almost cost":[6557],"almost costs":[6557],"lmost costs ":[6557],"most costs n":[6557],"ost costs no":[6557],"st costs not":[6557],"t costs noth":[6557]," costs nothi":[6557],"costs nothin":[6557],"osts nothing":[6557],"sts nothing ":[6557],"ts nothing o":[6557],"s nothing on":[6557]," nothing on ":[6557],"nothing on t":[6557],"othing on th":[6557],"ng on the pe":[6557],"g on the per":[6557]," on the perf":[6557],"on the perfo":[6557],"n the perfor":[6557],"erformance s":[6557],"rformance si":[6557],"formance sid":[6557],"ormance side":[6557],"rmance side ":[6557],"mance side f":[6557],"ance side fo":[6557],"nce side for":[6557],"ce side for ":[6557],"e side for 3":[6557]," side for 3d":[6557],"side for 3d ":[6557],"ide for 3d r":[6557],"de for 3d re":[6557],"e for 3d rea":[6557]," for 3d real":[6557],"for 3d real-":[6557],"or 3d real-t":[6557],"r 3d real-ti":[6557]," 3d real-tim":[6557],"3d real-time":[6557],"d real-time ":[6557]," real-time r":[6557],"real-time re":[6557],"eal-time ren":[6557],"al-time rend":[6557],"l-time rende":[6557],"-time render":[6557],"time renderi":[6557],"ime renderin":[6557],"me rendering":[6557]," rendering. ":[6557],"rendering. s":[6557],"endering. sw":[6557],"ndering. swi":[6557],"dering. swit":[6557],"ering. switc":[6557],"ring. switch":[6557],"ing. switchi":[6557],"ng. switchin":[6557],"g. switching":[6557],". switching ":[6557]," switching t":[6557],"switching to":[6557],"witching to ":[6557],"itching to c":[6557],"tching to cu":[6557],"ching to cus":[6557],"hing to cust":[6557],"ing to custo":[6557],"ng to custom":[6557],"g to custom ":[6557]," to custom a":[6557],"to custom at":[6557],"o custom att":[6557],"enuation wil":[6557,6558],"nuation will":[6557,6558],"uation will ":[6557,6558],"ation will u":[6557],"tion will us":[6557],"ion will use":[6557],"on will use ":[6557],"n will use b":[6557]," will use ba":[6557],"will use bab":[6557],"ill use baby":[6557],"ll use babyl":[6557],"l use babylo":[6557]," use babylon":[6557],"abylon.js di":[6557],"bylon.js dis":[6557],"ylon.js dist":[6557],"lon.js dista":[6557],"on.js distan":[6557],"n.js distanc":[6557],".js distance":[6557],"js distance ":[6557],"s distance c":[6557]," distance co":[6557],"distance com":[6557],"istance comp":[6557],"stance compu":[6557],"tance comput":[6557],"ance computa":[6557],"nce computat":[6557],"omputation b":[6557],"mputation ba":[6557],"putation bas":[6557],"utation base":[6557],"tation based":[6557],"ation based ":[6557],"n based on j":[6557]," based on ja":[6557],"based on jav":[6557],"ased on java":[6557],"sed on javas":[6557],"ed on javasc":[6557],"d on javascr":[6557],"script and w":[6557],"cript and wi":[6557],"ript and wil":[6557],"ipt and will":[6557],"pt and will ":[6557],"t and will b":[6557]," and will be":[6557],"and will be ":[6557],"nd will be s":[6557],"d will be sl":[6557]," will be slo":[6557],"will be slow":[6557],"ill be slowe":[6557],"ll be slower":[6557],"l be slower.":[6557]," be slower. ":[6557],"eover, the c":[6558],"over, the cu":[6558],"ver, the cus":[6558],"er, the cust":[6558],"r, the custo":[6558],", the custom":[6558],"the custom a":[6558],"he custom at":[6558],"e custom att":[6558],"ation will o":[6558],"tion will on":[6558],"ion will onl":[6558],"on will only":[6558],"n will only ":[6558],"l only works":[6558]," only works ":[6558],"only works o":[6558],"nly works on":[6558],"ly works on ":[6558],"y works on s":[6558]," works on sp":[6558],"works on spa":[6558],"orks on spat":[6558],"rks on spati":[6558],"ks on spatia":[6558],"s on spatial":[6558]," on spatial ":[6558],"on spatial s":[6558],"n spatial so":[6558],"ial sounds (":[6558],"al sounds (o":[6558],"l sounds (ob":[6558]," sounds (obv":[6558],"sounds (obvi":[6558],"ounds (obvio":[6558],"unds (obviou":[6558],"nds (obvious":[6558],"ds (obviousl":[6558],"s (obviously":[6558]," (obviously)":[6558],"(obviously) ":[6558],"obviously) b":[6558],"bviously) bu":[6558],"viously) but":[6558],"iously) but ":[6558],"ously) but a":[6558],"usly) but al":[6558],"sly) but als":[6558],"ly) but also":[6558],"y) but also ":[6558],") but also o":[6558]," but also on":[6558],"but also on ":[6558],"ut also on s":[6558],"t also on so":[6558]," also on sou":[6558],"also on soun":[6558],"lso on sound":[6558],"so on sound ":[6558],"o on sound c":[6558]," on sound co":[6558],"on sound con":[6558],"n sound conn":[6558]," sound conne":[6558],"sound connec":[6558],"ound connect":[6558],"und connecte":[6558],"nd connected":[6558],"d connected ":[6558]," connected t":[6558],"connected to":[6558],"onnected to ":[6558],"nnected to a":[6558],"nected to a ":[6558],"ected to a b":[6558],"cted to a ba":[6558],"ted to a bab":[6558],"ed to a baby":[6558],"d to a babyl":[6558]," to a babylo":[6558],"abylon.js me":[6558],"bylon.js mes":[6558],"ylon.js mesh":[6558],"lon.js mesh.":[6558],"on.js mesh. ":[6558],"n.js mesh. t":[6558],".js mesh. th":[6558],"js mesh. tha":[6558],"s mesh. that":[6558]," mesh. that ":[6558],"mesh. that s":[6558],"esh. that sa":[6558],"sh. that sai":[6558],"h. that said":[6558],". that said,":[6558]," that said, ":[6558],"that said, l":[6558],"hat said, le":[6558],"at said, let":[6558],"t said, let’":[6558]," said, let’s":[6558],"said, let’s ":[6558],"aid, let’s n":[6558],"id, let’s no":[6558],"d, let’s now":[6558],", let’s now ":[6558]," let’s now v":[6558],"let’s now vi":[6558],"et’s now vie":[6558],"t’s now view":[6558],"’s now view ":[6558],"s now view t":[6558]," now view th":[6558],"now view the":[6558],"ow view the ":[6558],"w view the c":[6558]," view the co":[6558],"view the cod":[6558],"iew the code":[6558],"ew the code ":[6558],"w the code t":[6558],"he code to d":[6558],"e code to do":[6558]," code to do ":[6558],"code to do t":[6558],"ode to do th":[6558],"de to do tha":[6558],"e to do that":[6558]," to do that.":[6558],"to do that. ":[6558],"o do that. f":[6558]," do that. fi":[6558],"do that. fir":[6558],"o that. firs":[6558]," that. first":[6558],"that. first,":[6558],"hat. first, ":[6558],"at. first, y":[6558],"t. first, yo":[6558],". first, you":[6558]," first, you ":[6558],"first, you m":[6558],"irst, you mu":[6558],"rst, you mus":[6558],"st, you must":[6558],"st specify i":[6558],"t specify it":[6558]," specify it ":[6558],"specify it i":[6558],"pecify it in":[6558],"ecify it in ":[6558],"cify it in t":[6558],"ify it in th":[6558],"fy it in the":[6558]," it in the o":[6558],"it in the op":[6558],"t in the opt":[6558]," in the opti":[6558],"in the optio":[6558],"n the option":[6558],"/ create and":[6560],"create and l":[6560],"reate and lo":[6560],"eate and loa":[6560],"ate and load":[6560],"te and load ":[6560],"e and load t":[6560]," and load th":[6560],"and load the":[6560],"nd load the ":[6560],"d load the s":[6560],"the sound as":[6560],"he sound asy":[6560],"e sound asyn":[6560]," sound async":[6560],"lay: true, u":[6561],"ay: true, us":[6561],"y: true, use":[6561],": true, usec":[6561]," true, usecu":[6561],"true, usecus":[6561],"rue, usecust":[6561],"ue, usecusto":[6561],"e, usecustom":[6561],", usecustoma":[6561]," usecustomat":[6561],"usecustomatt":[6561],"secustomatte":[6561],"ecustomatten":[6561],"customattenu":[6561],"ustomattenua":[6561],"stomattenuat":[6561],"tomattenuati":[6561],"omattenuatio":[6561],"mattenuation":[6561],"attenuation:":[6561],"ttenuation: ":[6561],"tenuation: t":[6561],"enuation: tr":[6561],"nuation: tru":[6561],"uation: true":[6561],"ation: true ":[6561],"tion: true }":[6561],"ion: true })":[6561],"on: true });":[6561],"you’ll switc":[6563],"ou’ll switch":[6563],"u’ll switch ":[6563],"’ll switch t":[6563],"ll switch to":[6563],"l switch to ":[6563]," switch to i":[6563],"switch to in":[6563],"witch to int":[6563],"itch to inte":[6563],"tch to inter":[6563],"ch to intern":[6563],"h to interna":[6563]," to internal":[6563],"to internal ":[6563],"o internal b":[6563]," internal ba":[6563],"internal bab":[6563],"nternal baby":[6563],"ternal babyl":[6563],"ernal babylo":[6563],"rnal babylon":[6563],"nal babylon.":[6563],"abylon.js ma":[6563],"bylon.js mat":[6563],"ylon.js math":[6563],"lon.js math ":[6563],"on.js math c":[6563],"n.js math co":[6563],".js math com":[6563],"js math comp":[6563],"s math compu":[6563],"math computa":[6563],"ath computat":[6563],"th computati":[6563],"h computatio":[6563],"omputations.":[6563],"mputations. ":[6563],"putations. t":[6563],"utations. th":[6563],"tations. the":[6563],"ations. the ":[6563],"tions. the d":[6563],"ions. the de":[6563],"ons. the def":[6563],"ns. the defa":[6563],"e default cu":[6563]," default cus":[6563],"default cust":[6563],"efault custo":[6563],"fault custom":[6563],"ault custom ":[6563],"ult custom a":[6563],"lt custom at":[6563],"t custom att":[6563],"n function i":[6563],"ction is a l":[6563],"tion is a li":[6563],"ion is a lin":[6563],"on is a line":[6563],"n is a linea":[6563]," is a linear":[6563],"is a linear ":[6563],"s a linear o":[6563]," a linear on":[6563],"a linear one":[6563]," linear one.":[6563],"linear one. ":[6563],"e your own l":[6564]," your own lo":[6564],"your own log":[6564],"our own logi":[6564],"ur own logic":[6564],"r own logic ":[6564]," own logic y":[6564],"own logic yo":[6564],"wn logic you":[6564],"n logic you ":[6564]," logic you n":[6564],"logic you ne":[6564],"ogic you nee":[6564],"gic you need":[6564],"ic you need ":[6564],"c you need s":[6564]," you need su":[6564],"you need suc":[6564],"ou need such":[6564],"u need such ":[6564]," need such c":[6564],"need such co":[6564],"eed such cod":[6564],"ed such code":[6564],"d such code:":[6564],"/ creating c":[6566],"ing custom a":[6566],"ng custom at":[6566],"g custom att":[6566],"n function. ":[6566]," function. n":[6566],"function. ne":[6566],"unction. nea":[6566],"nction. near":[6566],"ction. near ":[6566],"tion. near t":[6566],"ion. near th":[6566],"on. near the":[6566],"n. near the ":[6566],". near the o":[6566]," near the ob":[6566],"near the obj":[6566],"ear the obje":[6566],"ar the objec":[6566],"he object, v":[6566],"e object, vo":[6566]," object, vol":[6566],"object, volu":[6566],"bject, volum":[6566],"ject, volume":[6566],"ect, volume ":[6566],"ct, volume i":[6566],"t, volume is":[6566],", volume is ":[6566]," volume is a":[6566],"volume is al":[6566],"olume is alm":[6566],"lume is almo":[6566],"ume is almos":[6566],"me is almost":[6566],"e is almost ":[6566]," is almost 0":[6566],"is almost 0.":[6566],"// the fares":[6567],"/ the farest":[6567]," the farest,":[6567],"the farest, ":[6567],"he farest, t":[6567],"e farest, th":[6567]," farest, the":[6567],"farest, the ":[6567],"arest, the l":[6567],"rest, the lo":[6567],"est, the lou":[6567],"st, the loud":[6567],"t, the loude":[6567],", the louder":[6567],"music.setatt":[6568],"usic.setatte":[6568],"sic.setatten":[6568],"ic.setattenu":[6568],"c.setattenua":[6568],".setattenuat":[6568],"setattenuati":[6568],"etattenuatio":[6568],"tattenuation":[6568],"attenuationf":[6568],"ttenuationfu":[6568],"tenuationfun":[6568],"enuationfunc":[6568],"nuationfunct":[6568],"uationfuncti":[6568],"ionfunction(":[6568],"onfunction(f":[6568],"nfunction(fu":[6568],"function(fun":[6568],"unction(func":[6568],"nction(funct":[6568],"ction(functi":[6568],"tion(functio":[6568],"ion(function":[6568],"on(function ":[6568],"n(function (":[6568],"(function (c":[6568],"function (cu":[6568],"unction (cur":[6568],"nction (curr":[6568],"ction (curre":[6568],"tion (curren":[6568],"ion (current":[6568],"on (currentv":[6568],"n (currentvo":[6568]," (currentvol":[6568],"(currentvolu":[6568],"currentvolum":[6568,6569],"urrentvolume":[6568,6569],"rrentvolume,":[6568],"rentvolume, ":[6568],"entvolume, c":[6568],"ntvolume, cu":[6568],"tvolume, cur":[6568],"volume, curr":[6568],"olume, curre":[6568],"lume, curren":[6568],"ume, current":[6568],"me, currentd":[6568],"e, currentdi":[6568],", currentdis":[6568]," currentdist":[6568,6569],"currentdista":[6568,6569],"urrentdistan":[6568,6569],"rrentdistanc":[6568,6569],"rentdistance":[6568,6569],"entdistance,":[6568],"ntdistance, ":[6568],"tdistance, m":[6568],"distance, ma":[6568],"istance, max":[6568],"stance, maxd":[6568],"tance, maxdi":[6568],"ance, maxdis":[6568],"nce, maxdist":[6568],"ce, maxdista":[6568],"e, maxdistan":[6568],", maxdistanc":[6568]," maxdistance":[6568,6569],"maxdistance,":[6568],"axdistance, ":[6568],"xdistance, r":[6568],"distance, re":[6568],"istance, ref":[6568],"stance, refd":[6568],"tance, refdi":[6568],"ance, refdis":[6568],"nce, refdist":[6568],"ce, refdista":[6568],"e, refdistan":[6568],", refdistanc":[6568]," refdistance":[6568],"refdistance,":[6568],"efdistance, ":[6568],"fdistance, r":[6568],"distance, ro":[6568],"istance, rol":[6568],"stance, roll":[6568],"tance, rollo":[6568],"ance, rollof":[6568],"nce, rolloff":[6568],"ce, rollofff":[6568],"e, rollofffa":[6568],"llofffactor)":[6568],"lofffactor) ":[6568],"offfactor) {":[6568],"    return c":[6569],"   return cu":[6569],"  return cur":[6569]," return curr":[6569],"return curre":[6569],"eturn curren":[6569],"turn current":[6569],"urn currentv":[6569],"rn currentvo":[6569],"n currentvol":[6569]," currentvolu":[6569],"rrentvolume ":[6569],"rentvolume *":[6569],"entvolume * ":[6569],"ntvolume * c":[6569],"tvolume * cu":[6569],"volume * cur":[6569],"olume * curr":[6569],"lume * curre":[6569],"ume * curren":[6569],"me * current":[6569],"e * currentd":[6569]," * currentdi":[6569],"* currentdis":[6569],"entdistance ":[6569],"ntdistance /":[6569],"tdistance / ":[6569],"distance / m":[6569],"istance / ma":[6569],"stance / max":[6569],"tance / maxd":[6569],"ance / maxdi":[6569],"nce / maxdis":[6569],"ce / maxdist":[6569],"e / maxdista":[6569]," / maxdistan":[6569],"/ maxdistanc":[6569],"maxdistance;":[6569],"ay with thes":[6572],"y with these":[6572]," with these ":[6572],"with these 5":[6572],"ith these 5 ":[6572],"th these 5 p":[6572],"h these 5 pa":[6572]," these 5 par":[6572],"these 5 para":[6572],"hese 5 param":[6572],"ese 5 parame":[6572],"se 5 paramet":[6572],"e 5 paramete":[6572]," 5 parameter":[6572],"5 parameters":[6572],"meters and d":[6572],"eters and do":[6572],"ters and do ":[6572],"ers and do w":[6572],"rs and do wh":[6572],"s and do wha":[6572]," and do what":[6572],"and do whate":[6572],"nd do whatev":[6572],"d do whateve":[6572]," do whatever":[6572],"hatever you’":[6572],"atever you’d":[6572],"tever you’d ":[6572],"ever you’d l":[6572],"ver you’d li":[6572],"er you’d lik":[6572],"r you’d like":[6572],"you’d like w":[6572],"ou’d like wi":[6572],"u’d like wit":[6572],"’d like with":[6572],"d like with ":[6572]," like with i":[6572],"like with it":[6572],"ike with it.":[6572],"ke with it. ":[6572],"e with it. s":[6572]," with it. si":[6572],"with it. sim":[6572],"ith it. simp":[6572],"th it. simpl":[6572],"h it. simply":[6572]," it. simply ":[6572],"it. simply r":[6572],"t. simply re":[6572],". simply ret":[6572],"mply return ":[6572],"ply return a":[6572],"ly return a ":[6572],"y return a n":[6572]," return a nu":[6572],"return a num":[6572],"eturn a numb":[6572],"turn a numbe":[6572],"urn a number":[6572],"rn a number ":[6572],"n a number t":[6572]," a number th":[6572],"a number tha":[6572]," number that":[6572],"number that ":[6572],"umber that w":[6572],"mber that wi":[6572],"ber that wil":[6572],"er that will":[6572],"at will be t":[6572],"t will be th":[6572],"ill be the v":[6572],"ll be the vo":[6572],"l be the vol":[6572]," be the volu":[6572],"be the volum":[6572],"e the volume":[6572,6613],"the volume a":[6572],"he volume ap":[6572],"e volume app":[6572]," volume appl":[6572],"volume appli":[6572],"olume applie":[6572],"lume applied":[6572],"ume applied ":[6572],"me applied t":[6572],"ed to the so":[6572],"d to the sou":[6572]," to the soun":[6572],"to the sound":[6572],"o the sound.":[6572],"ample, the l":[6573],"mple, the lo":[6573],"ple, the log":[6573],"le, the logi":[6573],"e, the logic":[6573],", the logic ":[6573]," the logic i":[6573],"the logic is":[6573],"he logic is ":[6573],"e logic is a":[6573]," logic is a ":[6573],"logic is a b":[6573],"ogic is a bi":[6573],"gic is a bit":[6573],"ic is a bit ":[6573],"c is a bit w":[6573]," is a bit we":[6573],"is a bit wei":[6573],"s a bit weir":[6573]," a bit weird":[6573],"a bit weird ":[6573]," bit weird a":[6573],"bit weird as":[6573],"it weird as ":[6573],"t weird as t":[6573]," weird as th":[6573],"weird as the":[6573],"eird as the ":[6573],"ird as the v":[6573],"rd as the vo":[6573],"d as the vol":[6573]," as the volu":[6573],"as the volum":[6573],"s the volume":[6573],"the volume i":[6573],"he volume is":[6573],"e volume is ":[6573]," volume is l":[6573],"volume is lo":[6573],"olume is lou":[6573],"lume is loud":[6573],"ume is loude":[6573],"me is louder":[6573],"e is louder ":[6573]," is louder t":[6573],"is louder th":[6573],"s louder the":[6573]," louder the ":[6573],"louder the f":[6573],"ouder the fa":[6573],"uder the far":[6573],"der the fart":[6573],"er the farth":[6573],"r the farthe":[6573]," the farther":[6573],"the farther ":[6573],"he farther y":[6573],"e farther yo":[6573]," farther you":[6573],"farther you ":[6573],"arther you a":[6573],"rther you ar":[6573],"ther you are":[6573],"her you are ":[6573],"er you are f":[6573],"r you are fr":[6573]," you are fro":[6573],"you are from":[6573],"ou are from ":[6573],"u are from t":[6573]," are from th":[6573],"are from the":[6573],"re from the ":[6573],"om the mesh.":[6573],"m the mesh. ":[6573]," the mesh. ;":[6573],"the mesh. ;-":[6573],"he mesh. ;-)":[6573],"lay with it ":[6574],"ay with it i":[6574],"y with it in":[6574]," with it in ":[6574],"with it in o":[6574],"ith it in ou":[6574],"th it in our":[6574],"h it in our ":[6574]," it in our p":[6574],"it in our pl":[6574],"t in our pla":[6574],"ound.com/#1y":[6575],"und.com/#1yi":[6575],"nd.com/#1yix":[6575],"d.com/#1yixe":[6575],".com/#1yixeo":[6575],"com/#1yixeo ":[6575],"om/#1yixeo #":[6575],"m/#1yixeo ##":[6575],"/#1yixeo ###":[6575],"moreover, fi":[6576],"oreover, fir":[6576],"reover, fire":[6576],"eover, firef":[6576],"over, firefo":[6576],"ver, firefox":[6576],"er, firefox ":[6576],"r, firefox h":[6576],", firefox ha":[6576]," firefox has":[6576],"firefox has ":[6576],"irefox has c":[6576],"refox has cu":[6576],"efox has cur":[6576],"fox has curr":[6576],"ox has curre":[6576],"x has curren":[6576]," has current":[6576],"has currentl":[6576],"as currently":[6576],"currently a ":[6576],"urrently a b":[6576],"rrently a bu":[6576],"rently a bug":[6576],"ently a bug ":[6576],"ntly a bug i":[6576],"tly a bug in":[6576],"ly a bug in ":[6576],"y a bug in t":[6576]," a bug in th":[6576],"a bug in the":[6576]," bug in thei":[6576],"bug in their":[6576],"ug in their ":[6576],"g in their w":[6576]," in their we":[6576],"in their web":[6576],"n their web ":[6576]," their web a":[6576],"their web au":[6576],"heir web aud":[6576],"eir web audi":[6576],"ir web audio":[6576],"r web audio ":[6576],"web audio im":[6576],"eb audio imp":[6576],"b audio impl":[6576]," audio imple":[6576],"audio implem":[6576],"udio impleme":[6576],"dio implemen":[6576],"io implement":[6576],"o implementa":[6576],"ementation i":[6576],"mentation in":[6576],"entation in ":[6576],"ntation in h":[6576],"tation in ha":[6576],"ation in han":[6576],"tion in hand":[6576],"ion in handl":[6576],"on in handli":[6576],"n in handlin":[6576]," in handling":[6576],"in handling ":[6576]," handling pr":[6576],"handling pro":[6576],"andling prop":[6576],"ndling prope":[6576],"dling proper":[6576],"ling properl":[6576],"ng properly ":[6576],"g properly l":[6576]," properly li":[6576],"properly lin":[6576],"roperly line":[6576],"operly linea":[6576],"perly linear":[6576],"erly linear ":[6576],"rly linear a":[6576],"ly linear at":[6576],"y linear att":[6576]," linear atte":[6576],"linear atten":[6576],"inear attenu":[6576],"near attenua":[6576],"ear attenuat":[6576],"ar attenuati":[6576],"r attenuatio":[6576],"tenuation. t":[6576],"enuation. th":[6576],"nuation. thi":[6576],"uation. this":[6576],"his can be f":[6576],"is can be fi":[6576],"s can be fix":[6576]," can be fixe":[6576],"can be fixed":[6576],"an be fixed ":[6576],"n be fixed b":[6576]," be fixed by":[6576],"be fixed by ":[6576],"e fixed by u":[6576]," fixed by us":[6576],"fixed by usi":[6576],"ixed by usin":[6576],"xed by using":[6576],"d by using t":[6576],"bylon.js def":[6576],"ylon.js defa":[6576],"lon.js defau":[6576],"on.js defaul":[6576],"n.js default":[6576],".js default ":[6576],"js default l":[6576],"s default li":[6576]," default lin":[6576],"default line":[6576],"efault linea":[6576],"fault linear":[6576],"ault linear ":[6576],"ult linear c":[6576],"lt linear cu":[6576],"t linear cus":[6576]," linear cust":[6576],"linear custo":[6576],"inear custom":[6576],"near custom ":[6576],"ear custom a":[6576],"ar custom at":[6576],"r custom att":[6576],"here’s a pre":[6577],"ere’s a prev":[6577],"re’s a previ":[6577],"e’s a previo":[6577],"’s a previou":[6577],"s a previous":[6577],"a previous s":[6577]," previous sa":[6577],"previous sam":[6577],"revious samp":[6577],"evious sampl":[6577],"vious sample":[6577],"ious sample ":[6577],"ous sample c":[6577],"us sample co":[6577],"ample code t":[6577],"mple code th":[6577],"ple code tha":[6577],"le code that":[6577]," code that n":[6577],"code that no":[6577],"ode that now":[6577],"de that now ":[6577],"e that now w":[6577]," that now wo":[6577],"that now wor":[6577],"hat now work":[6577],"at now works":[6577],"t now works ":[6577]," now works p":[6577],"now works pr":[6577],"ow works pro":[6577],"w works prop":[6577]," works prope":[6577],"works proper":[6577],"orks properl":[6577],"rks properly":[6577],"ks properly ":[6577],"s properly i":[6577]," properly in":[6577],"properly in ":[6577],"roperly in f":[6577],"operly in fi":[6577],"perly in fir":[6577],"erly in fire":[6577],"rly in firef":[6577],"ly in firefo":[6577],"y in firefox":[6577]," in firefox:":[6577],"in firefox: ":[6577],"com/#2ah4yh#":[6578],"om/#2ah4yh#2":[6578],"m/#2ah4yh#2 ":[6578],"/#2ah4yh#2 #":[6578],"#2ah4yh#2 ##":[6578],"2ah4yh#2 ###":[6578],"## manipulat":[6579],"# manipulati":[6579],"nipulating s":[6579],"ipulating so":[6579],"pulating sou":[6579],"ulating soun":[6579],"lating sound":[6579],"ating sound ":[6579],"ting sound l":[6579],"ing sound lo":[6579],"ng sound loa":[6579],"g sound load":[6579]," sound loade":[6579,6582],"sound loaded":[6579,6582],"ound loaded ":[6579,6582],"und loaded f":[6579],"nd loaded fr":[6579],"d loaded fro":[6579],"oaded from a":[6579],"aded from a ":[6579],"ded from a .":[6579],"ed from a .b":[6579],"d from a .ba":[6579]," from a .bab":[6579],"from a .baby":[6579],"rom a .babyl":[6579],"om a .babylo":[6579],"m a .babylon":[6579],"abylon file#":[6579],"bylon file##":[6579],"our *.babylo":[6580],"ur *.babylon":[6580],"r *.babylon*":[6580]," *.babylon* ":[6580,6582,6583],"*.babylon* f":[6580,6582],".babylon* fi":[6580,6582],"babylon* fil":[6580,6582],"abylon* file":[6580,6582],"bylon* file ":[6580],"ylon* file f":[6580],"lon* file fo":[6580],"on* file for":[6580],"n* file form":[6580],"* file forma":[6580],"ile format c":[6580],"le format ca":[6580],"e format can":[6580]," format can ":[6580],"format can d":[6580],"ormat can de":[6580],"rmat can des":[6580],"mat can desc":[6580],"at can descr":[6580],"t can descri":[6580]," can describ":[6580],"can describe":[6580],"an describe ":[6580],"n describe t":[6580],"scribe the s":[6580],"cribe the so":[6580],"ribe the sou":[6580],"ibe the soun":[6580],"be the sound":[6580],"e the sounds":[6580]," the sounds ":[6580],"the sounds t":[6580],"he sounds to":[6580],"e sounds to ":[6580]," sounds to l":[6580],"sounds to lo":[6580],"ounds to loa":[6580],"unds to load":[6580],"nds to load.":[6580],"ds to load. ":[6580],"s to load. i":[6580]," to load. it":[6580],"to load. it’":[6580],"o load. it’s":[6580]," load. it’s ":[6580],"load. it’s d":[6580],"oad. it’s do":[6580],"ad. it’s doc":[6580],"d. it’s docu":[6580],". it’s docum":[6580]," it’s docume":[6580],"it’s documen":[6580],"t’s document":[6580],"’s documente":[6580],"s documented":[6580]," documented ":[6580],"documented h":[6580],"ocumented he":[6580],"cumented her":[6580],"umented here":[6580],"mented here:":[6580],"ented here: ":[6580],"nted here: h":[6580],"ted here: ht":[6580],"ed here: htt":[6580],"re: http://d":[6580],"e: http://do":[6580],": http://doc":[6580]," http://doc.":[6580],"php?p=22661 ":[6580],"urrently onl":[6581],"rrently only":[6581],"rently only ":[6581],"ently only o":[6581],"ntly only ou":[6581],"tly only our":[6581],"ly only our ":[6581],"y only our 3":[6581]," only our 3d":[6581],"only our 3ds":[6581],"nly our 3ds ":[6581],"ly our 3ds m":[6581],"y our 3ds ma":[6581]," our 3ds max":[6581],"our 3ds max ":[6581],"ur 3ds max e":[6581],"r 3ds max ex":[6581]," 3ds max exp":[6581],"3ds max expo":[6581],"ds max expor":[6581],"s max export":[6581]," max exporte":[6581],"max exporter":[6581],"ax exporter ":[6581],"x exporter c":[6581]," exporter ca":[6581],"exporter can":[6581],"xporter can ":[6581],"porter can e":[6581],"orter can ex":[6581],"rter can exp":[6581],"ter can expo":[6581],"er can expor":[6581],"r can export":[6581]," can export ":[6581],"can export s":[6581],"an export so":[6581],"n export sou":[6581]," export soun":[6581],"export sound":[6581],"xport sounds":[6581],"port sounds ":[6581],"ort sounds d":[6581],"rt sounds di":[6581],"t sounds dir":[6581]," sounds dire":[6581],"sounds direc":[6581],"ounds direct":[6581],"unds directl":[6581],"nds directly":[6581],"ds directly ":[6581],"s directly t":[6581],"irectly to *":[6581],"rectly to *.":[6581],"ectly to *.b":[6581],"ctly to *.ba":[6581],"tly to *.bab":[6581],"ly to *.baby":[6581],"y to *.babyl":[6581]," to *.babylo":[6581],"to *.babylon":[6581],"o *.babylon*":[6581]," *.babylon*.":[6581],"*.babylon*. ":[6581]," access to a":[6582],"access to a ":[6582],"ccess to a s":[6582],"cess to a so":[6582],"ess to a sou":[6582],"ss to a soun":[6582],"s to a sound":[6582]," to a sound ":[6582],"to a sound l":[6582],"o a sound lo":[6582]," a sound loa":[6582],"a sound load":[6582],"und loaded b":[6582],"nd loaded by":[6582],"d loaded by ":[6582]," loaded by t":[6582],"loaded by th":[6582],"oaded by the":[6582],"aded by the ":[6582],"ded by the b":[6582],"abylon.js *.":[6582],"bylon.js *.b":[6582],"ylon.js *.ba":[6582],"lon.js *.bab":[6582],"on.js *.baby":[6582],"n.js *.babyl":[6582],".js *.babylo":[6582],"js *.babylon":[6582],"s *.babylon*":[6582],"bylon* filel":[6582],"ylon* filelo":[6582],"lon* fileloa":[6582],"on* fileload":[6582],"n* fileloade":[6582],"* fileloader":[6582]," fileloader,":[6582],"fileloader, ":[6582],"ileloader, y":[6582],"leloader, yo":[6582],"eloader, you":[6582],"loader, you ":[6582],"oader, you n":[6582],"ader, you ne":[6582],"der, you nee":[6582,6724],"er, you need":[6582,6724],"r, you need ":[6582,6724],"eed to use t":[6582],"ed to use th":[6582],"d to use the":[6582],"to use the *":[6582],"o use the *g":[6582]," use the *ge":[6582],"use the *get":[6582],"se the *gets":[6582],"e the *getso":[6582]," the *getsou":[6582],"the *getsoun":[6582],"he *getsound":[6582],"e *getsoundb":[6582]," *getsoundby":[6582],"*getsoundbyn":[6582],"getsoundbyna":[6582,6590],"etsoundbynam":[6582,6590],"tsoundbyname":[6582,6590],"soundbyname(":[6582,6590],"oundbyname()":[6582],"undbyname()*":[6582],"ndbyname()* ":[6582],"dbyname()* f":[6582],"byname()* fu":[6582],"yname()* fun":[6582],"name()* func":[6582],"ame()* funct":[6582],"unction on t":[6582],"nction on th":[6582],"ion on the s":[6582],"on on the sc":[6582],"n on the sce":[6582],"cene object.":[6582],"ene object. ":[6582],"ple sample l":[6583],"le sample lo":[6583],"e sample loa":[6583]," sample load":[6583],"sample loadi":[6583],"ample loadin":[6583],"mple loading":[6583],"ple loading ":[6583]," loading a *":[6583],"loading a *.":[6583],"oading a *.b":[6583],"ading a *.ba":[6583],"ding a *.bab":[6583],"ing a *.baby":[6583],"ng a *.babyl":[6583],"g a *.babylo":[6583]," a *.babylon":[6583],"a *.babylon*":[6583],"*.babylon* s":[6583],".babylon* sc":[6583],"babylon* sce":[6583],"abylon* scen":[6583],"bylon* scene":[6583],"ylon* scene ":[6583],"lon* scene f":[6583],"on* scene fi":[6583],"n* scene fil":[6583],"* scene file":[6583],"scene file e":[6583],"cene file em":[6583],"ene file emb":[6583],"ne file embe":[6583],"e file embed":[6583]," file embedd":[6583],"file embeddi":[6583],"ile embeddin":[6583],"le embedding":[6583],"e embedding ":[6583]," embedding s":[6583],"embedding so":[6583],"mbedding som":[6583],"bedding some":[6583],"edding some ":[6583],"dding some s":[6583],"ding some so":[6583],"ing some sou":[6583],"ng some soun":[6583],"g some sound":[6583]," some sounds":[6583],"some sounds:":[6583],"ader.load(\"t":[6587],"der.load(\"te":[6587],"er.load(\"tes":[6587],"r.load(\"test":[6587],".load(\"tests":[6587],"load(\"testsc":[6587],"oad(\"testsce":[6587],"ad(\"testscen":[6587],"d(\"testscene":[6587],"(\"testscene/":[6587],"\"testscene/\"":[6587],"testscene/\",":[6587],"estscene/\", ":[6587],"stscene/\", \"":[6587],"tscene/\", \"t":[6587],"scene/\", \"te":[6587],"cene/\", \"tes":[6587],"ene/\", \"test":[6587],"ne/\", \"tests":[6587],"e/\", \"testso":[6587],"/\", \"testsou":[6587],"\", \"testsoun":[6587],", \"testsound":[6587]," \"testsound.":[6587],"\"testsound.b":[6587],"testsound.ba":[6587],"estsound.bab":[6587],"stsound.baby":[6587],"tsound.babyl":[6587],"sound.babylo":[6587],"ound.babylon":[6587],"und.babylon\"":[6587],"nd.babylon\",":[6587],"d.babylon\", ":[6587],"    newscene":[6588],"   newscene.":[6588],"  newscene.e":[6588]," newscene.ex":[6588],"        news":[6589],"       newsc":[6589],"      newsce":[6589],"     newscen":[6589],"    newscene":[6589],"   newscene.":[6589],"  newscene.a":[6589],"       var g":[6590],"      var gu":[6590],"     var gun":[6590],"    var guns":[6590],"   var gunsh":[6590],"  var gunsho":[6590]," var gunshot":[6590],"var gunshots":[6590],"ar gunshotso":[6590],"r gunshotsou":[6590]," gunshotsoun":[6590,6592,6593],"gunshotsound":[6590,6592,6593],"unshotsound ":[6590],"nshotsound =":[6590],"shotsound = ":[6590],"hotsound = n":[6590],"otsound = ne":[6590],"tsound = new":[6590],"sound = news":[6590],"ound = newsc":[6590],"und = newsce":[6590],"nd = newscen":[6590],"d = newscene":[6590],"= newscene.g":[6590]," newscene.ge":[6590],"newscene.get":[6590],"ewscene.gets":[6590],"wscene.getso":[6590],"scene.getsou":[6590],"cene.getsoun":[6590],"ene.getsound":[6590],"ne.getsoundb":[6590],"e.getsoundby":[6590],".getsoundbyn":[6590],"oundbyname(\"":[6590],"undbyname(\"g":[6590],"ndbyname(\"gu":[6590],"dbyname(\"gun":[6590],"byname(\"guns":[6590],"yname(\"gunsh":[6590],"name(\"gunsho":[6590],"ame(\"gunshot":[6590],"me(\"gunshot-":[6590],"e(\"gunshot-1":[6590],"(\"gunshot-1.":[6590],"\"gunshot-1.w":[6590],"shot-1.wav\")":[6590],"hot-1.wav\");":[6590],"        wind":[6591],"       windo":[6591],"      window":[6591],"     window.":[6591],"    window.a":[6591],"   window.ad":[6591],"  window.add":[6591],"       if (e":[6592],"      if (ev":[6592],"     if (evt":[6592],"    if (evt.":[6592],"   if (evt.k":[6592],"  if (evt.ke":[6592]," if (evt.key":[6592],"code === 32 ":[6592],"ode === 32 &":[6592],"de === 32 &&":[6592],"e === 32 && ":[6592]," === 32 && g":[6592],"=== 32 && gu":[6592],"== 32 && gun":[6592],"= 32 && guns":[6592]," 32 && gunsh":[6592],"32 && gunsho":[6592],"2 && gunshot":[6592]," && gunshots":[6592],"&& gunshotso":[6592],"& gunshotsou":[6592],"unshotsound)":[6592],"nshotsound) ":[6592],"shotsound) {":[6592],"           g":[6593],"          gu":[6593],"         gun":[6593],"    gunshots":[6593],"   gunshotso":[6593],"  gunshotsou":[6593],"unshotsound.":[6593],"nshotsound.p":[6593],"shotsound.pl":[6593],"hotsound.pla":[6593],"otsound.play":[6593],"tsound.play(":[6593],"sound.play()":[6593],"ound.play();":[6593],"        engi":[6596],"       engin":[6596],"      engine":[6596],"     engine.":[6596],"    engine.r":[6596],"   engine.ru":[6596],"  engine.run":[6596],"           n":[6597],"          ne":[6597],"         new":[6597],"        news":[6597],"       newsc":[6597],"      newsce":[6597],"     newscen":[6597],"    newscene":[6597],"   newscene.":[6597],"  newscene.r":[6597],"    // to do":[6601],"   // to do:":[6601],"  // to do: ":[6601]," // to do: g":[6601],"he spacebar ":[6604],"e spacebar w":[6604]," spacebar wi":[6604],"spacebar wil":[6604],"pacebar will":[6604],"acebar will ":[6604],"cebar will p":[6604],"ebar will pl":[6604],"bar will pla":[6604],"ar will play":[6604],"r will play ":[6604],"l play the g":[6604]," play the gu":[6604],"play the gun":[6604],"lay the guns":[6604],"ay the gunsh":[6604],"y the gunsho":[6604]," the gunshot":[6604],"the gunshot ":[6604],"he gunshot s":[6604],"e gunshot so":[6604],"nshot sound.":[6604],"shot sound. ":[6604],"## using sou":[6605],"# using soun":[6605]," using sound":[6605],"using sound ":[6605],"sing sound t":[6605],"ing sound tr":[6605],"ng sound tra":[6605],"g sound trac":[6605]," sound track":[6605,6613,6614,6633],"sound tracks":[6605],"ound tracks#":[6605],"und tracks##":[6605],"it could be ":[6606],"t could be u":[6606],"ould be usef":[6606],"uld be usefu":[6606],"ld be useful":[6606],"d be useful ":[6606]," useful to i":[6606],"useful to is":[6606],"seful to iso":[6606],"eful to isol":[6606],"ful to isola":[6606],"ul to isolat":[6606],"l to isolate":[6606]," to isolate ":[6606],"to isolate y":[6606],"o isolate yo":[6606]," isolate you":[6606],"isolate your":[6606],"solate your ":[6606],"olate your m":[6606],"late your mu":[6606],"ate your mus":[6606],"te your musi":[6606],"e your music":[6606]," your music ":[6606],"your music &":[6606],"our music & ":[6606],"ur music & s":[6606],"r music & so":[6606]," music & sou":[6606],"music & soun":[6606],"usic & sound":[6606],"sic & sounds":[6606],"ic & sounds ":[6606],"c & sounds o":[6606]," & sounds on":[6606],"& sounds on ":[6606]," sounds on s":[6606],"sounds on se":[6606],"ounds on sev":[6606],"unds on seve":[6606],"nds on sever":[6606],"ds on severa":[6606],"s on several":[6606]," on several ":[6606],"on several t":[6606],"n several tr":[6606]," several tra":[6606],"several trac":[6606],"everal track":[6606],"veral tracks":[6606],"eral tracks ":[6606],"ral tracks t":[6606],"al tracks to":[6606],"l tracks to ":[6606]," tracks to b":[6606],"tracks to be":[6606],"racks to bet":[6606],"acks to bett":[6606],"cks to bette":[6606],"ks to better":[6606],"s to better ":[6606]," to better m":[6606],"to better ma":[6606],"o better man":[6606]," better mana":[6606],"better manag":[6606],"etter manage":[6606],"tter manage ":[6606],"ter manage v":[6606],"er manage vo":[6606],"r manage vol":[6606]," manage volu":[6606],"manage volum":[6606],"anage volume":[6606],"nage volume ":[6606],"age volume o":[6606],"ge volume on":[6606],"olume on a g":[6606],"lume on a gr":[6606],"ume on a gro":[6606],"me on a grou":[6606],"e on a group":[6606]," on a groupe":[6606],"on a grouped":[6606],"n a grouped ":[6606]," a grouped i":[6606],"a grouped in":[6606]," grouped ins":[6606],"grouped inst":[6606],"rouped insta":[6606],"ouped instan":[6606],"uped instanc":[6606],"ped instance":[6606],"ed instance ":[6606],"d instance o":[6606],"nstance of s":[6606],"stance of so":[6606],"tance of sou":[6606],"ance of soun":[6606],"nce of sound":[6606],"ce of sounds":[6606],"e of sounds.":[6606]," of sounds. ":[6606],"of sounds. i":[6606],"f sounds. it":[6606]," sounds. it ":[6606],"sounds. it w":[6606],"ounds. it wi":[6606],"unds. it wil":[6606],"nds. it will":[6606],"ds. it will ":[6606],"s. it will b":[6606],"it will be a":[6606],"t will be al":[6606]," will be als":[6606],"will be also":[6606],"ill be also ":[6606],"ll be also u":[6606],"l be also us":[6606]," be also use":[6606],"be also used":[6606],"e also used ":[6606]," also used i":[6606],"also used in":[6606],"lso used in ":[6606],"so used in a":[6606],"o used in a ":[6606]," used in a f":[6606],"used in a fu":[6606],"sed in a fut":[6606],"ed in a futu":[6606],"d in a futur":[6606]," in a future":[6606],"in a future ":[6606],"n a future r":[6606]," a future re":[6606],"a future rel":[6606]," future rele":[6606],"future relea":[6606],"uture releas":[6606],"ture release":[6606],"ure release ":[6606],"re release t":[6606],"e release to":[6606]," release to ":[6606],"release to a":[6606],"elease to ap":[6606],"lease to app":[6606],"ease to appl":[6606],"ase to apply":[6606],"se to apply ":[6606],"e to apply e":[6606]," to apply ef":[6606],"to apply eff":[6606],"o apply effe":[6606]," apply effec":[6606],"apply effect":[6606],"pply effects":[6606],"ply effects ":[6606],"ly effects o":[6606],"y effects on":[6606],"effects on a":[6606],"ffects on a ":[6606],"fects on a s":[6606],"ects on a sp":[6606],"cts on a spe":[6606],"ts on a spec":[6606]," specific tr":[6606,6614],"specific tra":[6606,6614],"pecific trac":[6606,6614],"ecific track":[6606,6614],"cific track.":[6606],"ylon.js is c":[6607],"lon.js is cr":[6607],"on.js is cre":[6607],"n.js is crea":[6607],".js is creat":[6607],"js is creati":[6607],"s is creatin":[6607]," is creating":[6607],"is creating ":[6607],"s creating a":[6607],"creating a *":[6607],"reating a **":[6607],"eating a **b":[6607],"ating a **ba":[6607],"ting a **bab":[6607],"ing a **baby":[6607],"ng a **babyl":[6607],"g a **babylo":[6607]," a **babylon":[6607],"a **babylon.":[6607]," **babylon.s":[6607],"**babylon.so":[6607],".soundtrack*":[6607],"soundtrack**":[6607],"oundtrack** ":[6607],"undtrack** o":[6607],"ndtrack** ob":[6607],"dtrack** obj":[6607],"track** obje":[6607],"rack** objec":[6607],"ack** object":[6607],"ck** object ":[6607],"k** object t":[6607],"** object to":[6607],"* object to ":[6607]," object to a":[6607],"object to ac":[6607],"bject to act":[6607],"ject to act ":[6607],"ect to act a":[6607],"ct to act as":[6607],"t to act as ":[6607]," to act as i":[6607],"to act as it":[6607],"o act as its":[6607]," act as its ":[6607],"act as its m":[6607],"ct as its ma":[6607],"t as its mai":[6607]," as its main":[6607],"as its main ":[6607],"s its main t":[6607]," its main tr":[6607],"its main tra":[6607],"ts main trac":[6607],"s main track":[6607]," main track.":[6607,6613],"main track. ":[6607,6613],"ain track. e":[6607],"in track. ev":[6607],"n track. eve":[6607]," track. ever":[6607],"track. every":[6607],"rack. every ":[6607],"ack. every t":[6607],"ck. every ti":[6607],"k. every tim":[6607],". every time":[6607],"every time y":[6607],"very time yo":[6607],"ery time you":[6607],"ry time you’":[6607],"y time you’r":[6607]," time you’re":[6607],"time you’re ":[6607],"ime you’re c":[6607],"me you’re cr":[6607],"e you’re cre":[6607]," you’re crea":[6607],"you’re creat":[6607],"ou’re creati":[6607],"u’re creatin":[6607],"’re creating":[6607],"ting a new *":[6607],"ing a new *b":[6607],"ng a new *ba":[6607],"g a new *bab":[6607]," a new *baby":[6607],"a new *babyl":[6607]," new *babylo":[6607],"new *babylon":[6607],"ew *babylon.":[6607],"w *babylon.s":[6607],"on.sound*, i":[6607],"n.sound*, it":[6607],".sound*, it’":[6607],"sound*, it’s":[6607],"ound*, it’s ":[6607],"und*, it’s a":[6607],"nd*, it’s ad":[6607],"d*, it’s add":[6607],"*, it’s adde":[6607],", it’s added":[6607]," it’s added ":[6607],"it’s added f":[6607],"t’s added fo":[6607],"’s added for":[6607],"s added for ":[6607]," added for y":[6607],"added for yo":[6607],"dded for you":[6607],"ded for you ":[6607],"ed for you i":[6607],"d for you in":[6607]," for you int":[6607],"for you into":[6607],"or you into ":[6607],"r you into t":[6607]," you into th":[6607],"you into thi":[6607],"ou into this":[6607],"u into this ":[6607]," into this m":[6607],"into this ma":[6607],"nto this mai":[6607],"to this main":[6607],"o this main ":[6607]," this main t":[6607],"this main tr":[6607],"his main tra":[6607],"is main trac":[6607],"var soundtra":[6609,6616,6619],"ar soundtrac":[6609,6616,6619],"r soundtrack":[6609,6616,6619]," soundtrack ":[6609],"soundtrack =":[6609],"oundtrack = ":[6609],"undtrack = n":[6609],"ndtrack = ne":[6609],"dtrack = new":[6609],"track = new ":[6609],"rack = new b":[6609],"ack = new ba":[6609],"ck = new bab":[6609],".soundtrack(":[6609,6616,6619],"soundtrack(s":[6609,6616,6619],"oundtrack(sc":[6609,6616,6619],"undtrack(sce":[6609,6616,6619],"ndtrack(scen":[6609,6616,6619],"dtrack(scene":[6609,6616,6619],"track(scene)":[6609,6616,6619],"rack(scene);":[6609,6616,6619],"soundtrack.a":[6610,6611],"oundtrack.ad":[6610,6611],"undtrack.add":[6610,6611],"ndtrack.adds":[6610,6611],"dtrack.addso":[6610,6611],"track.addsou":[6610,6611],"rack.addsoun":[6610,6611],"ack.addsound":[6610,6611],"ck.addsound(":[6610,6611],"k.addsound(c":[6610],".addsound(ce":[6610,6617],"addsound(cel":[6610,6617],"ddsound(cell":[6610,6617],"dsound(cello":[6610,6617],"sound(cellol":[6610,6617],"ound(cellolo":[6610,6617],"und(cellolon":[6610,6617],"nd(cellolong":[6610,6617],"d(cellolong)":[6610,6617],"(cellolong);":[6610,6617],"k.addsound(v":[6611],".addsound(vi":[6611,6618,6620],"addsound(vio":[6611,6618,6620],"ddsound(viol":[6611,6618,6620],"dsound(violo":[6611,6618,6620],"sound(violon":[6611,6618,6620],"ound(violons":[6611,6618,6620],"und(violons1":[6611,6618,6620],"nd(violons11":[6611,6618,6620],"d(violons11)":[6611,6618,6620],"(violons11);":[6611,6618,6620],"violons11); ":[6611],"using this c":[6613],"sing this co":[6613],"ing this cod":[6613],"ng this code":[6613],"g this code,":[6613]," code, the “":[6613],"code, the “*":[6613],"ode, the “*c":[6613],"de, the “*ce":[6613],"e, the “*cel":[6613],", the “*cell":[6613]," the “*cello":[6613],"the “*cellol":[6613],"he “*cellolo":[6613],"e “*cellolon":[6613]," “*cellolong":[6613],"“*cellolong*":[6613],"*cellolong*”":[6613],"cellolong*” ":[6613],"ellolong*” a":[6613],"llolong*” an":[6613],"lolong*” and":[6613],"olong*” and ":[6613],"long*” and “":[6613],"ong*” and “*":[6613],"ng*” and “*v":[6613],"g*” and “*vi":[6613],"*” and “*vio":[6613],"” and “*viol":[6613]," and “*violo":[6613],"and “*violon":[6613],"nd “*violons":[6613],"d “*violons1":[6613]," “*violons11":[6613,6622],"“*violons11*":[6613,6622],"*violons11*”":[6613,6622],"violons11*” ":[6613,6622],"iolons11*” s":[6613,6622],"olons11*” so":[6613,6622],"lons11*” sou":[6613,6622],"ons11*” soun":[6613,6622],"ns11*” sound":[6613,6622],"s11*” sounds":[6613],"11*” sounds ":[6613],"1*” sounds w":[6613],"*” sounds wi":[6613],"” sounds wil":[6613]," sounds will":[6613],"sounds will ":[6613],"ounds will b":[6613],"unds will be":[6613],"nds will be ":[6613],"ds will be m":[6613]," will be mov":[6613],"will be move":[6613],"ill be moved":[6613],"ll be moved ":[6613],"l be moved f":[6613]," be moved fr":[6613],"be moved fro":[6613],"e moved from":[6613]," moved from ":[6613],"moved from t":[6613],"oved from th":[6613],"ved from the":[6613],"d from the m":[6613]," from the ma":[6613],"from the mai":[6613],"rom the main":[6613],"om the main ":[6613],"m the main b":[6613]," the main ba":[6613],"the main bab":[6613],"he main baby":[6613],"e main babyl":[6613]," main babylo":[6613],"main babylon":[6613],"ain babylon.":[6613],"abylon.js tr":[6613],"bylon.js tra":[6613],"ylon.js trac":[6613],"lon.js track":[6613],"on.js track ":[6613],"n.js track t":[6613],".js track to":[6613],"js track to ":[6613],"s track to t":[6613]," track to th":[6613],"track to thi":[6613],"rack to this":[6613],"ack to this ":[6613],"ck to this s":[6613],"k to this sp":[6613]," to this spe":[6613],"to this spec":[6613],"o this speci":[6613]," this specif":[6613],"this specifi":[6613],"his specific":[6613],"is specific ":[6613],"s specific s":[6613],"cific sound ":[6613],"ific sound t":[6613],"fic sound tr":[6613],"ic sound tra":[6613],"c sound trac":[6613],"sound track.":[6613],"ound track. ":[6613],"und track. t":[6613],"nd track. th":[6613],"d track. thi":[6613]," track. this":[6613],"track. this ":[6613],"rack. this n":[6613],"ack. this no":[6613],"ck. this now":[6613],"k. this now ":[6613],". this now m":[6613]," this now me":[6613],"this now mea":[6613],"his now mean":[6613],"is now means":[6613],"s now means ":[6613]," now means t":[6613],"now means th":[6613],"ow means tha":[6613],"w means that":[6613],"ns that you ":[6613]," that you ch":[6613],"that you cha":[6613],"hat you chan":[6613],"at you chang":[6613],"t you change":[6613],"hange the vo":[6613],"ange the vol":[6613],"nge the volu":[6613],"ge the volum":[6613],"olume of thi":[6613],"lume of this":[6613],"ume of this ":[6613],"me of this t":[6613],"e of this tr":[6613]," of this tra":[6613],"of this trac":[6613],"f this track":[6613]," this track,":[6613],"this track, ":[6613],"his track, a":[6613],"is track, an":[6613],"s track, and":[6613]," track, and ":[6613],"track, and t":[6613],"rack, and th":[6613],"ack, and thu":[6613],"ck, and thus":[6613],"k, and thus ":[6613],", and thus o":[6613]," and thus of":[6613],"and thus of ":[6613],"nd thus of t":[6613],"d thus of th":[6613]," thus of the":[6613],"thus of thes":[6613],"hus of these":[6613],"us of these ":[6613],"s of these 2":[6613]," of these 2 ":[6613],"of these 2 s":[6613],"f these 2 so":[6613]," these 2 sou":[6613],"these 2 soun":[6613],"hese 2 sound":[6613],"ese 2 sounds":[6613],"se 2 sounds,":[6613],"e 2 sounds, ":[6613]," 2 sounds, i":[6613],"2 sounds, in":[6613]," sounds, ind":[6613],"sounds, inde":[6613],"ounds, indep":[6613],"unds, indepe":[6613],"nds, indepen":[6613],"ds, independ":[6613],"s, independe":[6613],", independen":[6613],"dependently ":[6613],"ependently f":[6613],"pendently fr":[6613],"endently fro":[6613],"ndently from":[6613],"dently from ":[6613],"ently from t":[6613],"ntly from th":[6613],"y from the m":[6613],"m the main t":[6613]," the main tr":[6613],"the main tra":[6613,6614],"he main trac":[6613,6614],"e main track":[6613,6614],"the *addsoun":[6614],"he *addsound":[6614],"e *addsound(":[6614]," *addsound()":[6614],"*addsound()*":[6614],"addsound()* ":[6614],"ddsound()* f":[6614],"dsound()* fu":[6614],"sound()* fun":[6614],"ound()* func":[6614],"und()* funct":[6614],"nd()* functi":[6614],"d()* functio":[6614],"ction will m":[6614],"tion will mo":[6614],"ion will mov":[6614],"on will move":[6614],"n will move ":[6614]," will move t":[6614],"will move th":[6614],"ill move the":[6614],"ll move the ":[6614],"l move the s":[6614]," move the so":[6614],"move the sou":[6614],"ove the soun":[6614],"ve the sound":[6614]," the sound f":[6614],"the sound fr":[6614],"he sound fro":[6614],"e sound from":[6614],"sound from i":[6614],"ound from it":[6614],"und from its":[6614],"nd from its ":[6614],"d from its o":[6614]," from its or":[6614],"from its ori":[6614],"rom its orig":[6614],"om its origi":[6614],"m its origin":[6614]," its origina":[6614],"its original":[6614],"ts original ":[6614],"s original c":[6614]," original co":[6614],"original con":[6614],"riginal cont":[6614],"iginal conta":[6614],"ginal contai":[6614],"inal contain":[6614],"nal containe":[6614],"al container":[6614],"l container ":[6614]," container (":[6614],"container (t":[6614],"ontainer (th":[6614],"ntainer (the":[6614],"tainer (the ":[6614],"ainer (the m":[6614],"iner (the ma":[6614],"ner (the mai":[6614],"er (the main":[6614],"r (the main ":[6614]," (the main t":[6614],"(the main tr":[6614]," main track ":[6614],"main track o":[6614],"ain track or":[6614],"in track or ":[6614],"n track or a":[6614]," track or a ":[6614],"track or a s":[6614],"rack or a sp":[6614],"ack or a spe":[6614],"ck or a spec":[6614],"k or a speci":[6614]," or a specif":[6614],"or a specifi":[6614],"r a specific":[6614],"cific track)":[6614],"ific track) ":[6614],"fic track) t":[6614],"ic track) to":[6614],"c track) to ":[6614]," track) to t":[6614],"track) to th":[6614],"rack) to the":[6614],"ack) to the ":[6614],"ck) to the n":[6614],"k) to the ne":[6614],") to the new":[6614],"to the new s":[6614],"o the new so":[6614]," the new sou":[6614],"the new soun":[6614],"he new sound":[6614],"e new sound ":[6614]," new sound t":[6614],"new sound tr":[6614],"ew sound tra":[6614],"w sound trac":[6614],"sound track ":[6614,6633],"ound track s":[6614],"und track sp":[6614],"nd track spe":[6614],"d track spec":[6614]," track speci":[6614],"track specif":[6614],"rack specifi":[6614],"ack specifie":[6614],"ck specified":[6614],"k specified.":[6614]," specified. ":[6614],"specified. f":[6614],"pecified. fo":[6614],"ecified. for":[6614],"cified. for ":[6614],"ified. for i":[6614],"fied. for in":[6614],"ied. for ins":[6614],"ed. for inst":[6614],"d. for insta":[6614]," instance, w":[6614],"instance, wi":[6614],"nstance, wit":[6614],"stance, with":[6614],"tance, with ":[6614],"ance, with t":[6614],"nce, with th":[6614],"ce, with thi":[6614],"e, with this":[6614],", with this ":[6614]," soundtrack1":[6616],"soundtrack1 ":[6616],"oundtrack1 =":[6616],"undtrack1 = ":[6616],"ndtrack1 = n":[6616],"dtrack1 = ne":[6616],"track1 = new":[6616],"rack1 = new ":[6616],"ack1 = new b":[6616],"ck1 = new ba":[6616],"k1 = new bab":[6616],"soundtrack1.":[6617,6618,6636],"oundtrack1.a":[6617,6618],"undtrack1.ad":[6617,6618],"ndtrack1.add":[6617,6618],"dtrack1.adds":[6617,6618],"track1.addso":[6617,6618],"rack1.addsou":[6617,6618],"ack1.addsoun":[6617,6618],"ck1.addsound":[6617,6618],"k1.addsound(":[6617,6618],"1.addsound(c":[6617],"1.addsound(v":[6618]," soundtrack2":[6619],"soundtrack2 ":[6619],"oundtrack2 =":[6619],"undtrack2 = ":[6619],"ndtrack2 = n":[6619],"dtrack2 = ne":[6619],"track2 = new":[6619],"rack2 = new ":[6619],"ack2 = new b":[6619],"ck2 = new ba":[6619],"k2 = new bab":[6619],"soundtrack2.":[6620],"oundtrack2.a":[6620],"undtrack2.ad":[6620],"ndtrack2.add":[6620],"dtrack2.adds":[6620],"track2.addso":[6620],"rack2.addsou":[6620],"ack2.addsoun":[6620],"ck2.addsound":[6620],"k2.addsound(":[6620],"2.addsound(v":[6620],"the “*violon":[6622],"he “*violons":[6622],"e “*violons1":[6622],"s11*” sound ":[6622],"11*” sound w":[6622],"1*” sound wi":[6622],"*” sound wil":[6622],"” sound will":[6622],"sound will f":[6622],"ound will fi":[6622],"und will fin":[6622],"nd will fina":[6622],"d will final":[6622]," will finall":[6622],"will finally":[6622],"ill finally ":[6622],"ll finally l":[6622],"l finally li":[6622]," finally liv":[6622],"finally live":[6622],"inally live ":[6622],"nally live o":[6622],"ally live on":[6622],"lly live onl":[6622],"ly live only":[6622],"y live only ":[6622]," live only i":[6622],"live only in":[6622],"ive only in ":[6622],"ve only in “":[6622],"e only in “*":[6622]," only in “*s":[6622],"only in “*so":[6622],"nly in “*sou":[6622],"ly in “*soun":[6622],"y in “*sound":[6622]," in “*soundt":[6622],"in “*soundtr":[6622],"n “*soundtra":[6622]," “*soundtrac":[6622],"“*soundtrack":[6622],"*soundtrack2":[6622],"soundtrack2*":[6622],"oundtrack2*”":[6622],"undtrack2*”.":[6622],"using the an":[6623],"sing the ana":[6623],"ing the anal":[6623],"ng the analy":[6623],"g the analys":[6623]," the analyse":[6623,6643],"the analyser":[6623,6643],"he analyser#":[6623],"e analyser##":[6623],"can easily a":[6624],"an easily an":[6624],"n easily ana":[6624]," easily anal":[6624],"easily analy":[6624],"asily analyz":[6624],"sily analyze":[6624],"ily analyze ":[6624],"ly analyze i":[6624],"y analyze in":[6624]," analyze in ":[6624],"analyze in r":[6624],"nalyze in re":[6624],"alyze in rea":[6624],"lyze in real":[6624],"yze in real-":[6624],"ze in real-t":[6624],"e in real-ti":[6624]," real-time t":[6624],"real-time th":[6624],"eal-time the":[6624],"al-time the ":[6624],"l-time the a":[6624],"-time the au":[6624],"time the aud":[6624],"ime the audi":[6624],"me the audio":[6624],"e the audio ":[6624]," the audio f":[6624],"the audio fr":[6624],"he audio fre":[6624],"e audio freq":[6624]," audio frequ":[6624],"audio freque":[6624],"udio frequen":[6624],"dio frequenc":[6624],"io frequenci":[6624],"o frequencie":[6624]," frequencies":[6624,6631],"frequencies.":[6624],"requencies. ":[6624],"he easiest c":[6625],"e easiest co":[6625]," easiest cod":[6625],"easiest code":[6625],"asiest code ":[6625],"siest code t":[6625],"iest code to":[6625],"est code to ":[6625],"st code to u":[6625],"t code to un":[6625]," code to und":[6625],"code to unde":[6625],"ode to under":[6625],"de to unders":[6625],"e to underst":[6625,7090],"rstand how i":[6625],"stand how it":[6625],"tand how it ":[6625],"and how it w":[6625],"nd how it wo":[6625],"d how it wor":[6625],"w it works i":[6625]," it works is":[6625],"it works is ":[6625],"t works is t":[6625]," works is th":[6625],"works is thi":[6625],"orks is this":[6625],"rks is this ":[6625],"ks is this o":[6625],"s is this on":[6625]," is this one":[6625],"is this one:":[6625],"var myanalys":[6627,6635],"ar myanalyse":[6627,6635],"r myanalyser":[6627,6635]," myanalyser ":[6627,6635],"myanalyser =":[6627,6635],"yanalyser = ":[6627,6635],"analyser = n":[6627,6635],"nalyser = ne":[6627,6635],"alyser = new":[6627,6635],"lyser = new ":[6627,6635],"yser = new b":[6627,6635],"ser = new ba":[6627,6635],"on.analyser(":[6627,6635],"n.analyser(s":[6627,6635],".analyser(sc":[6627,6635],"analyser(sce":[6627,6635],"nalyser(scen":[6627,6635],"alyser(scene":[6627,6635],"lyser(scene)":[6627,6635],"yser(scene);":[6627,6635],"udioengine.c":[6628],"dioengine.co":[6628],"ioengine.con":[6628],"oengine.conn":[6628],"engine.conne":[6628],"ngine.connec":[6628],"gine.connect":[6628],"ine.connectt":[6628],"ne.connectto":[6628],"e.connecttoa":[6628],".connecttoan":[6628,6636],"connecttoana":[6628,6636],"onnecttoanal":[6628,6636],"nnecttoanaly":[6628,6636],"necttoanalys":[6628,6636],"ecttoanalyse":[6628,6636],"cttoanalyser":[6628,6636],"ttoanalyser(":[6628,6636],"toanalyser(m":[6628,6636],"oanalyser(my":[6628,6636],"analyser(mya":[6628,6636],"nalyser(myan":[6628,6636],"alyser(myana":[6628,6636],"lyser(myanal":[6628,6636],"yser(myanaly":[6628,6636],"ser(myanalys":[6628,6636],"er(myanalyse":[6628,6636],"r(myanalyser":[6628,6636],"(myanalyser)":[6628,6636],"myanalyser);":[6628,6636],"myanalyser.d":[6629,6637,6638,6639,6640,6641],"yanalyser.dr":[6629,6641],"analyser.dra":[6629,6641],"nalyser.draw":[6629,6641],"alyser.drawd":[6629,6641],"lyser.drawde":[6629,6641],"yser.drawdeb":[6629,6641],"ser.drawdebu":[6629,6641],"er.drawdebug":[6629,6641],"r.drawdebugc":[6629,6641],".drawdebugca":[6629,6641],"drawdebugcan":[6629,6641],"rawdebugcanv":[6629,6641],"awdebugcanva":[6629,6641],"wdebugcanvas":[6629,6641],"debugcanvas(":[6629,6641],"ebugcanvas()":[6629,6641],"bugcanvas();":[6629,6641],"this will co":[6631],"his will con":[6631],"is will conn":[6631],"s will conne":[6631]," will connec":[6631],"will connect":[6631],"ill connect ":[6631],"ll connect t":[6631],"l connect to":[6631]," connect to ":[6631],"connect to t":[6631],"onnect to th":[6631],"nnect to the":[6631],"nect to the ":[6631],"ect to the g":[6631],"ct to the gl":[6631],"t to the glo":[6631]," to the glob":[6631],"to the globa":[6631],"o the global":[6631],"ume of the a":[6631],"me of the au":[6631],"e of the aud":[6631],"udio engine ":[6631],"dio engine a":[6631],"io engine an":[6631],"o engine and":[6631],"engine and w":[6631],"ngine and wi":[6631],"gine and wil":[6631],"ine and will":[6631],"ne and will ":[6631],"e and will d":[6631]," and will dr":[6631],"and will dra":[6631],"nd will draw":[6631],"d will draw ":[6631]," will draw t":[6631],"will draw th":[6631],"ill draw the":[6631],"ll draw the ":[6631],"l draw the f":[6631]," draw the fr":[6631],"draw the fre":[6631],"raw the freq":[6631],"aw the frequ":[6631],"w the freque":[6631]," the frequen":[6631],"the frequenc":[6631],"he frequenci":[6631],"e frequencie":[6631],"frequencies ":[6631],"requencies o":[6631],"equencies of":[6631],"quencies of ":[6631],"uencies of a":[6631],"encies of al":[6631],"ncies of all":[6631],"cies of all ":[6631],"ies of all s":[6631],"es of all so":[6631],"s of all sou":[6631],"nds played t":[6631],"ds played to":[6631],"s played tog":[6631]," played toge":[6631],"played toget":[6631],"layed togeth":[6631],"ayed togethe":[6631],"yed together":[6631],"ed together ":[6631],"d together i":[6631]," together in":[6631],"together int":[6631],"ogether into":[6631],"gether into ":[6631],"ether into a":[6631],"ther into a ":[6631],"her into a 2":[6631],"er into a 2d":[6631],"r into a 2d ":[6631]," into a 2d c":[6631],"into a 2d ca":[6631],"nto a 2d can":[6631],"to a 2d canv":[6631],"o a 2d canva":[6631]," 2d canvas d":[6631],"2d canvas di":[6631],"d canvas dis":[6631]," canvas disp":[6631],"canvas displ":[6631],"anvas displa":[6631],"nvas display":[6631],"vas display ":[6631],"as display o":[6631],"s display on":[6631]," display on ":[6631],"display on t":[6631],"isplay on to":[6631],"splay on top":[6631],"play on top ":[6631],"lay on top o":[6631],"ay on top of":[6631],"y on top of ":[6631],"p of the scr":[6631],"![image anal":[6632,7142],"[image analy":[6632,7142],"image analys":[6632,7142],"mage analyse":[6632,7142],"age analyser":[6632,7142],"ge analyser ":[6632,7142],"e analyser d":[6632,7142]," analyser de":[6632,7142],"analyser deb":[6632,7142],"nalyser debu":[6632,7142],"alyser debug":[6632,7142],"lyser debug ":[6632,7142],"yser debug c":[6632,7142],"ser debug ca":[6632,7142],"er debug can":[6632,7142],"r debug canv":[6632,7142]," debug canva":[6632,6633,7142],"debug canvas":[6632,6633,7142],"ebug canvas]":[6632,7142],"bug canvas](":[6632,7142],"ug canvas](h":[6632,7142],"g canvas](ht":[6632,7142]," canvas](htt":[6632,7142],"canvas](http":[6632,7142],"anvas](http:":[6632,7142],"nvas](http:/":[6632,7142],"vas](http://":[6632,7142],"as](http://a":[6632,7142],"s](http://az":[6632,7142],"](http://az6":[6632,7142],"(http://az61":[6632,7142],"ylonjs/doc/s":[6632],"lonjs/doc/si":[6632],"onjs/doc/sim":[6632],"njs/doc/simp":[6632],"js/doc/simpl":[6632],"s/doc/simple":[6632],"/doc/simplea":[6632],"doc/simplean":[6632],"oc/simpleana":[6632],"c/simpleanal":[6632],"/simpleanaly":[6632],"simpleanalys":[6632],"impleanalyse":[6632],"mpleanalyser":[6632],"pleanalyserd":[6632],"leanalyserde":[6632],"eanalyserdeb":[6632],"analyserdebu":[6632],"nalyserdebug":[6632],"alyserdebug.":[6632],"lyserdebug.p":[6632],"yserdebug.pn":[6632],"serdebug.png":[6632],"erdebug.png)":[6632],"ition and si":[6633],"tion and siz":[6633],"ion and size":[6633],"on and size ":[6633],"n and size o":[6633]," and size of":[6633],"and size of ":[6633],"nd size of t":[6633],"d size of th":[6633],"e of the deb":[6633]," the debug c":[6633],"the debug ca":[6633],"he debug can":[6633],"e debug canv":[6633],"ebug canvas ":[6633],"bug canvas a":[6633],"ug canvas an":[6633],"g canvas and":[6633]," canvas and ":[6633],"canvas and u":[6633],"anvas and us":[6633],"nvas and use":[6633],"vas and use ":[6633],"as and use a":[6633],"s and use an":[6633]," and use an ":[6633],"and use an a":[6633],"nd use an an":[6633],"d use an ana":[6633]," use an anal":[6633],"use an analy":[6633],"se an analys":[6633],"e an analyse":[6633]," an analyser":[6633],"an analyser ":[6633],"n analyser o":[6633]," analyser on":[6633],"analyser on ":[6633],"nalyser on a":[6633],"alyser on a ":[6633],"lyser on a s":[6633],"yser on a so":[6633],"ser on a sou":[6633],"er on a soun":[6633],"r on a sound":[6633],"on a sound t":[6633],"n a sound tr":[6633]," a sound tra":[6633],"a sound trac":[6633],"ound track i":[6633],"und track in":[6633],"nd track ins":[6633],"d track inst":[6633]," track inste":[6633],"track instea":[6633],"rack instead":[6633],"ack instead ":[6633],"ck instead o":[6633],"k instead of":[6633],"ead of the g":[6633],"ad of the gl":[6633],"d of the glo":[6633]," of the glob":[6633],"of the globa":[6633],"f the global":[6633],"the global a":[6633],"he global au":[6633],"e global aud":[6633]," global audi":[6633],"global audio":[6633],"lobal audio ":[6633],"obal audio e":[6633],"bal audio en":[6633],"al audio eng":[6633],"l audio engi":[6633],"udio engine:":[6633],"oundtrack1.c":[6636],"undtrack1.co":[6636],"ndtrack1.con":[6636],"dtrack1.conn":[6636],"track1.conne":[6636],"rack1.connec":[6636],"ack1.connect":[6636],"ck1.connectt":[6636],"k1.connectto":[6636],"1.connecttoa":[6636],"yanalyser.de":[6637,6638,6639,6640],"analyser.deb":[6637,6638,6639,6640],"nalyser.debu":[6637,6638,6639,6640],"alyser.debug":[6637,6638,6639,6640],"lyser.debugc":[6637,6638,6639,6640],"yser.debugca":[6637,6638,6639,6640],"ser.debugcan":[6637,6638,6639,6640],"er.debugcanv":[6637,6638,6639,6640],"r.debugcanva":[6637,6638,6639,6640],".debugcanvas":[6637,6638,6639,6640],"debugcanvass":[6637,6638],"ebugcanvassi":[6637,6638],"bugcanvassiz":[6637,6638],"ugcanvassize":[6637,6638],"gcanvassize.":[6637,6638],"canvassize.w":[6637],"anvassize.wi":[6637],"nvassize.wid":[6637],"vassize.widt":[6637],"assize.width":[6637],"ssize.width ":[6637],"size.width =":[6637],"ize.width = ":[6637],"ze.width = 1":[6637],"e.width = 16":[6637],".width = 160":[6637],"width = 160;":[6637],"canvassize.h":[6638],"anvassize.he":[6638],"nvassize.hei":[6638],"vassize.heig":[6638],"assize.heigh":[6638],"ssize.height":[6638],"size.height ":[6638],"ize.height =":[6638],"ze.height = ":[6638],"e.height = 1":[6638],".height = 10":[6638],"height = 100":[6638],"eight = 100;":[6638],"debugcanvasp":[6639,6640],"ebugcanvaspo":[6639,6640],"bugcanvaspos":[6639,6640],"ugcanvaspos.":[6639,6640],"gcanvaspos.x":[6639],"canvaspos.x ":[6639],"anvaspos.x =":[6639],"nvaspos.x = ":[6639],"vaspos.x = 4":[6639],"aspos.x = 40":[6639],"spos.x = 40;":[6639],"gcanvaspos.y":[6640],"canvaspos.y ":[6640],"anvaspos.y =":[6640],"nvaspos.y = ":[6640],"vaspos.y = 3":[6640],"aspos.y = 30":[6640],"spos.y = 30;":[6640]," can also ca":[6643],"can also cal":[6643],"an also call":[6643],"n also call ":[6643]," also call y":[6643],"also call yo":[6643],"lso call you":[6643],"so call your":[6643],"o call yours":[6643]," call yourse":[6643],"call yoursel":[6643],"all yourself":[6643],"ll yourself ":[6643],"l yourself t":[6643]," yourself th":[6643],"yourself the":[6643],"ourself the ":[6643],"urself the a":[6643],"rself the an":[6643],"self the ana":[6643],"elf the anal":[6643],"lf the analy":[6643],"f the analys":[6643],"he analyser ":[6643],"e analyser f":[6643]," analyser fu":[6643],"analyser fun":[6643],"nalyser func":[6643],"alyser funct":[6643],"lyser functi":[6643],"yser functio":[6643],"ser function":[6643],"nctions to c":[6643],"ctions to cr":[6643],"tions to cre":[6643],"ions to crea":[6643],"ons to creat":[6643],"ns to create":[6643],"e your own u":[6643]," your own us":[6643],"your own usa":[6643],"our own usag":[6643],"ur own usage":[6643],"r own usage ":[6643]," own usage o":[6643],"own usage of":[6643],"wn usage of ":[6643],"n usage of i":[6643]," usage of it":[6643],"usage of it.":[6643],"sage of it. ":[6643],"here is a fu":[6644],"ere is a ful":[6644],"re is a full":[6644],"e is a full ":[6644]," is a full s":[6644],"is a full sa":[6644],"s a full sam":[6644]," a full samp":[6644],"a full sampl":[6644]," full sample":[6644],"full sample:":[6644],"ull sample: ":[6644],"ound.com/#pt":[6645],"und.com/#ptv":[6645],"nd.com/#ptv7":[6645],"d.com/#ptv7w":[6645],".com/#ptv7w#":[6645],"com/#ptv7w#1":[6645],"om/#ptv7w#1 ":[6645],"m/#ptv7w#1 #":[6645],"/#ptv7w#1 ##":[6645],"#ptv7w#1 ###":[6645],"ore about sc":[6646],"re about sca":[6646],"e about scal":[6646]," about scali":[6646],"about scalin":[6646],"bout scaling":[6646],"out scaling.":[6646],"ut scaling..":[6646,6713],"t scaling...":[6646,6713]," scaling... ":[6646,6710,6712,6713],"scaling... f":[6646],"caling... fu":[6646],"aling... fur":[6646],"ling... furt":[6646],"another use ":[6647,6682],"nother use f":[6647],"other use fo":[6647],"ther use for":[6647],"her use for ":[6647],"er use for a":[6647],"r use for a ":[6647]," use for a v":[6647],"use for a ve":[6647],"se for a vec":[6647],"e for a vect":[6647]," for a vecto":[6647],"for a vector":[6647],"or a vector3":[6647],"r a vector3 ":[6647],"3 value... i":[6647]," value... is":[6647],"value... is ":[6647],"alue... is s":[6647],"lue... is se":[6647],"ue... is set":[6647],"e... is sett":[6647],"... is setti":[6647],".. is settin":[6647],". is setting":[6647],"is setting t":[6647],"s setting th":[6647],"etting the .":[6647],"tting the .d":[6647],"ting the .di":[6647],"ing the .dir":[6647],"ng the .dire":[6647],"g the .direc":[6647]," the .direct":[6647],"the .directi":[6647],"he .directio":[6647],"e .direction":[6647],".direction f":[6647],"ection for c":[6647],"ction for ce":[6647],"tion for cer":[6647],"ion for cert":[6647],"on for certa":[6647],"n for certai":[6647]," for certain":[6647],"for certain ":[6647],"or certain t":[6647],"r certain ty":[6647]," certain typ":[6647],"certain type":[6647],"ertain types":[6647],"rtain types ":[6647],"tain types o":[6647],"ain types of":[6647],"in types of ":[6647],"n types of l":[6647],"s of lights:":[6647],"myspotlight.":[6649],"yspotlight.d":[6649],"spotlight.di":[6649],"potlight.dir":[6649],"otlight.dire":[6649],"tlight.direc":[6649],"light.direct":[6649],"ight.directi":[6649],"ght.directio":[6649],"ht.direction":[6649],"t.direction ":[6649],"generally sp":[6651],"enerally spe":[6651],"nerally spea":[6651],"erally speak":[6651],"rally speaki":[6651],"ally speakin":[6651],"lly speaking":[6651],"ly speaking,":[6651],"y speaking, ":[6651]," speaking, w":[6651],"speaking, wh":[6651],"peaking, whe":[6651],"eaking, when":[6651],"aking, when ":[6651],"king, when a":[6651],"ing, when a ":[6651],"ng, when a v":[6651],"g, when a ve":[6651],", when a vec":[6651]," when a vect":[6651],"when a vecto":[6651],"hen a vector":[6651],"en a vector3":[6651],"n a vector3 ":[6651],"ctor3 value ":[6651,6703],"tor3 value i":[6651],"or3 value is":[6651,6682],"r3 value is ":[6651,6682],"3 value is u":[6651]," value is us":[6651],"value is use":[6651],"alue is used":[6651],"lue is used ":[6651],"ue is used t":[6651],"d to set a d":[6651]," to set a di":[6651],"to set a dir":[6651],"o set a dire":[6651]," set a direc":[6651],"set a direct":[6651],"et a directi":[6651],"t a directio":[6651],"a direction,":[6651],"direction, t":[6651],"irection, th":[6651],"rection, the":[6651],"ction, the x":[6651],"tion, the xv":[6651],"ion, the xva":[6651],"on, the xval":[6651],"n, the xvalu":[6651]," the xvalue,":[6651],"the xvalue, ":[6651],"he xvalue, y":[6651],"e xvalue, yv":[6651],"e, yvalue, a":[6651],", yvalue, an":[6651]," yvalue, and":[6651],"yvalue, and ":[6651],"value, and z":[6651],"alue, and zv":[6651],"lue, and zva":[6651],"ue, and zval":[6651],"e, and zvalu":[6651],", and zvalue":[6651]," and zvalue ":[6651],"and zvalue a":[6651],"nd zvalue ar":[6651],"d zvalue are":[6651]," zvalue are ":[6651],"zvalue are e":[6651],"value are ea":[6651],"alue are eac":[6651],"lue are each":[6651],"ue are each ":[6651],"e are each i":[6651]," are each in":[6651],"are each in ":[6651],"re each in a":[6651],"e each in a ":[6651]," each in a r":[6651],"each in a ra":[6651],"ach in a ran":[6651],"ch in a rang":[6651],"h in a range":[6651]," in a range ":[6651],"in a range o":[6651],"n a range of":[6651]," a range of ":[6651],"a range of n":[6651]," range of ne":[6651],"range of neg":[6651],"ange of nega":[6651],"nge of negat":[6651],"ge of negati":[6651],"e of negativ":[6651]," of negative":[6651],"of negative ":[6651],"f negative 1":[6651]," negative 1.":[6651],"negative 1..":[6651],"egative 1...":[6651],"gative 1... ":[6651],"ative 1... t":[6651],"tive 1... to":[6651],"ive 1... to ":[6651],"ve 1... to p":[6651],"e 1... to po":[6651]," 1... to pos":[6651],"1... to posi":[6651],"... to posit":[6651],".. to positi":[6651],". to positiv":[6651]," to positive":[6651],"to positive ":[6651],"o positive 1":[6651]," positive 1.":[6651],"positive 1.&":[6651],"ositive 1.&n":[6651],"sitive 1.&nb":[6651],"itive 1.&nbs":[6651],"tive 1.&nbsp":[6651],"ive 1.&nbsp;":[6651],"ve 1.&nbsp; ":[6651],"e 1.&nbsp; i":[6651]," 1.&nbsp; in":[6651],"1.&nbsp; in ":[6651],"sp; in the e":[6651],"p; in the ex":[6651],"; in the exa":[6651],"ple above, o":[6651],"le above, ou":[6651],"e above, our":[6651]," above, our ":[6651],"above, our l":[6651],"bove, our li":[6651],"ove, our lig":[6651],"ve, our ligh":[6651],"e, our light":[6651],", our light ":[6651]," our light i":[6651],"our light is":[6651],"ur light is ":[6651],"r light is a":[6651]," light is ai":[6651],"light is aim":[6651],"ight is aime":[6651],"ght is aimed":[6651],"ht is aimed ":[6651],"t is aimed n":[6651]," is aimed ne":[6651],"is aimed neg":[6651],"s aimed nega":[6651]," aimed negat":[6651],"aimed negati":[6651],"imed negativ":[6651],"med negative":[6651],"ed negative ":[6651],"d negative o":[6651]," negative on":[6651],"negative on ":[6651],"egative on t":[6651],"gative on th":[6651],"ative on the":[6651],"tive on the ":[6651],"ive on the y":[6651],"ve on the y-":[6651],"e on the y-a":[6651],"the y-axis..":[6651],"he y-axis...":[6651],"e y-axis... ":[6651]," y-axis... o":[6651],"y-axis... or":[6651],"-axis... or.":[6651],"axis... or..":[6651],"xis... or...":[6651],"is... or... ":[6651],"s... or... s":[6651],"... or... st":[6651],".. or... str":[6651],". or... stra":[6651]," or... strai":[6651],"or... straig":[6651],"r... straigh":[6651],"... straight":[6651],".. straight ":[6651],". straight d":[6651]," straight do":[6651],"straight dow":[6651],"traight down":[6651],"raight down.":[6651],"aight down.&":[6651],"ight down.&n":[6651],"ght down.&nb":[6651],"ht down.&nbs":[6651],"t down.&nbsp":[6651]," down.&nbsp;":[6651],"down.&nbsp; ":[6651],"own.&nbsp; d":[6651],"wn.&nbsp; di":[6651],"n.&nbsp; dir":[6651],".&nbsp; dire":[6651],"&nbsp; direc":[6651],"nbsp; direct":[6651],"bsp; directi":[6651],"sp; directio":[6651],"p; direction":[6651],"; directions":[6651],"directions (":[6651],"irections (d":[6651],"rections (di":[6651],"ections (dir":[6651],"ctions (dire":[6651],"tions (direc":[6651],"ions (direct":[6651],"ons (directi":[6651],"ns (directio":[6651],"s (direction":[6651]," (directiona":[6651],"(directional":[6651],"irectional v":[6651],"rectional ve":[6651],"ectional vec":[6651],"ctional vect":[6651],"tional vecto":[6651],"ional vector":[6651],"nal vectors)":[6651],"al vectors) ":[6651],"l vectors) a":[6651]," vectors) ar":[6651],"vectors) are":[6651],"ectors) are ":[6651],"ctors) are u":[6651],"tors) are us":[6651],"ors) are use":[6651],"rs) are used":[6651],"s) are used ":[6651],") are used f":[6651],"e used for m":[6651]," used for mo":[6651],"used for mor":[6651],"sed for more":[6651],"ed for more ":[6651],"d for more t":[6651]," for more th":[6651],"for more thi":[6651],"or more thin":[6651],"r more thing":[6651],"re things th":[6651]," things than":[6651],"things than ":[6651],"hings than j":[6651],"ings than ju":[6651],"ngs than jus":[6651],"gs than just":[6651],"s than just ":[6651]," than just l":[6651],"than just li":[6651],"han just lig":[6651],"an just ligh":[6651],"n just light":[6651]," just lights":[6651],"just lights,":[6651],"ust lights, ":[6651],"st lights, b":[6651],"t lights, bu":[6651]," lights, but":[6651],"lights, but ":[6651],"ights, but l":[6651],"ghts, but li":[6651],"hts, but lig":[6651],"ts, but ligh":[6651],"s, but light":[6651],", but lights":[6651]," but lights ":[6651],"but lights i":[6651],"ut lights is":[6651],"t lights is ":[6651]," lights is a":[6651],"lights is a ":[6651],"ights is a c":[6651],"ghts is a co":[6651],"hts is a com":[6651],"ts is a comm":[6651],"s is a commo":[6651]," is a common":[6651],"is a common ":[6651],"s a common u":[6651]," a common us":[6651],"a common use":[6651]," common use.":[6651],"common use.&":[6651],"ommon use.&n":[6651],"mmon use.&nb":[6651],"mon use.&nbs":[6651],"on use.&nbsp":[6651],"n use.&nbsp;":[6651]," use.&nbsp; ":[6651],"use.&nbsp; d":[6651],"se.&nbsp; di":[6651],"e.&nbsp; dir":[6651],"; directiona":[6651],"nal vectors ":[6651],"al vectors a":[6651],"l vectors ar":[6651]," vectors are":[6651],"vectors are ":[6651],"ectors are n":[6651],"ctors are no":[6651],"tors are not":[6651],"ors are not ":[6651],"rs are not a":[6651],"s are not al":[6651]," are not alw":[6651],"are not alwa":[6651],"re not alway":[6651],"e not always":[6651],"not always e":[6651],"ot always ea":[6651],"t always eas":[6651]," always easy":[6651],"always easy ":[6651],"lways easy t":[6651],"ways easy th":[6651],"ays easy thi":[6651],"ys easy thin":[6651],"s easy thing":[6651]," easy things":[6651],"easy things ":[6651],"asy things t":[6651],"sy things to":[6651],"y things to ":[6651],"things to de":[6651],"hings to det":[6651],"ings to dete":[6651],"ngs to deter":[6651],"gs to determ":[6651],"ermine the x":[6651],"rmine the x,":[6651],"mine the x, ":[6651],"ine the x, y":[6651],"ne the x, y,":[6651],"e the x, y, ":[6651]," the x, y, a":[6651],"the x, y, an":[6651],"he x, y, and":[6651],"e x, y, and ":[6651]," x, y, and z":[6651,6701,6706],"x, y, and z ":[6651,6701,6706],", y, and z p":[6651]," y, and z pa":[6651],"y, and z par":[6651],", and z para":[6651]," and z param":[6651],"and z parame":[6651],"nd z paramet":[6651],"d z paramete":[6651]," z parameter":[6651],"z parameters":[6651],"parameters/v":[6651],"arameters/va":[6651],"rameters/val":[6651],"ameters/valu":[6651],"meters/value":[6651],"eters/values":[6651],"ters/values ":[6651],"ers/values f":[6651],"rs/values fo":[6651],"s/values for":[6651],"/values for.":[6651],"values for.&":[6651],"alues for.&n":[6651],"lues for.&nb":[6651],"ues for.&nbs":[6651],"es for.&nbsp":[6651],"s for.&nbsp;":[6651]," for.&nbsp; ":[6651],"for.&nbsp; w":[6651],"or.&nbsp; we":[6651],"r.&nbsp; we ":[6651],"p; we have s":[6651],"; we have so":[6651]," we have som":[6651],"we have some":[6651],"e have some ":[6651]," have some h":[6651],"have some he":[6651],"ave some hel":[6651],"ve some help":[6651],"e some helpf":[6651]," some helpfu":[6651],"some helpful":[6651],"ome helpful ":[6651],"me helpful t":[6651],"e helpful to":[6651]," helpful too":[6651],"helpful tool":[6651],"elpful tools":[6651],"lpful tools ":[6651],"pful tools o":[6651],"ful tools on":[6651],"ul tools on ":[6651],"l tools on o":[6651]," tools on ou":[6651],"tools on our":[6651],"ools on our ":[6651],"ols on our l":[6651],"ls on our li":[6651],"s on our lig":[6651]," on our ligh":[6651],"on our light":[6651],"n our lights":[6651]," our lights.":[6651],"our lights..":[6651],"ur lights...":[6651],"r lights... ":[6651]," lights... t":[6651],"lights... th":[6651],"ights... tha":[6651],"ghts... that":[6651],"hts... that ":[6651],"ts... that w":[6651],"s... that wi":[6651],"... that wil":[6651],".. that will":[6651],". that will ":[6651],"that will as":[6651],"hat will ass":[6651],"at will assi":[6651],"t will assis":[6651]," will assist":[6651],"will assist ":[6651],"ill assist y":[6651],"ll assist yo":[6651],"l assist you":[6651]," assist you ":[6651],"assist you i":[6651],"ssist you in":[6651],"sist you in ":[6651],"ist you in s":[6651],"st you in se":[6651],"t you in set":[6651]," you in sett":[6651],"you in setti":[6651],"ou in settin":[6651],"u in setting":[6651]," in setting ":[6651],"in setting d":[6651],"n setting di":[6651]," setting dir":[6651],"setting dire":[6651],"etting direc":[6651],"tting direct":[6651],"g directions":[6651]," directions.":[6651],"directions.&":[6651],"irections.&n":[6651],"rections.&nb":[6651],"ections.&nbs":[6651],"ctions.&nbsp":[6651],"tions.&nbsp;":[6651],"ions.&nbsp; ":[6651],"ons.&nbsp; y":[6651],"ns.&nbsp; yo":[6651],"; you will l":[6651,6698],"will learn a":[6651],"ill learn ab":[6651],"ll learn abo":[6651],"l learn abou":[6651],"earn about t":[6651],"arn about th":[6651],"rn about tho":[6651],"n about thos":[6651]," about those":[6651],"about those ":[6651],"bout those t":[6651],"out those to":[6651],"ut those too":[6651],"t those tool":[6651]," those tools":[6651],"those tools ":[6651],"hose tools i":[6651],"ose tools in":[6651],"se tools in ":[6651],"e tools in o":[6651]," tools in ou":[6651],"tools in our":[6651],"ools in our ":[6651],"ols in our l":[6651],"ls in our li":[6651],"s in our lig":[6651]," in our ligh":[6651],"in our light":[6651]," our lights ":[6651],"our lights t":[6651],"ur lights tu":[6651],"r lights tut":[6651]," lights tuto":[6651],"lights tutor":[6651],"ights tutori":[6651],"ghts tutoria":[6651],"hts tutorial":[6651],"ts tutorial.":[6651,6698],"### color3 v":[6653],"## color3 va":[6653],"# color3 val":[6653],"or3 values l":[6654],"r3 values lo":[6654],"3 values loo":[6654]," values look":[6654],"values look ":[6654],"alues look v":[6654],"lues look ve":[6654],"ues look ver":[6654],"es look very":[6654],"s look very ":[6654]," look very m":[6654],"look very mu":[6654],"ook very muc":[6654],"ok very much":[6654],"k very much ":[6654]," very much l":[6654,6716],"very much li":[6654,6716],"ery much lik":[6654,6716],"ry much like":[6654,6716],"y much like ":[6654,6716]," much like v":[6654],"much like ve":[6654],"uch like vec":[6654],"ch like vect":[6654],"h like vecto":[6654]," like vector":[6654],"like vector3":[6654],"ike vector3 ":[6654],"ke vector3 v":[6654],"tor3 values.":[6654],"or3 values.&":[6654],"r3 values.&n":[6654],"3 values.&nb":[6654],"ues.&nbsp; h":[6654],"es.&nbsp; he":[6654],"s.&nbsp; her":[6654],"lon.color3(r":[6656],"on.color3(rv":[6656],"n.color3(rva":[6656],".color3(rval":[6656],"color3(rvalu":[6656],"olor3(rvalue":[6656],"lor3(rvalue,":[6656],"or3(rvalue, ":[6656],"r3(rvalue, g":[6656],"3(rvalue, gv":[6656],"(rvalue, gva":[6656],"rvalue, gval":[6656,6658],"value, gvalu":[6656,6658],"alue, gvalue":[6656,6658],"lue, gvalue,":[6656,6658],"ue, gvalue, ":[6656,6658],"e, gvalue, b":[6656],", gvalue, bv":[6656]," gvalue, bva":[6656],"gvalue, bval":[6656],"value, bvalu":[6656],"alue, bvalue":[6656],"lue, bvalue)":[6656],"the rvalue i":[6658],"he rvalue is":[6658],"e rvalue is ":[6658]," rvalue is f":[6658],"rvalue is fo":[6658],"value is for":[6658],"alue is for ":[6658],"lue is for r":[6658],"ue is for re":[6658],"e is for red":[6658]," is for red,":[6658],"is for red, ":[6658],"s for red, t":[6658]," for red, th":[6658],"for red, the":[6658],"or red, the ":[6658],"r red, the g":[6658]," red, the gv":[6658],"red, the gva":[6658],"ed, the gval":[6658],"d, the gvalu":[6658],", the gvalue":[6658]," the gvalue ":[6658],"the gvalue i":[6658],"he gvalue is":[6658],"e gvalue is ":[6658]," gvalue is f":[6658],"gvalue is fo":[6658],"lue is for g":[6658],"ue is for gr":[6658],"e is for gre":[6658]," is for gree":[6658],"is for green":[6658],"s for green,":[6658]," for green, ":[6658],"for green, a":[6658],"or green, an":[6658],"r green, and":[6658]," green, and ":[6658],"green, and t":[6658],"reen, and th":[6658],"een, and the":[6658],"en, and the ":[6658],"n, and the b":[6658],", and the bv":[6658]," and the bva":[6658],"and the bval":[6658],"nd the bvalu":[6658],"d the bvalue":[6658]," the bvalue ":[6658],"the bvalue i":[6658],"he bvalue is":[6658],"e bvalue is ":[6658]," bvalue is f":[6658],"bvalue is fo":[6658],"lue is for b":[6658],"ue is for bl":[6658],"e is for blu":[6658]," is for blue":[6658],"is for blue.":[6658],"s for blue.&":[6658]," for blue.&n":[6658],"for blue.&nb":[6658],"or blue.&nbs":[6658],"r blue.&nbsp":[6658]," blue.&nbsp;":[6658],"blue.&nbsp; ":[6658],"lue.&nbsp; i":[6658],"ue.&nbsp; i ":[6658],"e.&nbsp; i b":[6658],".&nbsp; i be":[6658,6709],"&nbsp; i bet":[6658,6709],"nbsp; i bet ":[6658,6709],"bsp; i bet y":[6658,6709],"sp; i bet yo":[6658,6709],"p; i bet you":[6658,6709],"; i bet you ":[6658,6709]," i bet you h":[6658],"i bet you ha":[6658]," bet you hav":[6658],"bet you have":[6658],"t you have a":[6658,6671,6682],"ve already f":[6658],"e already fi":[6658]," already fig":[6658],"already figu":[6658],"lready figur":[6658],"ready figure":[6658],"eady figured":[6658],"ady figured ":[6658],"dy figured o":[6658],"y figured ou":[6658]," figured out":[6658],"figured out ":[6658],"igured out t":[6658],"gured out th":[6658],"ured out tha":[6658],"red out that":[6658],"ed out that ":[6658],"d out that c":[6658]," out that co":[6658],"out that col":[6658],"ut that colo":[6658],"t that color":[6658]," that color3":[6658],"that color3 ":[6658],"hat color3 v":[6658],"at color3 va":[6658],"t color3 val":[6658],"r3 values ar":[6658],"3 values are":[6658],"e used for s":[6658]," used for se":[6658],"used for set":[6658],"sed for sett":[6658],"ed for setti":[6658],"d for settin":[6658]," for setting":[6658],"or setting c":[6658],"r setting co":[6658]," setting col":[6658],"setting colo":[6658],"etting color":[6658],"tting colors":[6658],"ting colors.":[6658],"ing colors.&":[6658],"ng colors.&n":[6658],"g colors.&nb":[6658]," colors.&nbs":[6658],"colors.&nbsp":[6658],"olors.&nbsp;":[6658],"lors.&nbsp; ":[6658],"ors.&nbsp; t":[6658],"rs.&nbsp; th":[6658],"nbsp; the rv":[6658],"bsp; the rva":[6658],"sp; the rval":[6658],"p; the rvalu":[6658],"; the rvalue":[6658]," the rvalue,":[6658],"the rvalue, ":[6658],"he rvalue, g":[6658],"e rvalue, gv":[6658]," rvalue, gva":[6658],"e, gvalue, a":[6658],", gvalue, an":[6658]," gvalue, and":[6658],"gvalue, and ":[6658],"value, and b":[6658],"alue, and bv":[6658],"lue, and bva":[6658],"ue, and bval":[6658],"e, and bvalu":[6658],", and bvalue":[6658]," and bvalue,":[6658],"and bvalue, ":[6658],"nd bvalue, a":[6658],"d bvalue, al":[6658]," bvalue, all":[6658],"bvalue, all ":[6658],"value, all c":[6658],"alue, all co":[6658],"lue, all con":[6658],"ue, all cont":[6658],"e, all conta":[6658],", all contai":[6658]," all contain":[6658],"all contain ":[6658],"ll contain f":[6658],"l contain fl":[6658]," contain flo":[6658],"contain floa":[6658],"ontain float":[6658],"ntain float ":[6658],"tain float n":[6658],"ain float nu":[6658],"in float num":[6658],"n float numb":[6658]," float numbe":[6658],"float number":[6658],"loat numbers":[6658],"oat numbers ":[6658],"at numbers i":[6658],"t numbers in":[6658]," numbers in ":[6658],"numbers in t":[6658],"umbers in th":[6658],"mbers in the":[6658],"bers in the ":[6658],"ers in the r":[6658],"rs in the ra":[6658],"s in the ran":[6658]," in the rang":[6658],"in the range":[6658],"n the range ":[6658],"e range of 0":[6658]," range of 0 ":[6658],"range of 0 t":[6658],"ange of 0 to":[6658],"nge of 0 to ":[6658],"ge of 0 to 1":[6658],"e of 0 to 1.":[6658]," of 0 to 1.&":[6658],"of 0 to 1.&n":[6658],"f 0 to 1.&nb":[6658]," 0 to 1.&nbs":[6658],"0 to 1.&nbsp":[6658]," to 1.&nbsp;":[6658],"to 1.&nbsp; ":[6658],"o 1.&nbsp; l":[6658]," 1.&nbsp; le":[6658],"1.&nbsp; let":[6658]," look at a f":[6658],"look at a fe":[6658],"ook at a few":[6658],"ok at a few ":[6658],"k at a few e":[6658]," at a few ex":[6658],"at a few exa":[6658],"t a few exam":[6658]," a few examp":[6658],"a few exampl":[6658]," few example":[6658],"few examples":[6658],"ew examples:":[6658],"r3(1, 0, 0) ":[6660],"3(1, 0, 0) -":[6660],"(1, 0, 0) - ":[6660],"1, 0, 0) - r":[6660],", 0, 0) - re":[6660]," 0, 0) - red":[6660],"lor3(0, 1, 1":[6661],"or3(0, 1, 1)":[6661],"r3(0, 1, 1) ":[6661],"3(0, 1, 1) -":[6661],"(0, 1, 1) - ":[6661],"0, 1, 1) - c":[6661],", 1, 1) - cy":[6661]," 1, 1) - cya":[6661],"1, 1) - cyan":[6661],"r3(0, 1, 0) ":[6662],"3(0, 1, 0) -":[6662],"(0, 1, 0) - ":[6662],"0, 1, 0) - g":[6662],", 1, 0) - gr":[6662]," 1, 0) - gre":[6662],"1, 0) - gree":[6662],", 0) - green":[6662],"lor3(1, 0, 1":[6663],"or3(1, 0, 1)":[6663],"r3(1, 0, 1) ":[6663],"3(1, 0, 1) -":[6663],"(1, 0, 1) - ":[6663],"1, 0, 1) - v":[6663],", 0, 1) - vi":[6663]," 0, 1) - vio":[6663],"0, 1) - viol":[6663],", 1) - viole":[6663]," 1) - violet":[6663],"lor3(1, 1, 0":[6664],"or3(1, 1, 0)":[6664],"r3(1, 1, 0) ":[6664],"3(1, 1, 0) -":[6664],"(1, 1, 0) - ":[6664],"1, 1, 0) - y":[6664],", 1, 0) - ye":[6664]," 1, 0) - yel":[6664],"1, 0) - yell":[6664],", 0) - yello":[6664]," 0) - yellow":[6664],"r3(0, 0, 0) ":[6665],"3(0, 0, 0) -":[6665],"(0, 0, 0) - ":[6665],"0, 0, 0) - b":[6665],", 0, 0) - bl":[6665]," 0, 0) - bla":[6665],"0, 0) - blac":[6665],", 0) - black":[6665],"r3(1, 1, 1) ":[6666],"3(1, 1, 1) -":[6666],"(1, 1, 1) - ":[6666],"1, 1, 1) - w":[6666],", 1, 1) - wh":[6666]," 1, 1) - whi":[6666],"1, 1) - whit":[6666],", 1) - white":[6666],", 0.5, 0.5) ":[6667]," 0.5, 0.5) -":[6667],"0.5, 0.5) - ":[6667],".5, 0.5) - m":[6667],"5, 0.5) - me":[6667],", 0.5) - med":[6667]," 0.5) - medi":[6667],"0.5) - mediu":[6667],".5) - medium":[6667],"5) - medium ":[6667],") - medium g":[6667]," - medium gr":[6667],"- medium gra":[6667]," medium gray":[6667],"lor3(0.2, 0,":[6668],"or3(0.2, 0, ":[6668],"r3(0.2, 0, 0":[6668],"3(0.2, 0, 0.":[6668],"(0.2, 0, 0.2":[6668],"0.2, 0, 0.2)":[6668],".2, 0, 0.2) ":[6668],"2, 0, 0.2) -":[6668],", 0, 0.2) - ":[6668]," 0, 0.2) - d":[6668],"0, 0.2) - da":[6668],", 0.2) - dar":[6668]," 0.2) - dark":[6668],"0.2) - dark ":[6668],".2) - dark p":[6668],"2) - dark pu":[6668],") - dark pur":[6668]," - dark purp":[6668],"- dark purpl":[6668]," dark purple":[6668],"not so diffi":[6671],"ot so diffic":[6671],"t so difficu":[6671]," so difficul":[6671],"so difficult":[6671],"o difficult.":[6671]," difficult.&":[6671],"difficult.&n":[6671],"ifficult.&nb":[6671],"fficult.&nbs":[6671],"ficult.&nbsp":[6671],"icult.&nbsp;":[6671],"cult.&nbsp; ":[6671],"ult.&nbsp; l":[6671],"lt.&nbsp; le":[6671],"t.&nbsp; let":[6671],"bsp; let's s":[6671],"sp; let's sa":[6671],"p; let's say":[6671],"; let's say ":[6671]," let's say t":[6671],"let's say th":[6671],"et's say tha":[6671],"t's say that":[6671],"'s say that ":[6671],"s say that y":[6671]," say that yo":[6671],"say that you":[6671],"ay that you ":[6671],"y that you w":[6671],"at you wante":[6671],"t you wanted":[6671]," you wanted ":[6671],"you wanted t":[6671],"ou wanted to":[6671],"u wanted to ":[6671]," wanted to p":[6671],"wanted to pu":[6671],"anted to put":[6671],"nted to put ":[6671],"ted to put a":[6671],"ed to put a ":[6671],"d to put a c":[6671]," to put a co":[6671],"to put a col":[6671],"o put a colo":[6671]," put a color":[6671],"put a color ":[6671],"ut a color o":[6671],"t a color on":[6671]," a color on ":[6671],"a color on a":[6671]," color on a ":[6671],"color on a b":[6671],"olor on a bo":[6671],"lor on a box":[6671],"or on a box ":[6671],"r on a box t":[6671],"a box that y":[6671]," box that yo":[6671],"box that you":[6671],"ox that you ":[6671],"x that you h":[6671],"ve already c":[6671,6682],"e already cr":[6671,6682]," already cre":[6671,6682],"already crea":[6671,6682],"lready creat":[6671,6682],"ready create":[6671,6682],"eady created":[6671,6682],"ady created.":[6671],"dy created.&":[6671],"y created.&n":[6671],"ted.&nbsp; t":[6671]," thing you d":[6671],"thing you do":[6671],"hing you do ":[6671],"ing you do i":[6671],"ng you do is":[6671],"g you do is ":[6671]," you do is c":[6671],"you do is cr":[6671],"ou do is cre":[6671],"u do is crea":[6671],"s create a j":[6671]," create a ja":[6671],"create a jav":[6671],"reate a java":[6671],"eate a javas":[6671],"ate a javasc":[6671],"te a javascr":[6671],"t object cal":[6671],"ect called a":[6671],"ct called a ":[6671],"t called a s":[6671]," called a st":[6671],"called a sta":[6671],"alled a stan":[6671],"lled a stand":[6671],"led a standa":[6671],"ed a standar":[6671],"d a standard":[6671],"rdmaterial.&":[6671,6676],"dmaterial.&n":[6671,6676],"l.&nbsp; the":[6671,6676],"; then you w":[6671]," then you wo":[6671],"then you wou":[6671],"hen you woul":[6671],"en you would":[6671],"n you would ":[6671]," you would a":[6671],"you would ap":[6671],"ou would app":[6671],"u would appl":[6671]," would apply":[6671],"would apply ":[6671],"ould apply (":[6671],"uld apply (s":[6671],"ld apply (se":[6671],"d apply (set":[6671]," apply (set)":[6671],"apply (set) ":[6671],"pply (set) t":[6671],"ply (set) th":[6671],"ly (set) tha":[6671],"y (set) that":[6671]," (set) that ":[6671],"(set) that s":[6671],"set) that st":[6671],"et) that sta":[6671],"t) that stan":[6671],") that stand":[6671]," that standa":[6671],"that standar":[6671],"hat standard":[6671],"at standardm":[6671],"t standardma":[6671],"rdmaterial a":[6671,6676,6698],"dmaterial as":[6671],"ial as the b":[6671],"al as the bo":[6671],"l as the box":[6671]," as the box'":[6671],"as the box's":[6671],"s the box's ":[6671,6676]," the box's .":[6671,6676,6709],"the box's .m":[6671,6676],"he box's .ma":[6671,6676],"e box's .mat":[6671,6676]," box's .mate":[6671,6676],"box's .mater":[6671,6676],"ox's .materi":[6671,6676],"x's .materia":[6671,6676],"'s .material":[6671,6676],"s .material ":[6671,6676]," .material p":[6671,6676],".material pr":[6671,6676],"al property.":[6671,6676],"l property.&":[6671]," property.&n":[6671,6701],"property.&nb":[6671,6701],"roperty.&nbs":[6671,6701],"operty.&nbsp":[6671,6701],"perty.&nbsp;":[6671,6701],"erty.&nbsp; ":[6671,6701],"rty.&nbsp; t":[6671,6701],"ty.&nbsp; th":[6671],"y.&nbsp; thi":[6671],"p; this is c":[6671],"; this is co":[6671]," this is cov":[6671],"this is cove":[6671],"his is cover":[6671],"is is covere":[6671],"s is covered":[6671]," is covered ":[6671],"is covered b":[6671],"s covered by":[6671]," covered by ":[6671],"covered by o":[6671],"overed by ou":[6671],"vered by our":[6671],"ered by our ":[6671],"red by our m":[6671],"ed by our ma":[6671],"d by our mat":[6671]," by our mate":[6671],"by our mater":[6671],"ls tutorial,":[6671],"orial, but l":[6671],"rial, but le":[6671],"ial, but let":[6671],"al, but let'":[6671],"l, but let's":[6671],", but let's ":[6671]," but let's l":[6671],"but let's lo":[6671],"ut let's loo":[6671],"t let's look":[6671],"'s look at h":[6671],"s look at ho":[6671]," look at how":[6671,6682],"look at how ":[6671,6682],"ook at how t":[6671,6682],"ok at how th":[6671],"k at how tha":[6671]," at how that":[6671],"at how that ":[6671],"t how that i":[6671]," how that is":[6671],"how that is ":[6671],"ow that is d":[6671],"w that is do":[6671]," that is don":[6671],"hat is done,":[6671],"at is done, ":[6671],"t is done, h":[6671]," is done, he":[6671],"is done, her":[6671],"s done, here":[6671]," done, here.":[6671],"var mymateri":[6673],"ar mymateria":[6673],"r mymaterial":[6673]," mymaterial ":[6673],"mymaterial =":[6673],"ymaterial = ":[6673],"material(\"my":[6673],"aterial(\"mym":[6673],"terial(\"myma":[6673],"erial(\"mymat":[6673],"rial(\"mymat\"":[6673],"ial(\"mymat\",":[6673],"al(\"mymat\", ":[6673],"l(\"mymat\", s":[6673],"(\"mymat\", sc":[6673],"\"mymat\", sce":[6673],"mymat\", scen":[6673],"ymat\", scene":[6673],"mat\", scene)":[6673],"at\", scene);":[6673],"mybox.materi":[6674],"aterial = my":[6674],"terial = mym":[6674],"erial = myma":[6674],"rial = mymat":[6674],"ial = mymate":[6674],"al = mymater":[6674],"l = mymateri":[6674]," = mymateria":[6674],"= mymaterial":[6674]," mymaterial;":[6674],"mymaterial;&":[6674],"ymaterial;&n":[6674],"material;&nb":[6674],"aterial;&nbs":[6674],"terial;&nbsp":[6674],"erial;&nbsp;":[6674],"rial;&nbsp; ":[6674],"the first li":[6676],"he first lin":[6676],"e first line":[6676]," first line ":[6676],"first line c":[6676],"irst line cr":[6676],"rst line cre":[6676],"st line crea":[6676],"t line creat":[6676]," line create":[6676],"line creates":[6676]," creates a s":[6676],"creates a st":[6676],"reates a sta":[6676],"eates a stan":[6676],"ates a stand":[6676],"tes a standa":[6676],"es a standar":[6676],"s a standard":[6676],"dmaterial an":[6676],"terial and p":[6676],"erial and pu":[6676],"rial and put":[6676],"ial and puts":[6676],"al and puts ":[6676],"l and puts i":[6676]," and puts it":[6676],"and puts it ":[6676],"nd puts it i":[6676],"d puts it in":[6676]," puts it int":[6676],"puts it into":[6676],"uts it into ":[6676],"ts it into t":[6676],"s it into th":[6676],"t into the v":[6676]," into the va":[6676],"into the var":[6676],"nto the vari":[6676],"to the varia":[6676],"o the variab":[6676],"e variable n":[6676]," variable na":[6676],"variable nam":[6676],"ariable name":[6676],"riable named":[6676],"iable named ":[6676],"able named m":[6676],"ble named my":[6676],"le named mym":[6676],"e named myma":[6676]," named mymat":[6676],"named mymate":[6676],"amed mymater":[6676],"med mymateri":[6676],"ed mymateria":[6676],"d mymaterial":[6676]," mymaterial.":[6676],"mymaterial.&":[6676],"ymaterial.&n":[6676],"nbsp; the se":[6676],"bsp; the sec":[6676],"sp; the seco":[6676],"p; the secon":[6676],"; the second":[6676],"the second l":[6676],"he second li":[6676],"e second lin":[6676]," second line":[6676],"second line ":[6676],"econd line s":[6676],"cond line se":[6676],"ond line set":[6676],"nd line sets":[6676],"d line sets ":[6676]," line sets t":[6676],"line sets th":[6676],"ine sets the":[6676],"ne sets the ":[6676],"e sets the b":[6676]," sets the bo":[6676],"sets the box":[6676],"ets the box'":[6676],"ts the box's":[6676],"l property..":[6676],"roperty... t":[6676],"operty... to":[6676],"perty... to ":[6676],"erty... to b":[6676],"rty... to be":[6676],"ty... to be ":[6676],"y... to be t":[6676],"... to be th":[6676],".. to be tha":[6676],". to be that":[6676]," to be that ":[6676],"to be that n":[6676],"o be that ne":[6676]," be that new":[6676],"be that newl":[6676],"e that newly":[6676]," that newly-":[6676],"that newly-m":[6676],"hat newly-ma":[6676],"at newly-mad":[6676],"t newly-made":[6676]," newly-made ":[6676],"newly-made s":[6676],"ewly-made st":[6676],"wly-made sta":[6676],"ly-made stan":[6676],"y-made stand":[6676],"-made standa":[6676],"made standar":[6676],"ade standard":[6676],"de standardm":[6676],"&nbsp; the a":[6676],"nbsp; the ap":[6676],"bsp; the app":[6676],"sp; the appe":[6676],"p; the appea":[6676],"; the appear":[6676]," the appeara":[6676],"the appearan":[6676],"he appearanc":[6676],"e appearance":[6676]," appearance ":[6676],"appearance o":[6676],"ppearance of":[6676],"pearance of ":[6676],"earance of t":[6676],"arance of th":[6676],"rance of the":[6676],"nce of the b":[6676],"ce of the bo":[6676],"of the box w":[6676],"f the box wi":[6676],"e box will n":[6676]," box will no":[6676],"box will not":[6676],"ox will not ":[6676],"x will not c":[6676]," will not ch":[6676],"will not cha":[6676],"ill not chan":[6676],"ll not chang":[6676],"l not change":[6676]," not change ":[6676],"not change y":[6676],"ot change ye":[6676],"t change yet":[6676]," change yet,":[6676],"change yet, ":[6676],"hange yet, b":[6676],"ange yet, be":[6676],"nge yet, bec":[6676],"ge yet, beca":[6676],"e yet, becau":[6676]," yet, becaus":[6676],"yet, because":[6676],"et, because ":[6676],"t, because w":[6676],", because we":[6676,7141],"because we h":[6676],"ecause we ha":[6676],"cause we hav":[6676],"ause we have":[6676],"use we have ":[6676],"se we have n":[6676],"e we have no":[6676],"e have not g":[6676]," have not gi":[6676],"have not giv":[6676],"ave not give":[6676],"ve not given":[6676],"e not given ":[6676]," not given t":[6676],"not given th":[6676],"ot given the":[6676],"t given the ":[6676]," given the s":[6676],"given the st":[6676],"iven the sta":[6676],"ven the stan":[6676],"en the stand":[6676],"n the standa":[6676],"material any":[6676],"aterial any ":[6676],"terial any i":[6676],"erial any in":[6676],"rial any inf":[6676],"ial any info":[6676],"al any infor":[6676],"l any inform":[6676]," any informa":[6676],"any informat":[6676],"ny informati":[6676],"y informatio":[6676],"tion about w":[6676],"ion about wh":[6676],"on about wha":[6676],"n about what":[6676],"about what c":[6676],"bout what co":[6676],"out what col":[6676],"ut what colo":[6676],"t what color":[6676]," what color ":[6676],"what color w":[6676],"hat color we":[6676],"at color we ":[6676],"t color we w":[6676]," color we wa":[6676],"color we wan":[6676],"olor we want":[6676],"lor we want ":[6676],"or we want t":[6676],"r we want th":[6676],"e want the b":[6676]," want the bo":[6676],"want the box":[6676],"ant the box ":[6676],"nt the box t":[6676],"t the box to":[6676]," the box to ":[6676],"the box to b":[6676],"he box to be":[6676],"e box to be.":[6676]," box to be.&":[6676],"box to be.&n":[6676],"ox to be.&nb":[6676],"x to be.&nbs":[6676]," to be.&nbsp":[6676],"to be.&nbsp;":[6676],"o be.&nbsp; ":[6676],"f the many p":[6677]," the many pr":[6677],"the many pro":[6677],"he many prop":[6677],"ties on a st":[6677],"ies on a sta":[6677],"es on a stan":[6677],"s on a stand":[6677],"rdmaterial o":[6677,6681,6686],"dmaterial ob":[6677,6681,6686],"rial object.":[6677],"ial object..":[6677],"al object...":[6677],"l object... ":[6677],"ject... is n":[6677],"ect... is na":[6677],"ct... is nam":[6677],"t... is name":[6677],"... is named":[6677],".. is named ":[6677],". is named .":[6677]," is named .d":[6677],"is named .di":[6677],"s named .dif":[6677]," named .diff":[6677,6682],"named .diffu":[6677,6682],"amed .diffus":[6677,6682],"med .diffuse":[6677,6682],"ed .diffusec":[6677],"d .diffuseco":[6677]," .diffusecol":[6677,6682,6698],"iffusecolor.":[6677,6682],"ffusecolor.&":[6677,6682],"fusecolor.&n":[6677,6682],"usecolor.&nb":[6677,6682],"secolor.&nbs":[6677,6682],"ecolor.&nbsp":[6677,6682],"color.&nbsp;":[6677,6681,6682,6686,6698],"olor.&nbsp; ":[6677,6681,6682,6686,6698],"lor.&nbsp; t":[6677],"r.&nbsp; tha":[6677,6717],"nbsp; that p":[6677],"bsp; that pr":[6677],"sp; that pro":[6677],"p; that prop":[6677],"; that prope":[6677],"t property i":[6677],"roperty is t":[6677],"operty is th":[6677],"perty is the":[6677],"erty is the ":[6677],"rty is the p":[6677],"ty is the pr":[6677],"y is the pri":[6677]," is the prim":[6677],"is the prima":[6677],"s the primar":[6677],"he primary w":[6677],"e primary wa":[6677],"primary way ":[6677],"rimary way t":[6677],"imary way to":[6677],"mary way to ":[6677],"ary way to s":[6677],"ry way to se":[6677],"y way to set":[6677]," way to set ":[6677,6703],"way to set a":[6677],"ay to set a ":[6677],"y to set a b":[6677]," to set a ba":[6677],"to set a bas":[6677],"o set a basi":[6677]," set a basic":[6677],"set a basic ":[6677],"et a basic c":[6677],"t a basic co":[6677]," a basic col":[6677],"a basic colo":[6677]," basic color":[6677],"basic color.":[6677],"asic color.&":[6677],"sic color.&n":[6677],"ic color.&nb":[6677],"c color.&nbs":[6677]," color.&nbsp":[6677,6682,6686],"lor.&nbsp; a":[6677,6681],"or.&nbsp; an":[6677],"r.&nbsp; and":[6677],"&nbsp; and r":[6677],"nbsp; and ri":[6677],"bsp; and rig":[6677],"sp; and righ":[6677],"p; and right":[6677],"; and right ":[6677]," and right h":[6677],"and right he":[6677],"nd right her":[6677],"d right here":[6677]," right here.":[6677],"right here..":[6677],"ight here...":[6677],"ght here... ":[6677],"ht here... i":[6677],"t here... is":[6677]," here... is ":[6677],"here... is w":[6677],"ere... is wh":[6677],"re... is whe":[6677],"e... is wher":[6677],"... is where":[6677],".. is where ":[6677],". is where w":[6677]," is where we":[6677],"is where we ":[6677],"s where we u":[6677]," where we us":[6677],"where we use":[6677],"here we use ":[6677],"ere we use o":[6677],"re we use ou":[6677],"e we use our":[6677]," we use our ":[6677],"we use our n":[6677],"e use our ne":[6677]," use our new":[6677],"use our new ":[6677],"se our new c":[6677],"e our new co":[6677]," our new col":[6677],"our new colo":[6677],"ur new color":[6677],"r new color3":[6677]," new color3 ":[6677],"new color3 v":[6677],"ew color3 va":[6677],"w color3 val":[6677],"lue.&nbsp; l":[6677],"ue.&nbsp; le":[6677],"e.&nbsp; let":[6677],"bsp; let's h":[6677],"sp; let's ha":[6677],"p; let's hav":[6677],"; let's have":[6677],"mymaterial.d":[6679],"ymaterial.di":[6679],"color3(0, 0.":[6679],"olor3(0, 0.5":[6679],"lor3(0, 0.5,":[6679],"or3(0, 0.5, ":[6679],"r3(0, 0.5, 0":[6679],"3(0, 0.5, 0)":[6679],"(0, 0.5, 0);":[6679],"our box is n":[6681],"ur box is no":[6681],"r box is now":[6681]," box is now ":[6681],"box is now c":[6681],"ox is now co":[6681],"x is now col":[6681]," is now colo":[6681],"is now color":[6681],"s now colore":[6681]," now colored":[6681],"now colored ":[6681],"ow colored m":[6681],"w colored me":[6681]," colored med":[6681],"colored medi":[6681],"olored mediu":[6681],"lored medium":[6681],"ored medium ":[6681],"red medium g":[6681],"ed medium gr":[6681],"d medium gre":[6681]," medium gree":[6681],"medium green":[6681],"edium green.":[6681],"dium green.&":[6681],"ium green.&n":[6681],"um green.&nb":[6681],"m green.&nbs":[6681]," green.&nbsp":[6681],"green.&nbsp;":[6681],"reen.&nbsp; ":[6681],"een.&nbsp; i":[6681],"en.&nbsp; it":[6681],"n.&nbsp; it'":[6681],"nbsp; it's j":[6681],"bsp; it's ju":[6681],"sp; it's jus":[6681],"p; it's just":[6681],"; it's just ":[6681]," it's just t":[6681],"it's just th":[6681],"t's just tha":[6681],"'s just that":[6681],"s just that ":[6681]," just that e":[6681],"just that ea":[6681],"ust that eas":[6681],"st that easy":[6681],"t that easy.":[6681]," that easy.&":[6681],"that easy.&n":[6681],"hat easy.&nb":[6681],"at easy.&nbs":[6681],"t easy.&nbsp":[6681],"asy.&nbsp; t":[6681],"sy.&nbsp; th":[6681],"nbsp; the st":[6681],"bsp; the sta":[6681],"sp; the stan":[6681],"p; the stand":[6681],"; the standa":[6681],"ial object h":[6681],"al object ha":[6681],"l object has":[6681],"t has many o":[6681]," has many ot":[6681],"has many oth":[6681],"as many othe":[6681],"s many other":[6681],"many other p":[6681],"any other pr":[6681],"ny other pro":[6681],"y other prop":[6681],"perties on i":[6681],"erties on it":[6681],"rties on it.":[6681],"ties on it.&":[6681],"ies on it.&n":[6681],"es on it.&nb":[6681],"s on it.&nbs":[6681]," on it.&nbsp":[6681],"on it.&nbsp;":[6681],"n it.&nbsp; ":[6681]," it.&nbsp; y":[6681],"it.&nbsp; yo":[6681],"t.&nbsp; you":[6681,6713],"ou can add c":[6681],"u can add co":[6681]," can add col":[6681],"can add colo":[6681],"an add color":[6681],"n add color ":[6681]," add color t":[6681],"add color to":[6681],"dd color to ":[6681],"d color to p":[6681]," color to pr":[6681],"color to pro":[6681],"olor to prop":[6681],"lor to prope":[6681],"or to proper":[6681],"r to propert":[6681]," to properti":[6681],"to propertie":[6681],"roperties su":[6681],"operties suc":[6681],"perties such":[6681],"erties such ":[6681],"rties such a":[6681],"ties such as":[6681],"ies such as&":[6681],"es such as&n":[6681],"s such as&nb":[6681]," such as&nbs":[6681],"such as&nbsp":[6681],"uch as&nbsp;":[6681],"ch as&nbsp; ":[6681],"h as&nbsp; .":[6681]," as&nbsp; .s":[6681],"as&nbsp; .sp":[6681],"s&nbsp; .spe":[6681],"&nbsp; .spec":[6681],"nbsp; .specu":[6681],"bsp; .specul":[6681],"sp; .specula":[6681],"p; .specular":[6681],"; .specularc":[6681]," .specularco":[6681],"ecularcolor,":[6681],"cularcolor, ":[6681],"ularcolor, .":[6681],"larcolor, .e":[6681],"arcolor, .em":[6681],"rcolor, .emi":[6681],"color, .emis":[6681],"olor, .emiss":[6681],"lor, .emissi":[6681],"or, .emissiv":[6681],"r, .emissive":[6681],", .emissivec":[6681]," .emissiveco":[6681],"issivecolor,":[6681],"ssivecolor, ":[6681],"sivecolor, .":[6681],"ivecolor, .a":[6681],"vecolor, .am":[6681],"ecolor, .amb":[6681],"color, .ambi":[6681],"olor, .ambie":[6681],"lor, .ambien":[6681],"or, .ambient":[6681],"r, .ambientc":[6681],", .ambientco":[6681]," .ambientcol":[6681],"mbientcolor.":[6681],"bientcolor.&":[6681],"ientcolor.&n":[6681],"entcolor.&nb":[6681],"ntcolor.&nbs":[6681],"tcolor.&nbsp":[6681],"or.&nbsp; al":[6681],"r.&nbsp; all":[6681],".&nbsp; all ":[6681],"&nbsp; all t":[6681],"nbsp; all th":[6681],"bsp; all tho":[6681],"sp; all thos":[6681],"p; all those":[6681],"; all those ":[6681]," all those p":[6681],"all those pr":[6681],"ll those pro":[6681],"l those prop":[6681],"ies are set ":[6681],"es are set (":[6681],"s are set (i":[6681]," are set (if":[6681],"are set (if ":[6681],"re set (if y":[6681],"e set (if yo":[6681]," set (if you":[6681],"set (if you ":[6681],"et (if you c":[6681],"t (if you ch":[6681]," (if you cho":[6681],"(if you choo":[6681]," you choose)":[6681],"you choose).":[6681],"ou choose)..":[6681],"u choose)...":[6681]," choose)... ":[6681],"choose)... u":[6681],"hoose)... us":[6681],"oose)... usi":[6681],"ose)... usin":[6681],"se)... using":[6681],"e)... using ":[6681],")... using o":[6681],"... using ou":[6681],".. using our":[6681],". using our ":[6681]," using our f":[6681],"using our fr":[6681,6703],"sing our fri":[6681,6703],"ing our frie":[6681,6703],"ng our frien":[6681,6703],"g our friend":[6681,6703]," our friend.":[6681,6703],"our friend..":[6681,6703],"ur friend...":[6681,6703],"r friend... ":[6681,6703]," friend... t":[6681,6703],"friend... th":[6681,6703],"riend... the":[6681,6703],"iend... the ":[6681,6703],"end... the b":[6681],"nd... the ba":[6681],"d... the bab":[6681],"... the baby":[6681],".. the babyl":[6681],"bylon.js col":[6681],"ylon.js colo":[6681],"lon.js color":[6681],"on.js color3":[6681],"n.js color3 ":[6681],".js color3 v":[6681],"js color3 va":[6681],"s color3 val":[6681],"nother use o":[6682],"other use of":[6682],"ther use of ":[6682],"her use of t":[6682],"r use of the":[6682]," use of the ":[6682],"use of the c":[6682],"se of the co":[6682],"e of the col":[6682],"f the color3":[6682],"olor3 value ":[6682],"lor3 value i":[6682],"3 value is t":[6682]," value is to":[6682],"value is to ":[6682],"alue is to s":[6682],"lue is to se":[6682],"ue is to set":[6682],"e is to set ":[6682]," is to set t":[6682],"is to set th":[6682],"o set the .d":[6682]," set the .di":[6682],"set the .dif":[6682],"et the .diff":[6682],"t the .diffu":[6682]," the .diffus":[6682],"the .diffuse":[6682],"he .diffuse ":[6682],"e .diffuse p":[6682]," .diffuse pr":[6682,6698],".diffuse pro":[6682,6698],"diffuse prop":[6682,6698],"iffuse prope":[6682,6698],"ffuse proper":[6682,6698],"fuse propert":[6682,6698],"use property":[6682,6698],"se property ":[6682,6698],"e property o":[6682],"roperty of l":[6682],"operty of li":[6682],"perty of lig":[6682],"erty of ligh":[6682],"rty of light":[6682],"ty of lights":[6682],"y of lights.":[6682]," of lights.&":[6682],"of lights.&n":[6682],"f lights.&nb":[6682],"hts.&nbsp; t":[6682],"ts.&nbsp; ta":[6682],"s.&nbsp; tak":[6682],".&nbsp; take":[6682],"&nbsp; take ":[6682],"nbsp; take c":[6682],"bsp; take ca":[6682],"sp; take car":[6682],"p; take care":[6682],"; take caref":[6682]," take carefu":[6682],"take careful":[6682],"ake careful ":[6682],"ke careful n":[6682],"e careful no":[6682]," careful not":[6682],"careful note":[6682],"areful note ":[6682],"reful note t":[6682],"eful note th":[6682],"ful note tha":[6682],"ul note that":[6682],"l note that ":[6682],"e that the n":[6682]," that the na":[6682],"that the nam":[6682],"hat the name":[6682],"at the name ":[6682],"me of this p":[6682]," of this pro":[6682],"of this prop":[6682],"f this prope":[6682],"roperty is .":[6682],"operty is .d":[6682],"perty is .di":[6682],"erty is .dif":[6682],"rty is .diff":[6682],"ty is .diffu":[6682],"y is .diffus":[6682]," is .diffuse":[6682],"is .diffuse,":[6682],"s .diffuse, ":[6682]," .diffuse, a":[6682],".diffuse, an":[6682],"diffuse, and":[6682],"iffuse, and ":[6682],"ffuse, and n":[6682],"fuse, and no":[6682],"use, and not":[6682],"se, and not ":[6682],"e, and not .":[6682],", and not .d":[6682]," and not .di":[6682],"and not .dif":[6682],"nd not .diff":[6682],"d not .diffu":[6682]," not .diffus":[6682],"not .diffuse":[6682],"ot .diffusec":[6682],"t .diffuseco":[6682],"lor.&nbsp; l":[6682],"or.&nbsp; li":[6682],"r.&nbsp; lig":[6682],".&nbsp; ligh":[6682],"&nbsp; light":[6682],"nbsp; lights":[6682],"bsp; lights ":[6682],"sp; lights u":[6682],"p; lights us":[6682],"; lights use":[6682],"lights use a":[6682],"ights use a ":[6682],"ghts use a p":[6682],"hts use a pr":[6682],"ts use a pro":[6682],"s use a prop":[6682]," use a prope":[6682],"use a proper":[6682],"se a propert":[6682],"e a property":[6682],"a property n":[6682],"erty named .":[6682],"rty named .d":[6682],"ty named .di":[6682],"y named .dif":[6682],"ed .diffuse ":[6682],"d .diffuse t":[6682]," .diffuse to":[6682],".diffuse to ":[6682],"diffuse to s":[6682],"iffuse to se":[6682],"ffuse to set":[6682],"fuse to set ":[6682],"use to set t":[6682],"se to set th":[6682]," to set thei":[6682],"to set their":[6682],"o set their ":[6682]," set their p":[6682],"set their pr":[6682],"et their pri":[6682],"t their prim":[6682]," their prima":[6682],"their primar":[6682],"heir primary":[6682],"eir primary ":[6682],"ir primary c":[6682],"r primary co":[6682],"imary color.":[6682],"mary color.&":[6682],"ary color.&n":[6682],"ry color.&nb":[6682],"y color.&nbs":[6682],"or.&nbsp; le":[6682],"r.&nbsp; let":[6682]," a look at h":[6682],"a look at ho":[6682],"ok at how to":[6682],"k at how to ":[6682]," at how to s":[6682],"at how to se":[6682],"t how to set":[6682]," how to set ":[6682],"how to set t":[6682],"ow to set th":[6682],"w to set the":[6682]," set the pri":[6682],"set the prim":[6682],"et the prima":[6682],"t the primar":[6682],"mary color o":[6682],"ary color of":[6682],"ry color of ":[6682],"y color of a":[6682]," color of a ":[6682],"color of a l":[6682],"olor of a li":[6682],"lor of a lig":[6682],"or of a ligh":[6682],"r of a light":[6682]," of a light ":[6682],"of a light t":[6682],"f a light th":[6682],"light that y":[6682],"ight that yo":[6682],"ght that you":[6682],"ht that you ":[6682],"t that you h":[6682],"ady created:":[6682],"mylight.diff":[6684],"ylight.diffu":[6684],"ght.diffuse ":[6684],"ht.diffuse =":[6684],"t.diffuse = ":[6684],"lor3(0.5, 0,":[6684],"or3(0.5, 0, ":[6684],"r3(0.5, 0, 0":[6684],"3(0.5, 0, 0)":[6684],"(0.5, 0, 0);":[6684],"and there we":[6686],"nd there we ":[6686],"d there we g":[6686]," there we go":[6686],"there we go.":[6686],"here we go.&":[6686],"ere we go.&n":[6686],"re we go.&nb":[6686],"e we go.&nbs":[6686]," we go.&nbsp":[6686],"we go.&nbsp;":[6686],"e go.&nbsp; ":[6686]," go.&nbsp; w":[6686],"go.&nbsp; we":[6686],"o.&nbsp; we ":[6686],"p; we have c":[6686],"; we have co":[6686]," we have col":[6686],"we have colo":[6686],"e have color":[6686],"ve colored t":[6686],"e colored th":[6686]," colored the":[6686],"colored the ":[6686],"olored the l":[6686],"lored the li":[6686],"ored the lig":[6686],"red the ligh":[6686],"ed the light":[6686]," the light b":[6686],"the light be":[6686],"he light bea":[6686],"e light beam":[6686]," light beam ":[6686],"light beam t":[6686],"ight beam th":[6686],"ght beam tha":[6686],"ht beam that":[6686],"t beam that ":[6686]," beam that e":[6686],"beam that em":[6686],"eam that emi":[6686],"am that emit":[6686],"m that emits":[6686]," that emits ":[6686],"that emits f":[6686],"hat emits fr":[6686],"at emits fro":[6686],"t emits from":[6686]," emits from ":[6686],"emits from o":[6686],"mits from ou":[6686],"its from our":[6686],"s from our l":[6686]," from our li":[6686],"from our lig":[6686],"rom our ligh":[6686],"om our light":[6686],"m our light.":[6686]," our light..":[6686],"our light...":[6686],"ur light... ":[6686],"r light... t":[6686]," light... to":[6686],"light... to ":[6686],"ight... to b":[6686],"ght... to be":[6686],"ht... to be ":[6686],"t... to be m":[6686],"... to be me":[6686],".. to be med":[6686],". to be medi":[6686]," to be mediu":[6686],"to be medium":[6686],"o be medium ":[6686]," be medium r":[6686],"be medium re":[6686],"e medium red":[6686]," medium red.":[6686],"medium red.&":[6686],"edium red.&n":[6686],"dium red.&nb":[6686],"ium red.&nbs":[6686],"um red.&nbsp":[6686],"m red.&nbsp;":[6686]," red.&nbsp; ":[6686],"; there is o":[6686],"ere is one m":[6686],"re is one mo":[6686],"e is one mor":[6686]," is one more":[6686],"is one more ":[6686],"s one more u":[6686]," one more us":[6686],"one more use":[6686],"ne more use ":[6686],"e more use f":[6686]," more use fo":[6686],"more use for":[6686],"ore use for ":[6686],"re use for a":[6686],"e use for a ":[6686]," use for a c":[6686],"use for a co":[6686],"se for a col":[6686],"e for a colo":[6686]," for a color":[6686],"for a color3":[6686],"or a color3 ":[6686],"r a color3 v":[6686]," a color3 va":[6686,6698],"a color3 val":[6686,6698],"olor3 value,":[6686],"lor3 value, ":[6686],"lue, and tha":[6686],"ue, and that":[6686],"e, and that ":[6686],", and that i":[6686]," and that is":[6686],"and that is ":[6686],"nd that is o":[6686],"d that is on":[6686]," that is on ":[6686],"that is on o":[6686],"hat is on on":[6686],"at is on one":[6686],"t is on one ":[6686]," is on one o":[6686],"is on one of":[6686],"s on one of ":[6686]," on one of o":[6686],"on one of ou":[6686],"n one of our":[6686],"one of our n":[6686],"ne of our ne":[6686],"e of our new":[6686]," of our newe":[6686],"of our newes":[6686],"f our newest":[6686]," our newest ":[6686],"our newest b":[6686],"ur newest ba":[6686],"r newest bas":[6686]," newest basi":[6686],"newest basic":[6686],"ewest basic ":[6686],"west basic s":[6686],"est basic sh":[6686],"st basic sha":[6686],"t basic shap":[6686],"asic shape o":[6686],"sic shape ob":[6686],"ic shape obj":[6686],"c shape obje":[6686]," shape objec":[6686],"shape object":[6686],"hape objects":[6686],"ape objects.":[6686],"pe objects..":[6686],"e objects...":[6686],"objects... c":[6686],"bjects... ca":[6686],"jects... cal":[6686],"ects... call":[6686],"cts... calle":[6686],"ts... called":[6686],"s... called ":[6686],"... called a":[6686],".. called a ":[6686],". called a l":[6686]," called a li":[6686],"called a lin":[6686],"alled a line":[6686],"lled a lines":[6686],"led a lines ":[6686],"ed a lines o":[6686],"d a lines ob":[6686]," a lines obj":[6686],"a lines obje":[6686]," lines objec":[6686,6698],"lines object":[6686,6698],"ines object.":[6686],"nes object.&":[6686],"es object.&n":[6686],"s object.&nb":[6686],"ect.&nbsp; a":[6686],"ct.&nbsp; a ":[6686],"t.&nbsp; a l":[6686],".&nbsp; a li":[6686],"&nbsp; a lin":[6686],"nbsp; a line":[6686],"bsp; a lines":[6686],"sp; a lines ":[6686],"p; a lines o":[6686],"; a lines ob":[6686],"ines object ":[6686,6698],"nes object d":[6686],"es object do":[6686],"s object doe":[6686]," object does":[6686],"object does ":[6686],"bject does n":[6686],"ject does no":[6686],"ect does not":[6686],"ct does not ":[6686],"t does not u":[6686,6698]," does not us":[6686,6698],"does not use":[6686,6698],"oes not use ":[6686,6698],"es not use a":[6686,6698],"s not use a ":[6686,6698]," not use a s":[6686],"not use a st":[6686],"ot use a sta":[6686],"t use a stan":[6686]," use a stand":[6686],"use a standa":[6686],"se a standar":[6686],"ial object f":[6686],"al object fo":[6686],"l object for":[6686],"object for i":[6686],"bject for it":[6686],"ject for its":[6686],"ect for its ":[6686],"ct for its c":[6686],"t for its co":[6686]," for its col":[6686],"for its colo":[6686],"or its color":[6686],"r its color.":[6686]," its color.&":[6686],"its color.&n":[6686],"ts color.&nb":[6686],"s color.&nbs":[6686],"lor.&nbsp; i":[6686],"p; it uses a":[6686],"; it uses a ":[6686]," it uses a p":[6686],"it uses a pr":[6686],"t uses a pro":[6686]," uses a prop":[6686,6698],"uses a prope":[6686,6698],"ses a proper":[6686,6698],"es a propert":[6686,6698],"rty called .":[6686,6698],"ty called .c":[6686,6698],"y called .co":[6686,6698]," called .col":[6686,6698],"called .colo":[6686,6698],"alled .color":[6686,6698],"lled .color.":[6686,6698],"led .color.&":[6686,6698],"ed .color.&n":[6686,6698],"d .color.&nb":[6686,6698]," .color.&nbs":[6686,6698],".color.&nbsp":[6686,6698],"lor.&nbsp; h":[6686],"or.&nbsp; he":[6686],"r.&nbsp; her":[6686],"ample of a l":[6686],"mple of a li":[6686],"ple of a lin":[6686],"le of a line":[6686],"e of a lines":[6686],"of a lines o":[6686],"f a lines ob":[6686],"nes object b":[6686],"es object be":[6686],"s object bei":[6686]," object bein":[6686],"object being":[6686],"bject being ":[6686],"ject being c":[6686],"ect being cr":[6686],"ct being cre":[6686],"t being crea":[6686]," being creat":[6686],"being create":[6686],"eing created":[6686],"ing created,":[6686],"ng created, ":[6686],"g created, a":[6686]," created, an":[6686],"created, and":[6686],"reated, and ":[6686],"eated, and t":[6686],"ated, and th":[6686],"ted, and the":[6686],"ed, and then":[6686],"d, and then ":[6686],"and then col":[6686],"nd then colo":[6686],"d then color":[6686]," then colore":[6686],"then colored":[6686],"hen colored:":[6686],"tion of a tr":[6688],"ion of a tri":[6688],"on of a tria":[6688],"n of a trian":[6688]," of a triang":[6688],"of a triangu":[6688],"f a triangul":[6688],"triangular l":[6688],"riangular li":[6688],"iangular lin":[6688],"angular line":[6688],"ngular lines":[6688],"gular lines ":[6688],"ular lines m":[6688],"lar lines me":[6688],"ar lines mes":[6688],"r lines mesh":[6688],"var mylines ":[6689],"ar mylines =":[6689],"r mylines = ":[6689]," mylines = b":[6689],"mylines = ba":[6689],"ylines = bab":[6689],"eatelines(\"i":[6689],"atelines(\"it":[6689],"telines(\"its":[6689],"elines(\"itsn":[6689],"lines(\"itsna":[6689],"ines(\"itsnam":[6689],"nes(\"itsname":[6689],"es(\"itsname\"":[6689],"s(\"itsname\",":[6689],"(\"itsname\", ":[6689],"\"itsname\", [":[6689],".vector3(-5,":[6690,6693],"vector3(-5, ":[6690,6693],"ector3(-5, 0":[6690,6693],"ctor3(-5, 0,":[6690,6693],"tor3(-5, 0, ":[6690,6693],"or3(-5, 0, 5":[6690,6693],"r3(-5, 0, 5)":[6690,6693],"3(-5, 0, 5),":[6690],"n.vector3(5,":[6691],".vector3(5, ":[6691],"vector3(5, 0":[6691],"ector3(5, 0,":[6691],"ctor3(5, 0, ":[6691],"tor3(5, 0, 5":[6691],"or3(5, 0, 5)":[6691],"r3(5, 0, 5),":[6691],"r3(0, 0, -5)":[6692],"3(0, 0, -5),":[6692],"// and here ":[6695],"/ and here i":[6695]," and here is":[6695],"and here is ":[6695],"nd here is h":[6695],"d here is ho":[6695]," how it is c":[6695],"how it is co":[6695],"ow it is col":[6695],"w it is colo":[6695]," it is color":[6695],"it is colore":[6695],"t is colored":[6695]," is colored ":[6695],"is colored g":[6695],"s colored gr":[6695]," colored gre":[6695],"colored gree":[6695],"olored green":[6695],"lored green.":[6695],"ored green..":[6695],"red green...":[6695],"mylines.colo":[6696],"ylines.color":[6696],"lines.color ":[6696],"ines.color =":[6696],"nes.color = ":[6696],"es.color = n":[6696],"s.color = ne":[6696],".color = new":[6696],"n.color3(0,1":[6696],".color3(0,1,":[6696],"color3(0,1,0":[6696],"olor3(0,1,0)":[6696],"lor3(0,1,0);":[6696],"n of the lin":[6698]," of the line":[6698],"of the lines":[6698],"f the lines ":[6698]," the lines o":[6698],"the lines ob":[6698],"he lines obj":[6698],"e lines obje":[6698],"nes object w":[6698],"es object wa":[6698],"s object was":[6698]," object was ":[6698],"object was a":[6698],"bject was a ":[6698],"ject was a b":[6698],"ect was a bi":[6698],"ct was a bit":[6698],"t was a bit ":[6698]," was a bit s":[6698],"was a bit st":[6698],"as a bit str":[6698],"s a bit stra":[6698]," a bit stran":[6698],"a bit strang":[6698]," bit strange":[6698],"bit strange,":[6698],"it strange, ":[6698],"t strange, b":[6698]," strange, bu":[6698],"strange, but":[6698],"trange, but ":[6698],"range, but i":[6698],"ange, but it":[6698],"nge, but it ":[6698],"ge, but it s":[6698],"e, but it su":[6698],", but it sur":[6698]," but it sure":[6698],"but it sure ":[6698],"ut it sure w":[6698],"t it sure wa":[6698]," it sure was":[6698],"it sure was ":[6698],"t sure was e":[6698]," sure was ea":[6698],"sure was eas":[6698],"ure was easy":[6698],"re was easy ":[6698],"e was easy t":[6698]," was easy to":[6698],"was easy to ":[6698],"as easy to m":[6698],"s easy to ma":[6698]," easy to mak":[6698],"easy to make":[6698],"asy to make ":[6698],"sy to make i":[6698],"to make it g":[6698],"o make it gr":[6698]," make it gre":[6698],"make it gree":[6698],"ake it green":[6698],"ke it green,":[6698],"e it green, ":[6698]," it green, u":[6698],"it green, us":[6698],"t green, usi":[6698]," green, usin":[6698],"green, using":[6698],"reen, using ":[6698],"een, using a":[6698],"en, using a ":[6698],"n, using a c":[6698],", using a co":[6698]," using a col":[6698],"using a colo":[6698],"sing a color":[6698],"ing a color3":[6698],"ng a color3 ":[6698],"g a color3 v":[6698],"lue.&nbsp; y":[6698],"ue.&nbsp; yo":[6698],"bout the lin":[6698],"out the line":[6698],"ut the lines":[6698],"t the lines ":[6698]," lines mesh.":[6698],"lines mesh..":[6698],"ines mesh...":[6698],"nes mesh....":[6698],"es mesh.... ":[6698],"s mesh.... i":[6698]," mesh.... in":[6698],"mesh.... in ":[6698],"esh.... in o":[6698],"sh.... in ou":[6698],"h.... in our":[6698],".... in our ":[6698],"... in our b":[6698],".. in our ba":[6698],". in our bas":[6698]," in our basi":[6698],"in our basic":[6698],"n our basic ":[6698],"c elements t":[6698]," elements tu":[6698],"elements tut":[6698],"lements tuto":[6698],"ements tutor":[6698],"ments tutori":[6698],"ents tutoria":[6698],"nts tutorial":[6698],"ial.&nbsp; f":[6698],"al.&nbsp; fo":[6698],"sp; for now,":[6698],"p; for now, ":[6698],"; for now, i":[6698]," for now, i ":[6698],"for now, i j":[6698],"or now, i ju":[6698],"r now, i jus":[6698]," now, i just":[6698],"now, i just ":[6698],"ow, i just w":[6698],"w, i just wa":[6698],", i just wan":[6698]," i just want":[6698],"i just wante":[6698]," just wanted":[6698],"just wanted ":[6698],"ust wanted t":[6698],"st wanted to":[6698],"t wanted to ":[6698]," wanted to s":[6698],"wanted to sh":[6698],"anted to sho":[6698],"nted to show":[6698],"ted to show ":[6698],"ed to show y":[6698],"d to show yo":[6698]," show you th":[6698],"show you tha":[6698],"how you that":[6698],"ow you that ":[6698],"w you that i":[6698]," you that it":[6698],"you that it ":[6698],"ou that it d":[6698],"u that it do":[6698]," that it doe":[6698],"that it does":[6698],"hat it does ":[6698],"at it does n":[6698],"t it does no":[6698]," not use a .":[6698],"not use a .d":[6698],"ot use a .di":[6698],"t use a .dif":[6698]," use a .diff":[6698],"use a .diffu":[6698],"se a .diffus":[6698],"e a .diffuse":[6698]," a .diffusec":[6698],"a .diffuseco":[6698],"ffusecolor p":[6698],"fusecolor pr":[6698],"usecolor pro":[6698],"secolor prop":[6698],"ecolor prope":[6698],"lor property":[6698],"or property ":[6698],"r property l":[6698]," property li":[6698],"property lik":[6698],"roperty like":[6698],"operty like ":[6698],"perty like a":[6698],"erty like a ":[6698],"rty like a b":[6698],"ty like a bo":[6698],"y like a box":[6698],"like a box w":[6698],"ike a box wi":[6698],"ke a box wit":[6698],"e a box with":[6698,6706]," a box with ":[6698,6706],"a box with a":[6698,6706]," box with a ":[6698,6706],"box with a s":[6698],"ox with a st":[6698],"x with a sta":[6698],"dmaterial ap":[6698],"material app":[6698],"aterial appl":[6698],"terial appli":[6698],"erial applie":[6698],"rial applied":[6698],"ial applied,":[6698],"al applied, ":[6698],"l applied, n":[6698]," applied, no":[6698],"applied, nor":[6698],"pplied, nor ":[6698],"plied, nor a":[6698],"lied, nor a ":[6698],"ied, nor a .":[6698],"ed, nor a .d":[6698],"d, nor a .di":[6698],", nor a .dif":[6698]," nor a .diff":[6698],"nor a .diffu":[6698],"or a .diffus":[6698],"r a .diffuse":[6698]," a .diffuse ":[6698],"a .diffuse p":[6698],"e property l":[6698],"perty like w":[6698],"erty like we":[6698],"rty like we ":[6698],"ty like we u":[6698],"y like we us":[6698]," like we use":[6698],"like we used":[6698],"ike we used ":[6698],"ke we used f":[6698],"e we used fo":[6698]," we used for":[6698],"we used for ":[6698],"e used for c":[6698]," used for co":[6698],"used for col":[6698],"sed for colo":[6698],"ed for color":[6698],"d for colori":[6698]," for colorin":[6698],"for coloring":[6698],"or coloring ":[6698],"r coloring l":[6698]," coloring li":[6698],"coloring lig":[6698],"oloring ligh":[6698],"loring light":[6698],"oring light ":[6698],"ring light b":[6698],"ing light be":[6698],"ng light bea":[6698],"g light beam":[6698]," light beams":[6698],"light beams.":[6698],"ight beams.&":[6698],"ght beams.&n":[6698],"ht beams.&nb":[6698],"t beams.&nbs":[6698]," beams.&nbsp":[6698],"beams.&nbsp;":[6698],"eams.&nbsp; ":[6698],"ams.&nbsp; i":[6698],"ms.&nbsp; it":[6698],"s.&nbsp; it,":[6698],".&nbsp; it, ":[6698],"&nbsp; it, i":[6698],"nbsp; it, in":[6698],"bsp; it, ins":[6698],"sp; it, inst":[6698],"p; it, inste":[6698],"; it, instea":[6698]," it, instead":[6698],"it, instead,":[6698],"t, instead, ":[6698],", instead, u":[6698]," instead, us":[6698],"instead, use":[6698],"nstead, uses":[6698],"stead, uses ":[6698],"tead, uses a":[6698],"ead, uses a ":[6698],"ad, uses a p":[6698],"d, uses a pr":[6698],", uses a pro":[6698],"lor.&nbsp; s":[6698],"or.&nbsp; si":[6698],"r.&nbsp; sim":[6698],".&nbsp; simp":[6698],"&nbsp; simpl":[6698],"nbsp; simple":[6698],"bsp; simple.":[6698],"## my new fr":[6699],"# my new fri":[6699]," my new frie":[6699],"my new frien":[6699],"y new friend":[6699]," new friends":[6699],"new friends ":[6699],"ew friends -":[6699],"w friends - ":[6699]," friends - .":[6699],"friends - .p":[6699],"riends - .po":[6699],"iends - .pos":[6699],"ends - .posi":[6699],"nds - .posit":[6699],"ds - .positi":[6699],"s - .positio":[6699]," - .position":[6699],"- .position,":[6699]," .position, ":[6699,6700],".position, .":[6699,6700],"position, .r":[6699,6700],"osition, .ro":[6699,6700],"sition, .rot":[6699,6700],"ition, .rota":[6699,6700],"tion, .rotat":[6699,6700],"ion, .rotati":[6699,6700],"on, .rotatio":[6699,6700],"n, .rotation":[6699,6700],", .rotation,":[6699,6700]," .rotation, ":[6699,6700],".rotation, a":[6699,6700],"rotation, an":[6699,6700],"otation, and":[6699,6700],"tation, and ":[6699,6700],"ation, and .":[6699],"tion, and .s":[6699],"ion, and .sc":[6699],"on, and .sca":[6699],"n, and .scal":[6699],", and .scali":[6699]," and .scalin":[6699],"and .scaling":[6699],"nd .scaling&":[6699],"d .scaling&n":[6699]," .scaling&nb":[6699],".scaling&nbs":[6699],"scaling&nbsp":[6699],"caling&nbsp;":[6699],"aling&nbsp; ":[6699],"ling&nbsp; #":[6699],"ing&nbsp; ##":[6699],"as you toure":[6700],"s you toured":[6700]," you toured ":[6700],"you toured t":[6700],"ou toured th":[6700],"u toured the":[6700]," toured the ":[6700],"toured the b":[6700],"oured the ba":[6700],"ured the bab":[6700],"red the baby":[6700],"mo scenes, y":[6700],"o scenes, yo":[6700]," scenes, you":[6700],"scenes, you ":[6700],"cenes, you s":[6700],"enes, you su":[6700],"nes, you sur":[6700],"es, you sure":[6700],"s, you surel":[6700],", you surely":[6700]," you surely ":[6700],"you surely s":[6700],"ou surely sa":[6700],"u surely saw":[6700]," surely saw ":[6700],"surely saw s":[6700],"urely saw so":[6700],"rely saw som":[6700],"ely saw some":[6700],"ly saw some ":[6700],"y saw some .":[6700]," saw some .p":[6700],"saw some .po":[6700],"aw some .pos":[6700],"w some .posi":[6700]," some .posit":[6700],"some .positi":[6700],"ome .positio":[6700],"me .position":[6700],"e .position,":[6700],"ation, and m":[6700],"tion, and ma":[6700],"ion, and may":[6700],"on, and mayb":[6700],"n, and maybe":[6700],", and maybe ":[6700]," and maybe s":[6700],"and maybe so":[6700],"nd maybe som":[6700],"d maybe some":[6700]," maybe some ":[6700],"maybe some .":[6700],"aybe some .s":[6700],"ybe some .sc":[6700],"be some .sca":[6700],"e some .scal":[6700]," some .scali":[6700],"some .scalin":[6700],"ome .scaling":[6700],"me .scaling ":[6700],"e .scaling p":[6700],"properties b":[6700],"roperties be":[6700],"operties bei":[6700],"perties bein":[6700],"erties being":[6700],"rties being ":[6700],"ties being '":[6700],"ies being 's":[6700],"es being 'se":[6700],"s being 'set":[6700]," being 'set'":[6700],"being 'set' ":[6700],"eing 'set' w":[6700],"ing 'set' wi":[6700],"ng 'set' wit":[6700],"g 'set' with":[6700]," 'set' with ":[6700],"'set' with v":[6700],"set' with va":[6700],"et' with val":[6700],"t' with valu":[6700],"' with value":[6700]," with values":[6700,6709],"with values.":[6700,6709],"ith values.&":[6700,6709],"th values.&n":[6700,6709],"h values.&nb":[6700,6709]," a look at e":[6700],"a look at ea":[6700]," look at eac":[6700],"look at each":[6700],"ook at each ":[6700],"ok at each o":[6700],"k at each on":[6700]," at each one":[6700],"at each one:":[6700],"*position** ":[6701],"position** -":[6701],"osition** - ":[6701],"sition** - a":[6701],"ition** - al":[6701],"tion** - als":[6701],"ion** - also":[6701],"on** - also ":[6701],"n** - also c":[6701],"** - also ca":[6701],"* - also cal":[6701]," - also call":[6701],"- also calle":[6701],"lso called t":[6701],"so called tr":[6701],"o called tra":[6701]," called tran":[6701,7139],"called trans":[6701,7139],"alled transl":[6701,7139],"lled transla":[6701,7139],"led translat":[6701,7139],"ed translati":[6701,7104,7139],"translation,":[6701],"ranslation, ":[6701],"anslation, e":[6701],"nslation, ev":[6701],"slation, eve":[6701],"lation, ever":[6701],"ation, every":[6701],"tion, every ":[6701],"ion, every m":[6701],"on, every me":[6701],"n, every mes":[6701],", every mesh":[6701]," every mesh ":[6701,6706],"every mesh i":[6701,6706],"very mesh is":[6701,6706],"ery mesh is ":[6701,6706],"ry mesh is p":[6701],"y mesh is po":[6701]," mesh is pos":[6701],"mesh is posi":[6701],"esh is posit":[6701],"sh is positi":[6701],"h is positio":[6701],"itioned in a":[6701],"tioned in a ":[6701],"ioned in a s":[6701],"oned in a sc":[6701],"ned in a sce":[6701],"ed in a scen":[6701,6706],"d in a scene":[6701,6706],"in a scene u":[6701],"n a scene us":[6701],"cene using x":[6701],"ene using x,":[6701],"ne using x, ":[6701],"e using x, y":[6701]," using x, y,":[6701],"using x, y, ":[6701],"sing x, y, a":[6701],"ing x, y, an":[6701],"ng x, y, and":[6701],"g x, y, and ":[6701],", y, and z s":[6701]," y, and z se":[6701],"y, and z set":[6701],", and z sett":[6701]," and z setti":[6701],"and z settin":[6701],"nd z setting":[6701],"d z settings":[6701]," z settings.":[6701],"z settings.&":[6701]," settings.&n":[6701],"settings.&nb":[6701],"ettings.&nbs":[6701],"ttings.&nbsp":[6701],"tings.&nbsp;":[6701],"ings.&nbsp; ":[6701],"ngs.&nbsp; y":[6701],"gs.&nbsp; yo":[6701],"n think of t":[6701]," think of th":[6701],"think of the":[6701],"hink of the ":[6701],"ink of the .":[6701],"nk of the .p":[6701],"k of the .po":[6701]," of the .pos":[6701],"of the .posi":[6701],"f the .posit":[6701],"n property..":[6701],"roperty... a":[6701],"operty... as":[6701],"perty... as ":[6701],"erty... as t":[6701],"rty... as th":[6701],"ty... as the":[6701],"y... as the ":[6701],"... as the m":[6701],".. as the me":[6701],". as the mes":[6701]," as the mesh":[6701],"as the mesh'":[6701],"s the mesh's":[6701],"mesh's locat":[6701],"esh's locati":[6701],"sh's locatio":[6701],"h's location":[6701],"'s location.":[6701],"s location.&":[6701],"&nbsp; the l":[6701],"nbsp; the li":[6701],"bsp; the lin":[6701],"sp; the link":[6701],"p; the link ":[6701],"; the link b":[6701]," the link be":[6701],"the link bel":[6701],"he link belo":[6701],"e link below":[6701]," link below.":[6701],"link below..":[6701],"ink below...":[6701],"nk below... ":[6701],"k below... i":[6701],"elow... is a":[6701],"low... is a ":[6701],"ow... is a s":[6701],"w... is a sa":[6701],"... is a sav":[6701],".. is a save":[6701],". is a saved":[6701]," is a saved ":[6701],"is a saved p":[6701],"s a saved pl":[6701]," a saved pla":[6701,6710],"a saved play":[6701,6710],"cene that il":[6701],"ene that ill":[6701],"ne that illu":[6701],"e that illus":[6701]," that illust":[6701],"that illustr":[6701],"hat illustra":[6701],"at illustrat":[6701],"t illustrate":[6701]," illustrates":[6701],"illustrates ":[6701],"llustrates u":[6701],"lustrates us":[6701],"ustrates usi":[6701],"strates usin":[6701],"trates using":[6701],"rates using ":[6701],"ates using a":[6701],"tes using a ":[6701],"es using a m":[6701],"s using a me":[6701]," using a mes":[6701],"using a mesh":[6701],"sing a mesh'":[6701],"ing a mesh's":[6701,6712],"ng a mesh's ":[6701,6712],"g a mesh's .":[6701,6712]," a mesh's .p":[6701,6704],"a mesh's .po":[6701,6704]," mesh's .pos":[6701,6704],"mesh's .posi":[6701,6704],"esh's .posit":[6701,6704],"sh's .positi":[6701,6704],"h's .positio":[6701,6704],"'s .position":[6701,6704],"s .position ":[6701,6704],"n property.&":[6701],"ty.&nbsp; tr":[6701],"y.&nbsp; try":[6701],".&nbsp; try ":[6701,6723],"&nbsp; try t":[6701,6723],"nbsp; try to":[6701,6723],"bsp; try to ":[6701,6723],"sp; try to o":[6701],"p; try to op":[6701],"; try to ope":[6701]," try to open":[6701],"try to open ":[6701],"ry to open i":[6701],"y to open it":[6701]," to open it ":[6701],"to open it i":[6701],"o open it in":[6701]," open it in ":[6701],"open it in a":[6701],"pen it in a ":[6701],"en it in a n":[6701],"n it in a ne":[6701]," it in a new":[6701],"it in a new ":[6701],"t in a new w":[6701],"so you can j":[6701],"o you can ju":[6701]," you can jum":[6701],"you can jump":[6701],"ou can jump ":[6701],"u can jump b":[6701]," can jump ba":[6701],"can jump bac":[6701],"an jump back":[6701],"n jump back ":[6701]," jump back a":[6701],"jump back an":[6701],"ump back and":[6701],"mp back and ":[6701],"p back and f":[6701],"th between t":[6701],"h between th":[6701],"tween this t":[6701],"ween this tu":[6701],"een this tut":[6701],"en this tuto":[6701],"utorial... a":[6701],"torial... an":[6701],"orial... and":[6701],"rial... and ":[6701],"ial... and t":[6701],"al... and th":[6701],"l... and the":[6701],"... and the ":[6701],".. and the p":[6701],". and the pl":[6701],"sites.net/#3":[6702],"ites.net/#35":[6702],"tes.net/#35c":[6702],"es.net/#35cp":[6702],"s.net/#35cpc":[6702],".net/#35cpc ":[6702],"net/#35cpc #":[6702],"et/#35cpc ##":[6702],"t/#35cpc ###":[6702],"in the yello":[6703],"n the yellow":[6703]," the yellow ":[6703,6709,6712],"the yellow t":[6703,6709,6712],"he yellow te":[6703,6709,6712],"e yellow tex":[6703,6709,6712]," yellow text":[6703,6709,6712],"yellow text ":[6703,6709,6712],"ellow text a":[6703],"llow text at":[6703],"low text at ":[6703],"ow text at t":[6703],"w text at th":[6703]," text at the":[6703],"text at the ":[6703],"ext at the t":[6703],"xt at the to":[6703],"t at the top":[6703]," at the top ":[6703],"at the top o":[6703],"t the top of":[6703],"f the scene,":[6703],"the scene, y":[6703],"he scene, yo":[6703],"e scene, you":[6703],"scene, you w":[6703],"cene, you wi":[6703],"ene, you wil":[6703],"ne, you will":[6703],"ll see the b":[6703],"l see the ba":[6703]," see the bab":[6703],"see the baby":[6703],"ee the babyl":[6703],"s one-line w":[6703]," one-line wa":[6703],"one-line way":[6703],"ne-line way ":[6703],"e-line way t":[6703],"-line way to":[6703],"line way to ":[6703],"ine way to s":[6703],"ne way to se":[6703],"e way to set":[6703],"way to set m":[6703],"ay to set my":[6703],"y to set myb":[6703]," to set mybo":[6703],"to set mybox":[6703],"o set mybox.":[6703]," set mybox.p":[6703],"set mybox.po":[6703],"et mybox.pos":[6703],"t mybox.posi":[6703]," mybox.posit":[6703],"mybox.positi":[6703],"ybox.positio":[6703],"x.position (":[6703],".position (u":[6703],"position (us":[6703],"osition (usi":[6703],"sition (usin":[6703],"ition (using":[6703],"tion (using ":[6703],"ion (using o":[6703],"on (using ou":[6703],"n (using our":[6703]," (using our ":[6703],"(using our f":[6703],"end... the v":[6703],"nd... the ve":[6703],"d... the vec":[6703],"... the vect":[6703],".. the vecto":[6703],". the vector":[6703],"tor3 value o":[6703],"or3 value ob":[6703],"r3 value obj":[6703],"3 value obje":[6703],"alue object)":[6703],"lue object).":[6703],"elow that, i":[6704],"low that, in":[6704],"ow that, in ":[6704],"w that, in g":[6704]," that, in gr":[6704],"that, in gre":[6704],"hat, in gree":[6704],"at, in green":[6704],"t, in green ":[6704],", in green t":[6704]," in green te":[6704],"in green tex":[6704],"n green text":[6704]," green text,":[6704],"green text, ":[6704],"reen text, y":[6704],"een text, yo":[6704],"en text, you":[6704],"n text, you ":[6704]," text, you w":[6704],"text, you wi":[6704],"ext, you wil":[6704],"xt, you will":[6704],"u will see 3":[6704]," will see 3 ":[6704],"will see 3 m":[6704],"ill see 3 mo":[6704],"ll see 3 mor":[6704],"l see 3 more":[6704]," see 3 more ":[6704],"see 3 more l":[6704],"ee 3 more li":[6704],"e 3 more lin":[6704]," 3 more line":[6704],"3 more lines":[6704]," more lines ":[6704],"more lines o":[6704],"ore lines of":[6704],"re lines of ":[6704],"e lines of b":[6704]," lines of ba":[6704],"lines of bab":[6704],"ines of baby":[6704],"nes of babyl":[6704],"es of babylo":[6704],"bylon.js cod":[6704],"ylon.js code":[6704],"lon.js code.":[6704],"on.js code.&":[6704],"n.js code.&n":[6704],".js code.&nb":[6704],"js code.&nbs":[6704],"s code.&nbsp":[6704],"ode.&nbsp; y":[6704],"de.&nbsp; yo":[6704],"&nbsp; you s":[6704],"nbsp; you se":[6704],"bsp; you see":[6704],"sp; you see,":[6704],"p; you see, ":[6704],"; you see, y":[6704]," you see, yo":[6704],"you see, you":[6704],"ou see, you ":[6704],"u see, you a":[6704]," see, you ar":[6704],"see, you are":[6704],"ee, you are ":[6704],"e, you are n":[6704],", you are no":[6704],"d to use a v":[6704]," to use a ve":[6704],"to use a vec":[6704],"o use a vect":[6704]," use a vecto":[6704],"use a vector":[6704],"se a vector3":[6704]," a vector3 t":[6704],"a vector3 to":[6704],"or3 to set a":[6704],"r3 to set a ":[6704],"3 to set a .":[6704]," to set a .p":[6704],"to set a .po":[6704],"o set a .pos":[6704]," set a .posi":[6704],"set a .posit":[6704],"et a .positi":[6704],"t a .positio":[6704],".position on":[6704],"osition on a":[6704],"sition on a ":[6704],"ition on a m":[6704],"tion on a me":[6704],"ion on a mes":[6704],"on on a mesh":[6704],"n on a mesh.":[6704]," on a mesh.&":[6704],"on a mesh.&n":[6704],"n a mesh.&nb":[6704]," a mesh.&nbs":[6704],"a mesh.&nbsp":[6704],"esh.&nbsp; y":[6704],"sh.&nbsp; yo":[6704],"h.&nbsp; you":[6704],"p; you can u":[6704],"; you can us":[6704],"an use the '":[6704],"n use the '*":[6704]," use the '**":[6704],"use the '**d":[6704],"se the '**di":[6704],"e the '**dis":[6704]," the '**disc":[6704],"the '**discr":[6704],"he '**discre":[6704],"e '**discret":[6704]," '**discrete":[6704],"'**discrete*":[6704],"**discrete**":[6704],"*discrete**'":[6704],"discrete**' ":[6704],"iscrete**' w":[6704],"screte**' wa":[6704],"crete**' way":[6704],"rete**' way,":[6704],"ete**' way, ":[6704],"te**' way, i":[6704],"e**' way, in":[6704],"**' way, ins":[6704],"*' way, inst":[6704],"' way, inste":[6704]," way, instea":[6704],"way, instead":[6704],"ay, instead.":[6704],"y, instead.&":[6704],", instead.&n":[6704]," instead.&nb":[6704],"instead.&nbs":[6704],"nstead.&nbsp":[6704],"stead.&nbsp;":[6704],"tead.&nbsp; ":[6704],"ead.&nbsp; l":[6704],"ad.&nbsp; lo":[6704],"d.&nbsp; loo":[6704],".&nbsp; loos":[6704],"&nbsp; loose":[6704],"nbsp; loosel":[6704],"bsp; loosely":[6704],"sp; loosely ":[6704],"p; loosely d":[6704],"; loosely de":[6704]," loosely def":[6704],"loosely defi":[6704],"oosely defin":[6704],"osely define":[6704],"sely defined":[6704],"ely defined,":[6704],"ly defined, ":[6704],"y defined, '":[6704]," defined, 'd":[6704],"defined, 'di":[6704],"efined, 'dis":[6704],"fined, 'disc":[6704],"ined, 'discr":[6704],"ned, 'discre":[6704],"ed, 'discret":[6704],"d, 'discrete":[6704],", 'discrete'":[6704]," 'discrete' ":[6704,6709],"'discrete' m":[6704],"discrete' me":[6704],"iscrete' mea":[6704],"screte' mean":[6704],"crete' means":[6704],"rete' means.":[6704],"ete' means..":[6704],"te' means...":[6704],"e' means... ":[6704],"' means... p":[6704]," means... pi":[6704],"means... pie":[6704],"eans... piec":[6704],"ans... piece":[6704],"ns... piece ":[6704],"s... piece b":[6704],"... piece by":[6704],".. piece by ":[6704],". piece by p":[6704]," piece by pi":[6704],"piece by pie":[6704],"iece by piec":[6704],"ece by piece":[6704],"ce by piece.":[6704],"e by piece..":[6704]," by piece...":[6704],"by piece... ":[6704],"y piece... o":[6704]," piece... on":[6704],"piece... one":[6704],"iece... one ":[6704],"ece... one s":[6704],"ce... one st":[6704],"e... one ste":[6704],"... one step":[6704],".. one step ":[6704],". one step a":[6704]," one step at":[6704],"one step at ":[6704],"ne step at a":[6704],"e step at a ":[6704]," step at a t":[6704],"step at a ti":[6704],"tep at a tim":[6704],"ep at a time":[6704],"p at a time.":[6704]," at a time.&":[6704],"at a time.&n":[6704],"t a time.&nb":[6704]," a time.&nbs":[6704],"a time.&nbsp":[6704]," time.&nbsp;":[6704],"time.&nbsp; ":[6704],"ime.&nbsp; i":[6704],"me.&nbsp; if":[6704],"e.&nbsp; if ":[6704],"sp; if you w":[6704],"p; if you wo":[6704],"; if you wou":[6704],"ld like to s":[6704],"d like to se":[6704]," like to set":[6704],"like to set ":[6704],"ike to set a":[6704],"ke to set a ":[6704],"e to set a m":[6704]," to set a me":[6704],"to set a mes":[6704],"o set a mesh":[6704]," set a mesh'":[6704],"set a mesh's":[6704],"et a mesh's ":[6704],"t a mesh's .":[6704]," .position v":[6704],".position va":[6704],"ition values":[6704],"tion values ":[6704],"ion values a":[6704],"on values ax":[6704],"n values axi":[6704]," values axis":[6704],"values axis ":[6704],"alues axis b":[6704],"lues axis by":[6704],"ues axis by ":[6704],"es axis by a":[6704],"s axis by ax":[6704]," axis by axi":[6704],"axis by axis":[6704],"xis by axis,":[6704],"is by axis, ":[6704],"s by axis, f":[6704]," by axis, fe":[6704],"by axis, fee":[6704],"y axis, feel":[6704]," axis, feel ":[6704],"axis, feel f":[6704],"xis, feel fr":[6704],"is, feel fre":[6704],"s, feel free":[6704],"el free to u":[6704],"l free to us":[6704]," free to use":[6704],"free to use ":[6704],"ree to use t":[6704],"ee to use th":[6704],"to use the h":[6704],"o use the ha":[6704]," use the han":[6704],"use the hand":[6704],"se the handy":[6704]," the handy g":[6704],"the handy gr":[6704],"he handy gre":[6704],"e handy gree":[6704]," handy green":[6704],"handy green ":[6704],"andy green '":[6704],"ndy green 'd":[6704],"dy green 'di":[6704],"y green 'dis":[6704]," green 'disc":[6704],"green 'discr":[6704],"reen 'discre":[6704],"een 'discret":[6704],"en 'discrete":[6704],"n 'discrete'":[6704],"'discrete' w":[6704,6709],"discrete' wa":[6704,6709],"iscrete' way":[6704,6709],"screte' ways":[6704,6709],"crete' ways ":[6704,6709],"rete' ways o":[6704],"ete' ways of":[6704],"te' ways of ":[6704],"e' ways of d":[6704],"' ways of do":[6704],"s of doing i":[6704]," of doing it":[6704],"of doing it.":[6704],"watch this p":[6705],"atch this po":[6705],"tch this pos":[6705],"ch this posi":[6705],"h this posit":[6705]," this positi":[6705],"this positio":[6705],"his position":[6705],"is positioni":[6705],"s positionin":[6705],"ositioning d":[6705],"sitioning de":[6705],"itioning dem":[6705],"tioning demo":[6705],"ioning demo ":[6705],"oning demo s":[6705],"ning demo sc":[6705],"ing demo sce":[6705],"ng demo scen":[6705],"g demo scene":[6705],"demo scene f":[6705],"emo scene fo":[6705],"mo scene for":[6705],"o scene for ":[6705]," scene for s":[6705],"scene for so":[6705],"cene for som":[6705],"ene for some":[6705],"ne for some ":[6705],"e for some t":[6705]," for some ti":[6705],"for some tim":[6705],"or some time":[6705],"r some time,":[6705]," some time, ":[6705],"some time, i":[6705],"ome time, if":[6705],"me time, if ":[6705],"e time, if y":[6705]," time, if yo":[6705],"time, if you":[6705],"ime, if you ":[6705],"me, if you p":[6705],"e, if you pl":[6705],", if you ple":[6705]," if you plea":[6705],"if you pleas":[6705],"f you please":[6705]," you please.":[6705],"you please.&":[6705],"ou please.&n":[6705],"u please.&nb":[6705],"ase.&nbsp; i":[6705],"se.&nbsp; it":[6705],"p; it will n":[6705],"; it will no":[6705]," it will not":[6705,6870],"it will not ":[6705,6870],"t will not t":[6705]," will not ta":[6705],"will not tak":[6705],"ill not take":[6705],"ll not take ":[6705],"l not take l":[6705]," not take lo":[6705],"not take lon":[6705],"ot take long":[6705],"t take long ":[6705]," take long f":[6705],"take long fo":[6705],"ake long for":[6705],"ke long for ":[6705],"e long for y":[6705]," long for yo":[6705],"long for you":[6705],"ong for you ":[6705],"ng for you t":[6705],"g for you to":[6705],"for you to c":[6705],"or you to co":[6705],"r you to com":[6705]," you to comp":[6705],"you to compl":[6705],"ou to comple":[6705],"u to complet":[6705],"to completel":[6705],"o completely":[6705],"completely u":[6705],"ompletely un":[6705],"mpletely und":[6705],"pletely unde":[6705],"letely under":[6705],"etely unders":[6705],"tely underst":[6705],"ely understa":[6705],"nderstand me":[6705],"derstand mes":[6705],"erstand mesh":[6705],"rstand mesh ":[6705],"stand mesh p":[6705],"tand mesh po":[6705],"and mesh pos":[6705],"nd mesh posi":[6705],"d mesh posit":[6705],"sh positioni":[6705],"h positionin":[6705],"ositioning.&":[6705],"sitioning.&n":[6705],"itioning.&nb":[6705],"tioning.&nbs":[6705],"ioning.&nbsp":[6705],"oning.&nbsp;":[6705],"rotation** -":[6706],"otation** - ":[6706],"tation** - e":[6706],"ation** - ev":[6706],"tion** - eve":[6706],"ion** - ever":[6706],"on** - every":[6706],"n** - every ":[6706],"** - every m":[6706],"* - every me":[6706]," - every mes":[6706],"- every mesh":[6706],"ry mesh is r":[6706],"y mesh is ro":[6706],"rotated in a":[6706],"otated in a ":[6706],"tated in a s":[6706],"ated in a sc":[6706],"ted in a sce":[6706],"a scene... b":[6706]," scene... by":[6706],"scene... by ":[6706],"cene... by s":[6706],"ene... by se":[6706],"ne... by set":[6706],"e... by sett":[6706],"etting the a":[6706],"tting the am":[6706],"ting the amo":[6706],"amount of sp":[6706],"mount of spi":[6706],"ount of spin":[6706],"unt of spin ":[6706],"nt of spin a":[6706],"t of spin ar":[6706]," of spin aro":[6706],"of spin arou":[6706],"f spin aroun":[6706]," spin around":[6706],"spin around ":[6706],"pin around t":[6706],"in around th":[6706],"round the sh":[6706],"ound the sha":[6706],"und the shap":[6706],"nd the shape":[6706],"d the shape'":[6706]," the shape's":[6706],"the shape's ":[6706],"he shape's x":[6706],"e shape's x,":[6706]," shape's x, ":[6706],"shape's x, y":[6706],"hape's x, y,":[6706],"ape's x, y, ":[6706],"pe's x, y, a":[6706],"e's x, y, an":[6706],"'s x, y, and":[6706],"s x, y, and ":[6706],", y, and z a":[6706]," y, and z ax":[6706],"y, and z axe":[6706],", and z axes":[6706]," and z axes.":[6706],"and z axes.&":[6706],"nd z axes.&n":[6706],"d z axes.&nb":[6706]," z axes.&nbs":[6706],"z axes.&nbsp":[6706],"xes.&nbsp; p":[6706],"es.&nbsp; pi":[6706],"s.&nbsp; pic":[6706],".&nbsp; pict":[6706],"&nbsp; pictu":[6706],"nbsp; pictur":[6706],"bsp; picture":[6706],"sp; picture ":[6706],"p; picture a":[6706],"; picture a ":[6706]," picture a b":[6706],"picture a bo":[6706],"icture a box":[6706],"cture a box ":[6706],"ture a box w":[6706],"ure a box wi":[6706],"re a box wit":[6706],"box with a r":[6706],"ox with a ro":[6706],"x with a rod":[6706]," with a rod ":[6706],"with a rod s":[6706],"ith a rod st":[6706],"th a rod stu":[6706],"h a rod stuc":[6706]," a rod stuck":[6706],"a rod stuck ":[6706]," rod stuck t":[6706],"rod stuck th":[6706],"od stuck thr":[6706],"d stuck thro":[6706]," stuck throu":[6706],"stuck throug":[6706],"tuck through":[6706],"uck through ":[6706],"ck through e":[6706],"k through ev":[6706]," through eve":[6706],"through ever":[6706],"hrough every":[6706],"rough every ":[6706],"ough every s":[6706],"ugh every si":[6706],"gh every sid":[6706],"h every side":[6706]," every side ":[6706],"every side a":[6706],"very side an":[6706],"ery side and":[6706],"ry side and ":[6706],"y side and c":[6706]," side and co":[6706],"side and com":[6706],"ide and comi":[6706],"de and comin":[6706],"e and coming":[6706]," and coming ":[6706],"and coming o":[6706],"nd coming ou":[6706],"d coming out":[6706]," coming out ":[6706],"coming out t":[6706],"oming out th":[6706],"ming out the":[6706],"ing out the ":[6706],"ng out the o":[6706],"g out the op":[6706]," out the opp":[6706],"out the oppo":[6706],"ut the oppos":[6706],"t the opposi":[6706],"e opposite s":[6706]," opposite si":[6706],"opposite sid":[6706],"pposite side":[6706],"posite side.":[6706],"osite side.&":[6706],"site side.&n":[6706],"ite side.&nb":[6706],"te side.&nbs":[6706],"e side.&nbsp":[6706]," side.&nbsp;":[6706],"side.&nbsp; ":[6706],"ide.&nbsp; t":[6706],"de.&nbsp; th":[6706]," there are 6":[6706],"there are 6 ":[6706],"here are 6 s":[6706],"ere are 6 si":[6706],"re are 6 sid":[6706],"e are 6 side":[6706]," are 6 sides":[6706],"are 6 sides ":[6706],"re 6 sides t":[6706],"e 6 sides to":[6706]," 6 sides to ":[6706],"6 sides to a":[6706]," sides to a ":[6706],"sides to a b":[6706],"ides to a bo":[6706],"des to a box":[6706],"es to a box,":[6706],"s to a box, ":[6706]," to a box, s":[6706],"to a box, so":[6706],"o a box, so ":[6706]," a box, so t":[6706],"a box, so th":[6706]," box, so the":[6706],"box, so ther":[6706],"ox, so there":[6706],"x, so there ":[6706],", so there w":[6706]," so there wo":[6706],"so there wou":[6706],"o there woul":[6706]," there would":[6706],"there would ":[6706],"here would b":[6706],"ere would be":[6706],"re would be ":[6706],"e would be 3":[6706]," would be 3 ":[6706],"would be 3 r":[6706],"ould be 3 ro":[6706],"uld be 3 rod":[6706],"ld be 3 rods":[6706],"d be 3 rods,":[6706]," be 3 rods, ":[6706],"be 3 rods, a":[6706],"e 3 rods, an":[6706]," 3 rods, an ":[6706],"3 rods, an x":[6706]," rods, an x ":[6706],"rods, an x r":[6706],"ods, an x ro":[6706],"ds, an x rod":[6706],"s, an x rod,":[6706],", an x rod, ":[6706]," an x rod, a":[6706],"an x rod, a ":[6706],"n x rod, a y":[6706]," x rod, a y ":[6706],"x rod, a y r":[6706]," rod, a y ro":[6706],"rod, a y rod":[6706],"od, a y rod,":[6706],"d, a y rod, ":[6706],", a y rod, a":[6706]," a y rod, an":[6706],"a y rod, and":[6706]," y rod, and ":[6706],"y rod, and a":[6706]," rod, and a ":[6706],"rod, and a z":[6706],"od, and a z ":[6706],"d, and a z r":[6706],", and a z ro":[6706]," and a z rod":[6706],"and a z rod.":[6706],"nd a z rod.&":[6706],"d a z rod.&n":[6706]," a z rod.&nb":[6706],"a z rod.&nbs":[6706]," z rod.&nbsp":[6706],"z rod.&nbsp;":[6706]," rod.&nbsp; ":[6706],"rod.&nbsp; r":[6706],"od.&nbsp; ro":[6706],"d.&nbsp; rot":[6706],".&nbsp; rota":[6706],"&nbsp; rotat":[6706],"nbsp; rotati":[6706],"bsp; rotatio":[6706],"sp; rotation":[6706],"p; rotation ":[6706],"; rotation i":[6706],"otation is t":[6706],"ion is the a":[6706],"on is the am":[6706],"n is the amo":[6706]," is the amou":[6706],"is the amoun":[6706],"the amount (":[6706],"he amount (a":[6706],"e amount (an":[6706]," amount (and":[6706],"amount (and ":[6706],"mount (and d":[6706],"ount (and di":[6706],"unt (and dir":[6706],"nt (and dire":[6706],"t (and direc":[6706]," (and direct":[6706],"(and directi":[6706],"d direction)":[6706]," direction) ":[6706],"direction) o":[6706],"irection) of":[6706],"rection) of ":[6706],"ection) of s":[6706],"ction) of sp":[6706],"tion) of spi":[6706],"ion) of spin":[6706],"on) of spin.":[6706],"n) of spin..":[6706],") of spin...":[6706]," of spin... ":[6706],"of spin... a":[6706],"f spin... ar":[6706]," spin... aro":[6706],"spin... arou":[6706],"pin... aroun":[6706],"in... around":[6706],"... around e":[6706],".. around ea":[6706],". around eac":[6706]," around each":[6706,6709],"around each ":[6706,6709],"round each o":[6706,6709],"ound each of":[6706,6709],"und each of ":[6706,6709],"nd each of t":[6706,6709],"d each of th":[6706,6709],"of these inv":[6706],"f these invi":[6706]," these invis":[6706],"these invisi":[6706],"hese invisib":[6706],"ese invisibl":[6706],"se invisible":[6706,6707],"e invisible ":[6706,6707,6713]," invisible r":[6706,6707],"invisible ro":[6706,6707],"nvisible rod":[6706,6707],"visible rods":[6706,6707],"isible rods.":[6706,6707],"sible rods.&":[6706],"ible rods.&n":[6706],"ble rods.&nb":[6706],"le rods.&nbs":[6706],"e rods.&nbsp":[6706]," rods.&nbsp;":[6706],"rods.&nbsp; ":[6706]," a look at a":[6707],"a look at a ":[6707]," look at a p":[6707],"look at a pl":[6707],"ook at a pla":[6707],"ok at a play":[6707],"k at a playg":[6707]," at a playgr":[6707],"at a playgro":[6707],"t a playgrou":[6707],"reated and s":[6707],"eated and sa":[6707],"ated and sav":[6707],"ted and save":[6707],"ed and saved":[6707],"d and saved.":[6707]," and saved.&":[6707],"and saved.&n":[6707],"nd saved.&nb":[6707],"d saved.&nbs":[6707]," saved.&nbsp":[6707],"saved.&nbsp;":[6707],"aved.&nbsp; ":[6707],"ved.&nbsp; i":[6707],"d.&nbsp; in ":[6707],"p; in this d":[6707],"; in this de":[6707]," in this dem":[6707],"in this demo":[6707],"n this demo,":[6707]," this demo, ":[6707],"this demo, i":[6707],"his demo, i ":[6707],"is demo, i m":[6707],"s demo, i ma":[6707]," demo, i mad":[6707],"demo, i made":[6707],"emo, i made ":[6707],"mo, i made t":[6707],"o, i made th":[6707],", i made tho":[6707]," i made thos":[6707],"i made those":[6707]," made those ":[6707],"made those i":[6707],"ade those in":[6707],"de those inv":[6707],"e those invi":[6707]," those invis":[6707],"those invisi":[6707],"hose invisib":[6707],"ose invisibl":[6707],"sible rods..":[6707],"ible rods...":[6707],"ble rods... ":[6707],"le rods... b":[6707],"e rods... be":[6707]," rods... be ":[6707],"rods... be v":[6707],"ods... be vi":[6707],"ds... be vis":[6707],"s... be visi":[6707],"... be visib":[6707],".. be visibl":[6707],". be visible":[6707]," be visible:":[6707],"sites.net/#y":[6708],"ites.net/#yi":[6708],"tes.net/#yit":[6708],"es.net/#yit1":[6708],"s.net/#yit1s":[6708],".net/#yit1s ":[6708],"net/#yit1s #":[6708],"et/#yit1s ##":[6708],"t/#yit1s ###":[6708],"take some ti":[6709,6712],"ake some tim":[6709,6712],"ke some time":[6709,6712],"e some time ":[6709,6712]," some time t":[6709,6712],"some time to":[6709,6712],"ome time to ":[6709,6712],"me time to c":[6709],"e time to ca":[6709]," time to car":[6709],"time to care":[6709],"ime to caref":[6709],"me to carefu":[6709],"e to careful":[6709]," to carefull":[6709],"to carefully":[6709],"o carefully ":[6709],"carefully wa":[6709],"arefully wat":[6709],"refully watc":[6709],"efully watch":[6709],"fully watch ":[6709],"ully watch t":[6709],"lly watch th":[6709],"ly watch tha":[6709],"y watch that":[6709]," watch that ":[6709],"watch that s":[6709],"atch that sc":[6709],"tch that sce":[6709],"ch that scen":[6709],"h that scene":[6709]," that scene.":[6709],"that scene.&":[6709],"hat scene.&n":[6709],"at scene.&nb":[6709],"t scene.&nbs":[6709],"ene.&nbsp; l":[6709],"ne.&nbsp; li":[6709],"e.&nbsp; lik":[6709],".&nbsp; like":[6709,6724],"&nbsp; like ":[6709],"nbsp; like t":[6709],"bsp; like th":[6709],"sp; like the":[6709],"p; like the ":[6709],"; like the l":[6709]," like the la":[6709],"like the las":[6709],"ike the last":[6709],"ke the last ":[6709],"e the last d":[6709]," the last de":[6709],"the last dem":[6709],"he last demo":[6709],"e last demo ":[6709]," last demo s":[6709],"last demo sc":[6709],"ast demo sce":[6709],"st demo scen":[6709],"emo scene, t":[6709],"mo scene, th":[6709],"o scene, the":[6709],"scene, the y":[6709],"cene, the ye":[6709],"ene, the yel":[6709],"ne, the yell":[6709],"e, the yello":[6709,6712],", the yellow":[6709,6712],"ellow text s":[6709,6712],"llow text sh":[6709,6712],"low text sho":[6709,6712],"ow text show":[6709,6712],"w text shows":[6709,6712]," text shows ":[6709,6712],"text shows a":[6709],"ext shows a ":[6709],"xt shows a v":[6709],"t shows a ve":[6709]," shows a vec":[6709],"shows a vect":[6709],"hows a vecto":[6709],"ows a vector":[6709],"ws a vector3":[6709],"s a vector3 ":[6709],"o set the .r":[6709]," set the .ro":[6709],"set the .rot":[6709],"et the .rota":[6709],"t the .rotat":[6709]," the .rotati":[6709],"the .rotatio":[6709],"he .rotation":[6709],"e .rotation ":[6709],"n property w":[6709],"property wit":[6709],"roperty with":[6709],"operty with ":[6709],"perty with s":[6709],"erty with so":[6709],"rty with som":[6709],"ty with some":[6709],"y with some ":[6709]," with some c":[6709],"with some co":[6709],"ith some com":[6709],"th some comp":[6709],"h some compu":[6709]," some comput":[6709],"some compute":[6709],"me computer-":[6709],"e computer-g":[6709]," computer-ge":[6709],"computer-gen":[6709],"omputer-gene":[6709],"mputer-gener":[6709],"puter-genera":[6709],"uter-generat":[6709],"ter-generate":[6709],"er-generated":[6709],"r-generated ":[6709],"-generated v":[6709],"generated va":[6709],"enerated val":[6709],"nerated valu":[6709],"erated value":[6709],"rated values":[6709],"ated values.":[6709],"ted values.&":[6709],"ed values.&n":[6709],"d values.&nb":[6709],"nbsp; the bo":[6709],"bsp; the box":[6709],"sp; the box ":[6709],"p; the box i":[6709],"; the box is":[6709],"the box is s":[6709],"he box is sh":[6709],"e box is sho":[6709]," box is show":[6709],"box is shown":[6709],"ox is shown ":[6709],"x is shown d":[6709]," is shown do":[6709],"is shown doi":[6709],"s shown doin":[6709]," shown doing":[6709],"shown doing ":[6709],"hown doing p":[6709],"own doing po":[6709],"wn doing pos":[6709],"n doing posi":[6709]," doing posit":[6709],"doing positi":[6709],"oing positiv":[6709],"ng positive ":[6709],"g positive a":[6709]," positive an":[6709],"positive and":[6709],"ositive and ":[6709],"sitive and n":[6709],"itive and ne":[6709],"tive and neg":[6709],"ive and nega":[6709],"ve and negat":[6709],"e and negati":[6709]," and negativ":[6709],"and negative":[6709],"nd negative ":[6709],"d negative r":[6709]," negative ro":[6709],"negative rot":[6709],"egative rota":[6709],"gative rotat":[6709],"ative rotati":[6709],"tive rotatio":[6709],"ive rotation":[6709],"ve rotations":[6709],"otations aro":[6709,7106,7122],"tations arou":[6709,7106,7122],"ations aroun":[6709,7106,7122],"tions around":[6709,7106,7122],"ions around ":[6709,7106,7122],"ons around e":[6709],"ns around ea":[6709],"s around eac":[6709],"ach of the 3":[6709],"ch of the 3 ":[6709],"h of the 3 a":[6709]," of the 3 ax":[6709],"of the 3 axe":[6709],"f the 3 axes":[6709]," the 3 axes.":[6709],"the 3 axes.&":[6709],"he 3 axes.&n":[6709],"e 3 axes.&nb":[6709]," 3 axes.&nbs":[6709],"3 axes.&nbsp":[6709],"xes.&nbsp; u":[6709],"es.&nbsp; un":[6709],"s.&nbsp; und":[6709],".&nbsp; unde":[6709],"&nbsp; under":[6709],"nbsp; under ":[6709],"bsp; under t":[6709],"sp; under th":[6709],"p; under the":[6709],"; under the ":[6709]," under the y":[6709],"under the ye":[6709],"nder the yel":[6709],"der the yell":[6709],"er the yello":[6709],"r the yellow":[6709],"yellow text.":[6709],"ellow text..":[6709],"llow text...":[6709],"low text... ":[6709],"ow text... y":[6709],"w text... yo":[6709]," text... you":[6709],"text... you ":[6709],"ext... you a":[6709],"xt... you ag":[6709],"t... you aga":[6709],"... you agai":[6709],".. you again":[6709],". you again ":[6709]," you again s":[6709],"you again se":[6709],"ou again see":[6709],"u again see ":[6709]," again see t":[6709],"again see th":[6709],"gain see the":[6709],"ain see the ":[6709],"in see the g":[6709],"n see the gr":[6709]," see the gre":[6709],"see the gree":[6709],"ee the green":[6709]," the green t":[6709,6712],"the green te":[6709,6712],"he green tex":[6709,6712],"e green text":[6709,6712]," green text.":[6709,6712],"green text..":[6709],"reen text...":[6709],"een text...&":[6709],"en text...&n":[6709],"n text...&nb":[6709]," text...&nbs":[6709],"text...&nbsp":[6709],"ext...&nbsp;":[6709],"xt...&nbsp; ":[6709],"t...&nbsp; s":[6709],"...&nbsp; sh":[6709],"..&nbsp; sho":[6709],".&nbsp; show":[6709],"&nbsp; showi":[6709],"nbsp; showin":[6709],"bsp; showing":[6709],"sp; showing ":[6709],"p; showing t":[6709],"; showing th":[6709],"howing the 3":[6709],"owing the 3 ":[6709],"wing the 3 '":[6709],"ing the 3 'd":[6709],"ng the 3 'di":[6709],"g the 3 'dis":[6709]," the 3 'disc":[6709],"the 3 'discr":[6709],"he 3 'discre":[6709],"e 3 'discret":[6709]," 3 'discrete":[6709],"3 'discrete'":[6709],"rete' ways t":[6709],"ete' ways to":[6709],"te' ways to ":[6709],"e' ways to s":[6709],"' ways to se":[6709]," ways to set":[6709],"ways to set ":[6709],"ays to set t":[6709],"ys to set th":[6709],"to set the b":[6709],"o set the bo":[6709]," set the box":[6709],"set the box'":[6709],"et the box's":[6709],"t the box's ":[6709],"the box's .r":[6709],"he box's .ro":[6709],"e box's .rot":[6709]," box's .rota":[6709],"box's .rotat":[6709],"ox's .rotati":[6709],"x's .rotatio":[6709],"'s .rotation":[6709],"s .rotation ":[6709],"perty with v":[6709],"erty with va":[6709],"rty with val":[6709],"ty with valu":[6709],"y with value":[6709],"ues.&nbsp; i":[6709],"s.&nbsp; i b":[6709]," i bet you u":[6709],"i bet you un":[6709]," bet you und":[6709],"bet you unde":[6709],"et you under":[6709],"t you unders":[6709],"derstand thi":[6709],"erstand this":[6709],"rstand this ":[6709],"stand this c":[6709],"tand this co":[6709],"and this com":[6709],"nd this comp":[6709],"d this compl":[6709]," this comple":[6709],"this complet":[6709],"his complete":[6709]," completely,":[6709],"completely, ":[6709],"ompletely, d":[6709],"mpletely, do":[6709],"pletely, don":[6709],"letely, don'":[6709],"etely, don't":[6709],"tely, don't ":[6709],"ely, don't y":[6709],"ly, don't yo":[6709],"y, don't you":[6709],", don't you?":[6709,6738]," don't you?&":[6709,6738],"don't you?&n":[6709,6738],"on't you?&nb":[6709,6738],"n't you?&nbs":[6709,6738],"'t you?&nbsp":[6709,6738],"t you?&nbsp;":[6709,6738]," you?&nbsp; ":[6709,6738],"you?&nbsp; e":[6709],"ou?&nbsp; ea":[6709],"u?&nbsp; eas":[6709],"?&nbsp; easy":[6709],"**scaling** ":[6710],"*scaling** -":[6710],"scaling** - ":[6710],"caling** - s":[6710],"aling** - sc":[6710],"ling** - sca":[6710],"ing** - scal":[6710],"ng** - scali":[6710],"g** - scalin":[6710],"** - scaling":[6710],"* - scaling.":[6710]," - scaling..":[6710],"- scaling...":[6710],"scaling... i":[6710,6713],"caling... is":[6710,6713],"aling... is ":[6710,6713],"ling... is s":[6710],"ing... is st":[6710],"ng... is str":[6710],"g... is stre":[6710],"... is stret":[6710],".. is stretc":[6710],". is stretch":[6710]," is stretchi":[6710],"is stretchin":[6710],"s stretching":[6710]," stretching ":[6710],"stretching o":[6710],"tretching or":[6710],"retching or ":[6710],"etching or s":[6710],"tching or sh":[6710],"ching or shr":[6710],"hing or shri":[6710],"ing or shrin":[6710],"ng or shrink":[6710],"g or shrinki":[6710]," or shrinkin":[6710],"or shrinking":[6710],"r shrinking.":[6710]," shrinking..":[6710],"shrinking...":[6710],"hrinking... ":[6710],"rinking... a":[6710],"inking... al":[6710],"nking... alo":[6710],"king... alon":[6710],"ing... along":[6710],"ng... along ":[6710],"g... along a":[6710],"... along an":[6710],".. along any":[6710],". along any ":[6710],"xes.&nbsp; l":[6710],"bsp; let's j":[6710],"sp; let's ju":[6710],"p; let's jum":[6710],"; let's jump":[6710]," let's jump ":[6710],"let's jump r":[6710],"et's jump ri":[6710],"t's jump rig":[6710],"'s jump righ":[6710],"s jump right":[6710]," jump right ":[6710],"jump right i":[6710],"ump right in":[6710],"mp right int":[6710],"p right into":[6710]," right into ":[6710],"right into a":[6710],"ight into a ":[6710],"ght into a s":[6710],"ht into a sa":[6710],"t into a sav":[6710]," into a save":[6710],"into a saved":[6710],"nto a saved ":[6710],"to a saved p":[6710],"o a saved pl":[6710],"scene that d":[6710],"cene that de":[6710],"ene that dem":[6710],"ne that demo":[6710],"e that demon":[6710]," that demons":[6710],"that demonst":[6710],"hat demonstr":[6710],"at demonstra":[6710],"t demonstrat":[6710],"demonstrates":[6710],"emonstrates ":[6710],"monstrates s":[6710],"onstrates sc":[6710],"nstrates sca":[6710],"strates scal":[6710],"trates scali":[6710],"rates scalin":[6710],"ates scaling":[6710],"tes scaling:":[6710],"ites.net/#1v":[6711],"tes.net/#1vm":[6711],"es.net/#1vmq":[6711],"s.net/#1vmqn":[6711],".net/#1vmqnh":[6711],"net/#1vmqnh ":[6711],"et/#1vmqnh #":[6711],"t/#1vmqnh ##":[6711],"/#1vmqnh ###":[6711],"again, take ":[6712],"gain, take s":[6712],"ain, take so":[6712],"in, take som":[6712],"n, take some":[6712],", take some ":[6712]," take some t":[6712],"me time to w":[6712],"e time to wa":[6712]," time to wat":[6712],"time to watc":[6712],"ime to watch":[6712],"me to watch ":[6712],"e to watch t":[6712]," to watch th":[6712],"to watch the":[6712],"o watch the ":[6712]," watch the s":[6712],"watch the sc":[6712],"atch the sce":[6712],"tch the scen":[6712],"ch the scene":[6712],"h the scene.":[6712],"ne.&nbsp; an":[6712],"e.&nbsp; and":[6712],"&nbsp; and o":[6712],"nbsp; and on":[6712],"bsp; and onc":[6712],"sp; and once":[6712],"p; and once ":[6712],"; and once m":[6712]," and once mo":[6712],"and once mor":[6712],"nd once more":[6712],"d once more,":[6712]," once more, ":[6712],"once more, t":[6712],"nce more, th":[6712],"ce more, the":[6712],"e more, the ":[6712]," more, the y":[6712],"more, the ye":[6712],"ore, the yel":[6712],"re, the yell":[6712],"text shows t":[6712],"ext shows th":[6712],"xt shows the":[6712],"t shows the ":[6712]," shows the o":[6712],"shows the on":[6712],"hows the one":[6712],"ows the one-":[6712],"ws the one-l":[6712],"s the one-li":[6712],"e one-line v":[6712]," one-line ve":[6712],"one-line vec":[6712],"ne-line vect":[6712],"e-line vecto":[6712],"-line vector":[6712],"line vector3":[6712],"ine vector3 ":[6712],"ne vector3 w":[6712],"e vector3 wa":[6712]," vector3 way":[6712],"vector3 way ":[6712],"ector3 way o":[6712],"ctor3 way of":[6712],"tor3 way of ":[6712],"or3 way of s":[6712],"r3 way of se":[6712],"3 way of set":[6712]," way of sett":[6712],"way of setti":[6712],"of setting a":[6712],"f setting a ":[6712],"ting a mesh'":[6712]," a mesh's .s":[6712],"a mesh's .sc":[6712]," mesh's .sca":[6712],"mesh's .scal":[6712],"esh's .scali":[6712],"sh's .scalin":[6712],"h's .scaling":[6712],"'s .scaling,":[6712],"s .scaling, ":[6712]," .scaling, o":[6712],".scaling, or":[6712],"scaling, or ":[6712],"caling, or y":[6712],"aling, or yo":[6712],"ling, or you":[6712],"ing, or you ":[6712],"ng, or you c":[6712],"g, or you ca":[6712],", or you can":[6712]," or you can ":[6712],"or you can u":[6712],"r you can us":[6712]," can use one":[6712],"can use one ":[6712],"an use one o":[6712],"n use one or":[6712]," use one or ":[6712],"use one or m":[6712],"se one or mo":[6712],"ne or more o":[6712],"e or more of":[6712]," or more of ":[6712],"or more of t":[6712],"r more of th":[6712]," more of the":[6712],"more of the ":[6712],"ore of the d":[6712],"re of the di":[6712]," of the disc":[6712],"of the discr":[6712],"f the discre":[6712]," the discret":[6712],"the discrete":[6712],"he discrete ":[6712],"e discrete w":[6712]," discrete wa":[6712],"discrete way":[6712],"iscrete ways":[6712],"screte ways ":[6712],"crete ways o":[6712],"rete ways of":[6712],"ete ways of ":[6712],"te ways of s":[6712],"e ways of se":[6712]," ways of set":[6712],"ways of sett":[6712],"ays of setti":[6712],"ys of settin":[6712],"s of setting":[6712],"of setting s":[6712],"f setting sc":[6712]," setting sca":[6712],"setting scal":[6712],"etting scali":[6712],"tting scalin":[6712],"ting scaling":[6712],"ing scaling.":[6712],"ng scaling..":[6712],"g scaling...":[6712],"scaling... s":[6712],"caling... sh":[6712],"aling... sho":[6712],"ling... show":[6712],"ing... shown":[6712],"ng... shown ":[6712],"g... shown i":[6712],"... shown in":[6712],".. shown in ":[6712],". shown in t":[6712],"own in the g":[6712],"wn in the gr":[6712],"n in the gre":[6712]," in the gree":[6712],"in the green":[6712],"n the green ":[6712],"green text. ":[6712],"reen text. y":[6712],"een text. yo":[6712],"en text. you":[6712],"n text. you ":[6712]," text. you m":[6712],"text. you ma":[6712],"ext. you may":[6712],"xt. you may ":[6712],"t. you may h":[6712],". you may ha":[6712],"ticed that s":[6712],"iced that sc":[6712],"ced that sca":[6712],"ed that scal":[6712],"d that scali":[6712]," that scalin":[6712,6713],"that scaling":[6712,6713],"hat scaling ":[6712,6713],"at scaling v":[6712],"t scaling va":[6712]," scaling val":[6712],"scaling valu":[6712],"caling value":[6712],"aling values":[6712],"ling values ":[6712],"ing values a":[6712],"ng values ar":[6712],"g values are":[6712],"values are n":[6712],"alues are ne":[6712],"lues are nev":[6712],"ues are neve":[6712],"es are never":[6712],"s are never ":[6712]," are never n":[6712],"are never ne":[6712],"re never neg":[6712],"e never nega":[6712]," never negat":[6712],"never negati":[6712],"ever negativ":[6712],"ver negative":[6712],"er negative.":[6712],"r negative.&":[6712]," negative.&n":[6712],"negative.&nb":[6712],"egative.&nbs":[6712],"gative.&nbsp":[6712],"ative.&nbsp;":[6712],"tive.&nbsp; ":[6712],"ive.&nbsp; i":[6712],"ve.&nbsp; it":[6712],"&nbsp; it wo":[6712],"nbsp; it wou":[6712],"bsp; it woul":[6712],"sp; it would":[6712],"p; it would ":[6712],"; it would b":[6712],"t would be i":[6712]," would be il":[6712],"would be ill":[6712],"ould be illo":[6712],"uld be illog":[6712],"ld be illogi":[6712],"d be illogic":[6712]," be illogica":[6712],"be illogical":[6712],"e illogical ":[6712]," illogical t":[6712],"illogical to":[6712],"llogical to ":[6712],"logical to u":[6712],"ogical to us":[6712],"gical to use":[6712],"ical to use ":[6712],"cal to use a":[6712],"al to use a ":[6712],"l to use a n":[6712]," to use a ne":[6712],"to use a neg":[6712],"o use a nega":[6712]," use a negat":[6712],"use a negati":[6712],"se a negativ":[6712],"e a negative":[6712],"a negative s":[6712]," negative sc":[6712],"negative sca":[6712],"egative scal":[6712],"gative scali":[6712],"ative scalin":[6712],"tive scaling":[6712],"ive scaling ":[6712],"ve scaling v":[6712],"e scaling va":[6712],"aling value,":[6712],"ling value, ":[6712],"ing value, a":[6712],"ng value, an":[6712],"g value, and":[6712],"value, and i":[6712],"alue, and if":[6712],"lue, and if ":[6712],"ue, and if y":[6712],"and if you d":[6712],"nd if you de":[6712],"d if you dec":[6712]," if you deci":[6712],"if you decid":[6712],"f you decide":[6712],"you decide t":[6712],"ou decide to":[6712],"u decide to ":[6712]," decide to u":[6712],"decide to us":[6712],"ecide to use":[6712],"cide to use ":[6712],"ide to use s":[6712],"de to use so":[6712],"e to use som":[6712]," to use some":[6712],"to use some ":[6712],"o use some n":[6712]," use some ne":[6712],"use some neg":[6712],"se some nega":[6712],"e some negat":[6712]," some negati":[6712],"some negativ":[6712],"ome negative":[6712],"me negative ":[6712],"e negative v":[6712]," negative va":[6712],"negative val":[6712],"egative valu":[6712],"gative value":[6712],"ative values":[6712],"tive values,":[6712],"ive values, ":[6712],"ve values, u":[6712],"e values, un":[6712]," values, une":[6712],"values, unex":[6712],"alues, unexp":[6712],"lues, unexpe":[6712],"ues, unexpec":[6712],"es, unexpect":[6712],"s, unexpecte":[6712],", unexpected":[6712]," unexpected ":[6712],"unexpected r":[6712],"nexpected re":[6712],"expected res":[6712],"xpected resu":[6712],"pected resul":[6712],"ected result":[6712],"cted results":[6712],"ted results ":[6712],"ed results m":[6712],"d results ma":[6712],"esults may o":[6712],"sults may oc":[6712],"ults may occ":[6712],"lts may occu":[6712],"ts may occur":[6712],"s may occur.":[6712],"ike you to t":[6713],"ke you to ta":[6713],"e you to tak":[6713]," you to take":[6713],"you to take ":[6713],"ou to take n":[6713],"u to take no":[6713],"to take note":[6713],"o take note.":[6713]," take note..":[6713],"take note...":[6713],"ake note... ":[6713],"ke note... t":[6713],"e note... th":[6713]," note... tha":[6713],"note... that":[6713],"ote... that ":[6713],"te... that s":[6713],"e... that sc":[6713],"... that sca":[6713],".. that scal":[6713],". that scali":[6713],"at scaling i":[6713],"t scaling is":[6713],"scaling is *":[6713],"caling is **":[6713],"aling is **f":[6713],"ling is **fo":[6713],"ing is **for":[6713],"ng is **for ":[6713],"g is **for m":[6713]," is **for me":[6713],"is **for mes":[6713],"s **for mesh":[6713]," **for mesh ":[6713],"**for mesh o":[6713],"*for mesh on":[6713],"for mesh onl":[6713],"or mesh only":[6713],"r mesh only*":[6713]," mesh only**":[6713],"mesh only**.":[6713],"esh only**.&":[6713],"sh only**.&n":[6713],"h only**.&nb":[6713]," only**.&nbs":[6713],"only**.&nbsp":[6713],"nly**.&nbsp;":[6713],"ly**.&nbsp; ":[6713],"y**.&nbsp; f":[6713],"**.&nbsp; fo":[6713],"*.&nbsp; for":[6713],", you can po":[6713]," you can pos":[6713],"you can posi":[6713],"ou can posit":[6713],"u can positi":[6713]," can positio":[6713],"can position":[6713],"an position ":[6713],"n position a":[6713]," position a ":[6713],"position a m":[6713],"osition a me":[6713],"sition a mes":[6713],"ition a mesh":[6713],"tion a mesh,":[6713],"ion a mesh, ":[6713],"on a mesh, c":[6713],"n a mesh, ca":[6713]," a mesh, cam":[6713],"a mesh, came":[6713],"esh, camera,":[6713],"sh, camera, ":[6713],"h, camera, o":[6713],", camera, or":[6713]," camera, or ":[6713],"camera, or l":[6713],"amera, or li":[6713],"mera, or lig":[6713],"era, or ligh":[6713],"ra, or light":[6713],"a, or light.":[6713],", or light.&":[6713]," or light.&n":[6713],"or light.&nb":[6713],"r light.&nbs":[6713],"ght.&nbsp; y":[6713],"ht.&nbsp; yo":[6713],"p; you can o":[6713],"; you can of":[6713]," you can oft":[6713],"you can ofte":[6713],"ou can often":[6713],"u can often ":[6713]," can often r":[6713],"can often ro":[6713],"an often rot":[6713],"n often rota":[6713]," often rotat":[6713],"often rotate":[6713],"ften rotate ":[6713],"ten rotate a":[6713],"en rotate a ":[6713],"n rotate a m":[6713]," rotate a me":[6713],"rotate a mes":[6713],"otate a mesh":[6713],"tate a mesh,":[6713],"ate a mesh, ":[6713],"te a mesh, c":[6713],"e a mesh, ca":[6713],"ght.&nbsp; b":[6713],"ht.&nbsp; bu":[6713],"t.&nbsp; but":[6713],"&nbsp; but s":[6713],"nbsp; but sc":[6713],"bsp; but sca":[6713],"sp; but scal":[6713],"p; but scali":[6713],"; but scalin":[6713]," but scaling":[6713],"but scaling.":[6713],"ling... is f":[6713],"ing... is fo":[6713],"ng... is for":[6713],"g... is for ":[6713],"... is for m":[6713],".. is for me":[6713],". is for mes":[6713]," is for mesh":[6713],"is for mesh.":[6713],"s for mesh.&":[6713]," for mesh.&n":[6713],"for mesh.&nb":[6713],"or mesh.&nbs":[6713],"r mesh.&nbsp":[6713],"esh.&nbsp; i":[6713],"sh.&nbsp; if":[6713],"h.&nbsp; if ":[6713],"sp; if you s":[6713],"p; if you st":[6713],"; if you str":[6713]," if you stre":[6713],"if you stret":[6713],"f you stretc":[6713]," you stretch":[6713],"you stretch ":[6713],"ou stretch o":[6713],"u stretch or":[6713]," stretch or ":[6713],"stretch or s":[6713],"tretch or sh":[6713],"retch or shr":[6713],"etch or shri":[6713],"tch or shrin":[6713],"ch or shrink":[6713],"h or shrink ":[6713]," or shrink (":[6713],"or shrink (s":[6713],"r shrink (sc":[6713]," shrink (sca":[6713],"shrink (scal":[6713],"hrink (scale":[6713],"rink (scale)":[6713],"ink (scale) ":[6713],"nk (scale) a":[6713],"k (scale) a ":[6713]," (scale) a c":[6713],"(scale) a ca":[6713],"scale) a cam":[6713],"cale) a came":[6713],"ale) a camer":[6713],"le) a camera":[6713],"e) a camera ":[6713],") a camera o":[6713]," a camera or":[6713],"a camera or ":[6713]," camera or l":[6713],"camera or li":[6713],"amera or lig":[6713],"mera or ligh":[6713],"era or light":[6713],"ra or light,":[6713],"a or light, ":[6713]," or light, y":[6713],"or light, yo":[6713],"r light, you":[6713],"light, you w":[6713],"ight, you wi":[6713],"ght, you wil":[6713],"ht, you will":[6713]," you will br":[6713],"you will bre":[6713],"ou will brea":[6713],"u will break":[6713]," will break ":[6713],"will break i":[6713],"ill break it":[6713],"ll break its":[6713],"l break its ":[6713]," break its e":[6713],"break its el":[6713],"reak its ele":[6713],"eak its elec":[6713],"ak its elect":[6713],"k its electr":[6713]," its electri":[6713],"its electric":[6713],"ts electrica":[6713],"s electrical":[6713]," electrical ":[6713],"electrical p":[6713],"lectrical pa":[6713],"ectrical par":[6713],"ctrical part":[6713],"trical parts":[6713],"rical parts.":[6713],"ical parts.&":[6713],"cal parts.&n":[6713],"al parts.&nb":[6713],"l parts.&nbs":[6713]," parts.&nbsp":[6713],"parts.&nbsp;":[6713],"arts.&nbsp; ":[6713],"rts.&nbsp; (":[6713],"ts.&nbsp; (i":[6713],"s.&nbsp; (it":[6713],".&nbsp; (it'":[6713],"&nbsp; (it's":[6713],"nbsp; (it's ":[6713],"bsp; (it's a":[6713],"sp; (it's a ":[6713],"p; (it's a j":[6713],"; (it's a jo":[6713]," (it's a jok":[6713],"(it's a joke":[6713],"it's a joke,":[6713],"t's a joke, ":[6713],"'s a joke, o":[6713],"s a joke, ok":[6713]," a joke, ok?":[6713],"a joke, ok?)":[6713]," joke, ok?)&":[6713],"joke, ok?)&n":[6713],"oke, ok?)&nb":[6713],"ke, ok?)&nbs":[6713],"e, ok?)&nbsp":[6713],", ok?)&nbsp;":[6713]," ok?)&nbsp; ":[6713],"ok?)&nbsp; &":[6713],"k?)&nbsp; &n":[6713],"?)&nbsp; &nb":[6713],"nbsp;there i":[6713],"bsp;there is":[6713],"sp;there is ":[6713],"p;there is n":[6713],";there is no":[6713],"e is no reas":[6713]," is no reaso":[6713],"is no reason":[6713],"s no reason ":[6713]," no reason t":[6713],"no reason to":[6713],"o reason to ":[6713]," reason to s":[6713],"reason to se":[6713],"eason to set":[6713],"ason to set ":[6713],"son to set s":[6713],"on to set sc":[6713],"n to set sca":[6713]," to set scal":[6713],"to set scali":[6713],"o set scalin":[6713]," set scaling":[6713],"set scaling ":[6713],"et scaling f":[6713],"t scaling fo":[6713]," scaling for":[6713],"scaling for ":[6713],"caling for a":[6713],"aling for a ":[6713],"ling for a c":[6713],"ing for a ca":[6713],"ng for a cam":[6713],"g for a came":[6713]," for a camer":[6713],"for a camera":[6713],"or a camera ":[6713],"r a camera o":[6713],"ra or light.":[6713],"a or light.&":[6713],"; they are i":[6713],"they are inv":[6713],"hey are invi":[6713],"ey are invis":[6713],"y are invisi":[6713]," invisible s":[6713],"invisible sc":[6713],"nvisible sce":[6713],"visible scen":[6713],"isible scene":[6713],"sible scene ":[6713],"ible scene i":[6713],"ble scene it":[6713],"le scene ite":[6713],"## quick dow":[6714],"# quick down":[6714]," quick downl":[6714],"quick downlo":[6714],"uick downloa":[6714],"ick download":[6714],"ck downloadi":[6714],"k downloadin":[6714],"downloading ":[6714],"ownloading '":[6714],"wnloading 't":[6714],"nloading 'th":[6714],"loading 'the":[6714],"oading 'the ":[6714],"ading 'the b":[6714],"ding 'the bi":[6714],"ing 'the big":[6714],"ng 'the big ":[6714],"g 'the big 4":[6714]," 'the big 4'":[6714,6715],"'the big 4' ":[6714,6715],"the big 4' e":[6714,6715],"he big 4' ex":[6714,6715],"e big 4' ext":[6714,6715]," big 4' exte":[6714,6715],"big 4' exter":[6714,6715],"ig 4' extern":[6714,6715],"g 4' externa":[6714,6715]," 4' external":[6714,6715],"4' externals":[6714],"' externals ":[6714]," externals #":[6714],"externals ##":[6714],"remember 'th":[6715],"emember 'the":[6715],"member 'the ":[6715],"ember 'the b":[6715],"mber 'the bi":[6715],"ber 'the big":[6715],"er 'the big ":[6715],"r 'the big p":[6715],"g picture' f":[6715]," picture' fa":[6715],"picture' far":[6715],"icture' far ":[6715],"cture' far a":[6715],"ture' far ab":[6715],"ure' far abo":[6715],"re' far abov":[6715],"e' far above":[6715],"' far above?":[6715]," far above?&":[6715],"far above?&n":[6715],"ar above?&nb":[6715],"r above?&nbs":[6715],"ve?&nbsp; in":[6715],"e?&nbsp; in ":[6715],"?&nbsp; in t":[6715],"nbsp; in tha":[6715],"bsp; in that":[6715],"sp; in that ":[6715],"p; in that s":[6715],"; in that se":[6715]," in that sec":[6715],"in that sect":[6715],"n that secti":[6715]," that sectio":[6715],"that section":[6715],"hat section,":[6715],"at section, ":[6715],"t section, i":[6715]," section, i ":[6715],"section, i i":[6715],"ection, i in":[6715],"ction, i int":[6715],"tion, i intr":[6715],"ion, i intro":[6715],"on, i introd":[6715],"n, i introdu":[6715],", i introduc":[6715]," i introduce":[6715],"i introduced":[6715],"introduced y":[6715],"ntroduced yo":[6715],"troduced you":[6715],"roduced you ":[6715],"oduced you t":[6715],"duced you to":[6715],"uced you to ":[6715],"ced you to '":[6715],"ed you to 't":[6715],"d you to 'th":[6715]," you to 'the":[6715],"you to 'the ":[6715],"ou to 'the b":[6715],"u to 'the bi":[6715]," to 'the big":[6715],"to 'the big ":[6715],"o 'the big 4":[6715],"4' external ":[6715],"' external i":[6715],"al include f":[6715,6717],"l include fi":[6715,6717]," include fil":[6715,6717],"include file":[6715,6717],"nclude files":[6715,6717],"clude files.":[6715,6717],"lude files..":[6715],"ude files...":[6715],"de files...&":[6715],"e files...&n":[6715]," files...&nb":[6715],"files...&nbs":[6715],"iles...&nbsp":[6715],"les...&nbsp;":[6715],"es...&nbsp; ":[6715],"s...&nbsp; h":[6715],"...&nbsp; ha":[6715],"..&nbsp; han":[6715],"&nbsp; hand.":[6715],"nbsp; hand.j":[6715],"bsp; hand.js":[6715],"sp; hand.js,":[6715],"p; hand.js, ":[6715],"; hand.js, c":[6715]," hand.js, ca":[6715],"hand.js, can":[6715],"and.js, cann":[6715],"nd.js, canno":[6715],"d.js, cannon":[6715],".js, cannon.":[6715],"js, cannon.j":[6715],"s, cannon.js":[6715],", cannon.js,":[6715],"cannon.js, o":[6715],"annon.js, oi":[6715],"nnon.js, oim":[6715],"non.js, oimo":[6715],"on.js, oimo.":[6715],"n.js, oimo.j":[6715],".js, oimo.js":[6715],"js, oimo.js,":[6715],"s, oimo.js, ":[6715],", oimo.js, a":[6715]," oimo.js, an":[6715],"oimo.js, and":[6715],"imo.js, and ":[6715],"mo.js, and b":[6715],"o.js, and ba":[6715],".js, and bab":[6715],"js, and baby":[6715],"s, and babyl":[6715],".js.&nbsp; m":[6715],"js.&nbsp; ma":[6715],"s.&nbsp; man":[6715],".&nbsp; many":[6715],"nbsp; many p":[6715],"bsp; many pe":[6715],"sp; many peo":[6715],"p; many peop":[6715],"; many peopl":[6715],"any people u":[6715],"ny people us":[6715],"y people use":[6715]," people use ":[6715],"people use g":[6715],"eople use gi":[6715],"ople use git":[6715],"ple use gith":[6715],"le use githu":[6715],"e use github":[6715]," use github ":[6715],"use github v":[6715],"se github ve":[6715],"e github ver":[6715]," github vers":[6715],"github versi":[6715],"ithub versio":[6715],"thub version":[6715],"hub version-":[6715],"ub version-m":[6715],"b version-ma":[6715]," version-man":[6715],"version-mana":[6715],"ersion-manag":[6715],"rsion-manage":[6715],"sion-managem":[6715],"ion-manageme":[6715],"on-managemen":[6715],"n-management":[6715],"-management ":[6715],"management s":[6715],"anagement sy":[6715],"nagement sys":[6715],"agement syst":[6715],"gement syste":[6715],"ement system":[6715],"ment systems":[6715],"ent systems ":[6715],"nt systems t":[6715],"t systems to":[6715]," systems to ":[6715],"systems to d":[6715],"ystems to do":[6715],"stems to dow":[6715],"tems to down":[6715],"ems to downl":[6715],"ms to downlo":[6715],"s to downloa":[6715],"download tho":[6715],"ownload thos":[6715],"wnload those":[6715],"nload those ":[6715],"load those f":[6715],"oad those fi":[6715],"ad those fil":[6715],"d those file":[6715],"those files ":[6715,6723],"hose files f":[6715],"ose files fr":[6715],"se files fro":[6715],"e files from":[6715]," files from ":[6715],"files from t":[6715],"iles from th":[6715],"les from the":[6715],"s from the b":[6715],"abylon.js gi":[6715],"bylon.js git":[6715],"ylon.js gith":[6715],"lon.js githu":[6715],"on.js github":[6715],"n.js github ":[6715],".js github s":[6715],"js github so":[6715],"s github sou":[6715]," github sour":[6715],"github sourc":[6715],"ithub source":[6715],"thub source ":[6715],"hub source c":[6715],"ub source co":[6715],"b source cod":[6715]," source code":[6715],"source code ":[6715],"ource code r":[6715],"urce code re":[6715],"rce code rep":[6715],"ce code repo":[6715],"e code repos":[6715]," code reposi":[6715],"code reposit":[6715],"ode reposito":[6715],"de repositor":[6715],"e repository":[6715]," repository.":[6715],"repository.&":[6715],"epository.&n":[6715],"pository.&nb":[6715],"ository.&nbs":[6715],"sitory.&nbsp":[6715],"itory.&nbsp;":[6715],"tory.&nbsp; ":[6715],"ory.&nbsp; s":[6715],"ry.&nbsp; so":[6715],"y.&nbsp; som":[6715],"nbsp; some p":[6715],"bsp; some pe":[6715],"sp; some peo":[6715],"p; some peop":[6715],"; some peopl":[6715]," some people":[6715],"some people ":[6715],"ome people m":[6715],"me people ma":[6715],"e people mak":[6715]," people make":[6715],"people make ":[6715],"eople make t":[6715],"ople make th":[6715],"ple make the":[6715],"le make thei":[6715],"e make their":[6715]," make their ":[6715],"make their o":[6715],"ake their ow":[6715],"ke their own":[6715]," their own '":[6715],"their own 'm":[6715],"heir own 'mi":[6715],"eir own 'min":[6715],"ir own 'mini":[6715],"r own 'minif":[6715]," own 'minifi":[6715],"own 'minifie":[6715],"wn 'minified":[6715],"n 'minified'":[6715]," 'minified' ":[6715],"'minified' v":[6715],"minified' ve":[6715],"inified' ver":[6715],"nified' vers":[6715],"ified' versi":[6715],"fied' versio":[6715],"ied' version":[6715],"ed' versions":[6715],"d' versions ":[6715],"' versions o":[6715],"ylon.js... u":[6715],"lon.js... us":[6715],"on.js... usi":[6715],"n.js... usin":[6715],".js... using":[6715],"js... using ":[6715],"s... using t":[6715],"sing the abs":[6715],"ing the abso":[6715],"ng the absol":[6715],"g the absolu":[6715]," the absolut":[6715],"the absolute":[6715],"he absolute ":[6715],"e absolute l":[6715]," absolute la":[6715],"absolute lat":[6715],"bsolute late":[6715],"solute lates":[6715],"olute latest":[6715],"lute latest ":[6715],"ute latest s":[6715],"te latest so":[6715],"e latest sou":[6715]," latest sour":[6715],"latest sourc":[6715],"atest source":[6715],"test source ":[6715],"est source c":[6715],"st source co":[6715],"t source cod":[6715],"ource code f":[6715],"urce code fi":[6715],"rce code fil":[6715],"ce code file":[6715],"e code files":[6715]," code files.":[6715],"code files.&":[6715],"ode files.&n":[6715],"de files.&nb":[6715],"les.&nbsp; o":[6715],"es.&nbsp; ot":[6715],"s.&nbsp; oth":[6715],".&nbsp; othe":[6715],"&nbsp; other":[6715],"nbsp; others":[6715],"bsp; others ":[6715],"sp; others l":[6715],"p; others li":[6715],"; others lik":[6715]," others like":[6715],"others like ":[6715],"thers like t":[6715],"hers like to":[6715],"ers like to ":[6715],"rs like to b":[6715],"s like to be":[6715]," like to be ":[6715],"like to be a":[6715],"ike to be ab":[6715],"ke to be abl":[6715],"be able to g":[6715],"e able to gr":[6715]," able to gra":[6715],"able to grab":[6715],"ble to grab ":[6715],"le to grab r":[6715],"e to grab re":[6715]," to grab rea":[6715],"to grab reas":[6715],"o grab reaso":[6715]," grab reason":[6715],"grab reasona":[6715],"rab reasonab":[6715],"ab reasonabl":[6715],"b reasonably":[6715]," reasonably ":[6715,6723],"reasonably f":[6715,6723],"easonably fr":[6715,6723],"asonably fre":[6715,6723],"sonably fres":[6715,6723],"onably fresh":[6715,6723],"nably fresh ":[6715,6723],"ably fresh v":[6715,6723],"bly fresh ve":[6715,6723],"ly fresh ver":[6715,6723],"y fresh vers":[6715,6723]," fresh versi":[6715,6723],"fresh versio":[6715,6723],"resh version":[6715,6723],"esh versions":[6715],"sh versions ":[6715],"h versions o":[6715],"ons of the b":[6715,6723],"ns of the bi":[6715,6723],"s of the big":[6715,6717,6718,6723],"of the big 4":[6715,6717,6718,6723],"f the big 4.":[6715,6718,6723]," the big 4..":[6715,6718,6723],"the big 4...":[6715,6718,6723],"he big 4... ":[6715,6718,6723],"e big 4... i":[6715]," big 4... in":[6715],"big 4... in ":[6715],"ig 4... in s":[6715],"g 4... in si":[6715]," 4... in sim":[6715],"4... in simp":[6715],"... in simpl":[6715],".. in simple":[6715],". in simpler":[6715]," in simpler ":[6715],"in simpler w":[6715],"n simpler wa":[6715],"simpler ways":[6715],"impler ways.":[6715],"when you cli":[6716],"hen you clic":[6716],"en you click":[6716],"n you click ":[6716]," you click g":[6716],"you click ge":[6716],"ou click get":[6716],"u click get ":[6716]," click get .":[6716],"click get .z":[6716],"lick get .zi":[6716],"ick get .zip":[6716],"ck get .zip ":[6716],"k get .zip a":[6716]," get .zip at":[6716],"get .zip at ":[6716],"et .zip at t":[6716],"t .zip at th":[6716]," .zip at the":[6716],".zip at the ":[6716],"zip at the b":[6716],"ip at the ba":[6716],"p at the bab":[6716],"round, you g":[6716],"ound, you ge":[6716],"und, you get":[6716],"nd, you get ":[6716],"d, you get a":[6716]," you get a z":[6716],"you get a zi":[6716],"ou get a zip":[6716],"u get a zip ":[6716]," get a zip t":[6716],"get a zip th":[6716],"et a zip tha":[6716],"t a zip that":[6716]," a zip that ":[6716],"a zip that c":[6716]," zip that co":[6716],"zip that con":[6716],"ip that cont":[6716],"p that conta":[6716],"t contains a":[6716],"contains a f":[6716],"ontains a fi":[6716],"ntains a fil":[6716],"tains a file":[6716],"ains a file ":[6716],"ins a file c":[6716],"ns a file ca":[6716],"s a file cal":[6716],"ile called i":[6716],"le called in":[6716],"e called ind":[6716],"tml.&nbsp; i":[6716,6724],"ml.&nbsp; if":[6716],"sp; if you e":[6716],"p; if you ex":[6716],"; if you exa":[6716]," if you exam":[6716],"if you exami":[6716],"f you examin":[6716]," you examine":[6716],"you examine ":[6716],"ou examine i":[6716],"u examine in":[6716]," examine ind":[6716],"examine inde":[6716],"xamine index":[6716],"amine index.":[6716],"mine index.h":[6716],"ine index.ht":[6716],"ne index.htm":[6716],"index.html i":[6716],"ndex.html in":[6716],"dex.html in ":[6716],"ex.html in a":[6716],"x.html in a ":[6716],".html in a t":[6716],"html in a te":[6716],"tml in a tex":[6716],"ml in a text":[6716],"l in a text ":[6716]," in a text e":[6716],"in a text ed":[6716],"n a text edi":[6716],"text editor,":[6716],"ext editor, ":[6716],"xt editor, y":[6716],"t editor, yo":[6716],"ditor, you w":[6716],"itor, you wi":[6716],"u will see a":[6716]," will see a ":[6716],"will see a f":[6716],"ill see a fi":[6716],"ll see a fil":[6716],"l see a file":[6716]," see a file ":[6716],"see a file t":[6716],"ee a file th":[6716],"e a file tha":[6716]," a file that":[6716],"a file that ":[6716]," file that l":[6716],"file that lo":[6716],"ile that loo":[6716],"le that look":[6716],"e that looks":[6716],"that looks v":[6716],"hat looks ve":[6716],"at looks ver":[6716],"t looks very":[6716]," looks very ":[6716],"looks very m":[6716],"ooks very mu":[6716],"oks very muc":[6716],"ks very much":[6716],"s very much ":[6716]," much like t":[6716],"much like th":[6716],"uch like the":[6716],"ch like the ":[6716],"h like the b":[6716],"ig picture f":[6716],"g picture fa":[6716]," picture far":[6716],"picture far ":[6716],"icture far a":[6716],"cture far ab":[6716],"ture far abo":[6716],"ure far abov":[6716],"re far above":[6716],"e far above.":[6716]," far above.&":[6716],"far above.&n":[6716],"ar above.&nb":[6716],"r above.&nbs":[6716],"ove.&nbsp; l":[6716],"ve.&nbsp; lo":[6716],"e.&nbsp; loo":[6716],".&nbsp; look":[6716],"&nbsp; look ":[6716],"nbsp; look a":[6716],"bsp; look at":[6716],"sp; look at ":[6716],"p; look at t":[6716],"; look at th":[6716],"ook at the e":[6716],"ok at the ex":[6716],"k at the ext":[6716]," at the exte":[6716],"at the exter":[6716],"t the extern":[6716],"l includes s":[6716,6724]," includes se":[6716],"includes sec":[6716],"ncludes sect":[6716],"cludes secti":[6716],"ludes sectio":[6716],"udes section":[6716],"des section.":[6716],"ion... the f":[6716],"on... the fi":[6716],"n... the fir":[6716],"... the firs":[6716],".. the first":[6716]," the first f":[6716],"first four h":[6716],"irst four ht":[6716],"rst four htm":[6716],"st four html":[6716],"t four html ":[6716]," four html s":[6716],"four html sc":[6716],"our html scr":[6716],"ur html scri":[6716],"r html scrip":[6716],"&nbsp; the .":[6716],"nbsp; the .s":[6716],"bsp; the .sr":[6716],"sp; the .src":[6716],"p; the .src ":[6716],"; the .src a":[6716]," the .src at":[6716,6724],"the .src att":[6716,6724],"he .src attr":[6716,6724],"e .src attri":[6716,6724]," .src attrib":[6716,6724],".src attribu":[6716,6724],"src attribut":[6716,6724],"rc attribute":[6716,6724],"c attribute ":[6716]," attribute w":[6716],"attribute wi":[6716],"ttribute wit":[6716],"tribute with":[6716],"ribute withi":[6716],"ibute within":[6716],"bute within ":[6716],"ute within e":[6716],"te within ea":[6716],"e within eac":[6716]," within each":[6716],"within each ":[6716],"ithin each o":[6716],"thin each of":[6716],"hin each of ":[6716],"h of those s":[6716]," of those sc":[6716],"of those scr":[6716],"f those scri":[6716]," those scrip":[6716],"those script":[6716],"hose script ":[6716],"ose script e":[6716],"se script el":[6716],"pt elements.":[6716],"t elements..":[6716],"lements... p":[6716],"ements... po":[6716],"ments... poi":[6716],"ents... poin":[6716],"nts... point":[6716],"ts... point ":[6716],"s... point t":[6716],"... point to":[6716],".. point to ":[6716],". point to u":[6716]," point to ur":[6716],"point to url":[6716],"oint to url'":[6716],"int to url's":[6716],"nt to url's ":[6716],"t to url's l":[6716]," to url's lo":[6716],"to url's loc":[6716],"o url's loca":[6716]," url's locat":[6716],"url's locate":[6716],"rl's located":[6716],"l's located ":[6716],"'s located a":[6716],"located at t":[6716],"ocated at th":[6716],"cated at the":[6716],"ated at the ":[6716],"ted at the b":[6716],"ed at the ba":[6716],"d at the bab":[6716],"js web site.":[6716]," want to mak":[6717,6724],"want to make":[6717,6724],"ant to make ":[6717,6724],"nt to make y":[6717,6724],"t to make yo":[6717,6724]," make your h":[6717],"make your ho":[6717],"ake your hom":[6717],"ke your home":[6717],"e your home ":[6717]," your home d":[6717],"your home de":[6717],"our home dem":[6717],"ur home demo":[6717],"r home demo ":[6717]," home demo s":[6717],"home demo sc":[6717],"ome demo sce":[6717],"me demo scen":[6717],"emo scenes r":[6717],"mo scenes ru":[6717],"o scenes run":[6717]," scenes run ":[6717],"scenes run f":[6717],"cenes run fa":[6717],"enes run fas":[6717],"nes run fast":[6717],"es run faste":[6717],"s run faster":[6717]," run faster,":[6717],"run faster, ":[6717],"un faster, y":[6717],"n faster, yo":[6717]," faster, you":[6717],"faster, you ":[6717],"aster, you c":[6717],"ster, you ca":[6717],"r, you can d":[6717]," you can dow":[6717],"you can down":[6717],"ou can downl":[6717],"u can downlo":[6717]," can downloa":[6717],"can download":[6717],"an download ":[6717],"n download c":[6717]," download co":[6717],"download cop":[6717],"ownload copi":[6717],"wnload copie":[6717],"nload copies":[6717],"load copies ":[6717],"oad copies o":[6717],"ad copies of":[6717],"d copies of ":[6717],"pies of the ":[6717,6718],"ies of the e":[6717],"es of the ex":[6717],"s of the ext":[6717]," of the exte":[6717],"of the exter":[6717],"f the extern":[6717],"l includes..":[6717]," includes...":[6717],"includes... ":[6717],"ncludes... a":[6717],"cludes... an":[6717],"ludes... and":[6717],"udes... and ":[6717],"des... and p":[6717],"es... and pu":[6717],"s... and put":[6717],"... and put ":[6717,6718],".. and put t":[6717],". and put th":[6717],"and put them":[6717],"nd put them ":[6717],"d put them i":[6717]," put them in":[6717],"put them int":[6717],"ut them into":[6717],"t them into ":[6717]," them into a":[6717],"them into a ":[6717],"hem into a f":[6717],"em into a fo":[6717],"m into a fol":[6717]," into a fold":[6717],"into a folde":[6717],"nto a folder":[6717],"to a folder.":[6717],"o a folder.&":[6717]," a folder.&n":[6717],"a folder.&nb":[6717]," folder.&nbs":[6717,6723],"folder.&nbsp":[6717,6723],"older.&nbsp;":[6717,6723],"lder.&nbsp; ":[6717,6723],"der.&nbsp; t":[6717],"nbsp; that f":[6717],"bsp; that fo":[6717],"sp; that fol":[6717],"p; that fold":[6717],"; that folde":[6717]," that folder":[6717,6718],"that folder ":[6717,6718],"hat folder s":[6717],"at folder sh":[6717],"t folder sho":[6717]," folder shou":[6717],"folder shoul":[6717],"older should":[6717],"lder should ":[6717],"der should b":[6717],"er should be":[6717],"r should be ":[6717],"should be lo":[6717],"hould be loc":[6717],"ould be loca":[6717],"uld be locat":[6717],"ld be locate":[6717],"d be located":[6717],"be located w":[6717],"e located wi":[6717]," located wit":[6717],"located with":[6717],"ocated withi":[6717],"cated within":[6717],"ated within ":[6717],"ted within t":[6717],"ed within th":[6717],"within the f":[6717],"ithin the fo":[6717],"thin the fol":[6717],"hin the fold":[6717],"the folder t":[6717],"he folder th":[6717],"e folder tha":[6717]," folder that":[6717],"folder that ":[6717],"older that h":[6717],"lder that ho":[6717],"der that hol":[6717],"er that hold":[6717],"r that holds":[6717]," that holds ":[6717],"that holds y":[6717],"hat holds yo":[6717],"at holds you":[6717],"t holds your":[6717]," holds your ":[6717],"holds your i":[6717],"olds your in":[6717],"lds your ind":[6717],"ds your inde":[6717],"s your index":[6717],"tml.&nbsp; f":[6717],"ml.&nbsp; fo":[6717]," example, in":[6717],"example, in ":[6717],"xample, in t":[6717],"ample, in th":[6717],"mple, in the":[6717],"ple, in the ":[6717],"le, in the s":[6717],"e, in the sa":[6717],", in the sam":[6717]," folder as i":[6717],"folder as in":[6717],"older as ind":[6717],"lder as inde":[6717],"der as index":[6717],"er as index.":[6717],"r as index.h":[6717]," as index.ht":[6717],"as index.htm":[6717],"s index.html":[6717]," index.html,":[6717],"index.html, ":[6717],"ndex.html, y":[6717],"dex.html, yo":[6717],"ex.html, you":[6717],"x.html, you ":[6717],".html, you c":[6717],"html, you co":[6717],"tml, you cou":[6717],"ml, you coul":[6717],"l, you could":[6717],"you could cr":[6717],"ou could cre":[6717],"u could crea":[6717],"uld create a":[6717],"ld create a ":[6717],"d create a f":[6717]," called 'js'":[6717],"called 'js' ":[6717],"alled 'js' (":[6717],"lled 'js' (n":[6717],"led 'js' (no":[6717],"ed 'js' (no ":[6717],"d 'js' (no q":[6717]," 'js' (no qu":[6717],"'js' (no quo":[6717],"js' (no quot":[6717],"s' (no quote":[6717],"' (no quotes":[6717]," (no quotes)":[6717],"(no quotes).":[6717],"no quotes).&":[6717],"o quotes).&n":[6717]," quotes).&nb":[6717],"quotes).&nbs":[6717],"uotes).&nbsp":[6717],"otes).&nbsp;":[6717],"tes).&nbsp; ":[6717],"es).&nbsp; i":[6717],"s).&nbsp; in":[6717],").&nbsp; ins":[6717],".&nbsp; insi":[6717],"&nbsp; insid":[6717],"nbsp; inside":[6717],"bsp; inside ":[6717],"sp; inside t":[6717],"p; inside th":[6717],"; inside the":[6717],"inside the j":[6717],"nside the js":[6717],"side the js ":[6717],"ide the js f":[6717],"de the js fo":[6717],"e the js fol":[6717]," the js fold":[6717],"the js folde":[6717],"he js folder":[6717],"e js folder,":[6717]," js folder, ":[6717,6724],"js folder, y":[6717,6724],"s folder, yo":[6717,6724]," folder, you":[6717,6724],"folder, you ":[6717,6724],"older, you c":[6717],"lder, you co":[6717],"der, you cou":[6717],"er, you coul":[6717],"r, you could":[6717],"you could pu":[6717],"ou could put":[6717],"u could put ":[6717]," could put h":[6717],"could put ho":[6717],"ould put hom":[6717],"uld put home":[6717],"ld put home ":[6717],"d put home c":[6717]," put home co":[6717],"put home cop":[6717],"ut home copi":[6717],"t home copie":[6717]," home copies":[6717],"home copies ":[6717],"ome copies o":[6717],"me copies of":[6717],"ies of the b":[6717,6718],"es of the bi":[6717,6718],"f the big 4 ":[6717,6723]," the big 4 e":[6717],"the big 4 ex":[6717],"he big 4 ext":[6717],"e big 4 exte":[6717]," big 4 exter":[6717],"big 4 extern":[6717],"ig 4 externa":[6717],"g 4 external":[6717]," 4 external ":[6717],"4 external i":[6717],"you have tha":[6718],"ou have that":[6718],"u have that ":[6718]," have that f":[6718],"have that fo":[6718],"ave that fol":[6718],"ve that fold":[6718],"e that folde":[6718],"hat folder m":[6718],"at folder ma":[6718],"t folder mad":[6718]," folder made":[6718],"folder made,":[6718],"older made, ":[6718],"lder made, y":[6718],"der made, yo":[6718],"er made, you":[6718],"r made, you ":[6718]," made, you c":[6718],"made, you ca":[6718],"ade, you can":[6718],"an use the 4":[6718],"n use the 4 ":[6718]," use the 4 l":[6718],"use the 4 li":[6718],"se the 4 lin":[6718],"e the 4 link":[6718]," the 4 links":[6718],"the 4 links ":[6718],"he 4 links s":[6718],"e 4 links sh":[6718]," 4 links sho":[6718],"4 links show":[6718]," links shown":[6718],"links shown ":[6718],"inks shown b":[6718],"nks shown be":[6718],"ks shown bel":[6718],"s shown belo":[6718]," shown below":[6718],"shown below.":[6718],"hown below..":[6718],"own below...":[6718],"wn below... ":[6718],"n below... t":[6718]," below... to":[6718],"below... to ":[6718],"elow... to g":[6718],"low... to ge":[6718],"ow... to get":[6718],"w... to get ":[6718],"... to get c":[6718],".. to get co":[6718],". to get cop":[6718]," to get copi":[6718],"to get copie":[6718],"o get copies":[6718]," get copies ":[6718],"get copies o":[6718],"et copies of":[6718],"t copies of ":[6718],"e big 4... a":[6718]," big 4... an":[6718],"big 4... and":[6718],"ig 4... and ":[6718],"g 4... and p":[6718]," 4... and pu":[6718],"4... and put":[6718],".. and put e":[6718],". and put ea":[6718]," and put eac":[6718],"and put each":[6718],"nd put each ":[6718],"d put each o":[6718]," put each of":[6718],"put each of ":[6718],"each of them":[6718],"ach of them ":[6718],"ch of them i":[6718],"h of them in":[6718]," of them int":[6718],"of them into":[6718],"f them into ":[6718]," into your j":[6718],"into your js":[6718],"nto your js ":[6718],"to your js f":[6718],"o your js fo":[6718]," your js fol":[6718],"your js fold":[6718],"our js folde":[6718],"ur js folder":[6718],"r js folder.":[6718],"[**hand.js**":[6719],"**hand.js**]":[6719],"*hand.js**](":[6719],"hand.js**](h":[6719],"and.js**](ht":[6719],"nd.js**](htt":[6719],"d.js**](http":[6719],".js**](http:":[6719,6720,6721,6722],"js**](http:/":[6719,6720,6721,6722],"ylonjs.com/h":[6719],"lonjs.com/ha":[6719],"onjs.com/han":[6719],"njs.com/hand":[6719],"js.com/hand.":[6719],"s.com/hand.m":[6719],".com/hand.mi":[6719],"com/hand.min":[6719],"om/hand.mini":[6719],"m/hand.minif":[6719],"/hand.minifi":[6719,6726,6733],"fied-1.2.js)":[6719],"ied-1.2.js)&":[6719],"ed-1.2.js)&n":[6719],"d-1.2.js)&nb":[6719],"-1.2.js)&nbs":[6719],"1.2.js)&nbsp":[6719],".2.js)&nbsp;":[6719],"2.js)&nbsp; ":[6719],".js)&nbsp; <":[6719,6720,6721],"js)&nbsp; <=":[6719,6720,6721],"s)&nbsp; <= ":[6719,6720,6721],")&nbsp; <= r":[6719,6720,6721],"&nbsp; <= ri":[6719,6720,6721],"nbsp; <= rig":[6719,6720,6721],"bsp; <= righ":[6719,6720,6721],"sp; <= right":[6719,6720,6721],"p; <= right-":[6719,6720,6721],"; <= right-c":[6719,6720,6721]," <= right-cl":[6719,6720,6721],"<= right-cli":[6719,6720,6721,6722],"= right-clic":[6719,6720,6721,6722]," right-click":[6719,6720,6721,6722],"right-click.":[6719,6720,6721,6722],"ight-click..":[6719,6720,6721,6722],"ght-click...":[6719,6720,6721,6722],"ht-click... ":[6719,6720,6721,6722],"t-click... s":[6719,6720,6721,6722],"-click... sa":[6719,6720,6721,6722],"click... sav":[6719,6720,6721,6722],"lick... save":[6719,6720,6721,6722],"ick... save ":[6719,6720,6721,6722],"ck... save l":[6719,6720,6721,6722],"k... save li":[6719,6720,6721,6722],"... save lin":[6719,6720,6721,6722],".. save link":[6719,6720,6721,6722],". save link/":[6719,6720,6721,6722]," save link/t":[6719,6720,6721,6722],"save link/ta":[6719,6720,6721,6722],"ave link/tar":[6719,6720,6721,6722],"ve link/targ":[6719,6720,6721,6722],"e link/targe":[6719,6720,6721,6722]," link/target":[6719,6720,6721,6722],"[**cannon.js":[6720],"**cannon.js*":[6720],"*cannon.js**":[6720],"cannon.js**]":[6720],"annon.js**](":[6720],"nnon.js**](h":[6720],"non.js**](ht":[6720],"on.js**](htt":[6720,6722],"n.js**](http":[6720,6722],"lonjs.com/ca":[6720],"onjs.com/can":[6720],"njs.com/cann":[6720],"js.com/canno":[6720],"s.com/cannon":[6720],".com/cannon.":[6720],"com/cannon.j":[6720],"om/cannon.js":[6720],"m/cannon.js)":[6720],"/cannon.js)&":[6720],"cannon.js)&n":[6720],"annon.js)&nb":[6720],"nnon.js)&nbs":[6720],"non.js)&nbsp":[6720],"on.js)&nbsp;":[6720,6722],"n.js)&nbsp; ":[6720,6722],"[**oimo.js**":[6721],"**oimo.js**]":[6721],"*oimo.js**](":[6721],"oimo.js**](h":[6721],"imo.js**](ht":[6721],"mo.js**](htt":[6721],"o.js**](http":[6721],"ylonjs.com/o":[6721],"lonjs.com/oi":[6721],"onjs.com/oim":[6721],"njs.com/oimo":[6721],"js.com/oimo.":[6721],"s.com/oimo.j":[6721],".com/oimo.js":[6721],"com/oimo.js)":[6721],"om/oimo.js)&":[6721],"m/oimo.js)&n":[6721],"/oimo.js)&nb":[6721],"oimo.js)&nbs":[6721],"imo.js)&nbsp":[6721],"mo.js)&nbsp;":[6721],"o.js)&nbsp; ":[6721],"abylon.js**]":[6722],"bylon.js**](":[6722],"ylon.js**](h":[6722],"lon.js**](ht":[6722],"ylonjs.com/b":[6722],"lonjs.com/ba":[6722],"onjs.com/bab":[6722],"njs.com/baby":[6722],"js.com/babyl":[6722],"s.com/babylo":[6722],"com/babylon.":[6722],"om/babylon.j":[6722],"m/babylon.js":[6722],"babylon.js)&":[6722],"abylon.js)&n":[6722],"bylon.js)&nb":[6722],"ylon.js)&nbs":[6722],"lon.js)&nbsp":[6722],".js)&nbsp; &":[6722],"js)&nbsp; &n":[6722],"s)&nbsp; &nb":[6722],"bsp; &nbsp;<":[6722],"sp; &nbsp;<=":[6722],"p; &nbsp;<= ":[6722],"; &nbsp;<= r":[6722]," &nbsp;<= ri":[6722],"&nbsp;<= rig":[6722],"nbsp;<= righ":[6722],"bsp;<= right":[6722],"sp;<= right-":[6722],"p;<= right-c":[6722],";<= right-cl":[6722],"store each o":[6723],"tore each of":[6723],"ore each of ":[6723],"re each of t":[6723],"e each of th":[6723],"h of those f":[6723]," of those fi":[6723],"of those fil":[6723],"f those file":[6723],"hose files i":[6723],"ose files in":[6723],"se files int":[6723],"e files into":[6723]," files into ":[6723],"files into t":[6723],"iles into th":[6723],"les into the":[6723],"es into the ":[6723],"s into the n":[6723]," into the ne":[6723],"into the new":[6723],"nto the new ":[6723],"to the new j":[6723],"o the new js":[6723]," the new js ":[6723],"the new js f":[6723],"he new js fo":[6723],"e new js fol":[6723]," new js fold":[6723,6724],"new js folde":[6723,6724],"ew js folder":[6723,6724],"w js folder.":[6723]," js folder.&":[6723],"js folder.&n":[6723],"s folder.&nb":[6723],"der.&nbsp; a":[6723],"er.&nbsp; al":[6723],"r.&nbsp; als":[6723],"&nbsp; also,":[6723],"nbsp; also, ":[6723],"bsp; also, y":[6723],"sp; also, yo":[6723],"p; also, you":[6723],"; also, you ":[6723]," also, you m":[6723],"also, you mi":[6723],"lso, you mig":[6723],"so, you migh":[6723],"o, you might":[6723],"ht want to c":[6723],"t want to co":[6723]," want to cop":[6723],"want to copy":[6723],"ant to copy ":[6723],"nt to copy t":[6723],"t to copy th":[6723],"to copy them":[6723],"o copy them ":[6723]," copy them t":[6723],"copy them to":[6723],"opy them to ":[6723],"py them to s":[6723],"y them to so":[6723]," them to som":[6723],"them to some":[6723],"hem to some ":[6723],"em to some o":[6723],"m to some ot":[6723]," to some oth":[6723],"to some othe":[6723],"o some other":[6723],"some other f":[6723],"ome other fo":[6723],"me other fol":[6723],"e other fold":[6723]," other folde":[6723],"other folder":[6723],"ther folder ":[6723],"her folder a":[6723],"er folder as":[6723],"r folder as ":[6723]," folder as w":[6723],"folder as we":[6723],"older as wel":[6723],"lder as well":[6723],"der as well,":[6723],"er as well, ":[6723],"r as well, f":[6723]," as well, fo":[6723],"as well, for":[6723],"s well, for ":[6723]," well, for u":[6723],"well, for us":[6723],"ell, for usi":[6723],"ll, for usin":[6723],"l, for using":[6723],", for using ":[6723]," for using l":[6723],"for using la":[6723],"or using lat":[6723],"r using late":[6723]," using later":[6723],"using later.":[6723],"sing later.&":[6723],"ing later.&n":[6723],"ng later.&nb":[6723],"g later.&nbs":[6723]," later.&nbsp":[6723],"later.&nbsp;":[6723],"ater.&nbsp; ":[6723],"ter.&nbsp; t":[6723],"er.&nbsp; tr":[6723],"r.&nbsp; try":[6723],"sp; try to r":[6723],"p; try to re":[6723],"; try to rem":[6723]," try to reme":[6723],"try to remem":[6723],"ry to rememb":[6723],"y to remembe":[6723]," to remember":[6723],"to remember ":[6723],"o remember t":[6723]," remember to":[6723],"remember to ":[6723],"emember to r":[6723],"member to re":[6723],"ember to rep":[6723],"mber to repe":[6723],"ber to repea":[6723],"er to repeat":[6723],"r to repeat ":[6723]," to repeat t":[6723],"to repeat th":[6723],"o repeat the":[6723]," repeat thes":[6723],"repeat these":[6723],"epeat these ":[6723],"peat these a":[6723],"eat these ac":[6723],"at these act":[6723],"t these acti":[6723]," these actio":[6723],"these action":[6723],"hese actions":[6723],"ese actions ":[6723],"se actions f":[6723],"e actions fa":[6723]," actions fai":[6723],"actions fair":[6723],"ctions fairl":[6723],"tions fairly":[6723],"ions fairly ":[6723],"ons fairly o":[6723],"ns fairly of":[6723],"s fairly oft":[6723]," fairly ofte":[6723],"fairly often":[6723],"airly often,":[6723],"irly often, ":[6723],"rly often, m":[6723],"ly often, ma":[6723],"y often, may":[6723]," often, mayb":[6723],"often, maybe":[6723],"ften, maybe ":[6723],"ten, maybe o":[6723],"en, maybe on":[6723],"n, maybe onc":[6723],", maybe once":[6723]," maybe once ":[6723],"maybe once p":[6723],"aybe once pe":[6723],"ybe once per":[6723],"be once per ":[6723],"e once per m":[6723]," once per mo":[6723],"once per mon":[6723],"nce per mont":[6723],"ce per month":[6723],"e per month,":[6723]," per month, ":[6723],"per month, t":[6723],"er month, to":[6723],"r month, to ":[6723]," month, to e":[6723],"month, to en":[6723],"onth, to ens":[6723],"nth, to ensu":[6723],"th, to ensur":[6723],"h, to ensure":[6723],", to ensure ":[6723],"t you are al":[6723]," you are alw":[6723],"you are alwa":[6723],"ou are alway":[6723],"u are always":[6723],"are always u":[6723],"re always us":[6723],"e always usi":[6723]," always usin":[6723],"always using":[6723],"lways using ":[6723],"ways using a":[6723],"ays using a ":[6723],"ys using a r":[6723],"s using a re":[6723]," using a rea":[6723],"using a reas":[6723],"sing a reaso":[6723],"ing a reason":[6723],"ng a reasona":[6723],"g a reasonab":[6723]," a reasonabl":[6723],"a reasonably":[6723],"esh version ":[6723],"sh version o":[6723],"h version of":[6723]," the big 4 f":[6723],"the big 4 fi":[6723],"he big 4 fil":[6723],"e big 4 file":[6723]," big 4 files":[6723],"big 4 files.":[6723],"ig 4 files.&":[6723],"g 4 files.&n":[6723]," 4 files.&nb":[6723],"4 files.&nbs":[6723],"les.&nbsp; b":[6723],"es.&nbsp; ba":[6723],"s.&nbsp; bab":[6723],".&nbsp; baby":[6723],"p; babylon.j":[6723],"; babylon.js":[6723],"lon.js is al":[6723],"on.js is alw":[6723],"n.js is alwa":[6723],".js is alway":[6723],"js is always":[6723],"is always ev":[6723],"s always evo":[6723]," always evol":[6723],"always evolv":[6723],"lways evolvi":[6723],"ways evolvin":[6723],"ays evolving":[6723],"ys evolving.":[6723],"s evolving.&":[6723]," evolving.&n":[6723],"evolving.&nb":[6723],"volving.&nbs":[6723],"olving.&nbsp":[6723],"lving.&nbsp;":[6723],"ving.&nbsp; ":[6723],"ing.&nbsp; n":[6723],"ng.&nbsp; ne":[6723],"g.&nbsp; new":[6723],".&nbsp; new ":[6723],"&nbsp; new f":[6723],"nbsp; new fe":[6723],"bsp; new fea":[6723],"sp; new feat":[6723],"p; new featu":[6723],"; new featur":[6723]," new feature":[6723],"new features":[6723],"ew features ":[6723],"w features a":[6723]," features ar":[6723],"features are":[6723],"eatures are ":[6723],"atures are b":[6723],"tures are be":[6723],"ures are bei":[6723],"res are bein":[6723],"eing added v":[6723],"ing added ve":[6723],"ng added ver":[6723],"g added very":[6723]," added very ":[6723],"added very q":[6723],"dded very qu":[6723],"ded very qui":[6723],"ed very quic":[6723],"d very quick":[6723]," very quickl":[6723],"very quickly":[6723],"ery quickly,":[6723],"ry quickly, ":[6723],"y quickly, a":[6723]," quickly, an":[6723],"quickly, and":[6723],"uickly, and ":[6723],"ickly, and y":[6723],"ckly, and yo":[6723],"kly, and you":[6723],"ly, and you ":[6723],"y, and you w":[6723],", and you wa":[6723]," and you wan":[6723],"and you want":[6723],"nd you want ":[6723],"d you want y":[6723]," want your h":[6723],"want your ho":[6723],"ant your hom":[6723],"nt your home":[6723],"t your home ":[6723]," your home v":[6723],"your home ve":[6723],"our home ver":[6723],"ur home vers":[6723],"r home versi":[6723]," home versio":[6723],"home version":[6723],"ome versions":[6723],"me versions ":[6723],"e big 4... t":[6723]," big 4... to":[6723],"big 4... to ":[6723],"ig 4... to b":[6723],"g 4... to be":[6723]," 4... to be ":[6723],"4... to be f":[6723],"... to be fr":[6723],".. to be fre":[6723],". to be fres":[6723]," to be fresh":[6723],"to be fresh,":[6723],"o be fresh, ":[6723]," be fresh, s":[6723],"be fresh, so":[6723],"e fresh, so ":[6723]," fresh, so y":[6723],"fresh, so yo":[6723],"resh, so you":[6723],"esh, so you ":[6723],"sh, so you c":[6723],"h, so you ca":[6723],"o you can ta":[6723]," you can tak":[6723],"you can take":[6723],"ou can take ":[6723],"u can take a":[6723]," can take ad":[6723],"can take adv":[6723],"an take adva":[6723],"n take advan":[6723]," take advant":[6723],"take advanta":[6723],"ake advantag":[6723],"ke advantage":[6723],"e advantage ":[6723],"vantage of t":[6723],"antage of th":[6723],"ntage of tho":[6723],"tage of thos":[6723],"age of those":[6723],"ge of those ":[6723],"e of those n":[6723]," of those ne":[6723],"of those new":[6723],"f those new ":[6723]," those new f":[6723],"those new fe":[6723],"hose new fea":[6723],"ose new feat":[6723],"se new featu":[6723],"e new featur":[6723],"ew features.":[6723],"have those e":[6724],"ave those ex":[6724],"ve those ext":[6724],"e those exte":[6724]," those exter":[6724],"those extern":[6724],"hose externa":[6724],"ose external":[6724],"se external ":[6724]," includes sa":[6724],"includes sav":[6724],"ncludes save":[6724],"cludes saved":[6724],"ludes saved ":[6724],"udes saved i":[6724],"des saved in":[6724],"es saved int":[6724],"s saved into":[6724]," saved into ":[6724],"saved into y":[6724],"aved into yo":[6724],"ved into you":[6724],"ed into your":[6724],"d into your ":[6724]," into your n":[6724],"into your ne":[6724],"nto your new":[6724],"to your new ":[6724],"o your new j":[6724]," your new js":[6724],"your new js ":[6724],"our new js f":[6724],"ur new js fo":[6724],"r new js fol":[6724],"w js folder,":[6724],"older, you n":[6724],"lder, you ne":[6724],"d to make so":[6724]," make some a":[6724],"make some ad":[6724],"ake some adj":[6724],"ke some adju":[6724],"e some adjus":[6724]," some adjust":[6724],"some adjustm":[6724],"ome adjustme":[6724],"me adjustmen":[6724],"e adjustment":[6724],"adjustments ":[6724],"djustments t":[6724],"justments to":[6724],"ustments to ":[6724],"stments to t":[6724],"tments to th":[6724],"nts to the h":[6724],"ts to the ht":[6724],"s to the htm":[6724]," to the html":[6724],"to the html.":[6724],"o the html.&":[6724]," the html.&n":[6724],"the html.&nb":[6724],"he html.&nbs":[6724],"e html.&nbsp":[6724]," html.&nbsp;":[6724],"ml.&nbsp; in":[6724],"l.&nbsp; in ":[6724],".&nbsp; in y":[6724],"&nbsp; in yo":[6724],"nbsp; in you":[6724],"bsp; in your":[6724],"sp; in your ":[6724],"p; in your i":[6724],"; in your in":[6724]," in your ind":[6724],"in your inde":[6724],"n your index":[6724],"html file, y":[6724],"tml file, yo":[6724],"ml file, you":[6724],"l file, you ":[6724]," file, you w":[6724],"file, you wi":[6724],"ile, you wil":[6724],"le, you will":[6724],"change the .":[6724],"hange the .s":[6724],"ange the .sr":[6724],"nge the .src":[6724],"ge the .src ":[6724],"e the .src a":[6724],"c attributes":[6724],"attributes o":[6724],"ttributes of":[6724],"tributes of ":[6724],"ributes of a":[6724],"ibutes of al":[6724],"butes of all":[6724],"utes of all ":[6724],"tes of all f":[6724],"es of all fo":[6724],"s of all fou":[6724]," of all four":[6724],"of all four ":[6724],"f all four e":[6724]," all four ex":[6724],"all four ext":[6724],"ll four exte":[6724],"l four exter":[6724]," four extern":[6724],"four externa":[6724],"our external":[6724],"ur external ":[6724],"r external i":[6724],"l includes (":[6724]," includes (t":[6724],"includes (th":[6724],"ncludes (the":[6724],"cludes (the ":[6724],"ludes (the f":[6724],"udes (the fi":[6724],"des (the fir":[6724],"es (the firs":[6724],"first four s":[6724],"irst four sc":[6724],"rst four scr":[6724],"st four scri":[6724],"t four scrip":[6724]," four script":[6724],"four script ":[6724],"our script e":[6724],"ur script el":[6724],"r script ele":[6724],"pt elements)":[6724],"t elements).":[6724]," elements).&":[6724],"elements).&n":[6724],"lements).&nb":[6724],"ements).&nbs":[6724],"ments).&nbsp":[6724],"ents).&nbsp;":[6724],"nts).&nbsp; ":[6724],"ts).&nbsp; l":[6724],"s).&nbsp; li":[6724],").&nbsp; lik":[6724],"&nbsp; likel":[6724],"nbsp; likely":[6724],"bsp; likely,":[6724],"sp; likely, ":[6724],"p; likely, y":[6724],"; likely, yo":[6724]," likely, you":[6724],"likely, you ":[6724],"ikely, you w":[6724],"kely, you wi":[6724],"ely, you wil":[6724],"ll want to m":[6724],"l want to ma":[6724]," make your s":[6724],"make your sc":[6724],"ake your scr":[6724],"ke your scri":[6724],"e your scrip":[6724]," your script":[6724],"your script ":[6724],"pt elements ":[6724,6731],"t elements l":[6724]," elements lo":[6724],"elements loo":[6724],"lements look":[6724],"ements look ":[6724],"ments look l":[6724],"ents look li":[6724],"nts look lik":[6724],"ts look like":[6724],"s look like ":[6724],"sp; &nbsp; <":[6726,6727,6728,6729,6733,6734,6735,6736],"p; &nbsp; <s":[6726,6727,6728,6729,6733,6736],"; &nbsp; <sc":[6726,6727,6728,6729,6733,6736]," &nbsp; <scr":[6726,6727,6728,6729,6733,6736],"&nbsp; <scri":[6726,6727,6728,6729,6733,6736],"nbsp; <scrip":[6726,6727,6728,6729,6733,6736],"bsp; <script":[6726,6727,6728,6729,6733,6736],"sp; <script ":[6726,6727,6728,6729,6733,6736],"p; <script s":[6726,6727,6728,6729,6733,6736],"; <script sr":[6726,6727,6728,6729,6733,6736],"t src=\"./js/":[6726,6727,6728,6729,6733,6734,6735,6736]," src=\"./js/h":[6726,6733],"src=\"./js/ha":[6726,6733],"rc=\"./js/han":[6726,6733],"c=\"./js/hand":[6726,6733],"=\"./js/hand.":[6726,6733],"\"./js/hand.m":[6726,6733],"./js/hand.mi":[6726,6733],"/js/hand.min":[6726,6733],"js/hand.mini":[6726,6733],"s/hand.minif":[6726,6733],"fied-1.2.js\"":[6726,6733],"ied-1.2.js\">":[6726,6733],"ed-1.2.js\"><":[6726,6733],"d-1.2.js\"></":[6726,6733],"-1.2.js\"></s":[6726,6733],"1.2.js\"></sc":[6726,6733],".2.js\"></scr":[6726,6733],"2.js\"></scri":[6726,6733]," src=\"./js/c":[6727,6734],"src=\"./js/ca":[6727,6734],"rc=\"./js/can":[6727,6734],"c=\"./js/cann":[6727,6734],"=\"./js/canno":[6727,6734],"\"./js/cannon":[6727,6734],"./js/cannon.":[6727,6734],"/js/cannon.j":[6727,6734],"js/cannon.js":[6727,6734],"s/cannon.js\"":[6727,6734],"/cannon.js\">":[6727,6734],"\"></script>&":[6727,6728],"></script>&n":[6727,6728],"</script>&nb":[6727,6728],"/script>&nbs":[6727,6728],"script>&nbsp":[6727,6728],"cript>&nbsp;":[6727,6728],"ript>&nbsp; ":[6727,6728],"ipt>&nbsp; <":[6727,6728],"pt>&nbsp; <!":[6727,6728],"t>&nbsp; <!-":[6727,6728],">&nbsp; <!--":[6727,6728],"&nbsp; <!-- ":[6727,6728,6734,6735],"nbsp; <!-- o":[6727,6728],"bsp; <!-- op":[6727,6728],"sp; <!-- opt":[6727,6728],"p; <!-- opti":[6727,6728],"; <!-- optio":[6727,6728],"- optional -":[6727,6728]," optional --":[6727,6728],"optional -->":[6727,6728]," src=\"./js/o":[6728,6735],"src=\"./js/oi":[6728,6735],"rc=\"./js/oim":[6728,6735],"c=\"./js/oimo":[6728,6735],"=\"./js/oimo.":[6728,6735],"\"./js/oimo.j":[6728,6735],"./js/oimo.js":[6728,6735],"/js/oimo.js\"":[6728,6735],"js/oimo.js\">":[6728,6735],"s/oimo.js\"><":[6728,6735],"/oimo.js\"></":[6728,6735]," src=\"./js/b":[6729,6736],"src=\"./js/ba":[6729,6736],"rc=\"./js/bab":[6729,6736],"c=\"./js/baby":[6729,6736],"=\"./js/babyl":[6729,6736],"\"./js/babylo":[6729,6736],"./js/babylon":[6729,6736],"/js/babylon.":[6729,6736],"/babylon.js\"":[6729,6736],"if you are n":[6731],"f you are no":[6731],"ou are not u":[6731],"u are not us":[6731]," are not usi":[6731],"are not usin":[6731],"re not using":[6731],"e not using ":[6731]," not using p":[6731],"not using ph":[6731],"ot using phy":[6731],"t using phys":[6731]," using physi":[6731],"using physic":[6731],"sing physics":[6731],"ng physics i":[6731],"g physics in":[6731]," physics in ":[6731],"physics in y":[6731],"hysics in yo":[6731],"ysics in you":[6731],"sics in your":[6731],"ics in your ":[6731],"cs in your s":[6731],"scene, you m":[6731],"cene, you mi":[6731],"ene, you mig":[6731],"ne, you migh":[6731],"e, you might":[6731]," want to rem":[6731],"want to rema":[6731],"ant to remar":[6731],"nt to remark":[6731],"t to remark-":[6731]," to remark-o":[6731],"to remark-ou":[6731],"o remark-out":[6731]," remark-out ":[6731],"remark-out (":[6731],"emark-out (d":[6731],"mark-out (di":[6731],"ark-out (dis":[6731],"rk-out (disa":[6731],"k-out (disab":[6731],"-out (disabl":[6731],"out (disable":[6731],"ut (disable)":[6731],"t (disable) ":[6731]," (disable) t":[6731],"(disable) th":[6731],"disable) the":[6731],"isable) the ":[6731],"sable) the s":[6731],"able) the sc":[6731],"ble) the scr":[6731],"le) the scri":[6731],"e) the scrip":[6731],") the script":[6731],"the script e":[6731],"he script el":[6731],"t elements t":[6731],"ments that i":[6731],"ents that in":[6731],"nts that inc":[6731],"ts that incl":[6731],"s that inclu":[6731]," that includ":[6731],"that include":[6731],"hat include-":[6731],"at include-i":[6731],"t include-in":[6731],"include-in c":[6731],"nclude-in ca":[6731],"clude-in can":[6731],"lude-in cann":[6731],"ude-in canno":[6731],"de-in cannon":[6731],"e-in cannon.":[6731],"-in cannon.j":[6731],"n cannon.js ":[6731]," cannon.js a":[6731],"cannon.js an":[6731],"annon.js and":[6731],"nnon.js and ":[6731],"non.js and o":[6731],"on.js and oi":[6731],"n.js and oim":[6731],".js and oimo":[6731],"js and oimo.":[6731],"s and oimo.j":[6731]," and oimo.js":[6731],"and oimo.js.":[6731],"nd oimo.js.&":[6731],"d oimo.js.&n":[6731]," oimo.js.&nb":[6731],"oimo.js.&nbs":[6731],"imo.js.&nbsp":[6731],"mo.js.&nbsp;":[6731],"o.js.&nbsp; ":[6731],"js.&nbsp; to":[6731],".&nbsp; to d":[6731],"&nbsp; to do":[6731],"nbsp; to do ":[6731],"bsp; to do t":[6731],"sp; to do th":[6731],"p; to do tha":[6731],"; to do that":[6731],"o do that, y":[6731]," do that, yo":[6731],"do that, you":[6731],"o that, you ":[6731]," that, you c":[6731],"that, you co":[6731],"hat, you cou":[6731],"at, you coul":[6731],"t, you could":[6731],"u could do t":[6731]," could do th":[6731],"could do thi":[6731],"ould do this":[6731],"uld do this:":[6731],"p; &nbsp; <!":[6734,6735],"; &nbsp; <!-":[6734,6735]," &nbsp; <!--":[6734,6735],"nbsp; <!-- <":[6734,6735],"bsp; <!-- <s":[6734,6735],"sp; <!-- <sc":[6734,6735],"p; <!-- <scr":[6734,6735],"; <!-- <scri":[6734,6735]," <!-- <scrip":[6734,6735],"></script> -":[6734,6735],"</script> --":[6734,6735],"/script> -->":[6734,6735],"asy.&nbsp; m":[6738],"sy.&nbsp; mo":[6738],"y.&nbsp; mos":[6738],"most of thes":[6738],"ost of these":[6738],"st of these ":[6738],"t of these t":[6738]," of these th":[6738],"of these thi":[6738],"f these thin":[6738]," these thing":[6738],"these things":[6738],"hese things ":[6738],"ese things y":[6738],"se things yo":[6738],"things you a":[6738],"hings you al":[6738],"ings you alr":[6738],"ngs you alre":[6738],"gs you alrea":[6738],"s you alread":[6738],"lready know,":[6738],"ready know, ":[6738],"eady know, d":[6738],"ady know, do":[6738],"dy know, don":[6738],"y know, don'":[6738]," know, don't":[6738],"know, don't ":[6738],"now, don't y":[6738],"ow, don't yo":[6738],"w, don't you":[6738],"you?&nbsp; i":[6738],"ou?&nbsp; i ":[6738],"u?&nbsp; i t":[6738],"?&nbsp; i th":[6738],"&nbsp; i tho":[6738],"nbsp; i thou":[6738],"bsp; i thoug":[6738],"sp; i though":[6738],"p; i thought":[6738],"; i thought ":[6738]," i thought s":[6738],"i thought so":[6738]," thought so.":[6738],"## hey, you ":[6739],"# hey, you m":[6739]," hey, you ma":[6739],"hey, you mad":[6739],"ey, you made":[6739],"y, you made ":[6739],", you made i":[6739]," you made it":[6739],"you made it!":[6739],"ou made it! ":[6739],"u made it! #":[6739]," made it! ##":[6739],"    \"propert":[6741,6871],"   \"property":[6741],"  \"property\"":[6741]," \"property\":":[6741],"\"property\": ":[6741,7036,7067],"property\": s":[6741],"roperty\": st":[6741],"operty\": str":[6741],"perty\": stri":[6741],"erty\": strin":[6741],"rty\": string":[6741],"ty\": string,":[6741],"    \"keys\": ":[6742],"   \"keys\": a":[6742],"  \"keys\": ar":[6742]," \"keys\": arr":[6742],"\"keys\": arra":[6742],"keys\": array":[6742],"eys\": array ":[6742],"ys\": array o":[6742],"f animationk":[6742]," animationke":[6742,6749,6750],"animationkey":[6742,6749,6750],"nimationkeys":[6742,6749],"imationkeys ":[6742],"mationkeys (":[6742],"ationkeys (s":[6742],"tionkeys (se":[6742],"ionkeys (see":[6742],"onkeys (see ":[6742],"nkeys (see b":[6742],"keys (see be":[6742],"eys (see bel":[6742],"ys (see belo":[6742],"# animationk":[6749],"n animationk":[6750],"nimationkey ":[6750],"imationkey i":[6750],"mationkey is":[6750],"ationkey is ":[6750],"tionkey is d":[6750],"ionkey is de":[6750],"onkey is def":[6750],"nkey is defi":[6750],"key is defin":[6750],"ey is define":[6750],"y is defined":[6750,6876],"    \"frame\":":[6753,7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"   \"frame\": ":[6753,7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"  \"frame\": i":[6753]," \"frame\": in":[6753],"\"frame\": int":[6753],"frame\": int,":[6753,6805],"    \"values\"":[6754,7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"   \"values\":":[6754,7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"  \"values\": ":[6754,7039,7043,7047,7051,7055,7059,7070,7074,7078,7082]," \"values\": a":[6754],"\"values\": ar":[6754],"values\": arr":[6754],"alues\": arra":[6754],"lues\": array":[6754],"ues\": array ":[6754],"ay of float ":[6754],"y of float (":[6754]," of float (d":[6754],"of float (de":[6754],"f float (dep":[6754]," float (depe":[6754],"float (depen":[6754],"loat (depend":[6754],"oat (dependi":[6754],"at (dependin":[6754],"t (depending":[6754]," (depending ":[6754],"(depending o":[6754],"depending of":[6754],"epending of ":[6754],"pending of a":[6754],"ending of an":[6754],"nding of ani":[6754],"ding of anim":[6754],"ing of anima":[6754],"ng of animat":[6754],"g of animate":[6754]," of animated":[6754],"of animated ":[6754],"f animated v":[6754]," animated va":[6754],"animated val":[6754],"nimated valu":[6754],"imated value":[6754],"mated value)":[6754],"## shadowgen":[6757],"# shadowgene":[6757],"wgenerator i":[6758],"generator is":[6758],"enerator is ":[6758],"nerator is d":[6758],"erator is de":[6758],"rator is def":[6758],"ator is defi":[6758],"tor is defin":[6758],"or is define":[6758],"    \"useblur":[6761],"   \"useblurv":[6761],"  \"useblurva":[6761]," \"useblurvar":[6761],"\"useblurvari":[6761],"ceshadowmap\"":[6761,6762,7192],"eshadowmap\":":[6761,6762,7192],"shadowmap\": ":[6761,6762,7192],"hadowmap\": b":[6761,6762],"adowmap\": bo":[6761,6762],"dowmap\": boo":[6761,6762],"owmap\": bool":[6761,6762],"wmap\": boole":[6761,6762],"map\": boolea":[6761,6762],"ap\": boolean":[6761,6762],"    \"usevari":[6762],"   \"usevaria":[6762],"  \"usevarian":[6762]," \"usevarianc":[6762],"\"usevariance":[6762,7192],"    \"usepois":[6763],"   \"usepoiss":[6763],"  \"usepoisso":[6763]," \"usepoisson":[6763],"\"usepoissons":[6763],"sonsampling\"":[6763],"onsampling\":":[6763],"nsampling\": ":[6763],"sampling\": b":[6763],"ampling\": bo":[6763],"mpling\": boo":[6763],"pling\": bool":[6763],"    \"mapsize":[6764],"   \"mapsize\"":[6764],"  \"mapsize\":":[6764]," \"mapsize\": ":[6764],"\"mapsize\": i":[6764],"mapsize\": in":[6764],"apsize\": int":[6764],"psize\": int ":[6764],"size\": int (":[6764],"ize\": int (b":[6764],"ze\": int (be":[6764],"e\": int (bet":[6764],"\": int (betw":[6764],": int (betwe":[6764]," int (betwee":[6764],"int (between":[6764],"nt (between ":[6764],"t (between 6":[6764]," (between 64":[6764],"(between 64 ":[6764],"between 64 a":[6764],"etween 64 an":[6764],"tween 64 and":[6764],"ween 64 and ":[6764],"een 64 and 2":[6764],"en 64 and 20":[6764],"n 64 and 204":[6764]," 64 and 2048":[6764],"64 and 2048,":[6764],"4 and 2048, ":[6764]," and 2048, m":[6764],"and 2048, mu":[6764],"nd 2048, mus":[6764],"d 2048, must":[6764]," 2048, must ":[6764],"2048, must b":[6764],"048, must be":[6764],"48, must be ":[6764],"8, must be a":[6764],", must be a ":[6764]," must be a p":[6764],"must be a po":[6764],"ust be a pow":[6764],"st be a powe":[6764],"t be a power":[6764]," be a power ":[6764],"be a power o":[6764],"e a power of":[6764]," a power of ":[6764],"a power of 2":[6764]," power of 2)":[6764],"power of 2),":[6764],"    \"bias\": ":[6765],"   \"bias\": s":[6765],"  \"bias\": sh":[6765]," \"bias\": sha":[6765],"\"bias\": shad":[6765],"bias\": shado":[6765],"ias\": shadow":[6765],"as\": shadow ":[6765],"s\": shadow b":[6765],"\": shadow bi":[6765],": shadow bia":[6765]," shadow bias":[6765],"shadow bias,":[6765],"    \"lightid":[6766],"   \"lightid\"":[6766],"  \"lightid\":":[6766]," \"lightid\": ":[6766],"\"lightid\": s":[6766],"lightid\": st":[6766],"ightid\": str":[6766],"ghtid\": stri":[6766],"htid\": strin":[6766],"    \"renderl":[6767],"   \"renderli":[6767],"  \"renderlis":[6767]," \"renderlist":[6767],"\"renderlist\"":[6767,7195],"renderlist\":":[6767,7195],"enderlist\": ":[6767,7195],"nderlist\": a":[6767],"derlist\": ar":[6767],"erlist\": arr":[6767],"rlist\": arra":[6767],"list\": array":[6767],"ist\": array ":[6767],"st\": array o":[6767],"t\": array of":[6767],"(which are i":[6767],"which are id":[6767],"hich are ids":[6767],"ich are ids ":[6767],"ch are ids o":[6767],"h are ids of":[6767]," are ids of ":[6767],"are ids of m":[6767],"re ids of me":[6767],"e ids of mes":[6767]," ids of mesh":[6767],"ids of meshe":[6767],"s of meshes)":[6767],"## skeletons":[6770],"a skeleton i":[6771]," skeleton is":[6771],"skeleton is ":[6771],"keleton is d":[6771],"eleton is de":[6771],"leton is def":[6771],"eton is defi":[6771],"ton is defin":[6771],"    \"bones\":":[6776],"   \"bones\": ":[6776],"  \"bones\": a":[6776]," \"bones\": ar":[6776],"\"bones\": arr":[6776],"bones\": arra":[6776],"ones\": array":[6776],"array of bon":[6776],"rray of bone":[6776],"ray of bones":[6776],"ay of bones ":[6776]," of bones (s":[6776],"of bones (se":[6776],"f bones (see":[6776]," bones (see ":[6776],"bones (see b":[6776],"ones (see be":[6776],"    \"parentb":[6783],"   \"parentbo":[6783],"  \"parentbon":[6783]," \"parentbone":[6783],"\"parentbonei":[6783],"parentbonein":[6783],"arentboneind":[6783],"rentboneinde":[6783],"entboneindex":[6783],"ntboneindex\"":[6783],"tboneindex\":":[6783],"boneindex\": ":[6783],"oneindex\": i":[6783],"neindex\": in":[6783],"eindex\": int":[6783],"    \"matrix\"":[6785],"   \"matrix\":":[6785],"  \"matrix\": ":[6785]," \"matrix\": m":[6785],"\"matrix\": ma":[6785],"nimations (m":[6786],"imations (mu":[6786],"mations (mus":[6786],"ations (must":[6786],"tions (must ":[6786],"ions (must b":[6786],"ons (must be":[6786],"ns (must be ":[6786],"s (must be o":[6786]," (must be of":[6786],"(must be of ":[6786],"must be of m":[6786],"ust be of ma":[6786],"st be of mat":[6786],"t be of matr":[6786]," be of matri":[6786],"be of matrix":[6786],"e of matrix ":[6786]," of matrix t":[6786],"of matrix ty":[6786],"f matrix typ":[6786]," matrix type":[6786],"matrix type)":[6786],"## particles":[6789],"# particlesy":[6789]," system is d":[6790,6822],"system is de":[6790,6822],"ystem is def":[6790,6822],"stem is defi":[6790,6822],"tem is defin":[6790,6822],"em is define":[6790,6822],"m is defined":[6790,6822],"     \"emitte":[6793,6825],"    \"emitter":[6793,6825],"   \"emitteri":[6793,6825],"  \"emitterid":[6793,6825]," \"emitterid\"":[6793,6825],"\"emitterid\":":[6793,6825],"emitterid\": ":[6793,6825],"mitterid\": s":[6793,6825],"itterid\": st":[6793,6825],"tterid\": str":[6793,6825],"terid\": stri":[6793,6825],"erid\": strin":[6793,6825],"rid\": string":[6793,6825],"     \"gravit":[6794],"    \"gravity":[6794],"   \"gravity\"":[6794],"  \"gravity\":":[6794]," \"gravity\": ":[6794],"y\": vector3,":[6794],"     \"direct":[6795,6796,6912],"    \"directi":[6795,6796,6912],"   \"directio":[6795,6796,6912],"  \"direction":[6795,6796,6912]," \"direction1":[6795],"\"direction1\"":[6795],"direction1\":":[6795],"irection1\": ":[6795],"rection1\": v":[6795],"ection1\": ve":[6795],"ction1\": vec":[6795],"tion1\": vect":[6795],"ion1\": vecto":[6795],"on1\": vector":[6795],"n1\": vector3":[6795],"1\": vector3,":[6795]," \"direction2":[6796],"\"direction2\"":[6796],"direction2\":":[6796],"irection2\": ":[6796],"rection2\": v":[6796],"ection2\": ve":[6796],"ction2\": vec":[6796],"tion2\": vect":[6796],"ion2\": vecto":[6796],"on2\": vector":[6796],"n2\": vector3":[6796],"2\": vector3,":[6796],"     \"minemi":[6797,6806],"    \"minemit":[6797,6806],"   \"minemitb":[6797],"  \"minemitbo":[6797]," \"minemitbox":[6797],"\"minemitbox\"":[6797],"minemitbox\":":[6797],"inemitbox\": ":[6797],"nemitbox\": v":[6797],"emitbox\": ve":[6797,6798],"mitbox\": vec":[6797,6798],"itbox\": vect":[6797,6798],"tbox\": vecto":[6797,6798],"box\": vector":[6797,6798],"ox\": vector3":[6797,6798],"x\": vector3,":[6797,6798],"     \"maxemi":[6798,6807],"    \"maxemit":[6798,6807],"   \"maxemitb":[6798],"  \"maxemitbo":[6798]," \"maxemitbox":[6798],"\"maxemitbox\"":[6798],"maxemitbox\":":[6798],"axemitbox\": ":[6798],"xemitbox\": v":[6798],"     \"color1":[6799],"    \"color1\"":[6799],"   \"color1\":":[6799],"  \"color1\": ":[6799]," \"color1\": c":[6799],"\"color1\": co":[6799],"color1\": col":[6799],"olor1\": colo":[6799],"lor1\": color":[6799],"or1\": color3":[6799],"r1\": color3,":[6799],"     \"color2":[6800],"    \"color2\"":[6800],"   \"color2\":":[6800],"  \"color2\": ":[6800]," \"color2\": c":[6800],"\"color2\": co":[6800],"color2\": col":[6800],"olor2\": colo":[6800],"lor2\": color":[6800],"or2\": color3":[6800],"r2\": color3,":[6800],"     \"colord":[6801],"    \"colorde":[6801],"   \"colordea":[6801],"  \"colordead":[6801]," \"colordead\"":[6801],"\"colordead\":":[6801],"colordead\": ":[6801],"olordead\": c":[6801],"lordead\": co":[6801],"ordead\": col":[6801],"rdead\": colo":[6801],"dead\": color":[6801],"ead\": color3":[6801],"ad\": color3,":[6801],"     \"deadal":[6802],"    \"deadalp":[6802],"   \"deadalph":[6802],"  \"deadalpha":[6802]," \"deadalpha\"":[6802],"\"deadalpha\":":[6802],"deadalpha\": ":[6802],"eadalpha\": f":[6802],"adalpha\": fl":[6802],"dalpha\": flo":[6802],"     \"emitra":[6803],"    \"emitrat":[6803],"   \"emitrate":[6803],"  \"emitrate\"":[6803]," \"emitrate\":":[6803],"\"emitrate\": ":[6803],"emitrate\": f":[6803],"mitrate\": fl":[6803],"itrate\": flo":[6803],"trate\": floa":[6803],"rate\": float":[6803],"ate\": float,":[6803],"     \"update":[6804],"    \"updates":[6804],"   \"updatesp":[6804],"  \"updatespe":[6804]," \"updatespee":[6804],"\"updatespeed":[6804],"updatespeed\"":[6804],"pdatespeed\":":[6804],"datespeed\": ":[6804],"atespeed\": f":[6804],"tespeed\": fl":[6804],"espeed\": flo":[6804],"     \"target":[6805,6896],"    \"targets":[6805],"   \"targetst":[6805],"  \"targetsto":[6805]," \"targetstop":[6805],"\"targetstopf":[6805],"targetstopfr":[6805],"argetstopfra":[6805],"rgetstopfram":[6805],"getstopframe":[6805],"etstopframe\"":[6805],"tstopframe\":":[6805],"stopframe\": ":[6805],"topframe\": i":[6805],"opframe\": in":[6805],"pframe\": int":[6805],"   \"minemitp":[6806],"  \"minemitpo":[6806]," \"minemitpow":[6806],"\"minemitpowe":[6806],"inemitpower\"":[6806],"nemitpower\":":[6806],"emitpower\": ":[6806,6807],"mitpower\": i":[6806],"itpower\": in":[6806],"tpower\": int":[6806],"power\": int,":[6806],"   \"maxemitp":[6807],"  \"maxemitpo":[6807]," \"maxemitpow":[6807],"\"maxemitpowe":[6807],"axemitpower\"":[6807],"xemitpower\":":[6807],"mitpower\": f":[6807],"itpower\": fl":[6807],"tpower\": flo":[6807],"     \"minlif":[6808],"    \"minlife":[6808],"   \"minlifet":[6808],"  \"minlifeti":[6808]," \"minlifetim":[6808],"\"minlifetime":[6808],"minlifetime\"":[6808],"inlifetime\":":[6808],"nlifetime\": ":[6808],"lifetime\": f":[6808,6809],"ifetime\": fl":[6808,6809],"fetime\": flo":[6808,6809],"etime\": floa":[6808,6809],"time\": float":[6808,6809],"ime\": float,":[6808,6809],"     \"maxlif":[6809],"    \"maxlife":[6809],"   \"maxlifet":[6809],"  \"maxlifeti":[6809]," \"maxlifetim":[6809],"\"maxlifetime":[6809],"maxlifetime\"":[6809],"axlifetime\":":[6809],"xlifetime\": ":[6809],"     \"minsiz":[6810],"    \"minsize":[6810],"   \"minsize\"":[6810],"  \"minsize\":":[6810]," \"minsize\": ":[6810],"\"minsize\": f":[6810],"minsize\": fl":[6810],"insize\": flo":[6810],"nsize\": floa":[6810],"     \"maxsiz":[6811],"    \"maxsize":[6811],"   \"maxsize\"":[6811],"  \"maxsize\":":[6811]," \"maxsize\": ":[6811],"\"maxsize\": f":[6811],"maxsize\": fl":[6811],"axsize\": flo":[6811],"xsize\": floa":[6811],"     \"minang":[6812],"    \"minangu":[6812],"   \"minangul":[6812],"  \"minangula":[6812]," \"minangular":[6812],"\"minangulars":[6812],"ngularspeed\"":[6812,6813],"gularspeed\":":[6812,6813],"ularspeed\": ":[6812,6813],"larspeed\": f":[6812,6813],"arspeed\": fl":[6812,6813],"rspeed\": flo":[6812,6813],"     \"maxang":[6813],"    \"maxangu":[6813],"   \"maxangul":[6813],"  \"maxangula":[6813]," \"maxangular":[6813],"\"maxangulars":[6813],"     \"textur":[6814,6817,6837],"    \"texture":[6814,6817,6837],"   \"texturen":[6814,6837],"  \"texturena":[6814,6837]," \"texturenam":[6814,6837],"\"texturename":[6814,6837],"texturename\"":[6814,6837],"exturename\":":[6814,6837],"xturename\": ":[6814,6837],"turename\": s":[6814,6837],"urename\": st":[6814,6837],"rename\": str":[6814,6837],"ename\": stri":[6814,6837],"     \"blendm":[6815],"    \"blendmo":[6815],"   \"blendmod":[6815],"  \"blendmode":[6815]," \"blendmode\"":[6815],"\"blendmode\":":[6815],"blendmode\": ":[6815],"lendmode\": i":[6815],"endmode\": in":[6815],"ndmode\": int":[6815],"dmode\": int,":[6815],"     \"capaci":[6816],"    \"capacit":[6816],"   \"capacity":[6816],"  \"capacity\"":[6816]," \"capacity\":":[6816],"\"capacity\": ":[6816],"capacity\": i":[6816],"apacity\": in":[6816],"pacity\": int":[6816],"acity\": int,":[6816],"   \"texturem":[6817],"  \"texturema":[6817]," \"texturemas":[6817],"\"texturemask":[6817],"texturemask\"":[6817],"exturemask\":":[6817],"xturemask\": ":[6817],"turemask\": c":[6817],"uremask\": co":[6817],"remask\": col":[6817],"emask\": colo":[6817],"mask\": color":[6817],"ask\": color4":[6817],"sk\": color4,":[6817],"     \"linkto":[6818],"    \"linktoe":[6818],"   \"linktoem":[6818],"  \"linktoemi":[6818]," \"linktoemit":[6818],"\"linktoemitt":[6818],"linktoemitte":[6818],"inktoemitter":[6818],"nktoemitter\"":[6818],"ktoemitter\":":[6818],"toemitter\": ":[6818],"oemitter\": b":[6818],"emitter\": bo":[6818],"mitter\": boo":[6818],"itter\": bool":[6818],"## lensflare":[6821,6830],"# lensflares":[6821,6830],"a lens flare":[6822,6831]," lens flare ":[6822,6831],"lens flare s":[6822],"ens flare sy":[6822],"ns flare sys":[6822],"s flare syst":[6822]," flare syste":[6822],"flare system":[6822],"lare system ":[6822],"are system i":[6822],"re system is":[6822],"     \"border":[6826],"    \"borderl":[6826],"   \"borderli":[6826],"  \"borderlim":[6826]," \"borderlimi":[6826],"\"borderlimit":[6826],"borderlimit\"":[6826],"orderlimit\":":[6826],"rderlimit\": ":[6826],"derlimit\": i":[6826],"erlimit\": in":[6826],"rlimit\": int":[6826],"limit\": int,":[6826],"     \"flares":[6827],"    \"flares\"":[6827],"   \"flares\":":[6827],"  \"flares\": ":[6827]," \"flares\": a":[6827],"\"flares\": ar":[6827],"flares\": arr":[6827],"lares\": arra":[6827],"ares\": array":[6827]," lensflares ":[6827],"lensflares (":[6827],"ensflares (s":[6827],"nsflares (se":[6827],"sflares (see":[6827],"flares (see ":[6827],"lares (see b":[6827],"ares (see be":[6827],"lens flare i":[6831],"ens flare is":[6831],"ns flare is ":[6831],"s flare is d":[6831]," flare is de":[6831],"flare is def":[6831],"lare is defi":[6831],"are is defin":[6831],"     \"positi":[6834,6850,6895,6911,6991,6999,7016,7153,7174,7205],"    \"positio":[6834,6850,6895,6911,6991,6999,7016,7153,7174,7205],"   \"position":[6834,6850,6895,6911,6991,6999,7016,7153,7174,7205],"  \"position\"":[6834,6850,6895,6911,6991,7016,7153,7174,7205]," \"position\":":[6834,6850,6895,6911,6991,7016,7153,7174,7205],"position\": f":[6834],"osition\": fl":[6834],"sition\": flo":[6834],"ition\": floa":[6834],"     \"size\":":[6835],"    \"size\": ":[6835],"   \"size\": f":[6835],"  \"size\": fl":[6835]," \"size\": flo":[6835],"     \"color\"":[6836],"    \"color\":":[6836],"   \"color\": ":[6836],"  \"color\": c":[6836]," \"color\": co":[6836],"\"color\": col":[6836],"a sound is d":[6841]," sound is de":[6841],"sound is def":[6841],"     \"name\":":[6844,6893,6908,6918,6945,6988,7012,7149,7170,7199],"    \"name\": ":[6844,6893,6908,6918,6945,6988,7012,7149,7170,7199],"   \"name\": s":[6844],"  \"name\": st":[6844]," \"name\": str":[6844],"e\": string, ":[6844,6869,6879,6880],"\": string, (":[6844,6854,6855,6860,6869,6879,6880],": string, (n":[6844,6869,6879]," string, (na":[6844,6869,6879],"string, (nam":[6844,6869,6879],"tring, (name":[6844,6869,6879],"ring, (name ":[6844,6869,6879],"ing, (name o":[6844,6869,6879],"ng, (name of":[6844,6869,6879],"g, (name of ":[6844,6869,6879],", (name of t":[6844,6869,6879]," (name of th":[6844,6869,6879],"ame of the f":[6844],"me of the fi":[6844],"e of the fil":[6844],"ile to load)":[6844],"     \"volume":[6845,7200],"    \"volume\"":[6845,7200],"   \"volume\":":[6845,7200],"  \"volume\": ":[6845,7200]," \"volume\": f":[6845],"\"volume\": fl":[6845],"volume\": flo":[6845],"olume\": floa":[6845],"lume\": float":[6845],"ume\": float,":[6845],"me\": float, ":[6845],"e\": float, (":[6845,6851,6853,6857,6858],"\": float, (i":[6845],": float, (if":[6845]," float, (if ":[6845],"float, (if o":[6845],"loat, (if om":[6845],"oat, (if omi":[6845],"at, (if omit":[6845],"t, (if omitt":[6845],", (if omitte":[6845,6850]," (if omitted":[6845,6850],"(if omitted ":[6845,6850],"if omitted w":[6845,6850],"f omitted wi":[6845,6850]," omitted wil":[6845,6850],"omitted will":[6845,6850],"mitted will ":[6845,6850],"itted will b":[6845,6850],"tted will be":[6845,6850],"ted will be ":[6845,6850],"ed will be 1":[6845],"d will be 1)":[6845],"     \"autopl":[6846,7201],"    \"autopla":[6846,7201],"   \"autoplay":[6846,7201],"  \"autoplay\"":[6846,7201]," \"autoplay\":":[6846,7201],"\"autoplay\": ":[6846,7201],"autoplay\": b":[6846],"utoplay\": bo":[6846],"toplay\": boo":[6846],"oplay\": bool":[6846],"play\": bool,":[6846],"lay\": bool, ":[6846],"ay\": bool, (":[6846],"y\": bool, (c":[6846],"\": bool, (ca":[6846,6847],": bool, (can":[6846,6847]," bool, (can ":[6846,6847],"bool, (can b":[6846,6847],"ool, (can be":[6846,6847],"ol, (can be ":[6846,6847],"l, (can be o":[6846,6847],", (can be om":[6846,6847,6848,6851,6852,6853,6854,6855,6857,6858,6859],"     \"loop\":":[6847,7202],"    \"loop\": ":[6847,7202],"   \"loop\": b":[6847],"  \"loop\": bo":[6847]," \"loop\": boo":[6847],"\"loop\": bool":[6847],"loop\": bool,":[6847],"oop\": bool, ":[6847],"op\": bool, (":[6847],"p\": bool, (c":[6847],"     \"soundt":[6848,7203],"    \"soundtr":[6848,7203],"   \"soundtra":[6848,7203],"  \"soundtrac":[6848,7203]," \"soundtrack":[6848,7203],"\"soundtracki":[6848,7203],"soundtrackid":[6848,7203],"oundtrackid\"":[6848,7203],"undtrackid\":":[6848,7203],"ndtrackid\": ":[6848,7203],"dtrackid\": i":[6848],"trackid\": in":[6848],"rackid\": int":[6848],"ackid\": int,":[6848],"ckid\": int, ":[6848],"kid\": int, (":[6848],"id\": int, (c":[6848],"d\": int, (ca":[6848],"\": int, (can":[6848],": int, (can ":[6848]," int, (can b":[6848],"int, (can be":[6848],"nt, (can be ":[6848],"t, (can be o":[6848,6851,6852,6853,6857,6858,6859],"     \"spatia":[6849,7204],"    \"spatial":[6849,7204],"   \"spatials":[6849,7204],"  \"spatialso":[6849,7204]," \"spatialsou":[6849,7204],"\"spatialsoun":[6849,7204],"patialsound\"":[6849,7204],"atialsound\":":[6849,7204],"tialsound\": ":[6849,7204],"ialsound\": b":[6849],"alsound\": bo":[6849],"lsound\": boo":[6849],"sound\": bool":[6849],"ound\": bool,":[6849],"und\": bool, ":[6849],"nd\": bool, (":[6849],"d\": bool, (t":[6849],"\": bool, (to":[6849,6856],": bool, (to ":[6849,6856]," bool, (to e":[6849,6856],"bool, (to en":[6849,6856],"ool, (to ena":[6849,6856],"ol, (to enab":[6849,6856],"l, (to enabl":[6849,6856],", (to enable":[6849,6856]," (to enable ":[6849,6856],"(to enable 3":[6849],"to enable 3d":[6849],"o enable 3d ":[6849]," enable 3d s":[6849],"enable 3d so":[6849],"nable 3d sou":[6849],"able 3d soun":[6849],"ble 3d sound":[6849],"le 3d sound,":[6849],"e 3d sound, ":[6849]," 3d sound, c":[6849],"3d sound, ca":[6849],"d sound, can":[6849]," sound, can ":[6849],"sound, can b":[6849],"ound, can be":[6849],"und, can be ":[6849],"nd, can be o":[6849],"d, can be om":[6849],"\": vector3, ":[6850],": vector3, (":[6850]," vector3, (i":[6850],"vector3, (if":[6850],"ector3, (if ":[6850],"ctor3, (if o":[6850],"tor3, (if om":[6850],"or3, (if omi":[6850],"r3, (if omit":[6850],"3, (if omitt":[6850],"ed will be 0":[6850],"d will be 0,":[6850]," will be 0,0":[6850],"will be 0,0,":[6850],"ill be 0,0,0":[6850],"ll be 0,0,0)":[6850],"     \"refdis":[6851,7206],"    \"refdist":[6851,7206],"   \"refdista":[6851,7206],"  \"refdistan":[6851,7206]," \"refdistanc":[6851,7206],"\"refdistance":[6851,7206],"refdistance\"":[6851,7206],"efdistance\":":[6851,7206],"fdistance\": ":[6851,7206],"distance\": f":[6851,6853],"istance\": fl":[6851,6853],"stance\": flo":[6851,6853],"tance\": floa":[6851,6853],"ance\": float":[6851,6853],"nce\": float,":[6851,6853],"\": float, (c":[6851,6852,6853,6857,6858,6859],": float, (ca":[6851,6852,6853,6857,6858,6859]," float, (can":[6851,6852,6853,6857,6858,6859],"float, (can ":[6851,6852,6853,6857,6858,6859],"loat, (can b":[6851,6852,6853,6857,6858,6859],"oat, (can be":[6851,6852,6853,6857,6858,6859],"at, (can be ":[6851,6852,6853,6857,6858,6859]," be omitted,":[6851,6852,6853,6854,6855,6861],"be omitted, ":[6851,6852,6853,6854,6855,6861],"e omitted, d":[6851,6852,6853,6854,6855,6861]," omitted, de":[6851,6852,6853,6854,6855,6861],"omitted, def":[6851,6852,6853,6854,6855,6861],"mitted, defa":[6851,6852,6853,6854,6855,6861],"itted, defau":[6851,6852,6853,6854,6855,6861],"tted, defaul":[6851,6852,6853,6854,6855,6861],"ted, default":[6851,6852,6853,6854,6855,6861],"ed, default ":[6851,6852,6853,6854,6855,6861],"d, default t":[6851,6852,6853,6854,6855,6861],", default to":[6851,6852,6853,6854,6855,6861],"default to 1":[6851,6852,6853,6861],"efault to 1)":[6851,6852],"     \"rollof":[6852,7207],"    \"rolloff":[6852,7207],"   \"rollofff":[6852,7207],"  \"rollofffa":[6852,7207]," \"rollofffac":[6852,7207],"\"rollofffact":[6852,7207],"llofffactor\"":[6852,7207],"lofffactor\":":[6852,7207],"offfactor\": ":[6852,7207],"fffactor\": f":[6852],"ffactor\": fl":[6852],"factor\": flo":[6852],"actor\": floa":[6852],"ctor\": float":[6852],"tor\": float,":[6852],"or\": float, ":[6852],"r\": float, (":[6852],"     \"maxdis":[6853,7208],"    \"maxdist":[6853,7208],"   \"maxdista":[6853,7208],"  \"maxdistan":[6853,7208]," \"maxdistanc":[6853,7208],"\"maxdistance":[6853,7208],"maxdistance\"":[6853,7208],"axdistance\":":[6853,7208],"xdistance\": ":[6853,7208],"efault to 10":[6853],"fault to 100":[6853],"ault to 100)":[6853],"     \"distan":[6854,7209],"    \"distanc":[6854,7209],"   \"distance":[6854,7209],"  \"distancem":[6854,7209]," \"distancemo":[6854,7209],"\"distancemod":[6854,7209],"stancemodel\"":[6854,7209],"tancemodel\":":[6854,7209],"ancemodel\": ":[6854,7209],"ncemodel\": s":[6854],"cemodel\": st":[6854],"emodel\": str":[6854],"model\": stri":[6854,6855],"odel\": strin":[6854,6855],"del\": string":[6854,6855],"el\": string,":[6854,6855],"l\": string, ":[6854,6855],": string, (c":[6854,6855]," string, (ca":[6854,6855],"string, (can":[6854,6855],"tring, (can ":[6854,6855],"ring, (can b":[6854,6855],"ing, (can be":[6854,6855],"ng, (can be ":[6854,6855],"g, (can be o":[6854,6855],"default to l":[6854],"efault to li":[6854],"fault to lin":[6854],"ault to line":[6854],"ult to linea":[6854],"lt to linear":[6854],"t to linear,":[6854]," to linear, ":[6854],"to linear, o":[6854],"o linear, ot":[6854]," linear, oth":[6854],"linear, othe":[6854],"inear, other":[6854],"near, other ":[6854],"ear, other v":[6854],"ar, other va":[6854],"r, other val":[6854],", other valu":[6854,6855],"ther values:":[6854],"her values: ":[6854],"er values: i":[6854],"r values: in":[6854]," values: inv":[6854],"values: inve":[6854],"alues: inver":[6854],"lues: invers":[6854],"ues: inverse":[6854],"es: inverse ":[6854],"s: inverse o":[6854],": inverse or":[6854]," inverse or ":[6854],"inverse or e":[6854],"nverse or ex":[6854],"verse or exp":[6854],"erse or expo":[6854],"rse or expon":[6854],"se or expone":[6854],"e or exponen":[6854]," or exponent":[6854],"or exponenti":[6854],"r exponentia":[6854],"exponential)":[6854],"     \"pannin":[6855,7210],"    \"panning":[6855,7210],"   \"panningm":[6855,7210],"  \"panningmo":[6855,7210]," \"panningmod":[6855,7210],"\"panningmode":[6855,7210],"anningmodel\"":[6855,7210],"nningmodel\":":[6855,7210],"ningmodel\": ":[6855,7210],"ingmodel\": s":[6855],"ngmodel\": st":[6855],"gmodel\": str":[6855],"efault to hr":[6855],"fault to hrt":[6855],"ault to hrtf":[6855],"ult to hrtf,":[6855],"lt to hrtf, ":[6855],"t to hrtf, o":[6855]," to hrtf, ot":[6855],"to hrtf, oth":[6855],"o hrtf, othe":[6855]," hrtf, other":[6855],"hrtf, other ":[6855],"rtf, other v":[6855],"tf, other va":[6855],"f, other val":[6855],"other value:":[6855],"ther value: ":[6855],"her value: e":[6855],"er value: eq":[6855],"r value: equ":[6855]," value: equa":[6855],"value: equal":[6855],"alue: equalp":[6855],"lue: equalpo":[6855],"ue: equalpow":[6855],"e: equalpowe":[6855],": equalpower":[6855]," equalpower)":[6855],"     \"isdire":[6856,7211],"    \"isdirec":[6856,7211],"   \"isdirect":[6856,7211],"  \"isdirecti":[6856,7211]," \"isdirectio":[6856,7211],"\"isdirection":[6856,7211],"isdirectiona":[6856,7211],"sdirectional":[6856,7211],"directional\"":[6856,7211],"irectional\":":[6856,7211],"rectional\": ":[6856,7211],"ectional\": b":[6856],"ctional\": bo":[6856],"tional\": boo":[6856],"ional\": bool":[6856],"onal\": bool,":[6856],"nal\": bool, ":[6856],"al\": bool, (":[6856],"l\": bool, (t":[6856],"(to enable d":[6856],"to enable di":[6856],"o enable dir":[6856]," enable dire":[6856],"enable direc":[6856],"nable direct":[6856],"able directi":[6856],"ble directio":[6856],"le direction":[6856],"irectional c":[6856],"rectional co":[6856],"ectional con":[6856],"ctional cone":[6856],"tional cone)":[6856],"     \"conein":[6857,7212],"    \"coneinn":[6857,7212],"   \"coneinne":[6857,7212],"  \"coneinner":[6857,7212]," \"coneinnera":[6857,7212],"\"coneinneran":[6857,7212],"einnerangle\"":[6857,7212],"innerangle\":":[6857,7212],"nnerangle\": ":[6857,7212],"nerangle\": f":[6857],"erangle\": fl":[6857,6858],"rangle\": flo":[6857,6858],"gle\": float,":[6857,6858],"le\": float, ":[6857,6858],"be omitted b":[6857,6858,6859],"e omitted bu":[6857,6858,6859]," omitted but":[6857,6858,6859],"omitted but ":[6857,6858,6859],"mitted but s":[6857,6858,6859],"itted but se":[6857,6858,6859],"tted but set":[6857,6858,6859],"ted but set ":[6857,6858,6859],"ed but set i":[6857,6858,6859],"d but set it":[6857,6858,6859]," but set it ":[6857,6858,6859],"but set it f":[6857,6858,6859],"ut set it fo":[6857,6858,6859],"t set it for":[6857,6858,6859]," set it for ":[6857,6858,6859],"set it for d":[6857,6858,6859],"et it for di":[6857,6858,6859],"t it for dir":[6857,6858,6859]," it for dire":[6857,6858,6859],"it for direc":[6857,6858,6859],"t for direct":[6857,6858,6859],"ional sound)":[6857,6858,6859],"     \"coneou":[6858,6859,7213,7214],"    \"coneout":[6858,6859,7213,7214],"   \"coneoute":[6858,6859,7213,7214],"  \"coneouter":[6858,6859,7213,7214]," \"coneoutera":[6858,7213],"\"coneouteran":[6858,7213],"eouterangle\"":[6858,7213],"outerangle\":":[6858,7213],"uterangle\": ":[6858,7213],"terangle\": f":[6858]," \"coneouterg":[6859,7214],"\"coneouterga":[6859,7214],"neoutergain\"":[6859,7214],"eoutergain\":":[6859,7214],"outergain\": ":[6859,7214],"utergain\": f":[6859],"tergain\": fl":[6859],"ergain\": flo":[6859],"rgain\": floa":[6859],"gain\": float":[6859],"ain\": float,":[6859],"in\": float, ":[6859],"n\": float, (":[6859],"     \"connec":[6860,7215],"    \"connect":[6860,7215],"   \"connecte":[6860,7215],"  \"connected":[6860,7215]," \"connectedm":[6860,7215],"\"connectedme":[6860,7215],"connectedmes":[6860,7215],"onnectedmesh":[6860,7215],"nnectedmeshi":[6860,7215],"nectedmeshid":[6860,7215],"ectedmeshid\"":[6860,7215],"ctedmeshid\":":[6860,7215],"tedmeshid\": ":[6860,7215],"edmeshid\": s":[6860],"dmeshid\": st":[6860],"meshid\": str":[6860],"eshid\": stri":[6860],"shid\": strin":[6860],"hid\": string":[6860],"d\": string, ":[6860],": string, (i":[6860]," string, (id":[6860],"string, (id ":[6860],"tring, (id o":[6860],"ring, (id of":[6860],"ing, (id of ":[6860],"ng, (id of t":[6860],"g, (id of th":[6860],", (id of the":[6860]," (id of the ":[6860],"(id of the m":[6860],"id of the me":[6860],"d of the mes":[6860],"he mesh to a":[6860],"e mesh to at":[6860]," mesh to att":[6860],"mesh to atta":[6860],"esh to attac":[6860],"sh to attach":[6860],"h to attach ":[6860],"to attach to":[6860],"o attach to)":[6860],"     \"locald":[6861,7216],"    \"localdi":[6861,7216],"   \"localdir":[6861,7216],"  \"localdire":[6861,7216]," \"localdirec":[6861,7216],"\"localdirect":[6861,7216],"ctiontomesh\"":[6861,7216],"tiontomesh\":":[6861,7216],"iontomesh\": ":[6861,7216],"ontomesh\": v":[6861],"ntomesh\": ve":[6861],"tomesh\": vec":[6861],"omesh\": vect":[6861],"mesh\": vecto":[6861],"esh\": vector":[6861],"sh\": vector3":[6861],"h\": vector3 ":[6861],"efault to 1,":[6861],"fault to 1,0":[6861],"ault to 1,0,":[6861],"ult to 1,0,0":[6861],"lt to 1,0,0)":[6861]," action is d":[6865],"action is de":[6865],"lowing json.":[6865,6876],"owing json. ":[6865,6876],"wing json. a":[6865,6876],"ing json. an":[6865],"ng json. an ":[6865],"g json. an a":[6865]," json. an ac":[6865],"json. an act":[6865],"son. an acti":[6865],"on. an actio":[6865],"n. an action":[6865]," an action c":[6865],"an action ca":[6865],"n action can":[6865]," action can ":[6865],"action can c":[6865],"ction can co":[6865],"tion can con":[6865],"ion can cont":[6865],"on can conta":[6865],"n can contai":[6865],"an contain c":[6865],"n contain ch":[6865]," contain chi":[6865],"contain chil":[6865],"ontain child":[6865],"ntain childr":[6865],"tain childre":[6865],"ain children":[6865],"in children ":[6865],"n children a":[6865]," children ac":[6865],"children act":[6865],"hildren acti":[6865],"ildren actio":[6865],"ldren action":[6865],"dren actions":[6865],"ren actions.":[6865],"   \"type\": n":[6868],"  \"type\": nu":[6868]," \"type\": num":[6868],"\"type\": numb":[6868],"type\": numbe":[6868],"ype\": number":[6868],"pe\": number,":[6868],"e\": number, ":[6868],"\": number, (":[6868],": number, (a":[6868]," number, (ac":[6868],"number, (act":[6868],"umber, (acti":[6868],"mber, (actio":[6868],"ber, (action":[6868],"er, (action'":[6868],"r, (action's":[6868],", (action's ":[6868]," (action's t":[6868],"(action's ty":[6868],"action's typ":[6868],"ction's type":[6868],"tion's type.":[6868],"ion's type. ":[6868],"on's type. 0":[6868],"n's type. 0 ":[6868],"'s type. 0 =":[6868],"s type. 0 = ":[6868]," type. 0 = t":[6868],"type. 0 = tr":[6868],"ype. 0 = tri":[6868],"pe. 0 = trig":[6868],"e. 0 = trigg":[6868],". 0 = trigge":[6868]," 0 = trigger":[6868],"0 = trigger,":[6868]," = trigger, ":[6868],"= trigger, 1":[6868]," trigger, 1 ":[6868],"trigger, 1 =":[6868],"rigger, 1 = ":[6868],"igger, 1 = a":[6868],"gger, 1 = ac":[6868],"ger, 1 = act":[6868],"er, 1 = acti":[6868],"r, 1 = actio":[6868],", 1 = action":[6868]," 1 = action,":[6868],"1 = action, ":[6868]," = action, 2":[6868],"= action, 2 ":[6868]," action, 2 =":[6868],"action, 2 = ":[6868],"ction, 2 = f":[6868],"tion, 2 = fl":[6868],"ion, 2 = flo":[6868],"on, 2 = flow":[6868],"n, 2 = flow ":[6868],", 2 = flow c":[6868]," 2 = flow co":[6868],"2 = flow con":[6868]," = flow cont":[6868],"= flow contr":[6868]," flow contro":[6868,6869],"flow control":[6868,6869],"low control)":[6868,6869],"me of the ac":[6869],"e of the act":[6869]," the action,":[6869],"the action, ":[6869],"he action, t":[6869],"e action, tr":[6869]," action, tri":[6869],"action, trig":[6869],"ction, trigg":[6869],"tion, trigge":[6869],"ion, trigger":[6869],"on, trigger ":[6869],"n, trigger o":[6869],", trigger or":[6869]," trigger or ":[6869],"trigger or f":[6869],"rigger or fl":[6869],"igger or flo":[6869],"gger or flow":[6869],"ger or flow ":[6869],"er or flow c":[6869],"r or flow co":[6869]," or flow con":[6869],"or flow cont":[6869],"r flow contr":[6869],"    \"detache":[6870],"   \"detached":[6870],"  \"detached\"":[6870]," \"detached\":":[6870],"\"detached\": ":[6870],"detached\": b":[6870],"etached\": bo":[6870],"tached\": boo":[6870],"ached\": bool":[6870],"ched\": boole":[6870],"hed\": boolea":[6870],"\": boolean, ":[6870],": boolean, (":[6870]," boolean, (i":[6870],"boolean, (if":[6870],"oolean, (if ":[6870],"olean, (if t":[6870],"lean, (if th":[6870],"ean, (if the":[6870],"an, (if the ":[6870],"n, (if the n":[6870],", (if the no":[6870]," (if the nod":[6870],"(if the node":[6870],"if the node ":[6870],"f the node i":[6870]," the node is":[6870],"the node is ":[6870],"he node is d":[6870],"e node is de":[6870]," node is det":[6870],"node is deta":[6870],"ode is detac":[6870],"de is detach":[6870],"e is detache":[6870]," is detached":[6870],"is detached ":[6870],"s detached o":[6870]," detached or":[6870],"detached or ":[6870],"etached or n":[6870],"tached or no":[6870],"ached or not":[6870],"ched or not.":[6870],"hed or not. ":[6870],"ed or not. m":[6870],"d or not. me":[6870]," or not. mea":[6870],"or not. mean":[6870],"r not. means":[6870]," not. means ":[6870],"not. means i":[6870],"ot. means it":[6870],"t. means it ":[6870],". means it w":[6870]," means it wi":[6870],"means it wil":[6870],"eans it will":[6870],"ans it will ":[6870],"ns it will n":[6870],"s it will no":[6870],"t will not b":[6870],"ill not be c":[6870],"ll not be co":[6870],"l not be com":[6870]," not be comp":[6870],"not be compu":[6870],"ot be comput":[6870],"t be compute":[6870]," be computed":[6870],"be computed ":[6870],"e computed i":[6870]," computed if":[6870],"computed if ":[6870],"omputed if d":[6870],"mputed if de":[6870],"puted if det":[6870],"uted if deta":[6870],"ted if detac":[6870],"ed if detach":[6870],"d if detache":[6870]," if detached":[6870],"if detached ":[6870],"f detached =":[6870]," detached ==":[6870],"detached ===":[6870],"etached === ":[6870],"tached === t":[6870],"ached === tr":[6870],"ched === tru":[6870],"hed === true":[6870],"ed === true)":[6870],"   \"properti":[6871],"  \"propertie":[6871]," \"properties":[6871],"\"properties\"":[6871],"properties\":":[6871],"roperties\": ":[6871],"operties\": a":[6871],"perties\": ar":[6871],"erties\": arr":[6871],"rties\": arra":[6871],"ties\": array":[6871],"ies\": array ":[6871]," array of pr":[6871],"array of pro":[6871],"rray of prop":[6871],"ray of prope":[6871],"ay of proper":[6871],"y of propert":[6871],"roperties, (":[6871],"operties, (s":[6871],"perties, (se":[6871],"erties, (see":[6871],"rties, (see ":[6871],"ties, (see b":[6871],"ies, (see be":[6871],"es, (see bel":[6871],"s, (see belo":[6871],", (see below":[6871],"    \"childre":[6872],"   \"children":[6872],"  \"children\"":[6872]," \"children\":":[6872],"\"children\": ":[6872],"children\": a":[6872],"hildren\": ar":[6872],"ildren\": arr":[6872],"ldren\": arra":[6872],"dren\": array":[6872],"ren\": array ":[6872],"en\": array o":[6872],"n\": array of":[6872]," of actions,":[6872],"    \"combine":[6873],"   \"combine\"":[6873],"  \"combine\":":[6873]," \"combine\": ":[6873],"\"combine\": a":[6873],"combine\": ar":[6873],"ombine\": arr":[6873],"mbine\": arra":[6873],"bine\": array":[6873],"ine\": array ":[6873],"ne\": array o":[6873],"e\": array of":[6873],"f actions (u":[6873]," actions (us":[6873],"actions (use":[6873],"ctions (used":[6873],"tions (used ":[6873],"ions (used a":[6873],"ons (used as":[6873],"ns (used as ":[6873],"s (used as a":[6873]," (used as a ":[6873],"(used as a c":[6873],"used as a co":[6873],"sed as a com":[6873],"ed as a comb":[6873],"d as a combi":[6873]," as a combin":[6873],"as a combine":[6873],"s a combine ":[6873]," a combine a":[6873],"a combine ac":[6873]," combine act":[6873],"combine acti":[6873],"ombine actio":[6873],"mbine action":[6873],"bine action.":[6873],"ine action. ":[6873],"ne action. i":[6873],"e action. i.":[6873]," action. i.e":[6873],"action. i.e ":[6873],"ction. i.e n":[6873],"tion. i.e na":[6873],"ion. i.e nam":[6873],"on. i.e name":[6873],"n. i.e name ":[6873],". i.e name =":[6873]," i.e name = ":[6873],"i.e name = \"":[6873],".e name = \"c":[6873],"e name = \"co":[6873]," name = \"com":[6873],"name = \"comb":[6873],"ame = \"combi":[6873],"me = \"combin":[6873],"e = \"combine":[6873]," = \"combinea":[6873],"= \"combineac":[6873]," \"combineact":[6873],"\"combineacti":[6873],"mbineaction\"":[6873],"bineaction\".":[6873],"ineaction\". ":[6873],"neaction\". c":[6873],"eaction\". ca":[6873],"action\". can":[6873],"ction\". can ":[6873],"tion\". can b":[6873],"ion\". can be":[6873],"on\". can be ":[6873],"n\". can be n":[6873],"\". can be nu":[6873],". can be nul":[6873],"a property i":[6876],"roperty is d":[6876],"operty is de":[6876],"perty is def":[6876],"erty is defi":[6876],"rty is defin":[6876],"ty is define":[6876],"ing json. a ":[6876],"ng json. a p":[6876],"g json. a pr":[6876]," json. a pro":[6876],"json. a prop":[6876],"son. a prope":[6876],"on. a proper":[6876],"n. a propert":[6876],". a property":[6876],"a property v":[6876],"perty value ":[6876],"erty value i":[6876],"rty value is":[6876],"ty value is ":[6876],"y value is a":[6876]," value is al":[6876],"value is alw":[6876],"alue is alwa":[6876],"lue is alway":[6876],"ue is always":[6876],"e is always ":[6876],"s always a s":[6876]," always a st":[6876],"always a str":[6876],"lways a stri":[6876],"ways a strin":[6876],"ays a string":[6876],"me of the pr":[6879],"he property)":[6879],"    \"value\":":[6880],"   \"value\": ":[6880],"  \"value\": s":[6880]," \"value\": st":[6880],"\"value\": str":[6880],"value\": stri":[6880],"alue\": strin":[6880],"lue\": string":[6880],"ue\": string,":[6880],": string, (v":[6880]," string, (va":[6880],"string, (val":[6880],"tring, (valu":[6880],"ring, (value":[6880],"ing, (value ":[6880],"ng, (value o":[6880],"g, (value of":[6880],", (value of ":[6880]," (value of t":[6880],"(value of th":[6880],"lue of the p":[6880],"ue of the pr":[6880],"he property.":[6880],"e property. ":[6880]," property. f":[6880],"property. fo":[6880],"roperty. for":[6880],"operty. for ":[6880],"perty. for e":[6880],"erty. for ex":[6880],"rty. for exa":[6880],"ty. for exam":[6880],"y. for examp":[6880],"or example: ":[6880],"r example: n":[6880]," example: na":[6880],"example: nam":[6880],"xample: name":[6880],"ample: name ":[6880],"mple: name =":[6880],"ple: name = ":[6880],"le: name = \"":[6880],"e: name = \"t":[6880],": name = \"ta":[6880]," name = \"tar":[6880],"name = \"targ":[6880],"ame = \"targe":[6880],"me = \"target":[6880],"e = \"target\"":[6880]," = \"target\" ":[6880],"= \"target\" a":[6880]," \"target\" an":[6880],"\"target\" and":[6880],"target\" and ":[6880],"arget\" and v":[6880],"rget\" and va":[6880],"get\" and val":[6880],"et\" and valu":[6880],"t\" and value":[6880],"\" and value ":[6880]," and value =":[6880],"and value = ":[6880],"nd value = \"":[6880],"d value = \"p":[6880]," value = \"pl":[6880],"value = \"pla":[6880],"alue = \"plan":[6880],"lue = \"plane":[6880],"ue = \"plane0":[6880],"e = \"plane00":[6880]," = \"plane001":[6880],"= \"plane001\"":[6880]," \"plane001\")":[6880],"    \"targett":[6881],"   \"targetty":[6881],"  \"targettyp":[6881]," \"targettype":[6881],"\"targettype\"":[6881],"targettype\":":[6881],"argettype\": ":[6881],"rgettype\": s":[6881],"gettype\": st":[6881],"ettype\": str":[6881],"ttype\": stri":[6881],"pe\": string ":[6881],"\": string (i":[6881],": string (in":[6881]," string (int":[6881],"string (inte":[6881],"tring (inter":[6881],"ring (intern":[6881],"ing (interna":[6881],"ng (internal":[6881],"g (internal ":[6881]," (internal u":[6881],"(internal us":[6881],"internal use":[6881],"nternal use ":[6881],"ternal use f":[6881],"ernal use fo":[6881],"rnal use for":[6881],"nal use for ":[6881],"al use for t":[6881],"l use for th":[6881],"se for the b":[6881],"e for the ba":[6881]," babylonjs a":[6881],"babylonjs ac":[6881],"abylonjs act":[6881],"bylonjs acti":[6881],"ylonjs actio":[6881],"lonjs action":[6881],"onjs actions":[6881],"njs actions ":[6881],"js actions b":[6881],"s actions bu":[6881]," actions bui":[6881],"actions buil":[6881],"ctions build":[6881],"tions builde":[6881],"ions builder":[6881],"ons builder,":[6881],"ns builder, ":[6881],"s builder, s":[6881]," builder, sp":[6881],"builder, spe":[6881],"uilder, spec":[6881],"ilder, speci":[6881],"lder, specif":[6881],"der, specifi":[6881],"er, specifie":[6881],"r, specifies":[6881],", specifies ":[6881]," specifies w":[6881],"specifies wh":[6881],"pecifies whe":[6881],"ecifies wher":[6881],"cifies where":[6881],"ifies where ":[6881],"fies where t":[6881],"ies where to":[6881],"es where to ":[6881],"s where to f":[6881]," where to fi":[6881],"where to fin":[6881],"here to find":[6881],"ere to find ":[6881],"re to find t":[6881],"e to find th":[6881]," to find the":[6881],"to find the ":[6881],"o find the p":[6881]," find the pr":[6881],"find the pro":[6881],"ind the prop":[6881],"nd the prope":[6881],"d the proper":[6881],"erties for \"":[6881],"rties for \"p":[6881],"ties for \"pr":[6881],"ies for \"pro":[6881],"es for \"prop":[6881],"s for \"prope":[6881]," for \"proper":[6881],"for \"propert":[6881],"or \"property":[6881],"r \"propertyp":[6881]," \"propertypa":[6881],"\"propertypat":[6881],"ropertypath\"":[6881],"opertypath\")":[6881],"example of .":[6885],"xample of .b":[6885],"ample of .ba":[6885],"mple of .bab":[6885],"ple of .baby":[6885],"le of .babyl":[6885],"e of .babylo":[6885]," of .babylon":[6885],"of .babylon ":[6885],"f .babylon f":[6885],"abylon file:":[6885],"utoclear\": t":[6888],"toclear\": tr":[6888],"oclear\": tru":[6888],"clear\": true":[6888],"lear\": true,":[6888],"earcolor\": [":[6889],"arcolor\": [0":[6889],"rcolor\": [0,":[6889],"color\": [0, ":[6889,6890],"olor\": [0, 0":[6889,6890],"lor\": [0, 0,":[6889,6890],"or\": [0, 0, ":[6889,6890],"r\": [0, 0, 0":[6889,6890],"\": [0, 0, 0]":[6889,6890,6924,6951,6992,7016,7017,7154,7175,7205],": [0, 0, 0],":[6889,6890,6924,6951,6992,7016,7017,7154,7175],"entcolor\": [":[6890],"ntcolor\": [0":[6890],"tcolor\": [0,":[6890],"\"gravity\": [":[6891],"gravity\": [0":[6891],"ravity\": [0,":[6891],"avity\": [0, ":[6891],"vity\": [0, -":[6891],"ity\": [0, -9":[6891],"ty\": [0, -9.":[6891],"y\": [0, -9.8":[6891],"\": [0, -9.81":[6891],": [0, -9.81,":[6891]," [0, -9.81, ":[6891],"[0, -9.81, 0":[6891],"0, -9.81, 0]":[6891],", -9.81, 0],":[6891],"\"cameras\": [":[6892],"cameras\": [{":[6892],"        \"nam":[6893,6908,6918,6945,6988,7012,7149,7170,7199],"       \"name":[6893,6908,6918,6945,6988,7012,7149,7170,7199],"      \"name\"":[6893,6908,6918,6945,6988,7012,7149,7170,7199],"   \"name\": \"":[6893,6908,6918,6945,6988,7012,7149,7170,7199],"  \"name\": \"c":[6893,6955,7012,7149,7170]," \"name\": \"ca":[6893],"\"name\": \"cam":[6893],"name\": \"came":[6893],"ame\": \"camer":[6893],"me\": \"camera":[6893],"e\": \"camera\"":[6893],"\": \"camera\",":[6893,6894,6906],"        \"id\"":[6894,6909,6919,6946,6989,7013,7150,7171],"       \"id\":":[6894,6909,6919,6946,6989,7013,7150,7171],"      \"id\": ":[6894,6909,6919,6946,6989,7013,7150,7171],"     \"id\": \"":[6894,6909,6919,6946,6989,7013,7150,7171],"    \"id\": \"c":[6894,7013,7150,7171],"   \"id\": \"ca":[6894],"  \"id\": \"cam":[6894]," \"id\": \"came":[6894],"\"id\": \"camer":[6894],"id\": \"camera":[6894],"d\": \"camera\"":[6894],"        \"pos":[6895,6911,6991,6999,7016,7153,7174,7205],"       \"posi":[6895,6911,6991,6999,7016,7153,7174,7205],"      \"posit":[6895,6911,6991,6999,7016,7153,7174,7205],"position\": [":[6895,6911,6991,7016,7153,7174,7205],"osition\": [7":[6895],"sition\": [7.":[6895],"ition\": [7.4":[6895],"tion\": [7.48":[6895],"ion\": [7.481":[6895],"on\": [7.4811":[6895],"n\": [7.4811,":[6895],"\": [7.4811, ":[6895],": [7.4811, 5":[6895]," [7.4811, 5.":[6895],"[7.4811, 5.3":[6895],"7.4811, 5.34":[6895],".4811, 5.343":[6895],"4811, 5.3437":[6895],"811, 5.3437,":[6895],"11, 5.3437, ":[6895],"1, 5.3437, -":[6895],", 5.3437, -6":[6895]," 5.3437, -6.":[6895],"5.3437, -6.5":[6895],".3437, -6.50":[6895],"3437, -6.507":[6895],"437, -6.5076":[6895],"37, -6.5076]":[6895],"7, -6.5076],":[6895],"        \"tar":[6896],"       \"targ":[6896],"      \"targe":[6896],"    \"target\"":[6896],"   \"target\":":[6896],"  \"target\": ":[6896]," \"target\": [":[6896],"\"target\": [-":[6896],"target\": [-0":[6896],"arget\": [-0.":[6896],"rget\": [-0.3":[6896],"get\": [-0.31":[6896],"et\": [-0.317":[6896],"t\": [-0.3174":[6896],"\": [-0.3174,":[6896],": [-0.3174, ":[6896]," [-0.3174, 0":[6896],"[-0.3174, 0.":[6896],"-0.3174, 0.8":[6896],"0.3174, 0.89":[6896],".3174, 0.895":[6896],"3174, 0.8953":[6896],"174, 0.8953,":[6896],"74, 0.8953, ":[6896],"4, 0.8953, 0":[6896],", 0.8953, 0.":[6896]," 0.8953, 0.3":[6896],"0.8953, 0.31":[6896],".8953, 0.312":[6896],"8953, 0.3125":[6896],"953, 0.3125]":[6896],"53, 0.3125],":[6896],"        \"fov":[6897],"       \"fov\"":[6897],"      \"fov\":":[6897],"     \"fov\": ":[6897],"    \"fov\": 0":[6897],"   \"fov\": 0.":[6897],"  \"fov\": 0.8":[6897]," \"fov\": 0.85":[6897],"\"fov\": 0.857":[6897],"fov\": 0.8576":[6897],"ov\": 0.8576,":[6897],"        \"min":[6898],"       \"minz":[6898],"      \"minz\"":[6898],"     \"minz\":":[6898],"    \"minz\": ":[6898],"   \"minz\": 0":[6898],"  \"minz\": 0.":[6898]," \"minz\": 0.1":[6898],"\"minz\": 0.1,":[6898],"        \"max":[6899,7208],"       \"maxz":[6899],"      \"maxz\"":[6899],"     \"maxz\":":[6899],"    \"maxz\": ":[6899],"   \"maxz\": 1":[6899],"  \"maxz\": 10":[6899]," \"maxz\": 100":[6899],"\"maxz\": 100,":[6899],"        \"spe":[6900,6915,6922,6923,6949,6950],"       \"spee":[6900],"      \"speed":[6900],"     \"speed\"":[6900],"    \"speed\":":[6900],"   \"speed\": ":[6900],"  \"speed\": 1":[6900]," \"speed\": 1,":[6900],"        \"ine":[6901],"       \"iner":[6901],"      \"inert":[6901],"     \"inerti":[6901],"    \"inertia":[6901],"   \"inertia\"":[6901],"  \"inertia\":":[6901]," \"inertia\": ":[6901],"\"inertia\": 0":[6901],"inertia\": 0.":[6901],"nertia\": 0.9":[6901],"ertia\": 0.9,":[6901],"        \"che":[6902,6996,7021,7158,7179],"       \"chec":[6902,6996,7021,7158,7179],"      \"check":[6902,6996,7021,7158,7179],"     \"checkc":[6902,6996,7021,7158,7179],"    \"checkco":[6902,6996,7021,7158,7179],"   \"checkcol":[6902,6996,7021,7158,7179],"  \"checkcoll":[6902,6996,7021,7158,7179]," \"checkcolli":[6902,6996,7021,7158,7179],"llisions\": f":[6902,6996,7021,7158,7179],"lisions\": fa":[6902,6996,7021,7158,7179],"isions\": fal":[6902,6996,7021,7158,7179],"sions\": fals":[6902,6996,7021,7158,7179],"ions\": false":[6902,6996,7021,7158,7179],"ons\": false,":[6902,6996,7021,7158,7179],"        \"app":[6903],"       \"appl":[6903],"      \"apply":[6903],"     \"applyg":[6903],"    \"applygr":[6903],"   \"applygra":[6903],"  \"applygrav":[6903]," \"applygravi":[6903],"ygravity\": f":[6903],"gravity\": fa":[6903],"ravity\": fal":[6903],"avity\": fals":[6903],"vity\": false":[6903],"ity\": false,":[6903],"        \"ell":[6904],"       \"elli":[6904],"      \"ellip":[6904],"     \"ellips":[6904],"    \"ellipso":[6904],"   \"ellipsoi":[6904],"  \"ellipsoid":[6904]," \"ellipsoid\"":[6904],"llipsoid\": [":[6904],"lipsoid\": [0":[6904],"ipsoid\": [0.":[6904],"psoid\": [0.2":[6904],"soid\": [0.2,":[6904],"oid\": [0.2, ":[6904],"id\": [0.2, 0":[6904],"d\": [0.2, 0.":[6904],"\": [0.2, 0.9":[6904],": [0.2, 0.9,":[6904]," [0.2, 0.9, ":[6904],"[0.2, 0.9, 0":[6904],"0.2, 0.9, 0.":[6904],".2, 0.9, 0.2":[6904],"2, 0.9, 0.2]":[6904],"ctivecamera\"":[6906],"tivecamera\":":[6906],"ivecamera\": ":[6906],"vecamera\": \"":[6906],"ecamera\": \"c":[6906],"camera\": \"ca":[6906],"amera\": \"cam":[6906],"mera\": \"came":[6906],"era\": \"camer":[6906],"ra\": \"camera":[6906],"a\": \"camera\"":[6906]," \"lights\": [":[6907],"\"lights\": [{":[6907],"  \"name\": \"s":[6908]," \"name\": \"su":[6908],"\"name\": \"sun":[6908],"name\": \"sun\"":[6908],"ame\": \"sun\",":[6908],"    \"id\": \"s":[6909],"   \"id\": \"su":[6909],"  \"id\": \"sun":[6909]," \"id\": \"sun\"":[6909],"\"id\": \"sun\",":[6909],"        \"typ":[6910],"       \"type":[6910],"      \"type\"":[6910],"     \"type\":":[6910],"    \"type\": ":[6910],"   \"type\": 1":[6910],"  \"type\": 1,":[6910],"osition\": [0":[6911,6991,7016,7205],"sition\": [0.":[6911,6991],"ition\": [0.9":[6911],"tion\": [0.92":[6911],"ion\": [0.926":[6911],"on\": [0.926,":[6911],"n\": [0.926, ":[6911],"\": [0.926, 7":[6911],": [0.926, 7.":[6911]," [0.926, 7.3":[6911],"[0.926, 7.36":[6911],"0.926, 7.360":[6911],".926, 7.3608":[6911],"926, 7.3608,":[6911],"26, 7.3608, ":[6911],"6, 7.3608, 1":[6911],", 7.3608, 14":[6911]," 7.3608, 14.":[6911],"7.3608, 14.1":[6911],".3608, 14.18":[6911],"3608, 14.182":[6911],"608, 14.1829":[6911],"08, 14.1829]":[6911],"8, 14.1829],":[6911],"        \"dir":[6912],"       \"dire":[6912],"      \"direc":[6912]," \"direction\"":[6912],"irection\": [":[6912],"rection\": [-":[6912],"ection\": [-0":[6912],"ction\": [-0.":[6912],"tion\": [-0.3":[6912],"ion\": [-0.34":[6912],"on\": [-0.347":[6912],"n\": [-0.347,":[6912],"\": [-0.347, ":[6912],": [-0.347, -":[6912]," [-0.347, -0":[6912],"[-0.347, -0.":[6912],"-0.347, -0.4":[6912],"0.347, -0.49":[6912],".347, -0.491":[6912],"347, -0.4916":[6912],"47, -0.4916,":[6912],"7, -0.4916, ":[6912],", -0.4916, -":[6912]," -0.4916, -0":[6912],"-0.4916, -0.":[6912],"0.4916, -0.7":[6912],".4916, -0.79":[6912],"4916, -0.798":[6912],"916, -0.7987":[6912],"16, -0.7987]":[6912],"6, -0.7987],":[6912],"        \"int":[6913],"       \"inte":[6913],"      \"inten":[6913],"     \"intens":[6913],"    \"intensi":[6913],"   \"intensit":[6913],"  \"intensity":[6913]," \"intensity\"":[6913],"ntensity\": 1":[6913],"tensity\": 1,":[6913],"        \"dif":[6914,6921,6927,6948,6954],"       \"diff":[6914,6921,6927,6948,6954],"      \"diffu":[6914,6921,6927,6948,6954],"     \"diffus":[6914,6921,6927,6948,6954],"    \"diffuse":[6914,6921,6927,6948,6954],"   \"diffuse\"":[6914,6921,6948],"  \"diffuse\":":[6914,6921,6948]," \"diffuse\": ":[6914,6921,6948],"\"diffuse\": [":[6914,6921,6948],"diffuse\": [1":[6914],"iffuse\": [1,":[6914],"ffuse\": [1, ":[6914],"fuse\": [1, 1":[6914],"use\": [1, 1,":[6914],"se\": [1, 1, ":[6914],"e\": [1, 1, 1":[6914],"\": [1, 1, 1]":[6914,6915,7018,7155,7176],": [1, 1, 1],":[6914,7018,7155,7176],"       \"spec":[6915,6922,6923,6949,6950],"      \"specu":[6915,6922,6923,6949,6950],"     \"specul":[6915,6922,6923,6949,6950],"    \"specula":[6915,6922,6923,6949,6950],"   \"specular":[6915,6922,6923,6949,6950],"  \"specular\"":[6915,6922,6949]," \"specular\":":[6915,6922,6949],"specular\": [":[6915,6922,6949],"pecular\": [1":[6915],"ecular\": [1,":[6915],"cular\": [1, ":[6915],"ular\": [1, 1":[6915],"lar\": [1, 1,":[6915],"ar\": [1, 1, ":[6915],"r\": [1, 1, 1":[6915],"aterials\": [":[6917,7190],"terials\": [{":[6917],"  \"name\": \"m":[6918,6928,6945]," \"name\": \"ma":[6918,6945],"\"name\": \"mat":[6918,6945],"name\": \"mate":[6918,6945],"ame\": \"mater":[6918,6945],"me\": \"materi":[6918,6945],"e\": \"materia":[6918,6945],"\": \"material":[6918,6919,6945,6946,6990,7014,7151,7172],": \"material\"":[6918,6919,7014,7151,7172]," \"material\",":[6918,6919,7014,7151,7172],"    \"id\": \"m":[6919,6946],"   \"id\": \"ma":[6919,6946],"  \"id\": \"mat":[6919,6946]," \"id\": \"mate":[6919,6946],"\"id\": \"mater":[6919,6946],"id\": \"materi":[6919,6946,6990,7014,7151,7172],"d\": \"materia":[6919,6946,6990,7014,7151,7172],"        \"amb":[6920,6947],"       \"ambi":[6920,6947],"      \"ambie":[6920,6947],"     \"ambien":[6920,6947],"    \"ambient":[6920,6947],"   \"ambient\"":[6920,6947],"  \"ambient\":":[6920,6947]," \"ambient\": ":[6920,6947],"\"ambient\": [":[6920,6947],"ambient\": [0":[6920,6947],"mbient\": [0.":[6920,6947],"bient\": [0.8":[6920,6947],"ient\": [0.8,":[6920,6947],"ent\": [0.8, ":[6920,6947],"nt\": [0.8, 0":[6920,6947],"t\": [0.8, 0.":[6920,6947],"\": [0.8, 0.8":[6920,6947],": [0.8, 0.8,":[6920,6947]," [0.8, 0.8, ":[6920,6947],"[0.8, 0.8, 0":[6920,6947],"0.8, 0.8, 0.":[6920,6947],".8, 0.8, 0.8":[6920,6947],"8, 0.8, 0.8]":[6920,6947],", 0.8, 0.8],":[6920,6947],"diffuse\": [0":[6921,6948],"iffuse\": [0.":[6921,6948],"ffuse\": [0.6":[6921,6948],"fuse\": [0.64":[6921,6948],"use\": [0.64,":[6921,6948],"se\": [0.64, ":[6921,6948],"e\": [0.64, 0":[6921,6948],"\": [0.64, 0.":[6921,6948],": [0.64, 0.6":[6921,6948]," [0.64, 0.64":[6921,6948],"[0.64, 0.64,":[6921,6948],"0.64, 0.64, ":[6921,6948],".64, 0.64, 0":[6921,6948],"64, 0.64, 0.":[6921,6948],"4, 0.64, 0.6":[6921,6948],", 0.64, 0.64":[6921,6948]," 0.64, 0.64]":[6921,6948],"0.64, 0.64],":[6921,6948],"pecular\": [0":[6922,6949],"ecular\": [0.":[6922,6949],"cular\": [0.5":[6922,6949],"ular\": [0.5,":[6922,6949],"lar\": [0.5, ":[6922,6949],"ar\": [0.5, 0":[6922,6949],"r\": [0.5, 0.":[6922,6949],"\": [0.5, 0.5":[6922,6949,6983],": [0.5, 0.5,":[6922,6949,6983]," [0.5, 0.5, ":[6922,6949,6983],"[0.5, 0.5, 0":[6922,6949,6983],"5, 0.5, 0.5]":[6922,6949],", 0.5, 0.5],":[6922,6949],"  \"specularp":[6923,6950]," \"specularpo":[6923,6950],"larpower\": 5":[6923,6950],"arpower\": 50":[6923,6950],"rpower\": 50,":[6923,6950],"        \"emi":[6924,6951],"       \"emis":[6924,6951],"      \"emiss":[6924,6951],"     \"emissi":[6924,6951],"    \"emissiv":[6924,6951],"   \"emissive":[6924,6951],"  \"emissive\"":[6924,6951]," \"emissive\":":[6924,6951],"emissive\": [":[6924,6951],"missive\": [0":[6924,6951],"issive\": [0,":[6924,6951],"ssive\": [0, ":[6924,6951],"sive\": [0, 0":[6924,6951],"ive\": [0, 0,":[6924,6951],"ve\": [0, 0, ":[6924,6951],"e\": [0, 0, 0":[6924,6951],"        \"alp":[6925,6952],"       \"alph":[6925,6952],"      \"alpha":[6925,6952],"     \"alpha\"":[6925,6952],"    \"alpha\":":[6925,6952],"   \"alpha\": ":[6925,6952],"  \"alpha\": 1":[6925,6952]," \"alpha\": 1,":[6925,6952],"        \"bac":[6926,6953],"       \"back":[6926,6953],"      \"backf":[6926,6953],"     \"backfa":[6926,6953],"    \"backfac":[6926,6953],"   \"backface":[6926,6953],"  \"backfacec":[6926,6953]," \"backfacecu":[6926,6953],"eculling\": t":[6926,6953],"culling\": tr":[6926,6953],"ulling\": tru":[6926,6953],"lling\": true":[6926,6953],"ling\": true,":[6926,6953],"   \"diffuset":[6927,6954],"  \"diffusete":[6927,6954]," \"diffusetex":[6927,6954],"etexture\": {":[6927,6954],"           \"":[6928,6929,6930,6931,6932,6933,6934,6935,6936,6937,6938,6939,6940,6941,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,6967,6968,6973,6974,6975,6976,6979,6980,6981,6982,6983,6984,7004,7005,7006,7007,7008,7025,7026,7027,7028,7029,7032,7033,7034,7035,7036,7037,7063,7064,7065,7066,7067,7068,7162,7163,7164,7165,7166,7183,7184,7185,7186,7187],"          \"n":[6928,6955,6982,7035,7066],"         \"na":[6928,6955,7035,7066],"        \"nam":[6928,6955,7035,7066],"       \"name":[6928,6955,7035,7066],"      \"name\"":[6928,6955,7035,7066],"     \"name\":":[6928,6955,7035,7066],"    \"name\": ":[6928,6955,7035,7066],"   \"name\": \"":[6928,6955,7035,7066]," \"name\": \"me":[6928],"\"name\": \"met":[6928],"name\": \"meta":[6928],"ame\": \"metal":[6928],"me\": \"metal1":[6928],"e\": \"metal1.":[6928],"\": \"metal1.p":[6928],": \"metal1.pn":[6928]," \"metal1.png":[6928],"\"metal1.png\"":[6928],"metal1.png\",":[6928],"          \"l":[6929,6956,7034,7065],"         \"le":[6929,6956],"        \"lev":[6929,6956],"       \"leve":[6929,6956],"      \"level":[6929,6956],"     \"level\"":[6929,6956],"    \"level\":":[6929,6956],"   \"level\": ":[6929,6956],"  \"level\": 1":[6929,6956]," \"level\": 1,":[6929,6956],"          \"h":[6930,6957],"         \"ha":[6930,6957],"        \"has":[6930,6957],"       \"hasa":[6930,6957],"      \"hasal":[6930,6957],"     \"hasalp":[6930,6957],"    \"hasalph":[6930,6957],"   \"hasalpha":[6930,6957],"  \"hasalpha\"":[6930,6957]," \"hasalpha\":":[6930,6957],"hasalpha\": 1":[6930,6957],"asalpha\": 1,":[6930,6957],"          \"c":[6931,6941,6958,6968,6975],"         \"co":[6931,6941,6958,6968],"        \"coo":[6931,6941,6958,6968],"       \"coor":[6931,6941,6958,6968],"      \"coord":[6931,6941,6958,6968],"     \"coordi":[6931,6941,6958,6968],"    \"coordin":[6931,6941,6958,6968],"   \"coordina":[6931,6941,6958,6968],"  \"coordinat":[6931,6941,6958,6968]," \"coordinate":[6931,6941,6958,6968],"atesmode\": 0":[6931,6958],"tesmode\": 0,":[6931,6958],"          \"u":[6932,6934,6936,6959,6961,6963,6980,6983],"         \"uo":[6932,6959],"        \"uof":[6932,6959],"       \"uoff":[6932,6959],"      \"uoffs":[6932,6959],"     \"uoffse":[6932,6959],"    \"uoffset":[6932,6959],"   \"uoffset\"":[6932,6959],"  \"uoffset\":":[6932,6959]," \"uoffset\": ":[6932,6959],"\"uoffset\": 0":[6932,6959],"uoffset\": 0,":[6932,6959],"          \"v":[6933,6935,6937,6960,6962,6964,7005,7006,7026,7027,7163,7164,7184,7185],"         \"vo":[6933,6960],"        \"vof":[6933,6960],"       \"voff":[6933,6960],"      \"voffs":[6933,6960],"     \"voffse":[6933,6960],"    \"voffset":[6933,6960],"   \"voffset\"":[6933,6960],"  \"voffset\":":[6933,6960]," \"voffset\": ":[6933,6960],"\"voffset\": 0":[6933,6960],"voffset\": 0,":[6933,6960],"         \"us":[6934,6961],"        \"usc":[6934,6961],"       \"usca":[6934,6961],"      \"uscal":[6934,6961],"     \"uscale":[6934,6961],"    \"uscale\"":[6934,6961],"   \"uscale\":":[6934,6961],"  \"uscale\": ":[6934,6961]," \"uscale\": 1":[6934],"\"uscale\": 1,":[6934],"         \"vs":[6935,6962],"        \"vsc":[6935,6962],"       \"vsca":[6935,6962],"      \"vscal":[6935,6962],"     \"vscale":[6935,6962],"    \"vscale\"":[6935,6962],"   \"vscale\":":[6935,6962],"  \"vscale\": ":[6935,6962]," \"vscale\": 1":[6935],"\"vscale\": 1,":[6935],"         \"ua":[6936,6963],"        \"uan":[6936,6963],"       \"uang":[6936,6963],"      \"uang\"":[6936,6963],"     \"uang\":":[6936,6963],"    \"uang\": ":[6936,6963],"   \"uang\": 0":[6936,6963],"  \"uang\": 0,":[6936,6963],"         \"va":[6937,6964],"        \"van":[6937,6964],"       \"vang":[6937,6964],"      \"vang\"":[6937,6964],"     \"vang\":":[6937,6964],"    \"vang\": ":[6937,6964],"   \"vang\": 0":[6937,6964],"  \"vang\": 0,":[6937,6964],"          \"w":[6938,6939,6940,6965,6966,6967],"         \"wa":[6938,6965],"        \"wan":[6938,6965],"       \"wang":[6938,6965],"      \"wang\"":[6938,6965],"     \"wang\":":[6938,6965],"    \"wang\": ":[6938,6965],"   \"wang\": 0":[6938,6965],"  \"wang\": 0,":[6938,6965],"         \"wr":[6939,6940,6966,6967],"        \"wra":[6939,6940,6966,6967],"       \"wrap":[6939,6940,6966,6967],"      \"wrapu":[6939,6966],"     \"wrapu\"":[6939,6966],"    \"wrapu\":":[6939,6966],"   \"wrapu\": ":[6939,6966],"  \"wrapu\": t":[6939,6966]," \"wrapu\": tr":[6939,6966],"\"wrapu\": tru":[6939,6966],"wrapu\": true":[6939,6966],"rapu\": true,":[6939,6966],"      \"wrapv":[6940,6967],"     \"wrapv\"":[6940,6967],"    \"wrapv\":":[6940,6967],"   \"wrapv\": ":[6940,6967],"  \"wrapv\": t":[6940,6967]," \"wrapv\": tr":[6940,6967],"\"wrapv\": tru":[6940,6967],"wrapv\": true":[6940,6967],"rapv\": true,":[6940,6967],"tesindex\": 0":[6941,6968],": \"material.":[6945,6946,6990]," \"material.0":[6945,6946,6990],"\"material.00":[6945,6946,6990],"material.001":[6945,6946,6990],"aterial.001\"":[6945,6946,6990],"terial.001\",":[6945,6946,6990]," \"name\": \"co":[6955],"\"name\": \"con":[6955],"name\": \"conc":[6955],"ame\": \"concr":[6955],"me\": \"concre":[6955],"e\": \"concret":[6955],"\": \"concrete":[6955],": \"concrete5":[6955]," \"concrete5.":[6955],"\"concrete5.p":[6955],"concrete5.pn":[6955],"oncrete5.png":[6955],"ncrete5.png\"":[6955],"crete5.png\",":[6955]," \"uscale\": 5":[6961],"\"uscale\": 5,":[6961]," \"vscale\": 5":[6962],"\"vscale\": 5,":[6962],"        \"box":[6972],"       \"boxe":[6972],"      \"boxes":[6972],"     \"boxes\"":[6972],"    \"boxes\":":[6972],"   \"boxes\": ":[6972],"  \"boxes\": [":[6972]," \"boxes\": [{":[6972],"          \"i":[6973,6979,6984,7007,7008,7028,7029,7165,7166,7186,7187],"         \"id":[6973,6979],"        \"id\"":[6973,6979],"       \"id\":":[6973,6979],"      \"id\": ":[6973,6979],"     \"id\": \"":[6973,6979],"    \"id\": \"b":[6973],"   \"id\": \"bo":[6973],"  \"id\": \"box":[6973]," \"id\": \"boxp":[6973],"\"id\": \"boxpr":[6973],"id\": \"boxpri":[6973,7173],"d\": \"boxprim":[6973,7173],"\": \"boxprimi":[6973,7173],": \"boxprimit":[6973,7173]," \"boxprimiti":[6973,7173],"\"boxprimitiv":[6973,7173],"boxprimitive":[6973,7173],"oxprimitive\"":[6973,7173],"xprimitive\",":[6973,7173],"          \"s":[6974],"         \"si":[6974],"        \"siz":[6974],"       \"size":[6974],"      \"size\"":[6974],"     \"size\":":[6974],"    \"size\": ":[6974],"   \"size\": 2":[6974],"  \"size\": 2,":[6974],"         \"ca":[6975],"        \"can":[6975],"       \"canb":[6975],"      \"canbe":[6975],"     \"canber":[6975],"    \"canbere":[6975],"   \"canbereg":[6975],"  \"canberege":[6975]," \"canberegen":[6975],"enerated\": t":[6975],"nerated\": tr":[6975],"erated\": tru":[6975],"rated\": true":[6975],"ated\": true,":[6975],"          \"t":[6976],"         \"ta":[6976],"        \"tag":[6976],"       \"tags":[6976],"      \"tags\"":[6976],"     \"tags\":":[6976],"    \"tags\": ":[6976],"   \"tags\": \"":[6976],"  \"tags\": \"b":[6976]," \"tags\": \"bo":[6976],"\"tags\": \"box":[6976],"tags\": \"box ":[6976],"ags\": \"box p":[6976],"gs\": \"box pr":[6976],"s\": \"box pri":[6976],"\": \"box prim":[6976],": \"box primi":[6976]," \"box primit":[6976],"\"box primiti":[6976],"box primitiv":[6976],"ox primitive":[6976],"x primitive ":[6976]," primitive c":[6976],"primitive cu":[6976],"rimitive cub":[6976],"imitive cube":[6976],"mitive cube ":[6976],"itive cube c":[6976],"tive cube ca":[6976],"ive cube can":[6976],"ve cube canb":[6976],"e cube canbe":[6976]," cube canber":[6976],"cube canbere":[6976],"ube canbereg":[6976],"be canberege":[6976],"e canberegen":[6976]," canberegene":[6976],"        \"ver":[6978],"       \"vert":[6978],"      \"verte":[6978],"     \"vertex":[6978],"    \"vertexd":[6978],"   \"vertexda":[6978],"  \"vertexdat":[6978]," \"vertexdata":[6978],"rtexdata\": [":[6978],"texdata\": [{":[6978],"    \"id\": \"c":[6979],"   \"id\": \"cu":[6979],"  \"id\": \"cub":[6979,7013,7150,7171]," \"id\": \"cube":[6979,7013,7150,7171],"\"id\": \"cubeg":[6979],"id\": \"cubege":[6979,7015,7152],"d\": \"cubegeo":[6979,7015,7152],"\": \"cubegeom":[6979,7015,7152],": \"cubegeome":[6979,7015,7152]," \"cubegeomet":[6979,7015,7152],"\"cubegeometr":[6979,7015,7152],"cubegeometry":[6979,7015,7152],"ubegeometry\"":[6979,7015,7152],"begeometry\",":[6979,7015,7152],"         \"up":[6980],"        \"upd":[6980],"       \"upda":[6980],"      \"updat":[6980],"     \"updata":[6980],"    \"updatab":[6980],"   \"updatabl":[6980],"  \"updatable":[6980]," \"updatable\"":[6980],"pdatable\": f":[6980],"datable\": fa":[6980],"atable\": fal":[6980],"table\": fals":[6980],"able\": false":[6980],"ble\": false,":[6980],"          \"p":[6981,7036,7067],"         \"po":[6981],"        \"pos":[6981],"       \"posi":[6981],"      \"posit":[6981],"     \"positi":[6981],"    \"positio":[6981],"   \"position":[6981],"  \"positions":[6981,6999]," \"positions\"":[6981,6999],"ositions\": [":[6981,6999],"sitions\": [ ":[6981],"itions\": [ 1":[6981],"tions\": [ 1,":[6981],"ions\": [ 1, ":[6981],"ons\": [ 1, -":[6981],"ns\": [ 1, -1":[6981],"s\": [ 1, -1,":[6981],"\": [ 1, -1, ":[6981],": [ 1, -1, 1":[6981]," [ 1, -1, 1,":[6981],"[ 1, -1, 1, ":[6981]," 1, -1, 1, 1":[6981],"1, -1, 1, 1,":[6981],", -1, 1, 1, ":[6981]," -1, 1, 1, -":[6981],"-1, 1, 1, -1":[6981],"1, 1, 1, -1,":[6981],", 1, 1, -1, ":[6981]," 1, 1, -1, -":[6981],"1, 1, -1, -1":[6981],", 1, -1, -1,":[6981]," 1, -1, -1, ":[6981],"1, -1, -1, -":[6981],", -1, -1, -1":[6981]," -1, -1, -1,":[6981],"-1, -1, -1, ":[6981],"1, -1, -1, 1":[6981],", -1, -1, 1,":[6981]," -1, -1, 1, ":[6981],"-1, -1, 1, 1":[6981]," -1, 1, 1, 1":[6981],"-1, 1, 1, 1,":[6981],"1, 1, 1, 1, ":[6981,6983],", 1, 1, 1, 1":[6981,6983]," 1, 1, 1, 1,":[6981,6983],", 1, 1, 1, -":[6981]," 1, 1, 1, -1":[6981]," 1, 1, -1, 1":[6981],"1, 1, -1, 1,":[6981],", 1, -1, 1, ":[6981],"-1, -1, 1, -":[6981],"1, -1, 1, -1":[6981],", -1, 1, -1,":[6981]," -1, 1, -1, ":[6981],"-1, 1, -1, -":[6981]," 1, -1, 1, -":[6981],"-1, 1, -1, 1":[6981],"1, -1, 1, 1]":[6981],", -1, 1, 1],":[6981],"         \"no":[6982],"        \"nor":[6982],"       \"norm":[6982],"      \"norma":[6982],"     \"normal":[6982],"    \"normals":[6982],"   \"normals\"":[6982],"  \"normals\":":[6982,7000]," \"normals\": ":[6982,7000],"\"normals\": [":[6982,7000],"normals\": [0":[6982,7000],"ormals\": [0.":[6982],"rmals\": [0.5":[6982],"mals\": [0.57":[6982],"als\": [0.577":[6982],"ls\": [0.5773":[6982],"s\": [0.5773,":[6982],"\": [0.5773, ":[6982],": [0.5773, -":[6982]," [0.5773, -0":[6982],"[0.5773, -0.":[6982],"0.5773, -0.5":[6982],".5773, -0.57":[6982],"5773, -0.577":[6982],"773, -0.5773":[6982],"73, -0.5773,":[6982],"3, -0.5773, ":[6982],", -0.5773, 0":[6982]," -0.5773, 0.":[6982],"-0.5773, 0.5":[6982],"0.5773, 0.57":[6982],".5773, 0.577":[6982],"5773, 0.5773":[6982],"773, 0.5773,":[6982],"73, 0.5773, ":[6982],"3, 0.5773, 0":[6982],", 0.5773, 0.":[6982]," 0.5773, 0.5":[6982],"3, 0.5773, -":[6982],", 0.5773, -0":[6982]," 0.5773, -0.":[6982],", -0.5773, -":[6982]," -0.5773, -0":[6982],"-0.5773, -0.":[6982],"773, 0.5773]":[6982],"73, 0.5773],":[6982],"         \"uv":[6983],"        \"uvs":[6983],"       \"uvs\"":[6983],"      \"uvs\":":[6983],"     \"uvs\": ":[6983],"    \"uvs\": [":[6983],"   \"uvs\": [0":[6983],"  \"uvs\": [0.":[6983,7001]," \"uvs\": [0.5":[6983],"\"uvs\": [0.5,":[6983],"uvs\": [0.5, ":[6983],"vs\": [0.5, 0":[6983],"s\": [0.5, 0.":[6983],"0.5, 0.5, 0,":[6983],".5, 0.5, 0, ":[6983],"5, 0.5, 0, 0":[6983],", 0.5, 0, 0,":[6983]," 0.5, 0, 0, ":[6983],"0.5, 0, 0, 0":[6983],".5, 0, 0, 0.":[6983],"5, 0, 0, 0.5":[6983],", 0, 0, 0.5,":[6983]," 0, 0, 0.5, ":[6983],"0, 0, 0.5, 0":[6983],", 0, 0.5, 0.":[6983]," 0, 0.5, 0.5":[6983],"0.5, 0.5, 1,":[6983],".5, 0.5, 1, ":[6983],"5, 0.5, 1, 0":[6983],", 0.5, 1, 0,":[6983]," 0.5, 1, 0, ":[6983],"0.5, 1, 0, 1":[6983],".5, 1, 0, 1,":[6983],"5, 1, 0, 1, ":[6983],", 1, 0, 1, 0":[6983]," 1, 0, 1, 0.":[6983],"1, 0, 1, 0.5":[6983],", 0, 1, 0.5,":[6983]," 0, 1, 0.5, ":[6983],"0, 1, 0.5, 0":[6983],", 1, 0.5, 0.":[6983]," 1, 0.5, 0.5":[6983],"1, 0.5, 0.5,":[6983],"0.5, 1, 0, 0":[6983],".5, 1, 0, 0.":[6983],"5, 1, 0, 0.5":[6983],", 1, 0, 0.5,":[6983]," 1, 0, 0.5, ":[6983],"1, 0, 0.5, 0":[6983],"5, 0.5, 1, 1":[6983],", 0.5, 1, 1,":[6983]," 0.5, 1, 1, ":[6983],"0.5, 1, 1, 0":[6983],".5, 1, 1, 0.":[6983],"5, 1, 1, 0.5":[6983],", 1, 1, 0.5,":[6983]," 1, 1, 0.5, ":[6983],"1, 1, 0.5, 0":[6983],", 0, 0.5, 0,":[6983]," 0, 0.5, 0, ":[6983],"0, 0.5, 0, 0":[6983],".5, 0, 0, 0,":[6983],"5, 0, 0, 0, ":[6983],", 0, 0, 0, 0":[6983]," 0, 0, 0, 0.":[6983],"0, 0, 0, 0.5":[6983]," 1, 0, 1, 0,":[6983],"1, 0, 1, 0, ":[6983],", 0, 1, 0, 0":[6983,7000]," 0, 1, 0, 0.":[6983],"0, 1, 0, 0.5":[6983],", 1, 0, 1, 1":[6983]," 1, 0, 1, 1,":[6983],"1, 0, 1, 1, ":[6983,6999],", 0, 1, 1, 1":[6983]," 0, 1, 1, 1,":[6983],"0, 1, 1, 1, ":[6983],", 1, 1, 1, 0":[6983]," 1, 1, 1, 0.":[6983],"1, 1, 1, 0.5":[6983]," 0, 0, 0, 0,":[6983],"0, 0, 0, 0, ":[6983],", 0, 0, 0.5]":[6983]," 0, 0, 0.5],":[6983],"         \"in":[6984,7007,7008,7028,7029,7165,7166,7186,7187],"        \"ind":[6984,7007,7008,7028,7029,7165,7166,7186,7187],"       \"indi":[6984],"      \"indic":[6984],"     \"indice":[6984],"    \"indices":[6984],"   \"indices\"":[6984],"  \"indices\":":[6984,7002]," \"indices\": ":[6984,7002],"\"indices\": [":[6984,7002],"indices\": [0":[6984,7002],"ndices\": [0,":[6984,7002],"dices\": [0, ":[6984,7002],"ices\": [0, 1":[6984,7002],"ces\": [0, 1,":[6984,7002],"es\": [0, 1, ":[6984,7002],"s\": [0, 1, 2":[6984,7002],"\": [0, 1, 2,":[6984,7002],": [0, 1, 2, ":[6984,7002]," [0, 1, 2, 3":[6984],"[0, 1, 2, 3,":[6984],"0, 1, 2, 3, ":[6984],", 1, 2, 3, 4":[6984]," 1, 2, 3, 4,":[6984],"1, 2, 3, 4, ":[6984],", 2, 3, 4, 5":[6984]," 2, 3, 4, 5,":[6984],"2, 3, 4, 5, ":[6984],", 3, 4, 5, 0":[6984]," 3, 4, 5, 0,":[6984],"3, 4, 5, 0, ":[6984],", 4, 5, 0, 6":[6984]," 4, 5, 0, 6,":[6984],"4, 5, 0, 6, ":[6984],", 5, 0, 6, 7":[6984]," 5, 0, 6, 7,":[6984],"5, 0, 6, 7, ":[6984],", 0, 6, 7, 8":[6984]," 0, 6, 7, 8,":[6984],"0, 6, 7, 8, ":[6984],", 6, 7, 8, 9":[6984]," 6, 7, 8, 9,":[6984],"6, 7, 8, 9, ":[6984],", 7, 8, 9, 1":[6984]," 7, 8, 9, 10":[6984],"7, 8, 9, 10,":[6984],", 8, 9, 10, ":[6984]," 8, 9, 10, 1":[6984],"8, 9, 10, 11":[6984],", 9, 10, 11,":[6984]," 9, 10, 11, ":[6984],"9, 10, 11, 1":[6984],", 10, 11, 12":[6984]," 10, 11, 12,":[6984],"10, 11, 12, ":[6984],"0, 11, 12, 1":[6984],", 11, 12, 13":[6984]," 11, 12, 13,":[6984],"11, 12, 13, ":[6984],"1, 12, 13, 1":[6984],", 12, 13, 14":[6984]," 12, 13, 14,":[6984],"12, 13, 14, ":[6984],"2, 13, 14, 1":[6984],", 13, 14, 15":[6984]," 13, 14, 15,":[6984],"13, 14, 15, ":[6984],"3, 14, 15, 1":[6984],", 14, 15, 16":[6984]," 14, 15, 16,":[6984],"14, 15, 16, ":[6984],"4, 15, 16, 1":[6984],", 15, 16, 1,":[6984]," 15, 16, 1, ":[6984],"15, 16, 1, 1":[6984],"5, 16, 1, 17":[6984],", 16, 1, 17,":[6984]," 16, 1, 17, ":[6984],"16, 1, 17, 2":[6984],"6, 1, 17, 2,":[6984],", 1, 17, 2, ":[6984]," 1, 17, 2, 4":[6984],"1, 17, 2, 4,":[6984],", 17, 2, 4, ":[6984]," 17, 2, 4, 1":[6984],"17, 2, 4, 18":[6984],"7, 2, 4, 18,":[6984],", 2, 4, 18, ":[6984]," 2, 4, 18, 5":[6984],"2, 4, 18, 5,":[6984],", 4, 18, 5, ":[6984]," 4, 18, 5, 1":[6984],"4, 18, 5, 19":[6984],", 18, 5, 19,":[6984]," 18, 5, 19, ":[6984],"18, 5, 19, 2":[6984],"8, 5, 19, 20":[6984],", 5, 19, 20,":[6984]," 5, 19, 20, ":[6984],"5, 19, 20, 2":[6984],", 19, 20, 21":[6984]," 19, 20, 21,":[6984],"19, 20, 21, ":[6984],"9, 20, 21, 2":[6984],", 20, 21, 22":[6984]," 20, 21, 22,":[6984],"20, 21, 22, ":[6984],"0, 21, 22, 2":[6984],", 21, 22, 23":[6984]," 21, 22, 23,":[6984],"21, 22, 23, ":[6984],"1, 22, 23, 1":[6984],", 22, 23, 10":[6984]," 22, 23, 10,":[6984],"22, 23, 10, ":[6984],"2, 23, 10, 1":[6984],", 23, 10, 12":[6984]," 23, 10, 12,":[6984],"23, 10, 12, ":[6984],"3, 10, 12, 2":[6984],", 10, 12, 24":[6984]," 10, 12, 24,":[6984],"10, 12, 24, ":[6984],"0, 12, 24, 2":[6984],", 12, 24, 25":[6984]," 12, 24, 25,":[6984],"12, 24, 25, ":[6984],"2, 24, 25, 2":[6984],", 24, 25, 26":[6984]," 24, 25, 26,":[6984],"24, 25, 26, ":[6984],"4, 25, 26, 2":[6984],", 25, 26, 27":[6984]," 25, 26, 27,":[6984],"25, 26, 27, ":[6984],"5, 26, 27, 2":[6984],", 26, 27, 28":[6984]," 26, 27, 28]":[6984]," \"meshes\": [":[6987],"\"meshes\": [{":[6987],"  \"name\": \"p":[6988,7035]," \"name\": \"pl":[6988],"\"name\": \"pla":[6988],"name\": \"plan":[6988],"ame\": \"plane":[6988],"me\": \"plane\"":[6988],"e\": \"plane\",":[6988],"    \"id\": \"p":[6989],"   \"id\": \"pl":[6989],"  \"id\": \"pla":[6989]," \"id\": \"plan":[6989],"\"id\": \"plane":[6989],"id\": \"plane\"":[6989],"d\": \"plane\",":[6989],"        \"mat":[6990,7014,7151,7172],"       \"mate":[6990,7014,7151,7172],"      \"mater":[6990,7014,7151,7172],"     \"materi":[6990,7014,7151,7172],"    \"materia":[6990,7014,7151,7172],"   \"material":[6990,7014,7151,7172],"  \"materiali":[6990,7004,7014,7025,7151,7162,7172,7183]," \"materialid":[6990,7014,7151,7172],"terialid\": \"":[6990,7014,7151,7172],"erialid\": \"m":[6990,7014,7151,7172],"rialid\": \"ma":[6990,7014,7151,7172],"ialid\": \"mat":[6990,7014,7151,7172],"alid\": \"mate":[6990,7014,7151,7172],"lid\": \"mater":[6990,7014,7151,7172],"ition\": [0.0":[6991],"tion\": [0.01":[6991],"ion\": [0.017":[6991],"on\": [0.0172":[6991],"n\": [0.0172,":[6991],"\": [0.0172, ":[6991],": [0.0172, -":[6991]," [0.0172, -2":[6991],"[0.0172, -2.":[6991],"0.0172, -2.9":[6991],".0172, -2.97":[6991],"0172, -2.978":[6991],"172, -2.9787":[6991],"72, -2.9787,":[6991],"2, -2.9787, ":[6991],", -2.9787, -":[6991]," -2.9787, -0":[6991],"-2.9787, -0.":[6991],"2.9787, -0.5":[6991],".9787, -0.51":[6991],"9787, -0.518":[6991],"787, -0.5184":[6991],"87, -0.5184]":[6991],"7, -0.5184],":[6991],"        \"rot":[6992,7017,7154,7175],"       \"rota":[6992,7017,7154,7175],"      \"rotat":[6992,7017,7154,7175],"     \"rotati":[6992,7017,7154,7175],"    \"rotatio":[6992,7017,7154,7175],"   \"rotation":[6992,7017,7154,7175],"  \"rotation\"":[6992,7017,7154,7175]," \"rotation\":":[6992,7017,7154,7175],"rotation\": [":[6992,7017,7154,7175],"otation\": [0":[6992,7017,7154,7175],"tation\": [0,":[6992,7017,7154,7175],"ation\": [0, ":[6992,7017,7154,7175],"tion\": [0, 0":[6992,7016,7017,7154,7175,7205],"ion\": [0, 0,":[6992,7016,7017,7154,7175,7205],"on\": [0, 0, ":[6992,7016,7017,7154,7175,7205],"n\": [0, 0, 0":[6992,7016,7017,7154,7175,7205],"        \"sca":[6993,7018,7155,7176],"       \"scal":[6993,7018,7155,7176],"      \"scali":[6993,7018,7155,7176],"     \"scalin":[6993,7018,7155,7176],"    \"scaling":[6993,7018,7155,7176],"   \"scaling\"":[6993,7018,7155,7176],"  \"scaling\":":[6993,7018,7155,7176]," \"scaling\": ":[6993,7018,7155,7176],"\"scaling\": [":[6993,7018,7155,7176],"scaling\": [8":[6993],"caling\": [87":[6993],"aling\": [87.":[6993],"ling\": [87.1":[6993],"ing\": [87.14":[6993],"ng\": [87.147":[6993],"g\": [87.1479":[6993],"\": [87.1479,":[6993],": [87.1479, ":[6993]," [87.1479, 0":[6993],"[87.1479, 0.":[6993],"87.1479, 0.8":[6993],"7.1479, 0.86":[6993],".1479, 0.863":[6993],"1479, 0.8635":[6993],"479, 0.8635,":[6993],"79, 0.8635, ":[6993],"9, 0.8635, 8":[6993],", 0.8635, 87":[6993]," 0.8635, 87.":[6993],"0.8635, 87.1":[6993],".8635, 87.14":[6993],"8635, 87.147":[6993],"635, 87.1479":[6993],"35, 87.1479]":[6993],"5, 87.1479],":[6993],"        \"isv":[6994,7019,7156,7177],"       \"isvi":[6994,7019,7156,7177],"      \"isvis":[6994,7019,7156,7177],"     \"isvisi":[6994,7019,7156,7177],"    \"isvisib":[6994,7019,7156,7177],"   \"isvisibl":[6994,7019,7156,7177],"  \"isvisible":[6994,7019,7156,7177]," \"isvisible\"":[6994,7019,7156,7177],"svisible\": t":[6994,7019,7156,7177],"visible\": tr":[6994,7019,7156,7177],"isible\": tru":[6994,7019,7156,7177],"sible\": true":[6994,7019,7156,7177],"ible\": true,":[6994,7019,7156,7177],"        \"ise":[6995,7020,7157,7178],"       \"isen":[6995,7020,7157,7178],"      \"isena":[6995,7020,7157,7178],"     \"isenab":[6995,7020,7157,7178],"    \"isenabl":[6995,7020,7157,7178],"   \"isenable":[6995,7020,7157,7178],"  \"isenabled":[6995,7020,7157,7178]," \"isenabled\"":[6995,7020,7157,7178],"senabled\": t":[6995,7020,7157,7178],"enabled\": tr":[6995,7020,7157,7178],"nabled\": tru":[6995,7020,7157,7178],"abled\": true":[6995,7020,7157,7178],"bled\": true,":[6995,7020,7157,7178],"        \"bil":[6997,7022,7159,7180],"       \"bill":[6997,7022,7159,7180],"      \"billb":[6997,7022,7159,7180],"     \"billbo":[6997,7022,7159,7180],"    \"billboa":[6997,7022,7159,7180],"   \"billboar":[6997,7022,7159,7180],"  \"billboard":[6997,7022,7159,7180]," \"billboardm":[6997,7022,7159,7180],"oardmode\": 0":[6997,7022,7159,7180],"ardmode\": 0,":[6997,7022,7159,7180],"        \"rec":[6998,7023,7160,7181],"       \"rece":[6998,7023,7160,7181],"      \"recei":[6998,7023,7160,7181],"     \"receiv":[6998,7023,7160,7181],"    \"receive":[6998,7023,7160,7181],"   \"receives":[6998,7023,7160,7181],"  \"receivesh":[6998,7023,7160,7181]," \"receivesha":[6998,7023,7160,7181],"eshadows\": t":[6998],"shadows\": tr":[6998],"hadows\": tru":[6998],"adows\": true":[6998],"dows\": true,":[6998],"sitions\": [-":[6999],"itions\": [-1":[6999],"tions\": [-1,":[6999],"ions\": [-1, ":[6999],"ons\": [-1, 0":[6999],"ns\": [-1, 0,":[6999],"s\": [-1, 0, ":[6999],"\": [-1, 0, -":[6999],": [-1, 0, -1":[6999]," [-1, 0, -1,":[6999],"[-1, 0, -1, ":[6999],"-1, 0, -1, 1":[6999],"1, 0, -1, 1,":[6999],", 0, -1, 1, ":[6999]," 0, -1, 1, 0":[6999],"0, -1, 1, 0,":[6999],", -1, 1, 0, ":[6999]," -1, 1, 0, -":[6999],"-1, 1, 0, -1":[6999],"1, 1, 0, -1,":[6999],", 1, 0, -1, ":[6999]," 1, 0, -1, -":[6999],"1, 0, -1, -1":[6999],", 0, -1, -1,":[6999]," 0, -1, -1, ":[6999],"0, -1, -1, 0":[6999],", -1, -1, 0,":[6999]," -1, -1, 0, ":[6999],"-1, -1, 0, 1":[6999],"1, -1, 0, 1,":[6999],", -1, 0, 1, ":[6999]," -1, 0, 1, 1":[6999],"-1, 0, 1, 1,":[6999],", 0, 1, 1, 0":[6999]," 0, 1, 1, 0,":[6999],"0, 1, 1, 0, ":[6999],", 1, 1, 0, 1":[6999]," 1, 1, 0, 1]":[6999],"1, 1, 0, 1],":[6999],"        \"nor":[7000],"       \"norm":[7000],"      \"norma":[7000],"     \"normal":[7000],"    \"normals":[7000],"   \"normals\"":[7000],"ormals\": [0,":[7000],"rmals\": [0, ":[7000],"mals\": [0, 1":[7000],"als\": [0, 1,":[7000],"ls\": [0, 1, ":[7000],"s\": [0, 1, 0":[7000],"\": [0, 1, 0,":[7000],": [0, 1, 0, ":[7000]," [0, 1, 0, 0":[7000],"[0, 1, 0, 0,":[7000],"0, 1, 0, 0, ":[7000],", 1, 0, 0, 1":[7000]," 1, 0, 0, 1,":[7000],"1, 0, 0, 1, ":[7000],", 0, 0, 1, 0":[7000]," 0, 0, 1, 0,":[7000],"0, 0, 1, 0, ":[7000]," 0, 1, 0, 0,":[7000]," 0, 0, 1, 0]":[7000],"0, 0, 1, 0],":[7000],"        \"uvs":[7001],"       \"uvs\"":[7001],"      \"uvs\":":[7001],"     \"uvs\": ":[7001],"    \"uvs\": [":[7001],"   \"uvs\": [0":[7001]," \"uvs\": [0.0":[7001],"\"uvs\": [0.00":[7001],"uvs\": [0.000":[7001],"vs\": [0.0001":[7001],"s\": [0.0001,":[7001],"\": [0.0001, ":[7001],": [0.0001, 0":[7001]," [0.0001, 0.":[7001],"[0.0001, 0.0":[7001],"0.0001, 0.00":[7001],".0001, 0.000":[7001],"0001, 0.0001":[7001],"001, 0.0001,":[7001],"01, 0.0001, ":[7001],"1, 0.0001, 0":[7001],", 0.0001, 0.":[7001]," 0.0001, 0.9":[7001],"0.0001, 0.99":[7001],".0001, 0.999":[7001],"0001, 0.9999":[7001],"001, 0.9999,":[7001],"01, 0.9999, ":[7001],"1, 0.9999, 0":[7001],", 0.9999, 0.":[7001]," 0.9999, 0.0":[7001],"0.9999, 0.00":[7001],".9999, 0.000":[7001],"9999, 0.0001":[7001],"999, 0.0001,":[7001],"99, 0.0001, ":[7001],"9, 0.0001, 0":[7001]," 0.0001, 0.0":[7001]," 0.9999, 0.9":[7001],"0.9999, 0.99":[7001],".9999, 0.999":[7001],"9999, 0.9999":[7001],"999, 0.9999,":[7001],"99, 0.9999, ":[7001],"9, 0.9999, 0":[7001],"999, 0.9999]":[7001],"99, 0.9999],":[7001],"        \"ind":[7002],"       \"indi":[7002],"      \"indic":[7002],"     \"indice":[7002],"    \"indices":[7002],"   \"indices\"":[7002]," [0, 1, 2, 1":[7002],"[0, 1, 2, 1,":[7002],"0, 1, 2, 1, ":[7002],", 1, 2, 1, 3":[7002]," 1, 2, 1, 3,":[7002],"1, 2, 1, 3, ":[7002],", 2, 1, 3, 2":[7002]," 2, 1, 3, 2]":[7002],"2, 1, 3, 2],":[7002],"        \"sub":[7003,7024,7161,7182],"       \"subm":[7003,7024,7161,7182],"      \"subme":[7003,7024,7161,7182],"     \"submes":[7003,7024,7161,7182],"    \"submesh":[7003,7024,7161,7182],"   \"submeshe":[7003,7024,7161,7182],"  \"submeshes":[7003,7024,7161,7182]," \"submeshes\"":[7003,7024,7161,7182],"ubmeshes\": [":[7003,7024,7161,7182],"bmeshes\": [{":[7003,7024,7161,7182],"          \"m":[7004,7025,7162,7183],"         \"ma":[7004,7025,7162,7183],"        \"mat":[7004,7025,7162,7183],"       \"mate":[7004,7025,7162,7183],"      \"mater":[7004,7025,7162,7183],"     \"materi":[7004,7025,7162,7183],"    \"materia":[7004,7025,7162,7183],"   \"material":[7004,7025,7162,7183]," \"materialin":[7004,7025,7162,7183],"ialindex\": 0":[7004,7025,7162,7183],"alindex\": 0,":[7004,7025,7162,7183],"         \"ve":[7005,7006,7026,7027,7163,7164,7184,7185],"        \"ver":[7005,7006,7026,7027,7163,7164,7184,7185],"       \"vert":[7005,7006,7026,7027,7163,7164,7184,7185],"      \"verti":[7005,7006,7026,7027,7163,7164,7184,7185],"     \"vertic":[7005,7006,7026,7027,7163,7164,7184,7185],"    \"vertice":[7005,7006,7026,7027,7163,7164,7184,7185],"   \"vertices":[7005,7006,7026,7027,7163,7164,7184,7185],"  \"verticess":[7005,7026,7163,7184]," \"verticesst":[7005,7026,7163,7184],"cesstart\": 0":[7005,7026,7163,7184],"esstart\": 0,":[7005,7026,7163,7184],"  \"verticesc":[7006,7027,7164,7185]," \"verticesco":[7006,7027,7164,7185],"cescount\": 4":[7006],"escount\": 4,":[7006],"       \"inde":[7007,7008,7028,7029,7165,7166,7186,7187],"      \"index":[7007,7008,7028,7029,7165,7166,7186,7187],"     \"indexs":[7007,7028,7165,7186],"    \"indexst":[7007,7028,7165,7186],"   \"indexsta":[7007,7028,7165,7186],"  \"indexstar":[7007,7028,7165,7186]," \"indexstart":[7007,7028,7165,7186],"dexstart\": 0":[7007,7028,7165,7186],"exstart\": 0,":[7007,7028,7165,7186],"     \"indexc":[7008,7029,7166,7187],"    \"indexco":[7008,7029,7166,7187],"   \"indexcou":[7008,7029,7166,7187],"  \"indexcoun":[7008,7029,7166,7187]," \"indexcount":[7008,7029,7166,7187],"dexcount\": 6":[7008]," \"name\": \"cu":[7012,7149,7170],"\"name\": \"cub":[7012,7149,7170],"name\": \"cube":[7012,7149,7170],"ame\": \"cube\"":[7012],"me\": \"cube\",":[7012],"   \"id\": \"cu":[7013,7150,7171],"\"id\": \"cube\"":[7013],"id\": \"cube\",":[7013],"        \"geo":[7015,7152,7173],"       \"geom":[7015,7152,7173],"      \"geome":[7015,7152,7173],"     \"geomet":[7015,7152,7173],"    \"geometr":[7015,7152,7173],"   \"geometry":[7015,7152,7173],"  \"geometryi":[7015,7152,7173]," \"geometryid":[7015,7152,7173],"ometryid\": \"":[7015,7152,7173],"metryid\": \"c":[7015,7152],"etryid\": \"cu":[7015,7152],"tryid\": \"cub":[7015,7152],"ryid\": \"cube":[7015,7152],"yid\": \"cubeg":[7015,7152],"sition\": [0,":[7016,7205],"ition\": [0, ":[7016,7205],"scaling\": [1":[7018,7155,7176],"caling\": [1,":[7018,7155,7176],"aling\": [1, ":[7018,7155,7176],"ling\": [1, 1":[7018,7155,7176],"ing\": [1, 1,":[7018,7155,7176],"ng\": [1, 1, ":[7018,7155,7176],"g\": [1, 1, 1":[7018,7155,7176],"eshadows\": f":[7023,7160,7181],"shadows\": fa":[7023,7160,7181],"hadows\": fal":[7023,7160,7181],"adows\": fals":[7023,7160,7181],"dows\": false":[7023,7160,7181],"ows\": false,":[7023,7160,7181],"cescount\": 2":[7027,7164,7185],"escount\": 29":[7027,7164,7185],"scount\": 29,":[7027,7164,7185],"dexcount\": 3":[7029,7166,7187],"excount\": 36":[7029,7166,7187],"        \"ani":[7031],"       \"anim":[7031],"      \"anima":[7031],"     \"animat":[7031],"    \"animati":[7031],"   \"animatio":[7031],"  \"animation":[7031]," \"animations":[7031],"imations\": [":[7031],"mations\": [{":[7031],"          \"d":[7032,7063],"         \"da":[7032,7063],"        \"dat":[7032,7063],"       \"data":[7032,7063],"      \"datat":[7032,7063],"     \"dataty":[7032,7063],"    \"datatyp":[7032,7063],"   \"datatype":[7032,7063],"  \"datatype\"":[7032,7063]," \"datatype\":":[7032,7063],"datatype\": 1":[7032,7063],"atatype\": 1,":[7032,7063],"          \"f":[7033,7064],"         \"fr":[7033,7064],"        \"fra":[7033,7064],"       \"fram":[7033,7064],"      \"frame":[7033,7064],"     \"framep":[7033,7064],"    \"framepe":[7033,7064],"   \"frameper":[7033,7064],"  \"framepers":[7033,7064]," \"frameperse":[7033,7064],"ersecond\": 3":[7033,7064],"rsecond\": 30":[7033,7064],"second\": 30,":[7033,7064],"         \"lo":[7034,7065],"        \"loo":[7034,7065],"       \"loop":[7034,7065],"      \"loopb":[7034,7065],"     \"loopbe":[7034,7065],"    \"loopbeh":[7034,7065],"   \"loopbeha":[7034,7065],"  \"loopbehav":[7034,7065]," \"loopbehavi":[7034,7065],"behavior\": 1":[7034,7065],"ehavior\": 1,":[7034,7065]," \"name\": \"po":[7035],"\"name\": \"pos":[7035],"name\": \"posi":[7035],"ame\": \"posit":[7035],"me\": \"positi":[7035],"e\": \"positio":[7035],"\": \"position":[7035,7036],": \"position ":[7035]," \"position a":[7035],"\"position an":[7035],"position ani":[7035],"osition anim":[7035],"sition anima":[7035],"ition animat":[7035],"n animation\"":[7035,7066]," animation\",":[7035,7066],"         \"pr":[7036,7067],"        \"pro":[7036,7067],"       \"prop":[7036,7067],"      \"prope":[7036,7067],"     \"proper":[7036,7067],"    \"propert":[7036,7067],"   \"property":[7036,7067],"  \"property\"":[7036,7067]," \"property\":":[7036,7067],"property\": \"":[7036,7067],"roperty\": \"p":[7036],"operty\": \"po":[7036],"perty\": \"pos":[7036],"erty\": \"posi":[7036],"rty\": \"posit":[7036],"ty\": \"positi":[7036],"y\": \"positio":[7036],": \"position\"":[7036],"          \"k":[7037,7068],"         \"ke":[7037,7068],"        \"key":[7037,7068],"       \"keys":[7037,7068],"      \"keys\"":[7037,7068],"     \"keys\":":[7037,7068],"    \"keys\": ":[7037,7068],"   \"keys\": [":[7037,7068],"  \"keys\": [{":[7037,7068],"           \"":[7038,7039,7042,7043,7046,7047,7050,7051,7054,7055,7058,7059,7069,7070,7073,7074,7077,7078,7081,7082],"          \"f":[7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"         \"fr":[7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"        \"fra":[7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"       \"fram":[7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"      \"frame":[7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"     \"frame\"":[7038,7042,7046,7050,7054,7058,7069,7073,7077,7081],"  \"frame\": 0":[7038,7069]," \"frame\": 0,":[7038,7069],"          \"v":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"         \"va":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"        \"val":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"       \"valu":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"      \"value":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"     \"values":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082]," \"values\": [":[7039,7043,7047,7051,7055,7059,7070,7074,7078,7082],"\"values\": [0":[7039,7043,7047,7051,7055,7059],"values\": [0,":[7039,7043,7047,7051,7055,7059],"alues\": [0,0":[7039,7043,7047,7051,7055,7059],"lues\": [0,0,":[7039,7043,7047,7051,7055,7059],"ues\": [0,0,0":[7039,7043,7055,7059],"es\": [0,0,0.":[7039,7043],"s\": [0,0,0.0":[7039,7043],"\": [0,0,0.02":[7039,7043],": [0,0,0.029":[7039,7043]," [0,0,0.0291":[7039,7043],"[0,0,0.0291]":[7039,7043],"          },":[7040,7044,7048,7052,7056,7071,7075,7079],"           {":[7041,7045,7049,7053,7057,7072,7076,7080],"  \"frame\": 1":[7042]," \"frame\": 1,":[7042],"  \"frame\": 3":[7046,7073]," \"frame\": 30":[7046,7073],"\"frame\": 30,":[7046,7073],"ues\": [0,0,1":[7047],"es\": [0,0,10":[7047],"s\": [0,0,10]":[7047],"  \"frame\": 6":[7050,7077]," \"frame\": 60":[7050,7077],"\"frame\": 60,":[7050,7077],"ues\": [0,0,9":[7051],"es\": [0,0,9.":[7051],"s\": [0,0,9.9":[7051],"\": [0,0,9.97":[7051],": [0,0,9.975":[7051]," [0,0,9.975]":[7051],"  \"frame\": 9":[7054]," \"frame\": 90":[7054],"\"frame\": 90,":[7054],"es\": [0,0,0]":[7055,7059],"  \"frame\": 2":[7058,7081]," \"frame\": 25":[7058,7081],"\"frame\": 250":[7058,7081],"frame\": 250,":[7058,7081],"          }]":[7060,7083],"  \"name\": \"r":[7066]," \"name\": \"ro":[7066],"\"name\": \"rot":[7066],"name\": \"rota":[7066],"ame\": \"rotat":[7066],"me\": \"rotati":[7066],"e\": \"rotatio":[7066],"\": \"rotation":[7066,7067],": \"rotation ":[7066]," \"rotation a":[7066],"\"rotation an":[7066],"rotation ani":[7066],"otation anim":[7066],"tation anima":[7066],"ation animat":[7066],"roperty\": \"r":[7067],"operty\": \"ro":[7067],"perty\": \"rot":[7067],"erty\": \"rota":[7067],"rty\": \"rotat":[7067],"ty\": \"rotati":[7067],"y\": \"rotatio":[7067],": \"rotation\"":[7067]," \"rotation\",":[7067],"\"values\": [-":[7070,7074,7078,7082],"values\": [-0":[7070,7074],"alues\": [-0.":[7070,7074],"lues\": [-0.0":[7070,7074],"ues\": [-0.01":[7070,7074],"es\": [-0.016":[7070,7074],"s\": [-0.016,":[7070,7074],"\": [-0.016, ":[7070,7074],": [-0.016, 0":[7070,7074]," [-0.016, 0,":[7070,7074],"[-0.016, 0, ":[7070,7074],"-0.016, 0, 0":[7070,7074],"0.016, 0, 0]":[7070,7074],"values\": [-6":[7078,7082],"alues\": [-6.":[7078,7082],"lues\": [-6.2":[7078,7082],"ues\": [-6.28":[7078,7082],"es\": [-6.283":[7078,7082],"s\": [-6.2832":[7078,7082],"\": [-6.2832,":[7078,7082],": [-6.2832, ":[7078,7082]," [-6.2832, 0":[7078,7082],"[-6.2832, 0,":[7078,7082],"-6.2832, 0, ":[7078,7082],"6.2832, 0, 0":[7078,7082],".2832, 0, 0]":[7078,7082],"        \"aut":[7085,7144,7145,7146,7201],"       \"auto":[7085,7144,7145,7146,7201],"      \"autoa":[7085,7144,7145,7146],"     \"autoan":[7085,7144,7145,7146],"    \"autoani":[7085,7144,7145,7146],"   \"autoanim":[7085,7144,7145,7146],"  \"autoanima":[7085,7144,7145,7146]," \"autoanimat":[7085,7144,7145,7146],"oanimate\": t":[7085],"animate\": tr":[7085],"nimate\": tru":[7085],"imate\": true":[7085],"mate\": true,":[7085],"_(edition in":[7086],"(edition in ":[7086],"edition in p":[7086,7136],"dition in pr":[7086,7136],"ition in pro":[7086,7136],"tion in prog":[7086,7136],"ion in progr":[7086,7136],"on in progre":[7086,7136],"n in progres":[7086,7136]," in progress":[7086,7136],"in progress)":[7086],"n progress)_":[7086],"ayground/?17":[7087],"layground/#2":[7088],"ayground/#21":[7088],"yground/#21e":[7088],"ground/#21ew":[7088],"round/#21ewa":[7088],"ound/#21ewa7":[7088],"see the expl":[7090],"ee the expla":[7090],"e the explan":[7090]," the explana":[7090],"the explanat":[7090],"he explanati":[7090],"anation abov":[7090],"nation above":[7090],"ation above ":[7090],"tion above t":[7090],"ion above to":[7090],"on above to ":[7090],"n above to u":[7090]," above to un":[7090],"above to und":[7090],"bove to unde":[7090],"ove to under":[7090],"ve to unders":[7090],"understand w":[7090],"nderstand wh":[7090],"derstand wha":[7090],"erstand what":[7090],"rstand what ":[7090],"stand what e":[7090],"tand what ea":[7090],"and what eac":[7090],"nd what each":[7090],"d what each ":[7090]," what each v":[7090],"what each va":[7090],"hat each var":[7090],"at each vari":[7090],"t each varia":[7090]," each variab":[7090],"each variabl":[7090],"ach variable":[7090],"ch variable ":[7090],"h variable i":[7090]," variable is":[7090],"variable is.":[7090],"y way to gen":[7091]," way to gene":[7091],"way to gener":[7091],"ay to genera":[7091]," generate st":[7091],"generate str":[7091],"enerate stra":[7091],"nerate stran":[7091],"erate strang":[7091],"rate strange":[7091],"ate strange ":[7091],"te strange s":[7091],"e strange sh":[7091],"range shapes":[7091],"ange shapes ":[7091],"nge shapes :":[7091],"ge shapes : ":[7091],"e shapes : h":[7091]," shapes : ht":[7091],"shapes : htt":[7091],"hapes : http":[7091],"apes : http:":[7091],"pes : http:/":[7091],"om/#rf9w9#47":[7091],"m/#rf9w9#47 ":[7091],"/#rf9w9#47  ":[7091],"#rf9w9#47   ":[7091],"var linessha":[7093],"ar linesshad":[7093],"r linesshade":[7093]," linesshader":[7093,7094],"linesshader ":[7093],"inesshader =":[7093],"nesshader = ":[7093],"esshader = {":[7093],"sshader = { ":[7093],"shader = { f":[7093],"hader = { fr":[7093],"ader = { fra":[7093],"der = { frag":[7093],"er = { fragm":[7093],"r = { fragme":[7093]," = { fragmen":[7093],"= { fragment":[7093]," { fragmente":[7093],"{ fragmentel":[7093]," fragmentele":[7093],"mentelement:":[7093],"entelement: ":[7093],"ntelement: '":[7093],"telement: 'l":[7093],"element: 'li":[7093],"lement: 'lin":[7093],"ement: 'line":[7093],"ment: 'lines":[7093],"ent: 'linesp":[7093],"nt: 'linespi":[7093],"t: 'linespix":[7093],": 'linespixe":[7093]," 'linespixel":[7093],"'linespixels":[7093],"pixelshader'":[7093],"ixelshader' ":[7093],"xelshader' }":[7093],"elshader' };":[7093],"stomtext\", l":[7094],"tomtext\", li":[7094],"omtext\", lin":[7094],"mtext\", line":[7094],"text\", lines":[7094],"ext\", liness":[7094],"xt\", linessh":[7094],"t\", linessha":[7094],"\", linesshad":[7094],", linesshade":[7094],"linesshader,":[7094],"inesshader, ":[7094],"nesshader, 1":[7094],"esshader, 10":[7094],"sshader, 102":[7094],"shader, 1024":[7094],"hader, 1024,":[7094],"ader, 1024, ":[7094],"der, 1024, s":[7094],"er, 1024, sc":[7094],"r, 1024, sce":[7094],"**note :** w":[7096],"*note :** wh":[7096],"note :** whe":[7096],"ote :** when":[7096],"te :** when ":[7096],"e :** when u":[7096]," :** when us":[7096],":** when usi":[7096],"** when usin":[7096],"* when using":[7096],"when using s":[7096],"hen using sh":[7096],"en using sha":[7096],"n using shad":[7096]," using shade":[7096],"using shader":[7096],"sing shaders":[7096],"ing shaderst":[7096],"ng shadersto":[7096],"g shaderstor":[7096],"haderstore o":[7096],"aderstore or":[7096],"derstore or ":[7096],"erstore or d":[7096],"rstore or do":[7096],"store or dom":[7096],"tore or dom ":[7096],"ore or dom e":[7096],"re or dom el":[7096],"e or dom ele":[7096]," or dom elem":[7096],"or dom eleme":[7096],"r dom elemen":[7096],"om element s":[7096],"m element sh":[7096]," element sha":[7096],"element shad":[7096],"lement shade":[7096],"ement shader":[7096],"ent shader f":[7096],"nt shader fo":[7096],"t shader for":[7096],"shader for c":[7096],"hader for cu":[7096],"ader for cus":[7096],"der for cust":[7096],"er for custo":[7096],"r for custom":[7096]," for custom ":[7096],"for custom p":[7096],"or custom pr":[7096],"r custom pro":[7096],"l textures :":[7096]," textures : ":[7096],"textures : t":[7096],"extures : th":[7096],"xtures : the":[7096],"tures : the ":[7096],"ures : the c":[7096],"res : the co":[7096],"es : the con":[7096],"s : the conf":[7096]," : the confi":[7096],": the config":[7096],"onfig.json f":[7096],"nfig.json fi":[7096],"fig.json fil":[7096],"ig.json file":[7096],"g.json file ":[7096],".json file i":[7096],"json file is":[7096],"son file is ":[7096],"on file is n":[7096],"n file is no":[7096]," file is not":[7096],"file is not ":[7096],"ile is not n":[7096],"le is not ne":[7096],"e is not nee":[7096]," is not need":[7096],"is not neede":[7096],"s not needed":[7096]," not needed ":[7096],"not needed a":[7096],"ot needed an":[7096],"t needed any":[7096]," needed anym":[7096],"needed anymo":[7096],"eeded anymor":[7096],"eded anymore":[7096],"ded anymore ":[7096],"ed anymore a":[7096],"d anymore an":[7096]," anymore and":[7096],"anymore and ":[7096],"nymore and y":[7096],"ymore and yo":[7096],"more and you":[7096],"ore and you ":[7096],"re and you c":[7096],"e and you ca":[7096],"nd you can j":[7096],"d you can ju":[7096],"u can just u":[7096]," can just us":[7096],"can just use":[7096],"an just use ":[7096],"n just use s":[7096]," just use se":[7096],"just use set":[7096],"ust use setf":[7096],"st use setfl":[7096],"t use setflo":[7096]," use setfloa":[7096],"use setfloat":[7096],"se setfloat ":[7096],"e setfloat o":[7096]," setfloat or":[7096],"setfloat or ":[7096],"etfloat or s":[7096],"tfloat or se":[7096],"float or set":[7096],"loat or setv":[7096],"oat or setve":[7096],"at or setvec":[7096],"t or setvect":[7096]," or setvecto":[7096],"or setvector":[7096],"r setvector3":[7096]," setvector3 ":[7096],"setvector3 (":[7096],"etvector3 (a":[7096],"tvector3 (an":[7096],"vector3 (and":[7096],"ector3 (and ":[7096],"ctor3 (and s":[7096],"tor3 (and so":[7096],"or3 (and so ":[7096],"r3 (and so o":[7096],"3 (and so on":[7096]," (and so on)":[7096],"(and so on),":[7096],"and so on), ":[7096],"nd so on), a":[7096],"d so on), an":[7096]," so on), and":[7096],"so on), and ":[7096],"o on), and s":[7096]," on), and se":[7096],"on), and set":[7096],"n), and sett":[7096],"), and sette":[7096],", and settex":[7096]," and settext":[7096],"and settextu":[7096],"nd settextur":[7096],"d settexture":[7096]," settexture ":[7096],"settexture o":[7096],"ettexture on":[7096],"ttexture on ":[7096],"texture on t":[7096],"exture on th":[7096],"xture on the":[7096],"ure on the c":[7096],"re on the cu":[7096],"e on the cus":[7096]," on the cust":[7096],"on the custo":[7096]," the customp":[7096],"the custompr":[7096],"he custompro":[7096],"e customproc":[7096],"raltexture w":[7096],"altexture wi":[7096],"ltexture wil":[7096],"texture will":[7096],"exture will ":[7096],"xture will g":[7096],"ture will gi":[7096],"ure will giv":[7096],"re will give":[7096],"e will give ":[7096]," will give v":[7096],"will give va":[7096],"ill give val":[7096],"ll give valu":[7096],"l give value":[7096]," give values":[7096],"give values ":[7096],"ive values a":[7096],"ve values an":[7096],"e values and":[7096],"values and s":[7096],"alues and sa":[7096],"lues and sam":[7096],"ues and samp":[7096],"es and sampl":[7096],"s and sample":[7096]," and sampler":[7096],"and sampler2":[7096],"nd sampler2d":[7096],"d sampler2d ":[7096],"sampler2d to":[7096],"ampler2d to ":[7096],"mpler2d to t":[7096],"pler2d to th":[7096],"ler2d to the":[7096],"er2d to the ":[7096],"r2d to the s":[7096],"2d to the sh":[7096],"fig 8a trans":[7097],"ig 8a transl":[7097],"g 8a transla":[7097]," 8a translat":[7097],"8a translate":[7097],"a translate ":[7097]," translate l":[7097],"translate lo":[7097],"ranslate loc":[7097],"anslate loca":[7097],"nslate local":[7097],"slate local ":[7097],"late local a":[7097],"ate local ap":[7097],"te local app":[7097],"e local appl":[7097]," local appli":[7097],"local applie":[7097],"ocal applies":[7097],"cal applies ":[7097],"al applies a":[7097],"l applies a ":[7097]," applies a t":[7097],"applies a tr":[7097],"pplies a tra":[7097],"plies a tran":[7097],"lies a trans":[7097],"ies a transl":[7097],"es a transla":[7097],"s a translat":[7097],"slation of -":[7097],"lation of -2":[7097],"ation of -2 ":[7097],"tion of -2 a":[7097],"ion of -2 al":[7097],"on of -2 alo":[7097],"n of -2 alon":[7097]," of -2 along":[7097],"of -2 along ":[7097],"f -2 along z":[7097]," -2 along z ":[7097],"-2 along z w":[7097],"2 along z wo":[7097]," along z wor":[7097],"along z worl":[7097],"long z world":[7097],"ong z world-":[7097],"ng z world-l":[7097],"g z world-lo":[7097]," z world-loc":[7097],"z world-loca":[7097],"local-axes t":[7097],"ocal-axes to":[7097],"cal-axes to ":[7097],"al-axes to o":[7097],"l-axes to ob":[7097],"-axes to obt":[7097],"axes to obta":[7097],"xes to obtai":[7097],"es to obtain":[7097],"secondly whe":[7099],"econdly when":[7099],"condly when ":[7099],"ondly when r":[7099],"ndly when ro":[7099],"dly when rot":[7099],"ing in the l":[7099],"ng in the lo":[7099],"g in the loc":[7099],"cal space th":[7099],"al space the":[7099],"l space the ":[7099]," space the l":[7099],"space the lo":[7099],"pace the loc":[7099],"ace the loca":[7099],"ce the local":[7099],"local axes a":[7099],"ocal axes ar":[7099],"cal axes are":[7099],"al axes are ":[7099],"l axes are u":[7099]," axes are us":[7099],"ion and the ":[7099],"on and the w":[7099],"n and the wo":[7099]," and the wor":[7099],"and the worl":[7099],"l-axes are s":[7099],"-axes are st":[7099],"axes are sti":[7099],"xes are stil":[7099],"es are still":[7099],"s are still ":[7099]," are still u":[7099],"are still us":[7099],"re still use":[7099],"e still used":[7099]," still used ":[7099],"still used f":[7099],"till used fo":[7099],"ill used for":[7099],"ll used for ":[7099],"l used for p":[7099],"fig 9 shows ":[7100],"ig 9 shows t":[7100],"g 9 shows th":[7100]," 9 shows tha":[7100],"9 shows that":[7100],"s that the t":[7100]," that the tr":[7100],"that the tra":[7100],"hat the tran":[7100],"at the trans":[7100],"t the transl":[7100],"slation of (":[7100],"lation of (0":[7100]," of (0, 0, -":[7100],"of (0, 0, -2":[7100],"f (0, 0, -2)":[7100]," (0, 0, -2) ":[7100],"(0, 0, -2) i":[7100],"0, 0, -2) is":[7100],", 0, -2) is ":[7100]," 0, -2) is s":[7100],"0, -2) is st":[7100],", -2) is sti":[7100]," -2) is stil":[7100],"-2) is still":[7100],"2) is still ":[7100],") is still a":[7100]," is still al":[7100],"is still alo":[7100],"s still alon":[7100]," still along":[7100],"still along ":[7100],"till along t":[7100],"ill along th":[7100],"ll along the":[7100],"l along the ":[7100],"along the wo":[7100],"long the wor":[7100],"ong the worl":[7100],"g the world-":[7100],"local-axis f":[7100],"ocal-axis fo":[7100],"cal-axis for":[7100],"al-axis for ":[7100],"l-axis for z":[7100],"-axis for z ":[7100],"axis for z a":[7100],"xis for z as":[7100],"is for z as ":[7100],"s for z as i":[7100]," for z as it":[7100],"for z as it ":[7100],"or z as it w":[7100],"r z as it wa":[7100]," z as it was":[7100],"z as it was ":[7100]," as it was i":[7100],"as it was in":[7100],"s it was in ":[7100]," it was in f":[7100],"it was in fi":[7100],"t was in fig":[7100]," was in fig ":[7100],"was in fig 8":[7100],"as in fig 8b":[7100],"s in fig 8b.":[7100],"ntent.com/-f":[7101,7109],"tent.com/-f7":[7101],"ent.com/-f7s":[7101],"nt.com/-f7sp":[7101],"t.com/-f7spr":[7101],".com/-f7spre":[7101],"com/-f7sprez":[7101],"om/-f7spreze":[7101],"m/-f7sprezea":[7101],"/-f7sprezeac":[7101],"-f7sprezeacq":[7101],"f7sprezeacq/":[7101],"7sprezeacq/v":[7101],"sprezeacq/vw":[7101],"prezeacq/vw2":[7101],"rezeacq/vw2q":[7101],"ezeacq/vw2q7":[7101],"zeacq/vw2q7w":[7101],"eacq/vw2q7wo":[7101],"acq/vw2q7wog":[7101],"cq/vw2q7wogj":[7101],"q/vw2q7wogjp":[7101],"/vw2q7wogjpi":[7101],"vw2q7wogjpi/":[7101],"w2q7wogjpi/a":[7101],"2q7wogjpi/aa":[7101],"q7wogjpi/aaa":[7101],"7wogjpi/aaaa":[7101],"wogjpi/aaaaa":[7101],"ogjpi/aaaaaa":[7101],"gjpi/aaaaaaa":[7101],"jpi/aaaaaaaa":[7101],"/aaaaaaaaafe":[7101],"aaaaaaaaafe/":[7101],"aaaaaaaafe/u":[7101],"aaaaaaafe/uu":[7101],"aaaaaafe/uuz":[7101],"aaaaafe/uuzb":[7101],"aaaafe/uuzbk":[7101],"aaafe/uuzbkb":[7101],"aafe/uuzbkbl":[7101],"afe/uuzbkblx":[7101],"fe/uuzbkblx4":[7101],"e/uuzbkblx4i":[7101],"/uuzbkblx4i8":[7101],"uuzbkblx4i8/":[7101],"uzbkblx4i8/s":[7101],"zbkblx4i8/s2":[7101],"bkblx4i8/s21":[7101],"kblx4i8/s210":[7101],"blx4i8/s210/":[7101],"lx4i8/s210/f":[7101],"x4i8/s210/fi":[7101],"4i8/s210/fig":[7101],"i8/s210/fig9":[7101],"8/s210/fig9.":[7101],"/s210/fig9.j":[7101],"s210/fig9.jp":[7101],"210/fig9.jpg":[7101],"10/fig9.jpg)":[7101],"[demo 10](ht":[7102],"demo 10](htt":[7102],"emo 10](http":[7102],"mo 10](http:":[7102],"o 10](http:/":[7102]," 10](http://":[7102],"10](http://w":[7102],"0](http://ww":[7102],"com/#umr7m#3":[7102,7105,7121],"om/#umr7m#36":[7102],"m/#umr7m#36)":[7102],"/#umr7m#36) ":[7102],"#umr7m#36) c":[7102],"umr7m#36) ca":[7102],"mr7m#36) can":[7102],"r7m#36) can ":[7102],"7m#36) can b":[7102],"m#36) can be":[7102],"#36) can be ":[7102],"36) can be u":[7102],"6) can be us":[7102]," play with l":[7102,7121],"play with lo":[7102,7121],"lay with loc":[7102,7121],"ay with loca":[7102,7121],"y with local":[7102,7121]," with local ":[7102,7121],"with local r":[7102,7121],"ith local ro":[7102,7121],"th local rot":[7102,7121],"h local rota":[7102,7121]," local rotat":[7102,7121],"local rotati":[7102,7121],"ocal rotatio":[7102,7121],"cal rotation":[7102,7121],"ranslations.":[7102],"####what if ":[7103],"###what if y":[7103],"##what if yo":[7103],"#what if you":[7103],"hat if you w":[7103],"at if you wa":[7103]," translate u":[7103],"translate us":[7103],"ranslate usi":[7103],"anslate usin":[7103],"nslate using":[7103],"slate using ":[7103],"late using t":[7103],"using the lo":[7103],"sing the loc":[7103],"ing the loca":[7103],"ng the local":[7103,7108,7124],"g the local ":[7103,7108,7124],"local axes f":[7103],"ocal axes fo":[7103],"cal axes fol":[7103],"al axes foll":[7103],"l axes follo":[7103]," axes follow":[7103],"axes followi":[7103],"xes followin":[7103],"es following":[7103],"following ro":[7103],"ollowing rot":[7103],"llowing rota":[7103],"lowing rotat":[7103],"owing rotati":[7103],"wing rotatio":[7103],"g rotations?":[7103]," rotations?#":[7103],"rotations?##":[7103],"otations?###":[7103],"tations?####":[7103],"you use pilo":[7104],"ou use pilot":[7104],"u use pilot.":[7104]," use pilot.l":[7104],"use pilot.lo":[7104],"se pilot.loc":[7104],"e pilot.loca":[7104]," pilot.local":[7104],"pilot.locall":[7104],"ilot.locally":[7104],"lot.locallyt":[7104],"ot.locallytr":[7104],"t.locallytra":[7104],"ytranslate(v":[7104],"late(vector)":[7104],"ate(vector),":[7104],"te(vector), ":[7104],"e(vector), w":[7104],"(vector), wh":[7104],"vector), whe":[7104],"ector), wher":[7104],"ctor), where":[7104],"tor), where ":[7104],"or), where v":[7104],"r), where ve":[7104],"), where vec":[7104],", where vect":[7104]," where vecto":[7104],"where vector":[7104],"ere vector i":[7104],"re vector is":[7104],"e vector is ":[7104],"ector is a b":[7104],"ctor is a ba":[7104],"tor is a bab":[7104],"or is a baby":[7104],"r is a babyl":[7104]," is a babylo":[7104],"is a babylon":[7104]," a babylon.v":[7104],"a babylon.ve":[7104],"lon.vector3 ":[7104],"on.vector3 g":[7104],"n.vector3 gi":[7104],".vector3 giv":[7104],"vector3 givi":[7104],"ector3 givin":[7104],"ctor3 giving":[7104],"tor3 giving ":[7104],"or3 giving t":[7104],"r3 giving th":[7104],"3 giving the":[7104]," giving the ":[7104],"giving the r":[7104],"iving the re":[7104],"ving the req":[7104],"ing the requ":[7104],"ng the requi":[7104],"g the requir":[7104]," the require":[7104],"the required":[7104],"he required ":[7104],"e required t":[7104]," required tr":[7104],"required tra":[7104],"equired tran":[7104],"quired trans":[7104],"uired transl":[7104],"ired transla":[7104],"red translat":[7104],"translation.":[7104],"#####[demo 1":[7105,7121],"####[demo 11":[7105],"###[demo 11]":[7105],"##[demo 11](":[7105],"#[demo 11](h":[7105],"[demo 11](ht":[7105],"demo 11](htt":[7105],"emo 11](http":[7105],"mo 11](http:":[7105],"o 11](http:/":[7105]," 11](http://":[7105],"11](http://w":[7105],"om/#umr7m#35":[7105],"m/#umr7m#35)":[7105],"/#umr7m#35) ":[7105],"#umr7m#35) c":[7105],"umr7m#35) ca":[7105],"mr7m#35) can":[7105],"r7m#35) can ":[7105],"7m#35) can b":[7105],"m#35) can be":[7105],"#35) can be ":[7105],"35) can be u":[7105],"5) can be us":[7105],"llowed by tr":[7105,7121],"lowed by tra":[7105,7121],"owed by tran":[7105,7121],"wed by trans":[7105,7121],"ed by transl":[7105,7121],"d by transla":[7105,7121]," by translat":[7105,7121],"by translati":[7105,7121],"y translatio":[7105,7121],"nslations ap":[7105,7121],"slations app":[7105,7121],"lations appl":[7105,7121],"ations appli":[7105,7121],"tions applie":[7105,7121],"ions applied":[7105,7121],"ons applied ":[7105,7121],"ns applied l":[7105,7121],"s applied lo":[7105,7121]," applied loc":[7105,7121],"applied loca":[7105,7121],"pplied local":[7105,7121],"plied locall":[7105,7121],"lied locally":[7105,7121],"ied locally.":[7105,7121],"ed locally.#":[7105,7121],"d locally.##":[7105,7121]," locally.###":[7105,7121],"locally.####":[7105,7121],"ocally.#####":[7105,7121],"figs 10 a, b":[7106],"igs 10 a, b,":[7106],"gs 10 a, b, ":[7106],"s 10 a, b, c":[7106]," 10 a, b, c ":[7106],"10 a, b, c a":[7106],"0 a, b, c an":[7106]," a, b, c and":[7106,7122],"a, b, c and ":[7106,7122],", b, c and d":[7106,7122]," b, c and d ":[7106,7122],"b, c and d s":[7106,7122],", c and d sh":[7106,7122]," c and d sho":[7106,7122],"c and d show":[7106,7122]," and d show ":[7106,7122],"and d show t":[7106,7122],"nd d show th":[7106,7122],"d d show the":[7106,7122]," d show the ":[7106,7122],"d show the p":[7106,7122]," show the pi":[7106,7122],"show the pil":[7106,7122],"how the pilo":[7106,7122],"ow the pilot":[7106,7122],"w the pilot ":[7106,7122]," the pilot r":[7106,7122],"the pilot ro":[7106,7122],"he pilot rot":[7106,7122],"e pilot rota":[7106,7122]," pilot rotat":[7106,7122],"pilot rotati":[7106,7122],"ilot rotatio":[7106,7122],"lot rotation":[7106,7122],"ot rotations":[7106,7122],"ons around t":[7106,7122],"ns around th":[7106,7122],"-local-axes.":[7106],"fig 11 shows":[7107],"ig 11 shows ":[7107],"g 11 shows t":[7107]," 11 shows th":[7107],"11 shows the":[7107],"1 shows the ":[7107]," shows the f":[7107,7123],"shows the fi":[7107,7123],"hows the fin":[7107,7123],"ows the fina":[7107,7123],"ws the final":[7107,7123],"s the final ":[7107,7123],"the final re":[7107,7123],"he final res":[7107,7123],"e final resu":[7107,7123],"inal result ":[7107,7123],"nal result a":[7107,7123],"al result as":[7107,7123],"l result as ":[7107,7123]," result as i":[7107,7123],"result as in":[7107,7123],"esult as in ":[7107,7123],"sult as in f":[7107,7123],"ult as in fi":[7107,7123],"lt as in fig":[7107,7123],"t as in fig ":[7107,7123]," as in fig 1":[7107,7123],"as in fig 10":[7107],"s in fig 10d":[7107]," in fig 10d ":[7107],"in fig 10d b":[7107],"n fig 10d bu":[7107]," fig 10d but":[7107],"fig 10d but ":[7107],"ig 10d but w":[7107],"g 10d but wi":[7107]," 10d but wit":[7107],"10d but with":[7107],"0d but with ":[7107],"d but with t":[7107,7123]," but with th":[7107,7123],"but with the":[7107,7123],"t with the l":[7107,7123]," with the lo":[7107,7123],"with the loc":[7107,7123],"ith the loca":[7107,7123],"th the local":[7107,7123],"h the local-":[7107,7123],"local-axes s":[7107,7123],"ocal-axes sh":[7107,7123],"cal-axes sho":[7107,7123],"al-axes show":[7107,7123],"l-axes shown":[7107,7123],"-axes shown.":[7107,7123],"axes shown. ":[7107,7123],"fig 12 shows":[7108],"ig 12 shows ":[7108],"g 12 shows t":[7108]," 12 shows th":[7108],"12 shows the":[7108],"2 shows the ":[7108]," shows the r":[7108,7124],"shows the re":[7108,7124],"hows the res":[7108,7124],"ows the resu":[7108,7124],"ws the resul":[7108,7124]," result of a":[7108,7124],"result of ap":[7108,7124],"esult of app":[7108,7124],"sult of appl":[7108,7124],"ult of apply":[7108,7124],"lt of applyi":[7108,7124],"t of applyin":[7108,7124]," of applying":[7108,7124],"of applying ":[7108,7124],"f applying t":[7108,7124],"plying the f":[7108,7124],"lying the fo":[7108,7124],"ying the fol":[7108,7124],"ing the foll":[7108,7124],"ng the follo":[7108,7124],"g the follow":[7108,7124],"following tw":[7108,7124],"ollowing two":[7108,7124],"llowing two ":[7108,7124],"lowing two t":[7108,7124],"owing two tr":[7108,7124],"wing two tra":[7108,7124],"ing two tran":[7108,7124],"ng two trans":[7108,7124],"g two transl":[7108,7124]," two transla":[7108,7124],"two translat":[7108,7124],"wo translati":[7108,7124],"o translatio":[7108,7124],"ranslations,":[7108,7124],"anslations, ":[7108,7124],"nslations, t":[7108,7124],"slations, th":[7108,7124],"lations, the":[7108,7124],"tions, the f":[7108,7124],"ions, the fi":[7108,7124],"ons, the fir":[7108,7124],"ns, the firs":[7108,7124],"s, the first":[7108,7124],"e first of d":[7108,7124]," first of di":[7108,7124],"first of dis":[7108,7124],"irst of dist":[7108,7124],"rst of dista":[7108,7124],"st of distan":[7108,7124],"t of distanc":[7108,7124]," of distance":[7108,7124],"of distance ":[7108,7124],"f distance 3":[7108,7124]," distance 3 ":[7108,7124],"distance 3 a":[7108,7124],"istance 3 al":[7108,7124],"stance 3 alo":[7108,7124],"tance 3 alon":[7108,7124],"ance 3 along":[7108,7124],"nce 3 along ":[7108,7124],"ce 3 along t":[7108,7124],"e 3 along th":[7108,7124],"along the lo":[7108,7124],"long the loc":[7108,7124],"ong the loca":[7108,7124]," the local z":[7108,7124],"the local z ":[7108,7124],"he local z a":[7108,7124],"e local z ax":[7108,7124],"cal z axis a":[7108,7124],"al z axis an":[7108,7124],"l z axis and":[7108,7124]," z axis and ":[7108,7124],"z axis and t":[7108,7124]," axis and th":[7108,7124],"axis and the":[7108,7124],"xis and the ":[7108,7124],"is and the s":[7108,7124],"s and the se":[7108,7124],"the second o":[7108,7124],"he second of":[7108,7124],"e second of ":[7108,7124]," second of d":[7108,7124],"second of di":[7108,7124],"econd of dis":[7108,7124],"cond of dist":[7108,7124],"ond of dista":[7108,7124],"nd of distan":[7108,7124],"d of distanc":[7108,7124]," the local y":[7108,7124],"the local y ":[7108,7124],"he local y a":[7108,7124],"e local y ax":[7108,7124]," local y axi":[7108,7124],"local y axis":[7108,7124],"ocal y axis.":[7108,7124],"tent.com/-fj":[7109],"ent.com/-fj-":[7109],"nt.com/-fj-x":[7109],"t.com/-fj-xf":[7109],".com/-fj-xff":[7109],"com/-fj-xfff":[7109],"om/-fj-xfffn":[7109],"m/-fj-xfffnj":[7109],"/-fj-xfffnja":[7109],"-fj-xfffnjaw":[7109],"fj-xfffnjaw/":[7109],"j-xfffnjaw/v":[7109],"-xfffnjaw/vw":[7109],"xfffnjaw/vw2":[7109],"fffnjaw/vw2q":[7109],"ffnjaw/vw2qv":[7109],"fnjaw/vw2qvx":[7109],"njaw/vw2qvxw":[7109],"jaw/vw2qvxwt":[7109],"aw/vw2qvxwty":[7109],"w/vw2qvxwty1":[7109],"/vw2qvxwty1i":[7109],"vw2qvxwty1i/":[7109],"w2qvxwty1i/a":[7109],"2qvxwty1i/aa":[7109],"qvxwty1i/aaa":[7109],"vxwty1i/aaaa":[7109],"xwty1i/aaaaa":[7109],"wty1i/aaaaaa":[7109],"ty1i/aaaaaaa":[7109],"y1i/aaaaaaaa":[7109],"1i/aaaaaaaaa":[7109],"/aaaaaaaaabs":[7109],"aaaaaaaaabs/":[7109],"aaaaaaaabs/m":[7109],"aaaaaaabs/m0":[7109],"aaaaaabs/m0v":[7109],"aaaaabs/m0vj":[7109],"aaaabs/m0vjo":[7109],"aaabs/m0vjoj":[7109],"aabs/m0vjojm":[7109],"abs/m0vjojmc":[7109],"bs/m0vjojmc3":[7109],"s/m0vjojmc3a":[7109],"/m0vjojmc3aw":[7109],"m0vjojmc3aw/":[7109],"0vjojmc3aw/s":[7109],"vjojmc3aw/s2":[7109],"jojmc3aw/s21":[7109],"ojmc3aw/s210":[7109],"jmc3aw/s210/":[7109],"mc3aw/s210/f":[7109],"c3aw/s210/fi":[7109],"3aw/s210/fig":[7109],"aw/s210/fig1":[7109],"w/s210/fig10":[7109],"/s210/fig10a":[7109],"s210/fig10a.":[7109],"210/fig10a.j":[7109],"10/fig10a.jp":[7109],"0/fig10a.jpg":[7109],"/fig10a.jpg)":[7109],"ntent.com/-z":[7110],"tent.com/-zo":[7110],"ent.com/-zoy":[7110],"nt.com/-zoya":[7110],"t.com/-zoyaq":[7110],".com/-zoyaqh":[7110],"com/-zoyaqhi":[7110],"om/-zoyaqhie":[7110],"m/-zoyaqhie-":[7110],"/-zoyaqhie-s":[7110],"-zoyaqhie-sc":[7110],"zoyaqhie-sc/":[7110],"oyaqhie-sc/v":[7110],"yaqhie-sc/vw":[7110],"aqhie-sc/vw2":[7110],"qhie-sc/vw2q":[7110],"hie-sc/vw2qv":[7110],"ie-sc/vw2qva":[7110],"e-sc/vw2qvae":[7110],"-sc/vw2qvaei":[7110],"sc/vw2qvaei3":[7110],"c/vw2qvaei3l":[7110],"/vw2qvaei3li":[7110],"vw2qvaei3li/":[7110],"w2qvaei3li/a":[7110],"2qvaei3li/aa":[7110],"qvaei3li/aaa":[7110],"vaei3li/aaaa":[7110],"aei3li/aaaaa":[7110],"ei3li/aaaaaa":[7110],"i3li/aaaaaaa":[7110],"3li/aaaaaaaa":[7110],"li/aaaaaaaaa":[7110,7120],"/aaaaaaaaafm":[7110],"aaaaaaaaafm/":[7110],"aaaaaaaafm/i":[7110],"aaaaaaafm/ii":[7110],"aaaaaafm/ii0":[7110],"aaaaafm/ii0p":[7110],"aaaafm/ii0pk":[7110],"aaafm/ii0pkt":[7110],"aafm/ii0pktj":[7110],"afm/ii0pktjl":[7110],"fm/ii0pktjli":[7110],"m/ii0pktjlir":[7110],"/ii0pktjliro":[7110],"ii0pktjliro/":[7110],"i0pktjliro/s":[7110],"0pktjliro/s2":[7110],"pktjliro/s21":[7110],"ktjliro/s210":[7110],"tjliro/s210/":[7110],"jliro/s210/f":[7110],"liro/s210/fi":[7110],"iro/s210/fig":[7110],"ro/s210/fig1":[7110],"o/s210/fig10":[7110],"/s210/fig10b":[7110],"s210/fig10b.":[7110],"210/fig10b.j":[7110],"10/fig10b.jp":[7110],"0/fig10b.jpg":[7110],"/fig10b.jpg)":[7110],"tent.com/-np":[7111],"ent.com/-np5":[7111],"nt.com/-np5-":[7111],"t.com/-np5-c":[7111],".com/-np5-ca":[7111],"com/-np5-caj":[7111],"om/-np5-cajw":[7111],"m/-np5-cajwm":[7111],"/-np5-cajwm4":[7111],"-np5-cajwm4k":[7111],"np5-cajwm4k/":[7111],"p5-cajwm4k/v":[7111],"5-cajwm4k/vw":[7111],"-cajwm4k/vw2":[7111],"cajwm4k/vw2q":[7111],"ajwm4k/vw2qv":[7111],"jwm4k/vw2qvt":[7111],"wm4k/vw2qvto":[7111],"m4k/vw2qvtod":[7111],"4k/vw2qvtod4":[7111],"k/vw2qvtod4p":[7111],"/vw2qvtod4pi":[7111],"vw2qvtod4pi/":[7111],"w2qvtod4pi/a":[7111],"2qvtod4pi/aa":[7111],"qvtod4pi/aaa":[7111],"vtod4pi/aaaa":[7111],"tod4pi/aaaaa":[7111],"od4pi/aaaaaa":[7111],"d4pi/aaaaaaa":[7111],"4pi/aaaaaaaa":[7111],"/aaaaaaaaafu":[7111],"aaaaaaaaafu/":[7111],"aaaaaaaafu/a":[7111],"aaaaaaafu/a4":[7111],"aaaaaafu/a4w":[7111],"aaaaafu/a4wo":[7111],"aaaafu/a4woa":[7111],"aaafu/a4woao":[7111],"aafu/a4woaox":[7111],"afu/a4woaoxo":[7111],"fu/a4woaoxol":[7111],"u/a4woaoxolg":[7111],"/a4woaoxolgc":[7111],"a4woaoxolgc/":[7111],"4woaoxolgc/s":[7111],"woaoxolgc/s2":[7111],"oaoxolgc/s21":[7111],"aoxolgc/s210":[7111],"oxolgc/s210/":[7111],"xolgc/s210/f":[7111],"olgc/s210/fi":[7111],"lgc/s210/fig":[7111],"gc/s210/fig1":[7111],"c/s210/fig10":[7111],"/s210/fig10c":[7111],"s210/fig10c.":[7111],"210/fig10c.j":[7111],"10/fig10c.jp":[7111],"0/fig10c.jpg":[7111],"/fig10c.jpg)":[7111],"ent.com/-hdr":[7112],"nt.com/-hdrq":[7112],"t.com/-hdrqh":[7112],".com/-hdrqhe":[7112],"com/-hdrqhek":[7112],"om/-hdrqheko":[7112],"m/-hdrqhekob":[7112],"/-hdrqhekobe":[7112],"-hdrqhekobea":[7112],"hdrqhekobea/":[7112],"drqhekobea/v":[7112],"rqhekobea/vw":[7112],"qhekobea/vw2":[7112],"hekobea/vw2q":[7112],"ekobea/vw2qv":[7112],"kobea/vw2qv2":[7112],"obea/vw2qv2u":[7112],"bea/vw2qv2u3":[7112],"ea/vw2qv2u3x":[7112],"a/vw2qv2u3x3":[7112],"/vw2qv2u3x3i":[7112],"vw2qv2u3x3i/":[7112],"w2qv2u3x3i/a":[7112],"2qv2u3x3i/aa":[7112],"qv2u3x3i/aaa":[7112],"v2u3x3i/aaaa":[7112],"2u3x3i/aaaaa":[7112],"u3x3i/aaaaaa":[7112],"3x3i/aaaaaaa":[7112],"x3i/aaaaaaaa":[7112],"3i/aaaaaaaaa":[7112],"i/aaaaaaaaac":[7112,7119,7125,7126,7127,7128,7135,7220],"/aaaaaaaaacm":[7112],"aaaaaaaaacm/":[7112],"aaaaaaaacm/d":[7112],"aaaaaaacm/dk":[7112],"aaaaaacm/dkj":[7112],"aaaaacm/dkjo":[7112],"aaaacm/dkjoy":[7112],"aaacm/dkjoyy":[7112],"aacm/dkjoyyw":[7112],"acm/dkjoyyw9":[7112],"cm/dkjoyyw91":[7112],"m/dkjoyyw91y":[7112],"/dkjoyyw91y0":[7112],"dkjoyyw91y0/":[7112],"kjoyyw91y0/s":[7112],"joyyw91y0/s2":[7112],"oyyw91y0/s21":[7112],"yyw91y0/s210":[7112],"yw91y0/s210/":[7112],"w91y0/s210/f":[7112],"91y0/s210/fi":[7112],"1y0/s210/fig":[7112],"y0/s210/fig1":[7112],"0/s210/fig10":[7112],"/s210/fig10d":[7112],"s210/fig10d.":[7112],"210/fig10d.j":[7112],"10/fig10d.jp":[7112],"0/fig10d.jpg":[7112],"/fig10d.jpg)":[7112],"       fig 1":[7113,7129],"      fig 10":[7113],"     fig 10a":[7113],"    fig 10a ":[7113],"   fig 10a  ":[7113],"  fig 10a   ":[7113]," fig 10a    ":[7113],"fig 10a     ":[7113],"ig 10a      ":[7113],"g 10a       ":[7113]," 10a        ":[7113],"10a         ":[7113],"0a          ":[7113],"        fig1":[7113,7129],"       fig10":[7113],"      fig10b":[7113],"     fig10b ":[7113],"    fig10b  ":[7113],"   fig10b   ":[7113],"  fig10b    ":[7113]," fig10b     ":[7113],"fig10b      ":[7113],"ig10b       ":[7113],"g10b        ":[7113],"10b         ":[7113],"0b          ":[7113],"     fig 10c":[7113],"    fig 10c ":[7113],"   fig 10c  ":[7113],"  fig 10c   ":[7113]," fig 10c    ":[7113],"fig 10c     ":[7113],"ig 10c      ":[7113],"g 10c       ":[7113]," 10c        ":[7113],"10c         ":[7113],"0c          ":[7113],"     fig 10d":[7113],"fig 10a rota":[7115],"ig 10a rotat":[7115],"g 10a rotate":[7115]," 10a rotate ":[7115],"10a rotate a":[7115],"0a rotate ar":[7115],"a rotate aro":[7115,7131]," rotate arou":[7115,7116,7117,7131,7132,7133],"rotate aroun":[7115,7116,7117,7131,7132,7133],"otate around":[7115,7116,7117,7131,7132,7133],"tate around ":[7115,7116,7117,7131,7132,7133],"ate around w":[7115,7116,7117],"te around wo":[7115,7116,7117],"e around wor":[7115,7116,7117]," around worl":[7115,7116,7117],"around world":[7115,7116,7117],"round world-":[7115,7116,7117],"ound world-l":[7115,7116,7117],"und world-lo":[7115,7116,7117],"nd world-loc":[7115,7116,7117],"d world-loca":[7115,7116,7117],"fig 10b rota":[7116],"ig 10b rotat":[7116],"g 10b rotate":[7116]," 10b rotate ":[7116],"10b rotate a":[7116],"0b rotate ar":[7116],"b rotate aro":[7116,7132],"fig 10c rota":[7117],"ig 10c rotat":[7117],"g 10c rotate":[7117]," 10c rotate ":[7117],"10c rotate a":[7117],"0c rotate ar":[7117],"c rotate aro":[7117,7133],"ntent.com/-p":[7119,7125],"tent.com/-p5":[7119],"ent.com/-p5v":[7119],"nt.com/-p5vz":[7119],"t.com/-p5vza":[7119],".com/-p5vzal":[7119],"com/-p5vzalr":[7119],"om/-p5vzalr4":[7119],"m/-p5vzalr4_":[7119],"/-p5vzalr4_q":[7119],"-p5vzalr4_qc":[7119],"p5vzalr4_qc/":[7119],"5vzalr4_qc/v":[7119],"vzalr4_qc/vw":[7119],"zalr4_qc/vw2":[7119],"alr4_qc/vw2q":[7119],"lr4_qc/vw2qw":[7119],"r4_qc/vw2qwb":[7119],"4_qc/vw2qwbe":[7119],"_qc/vw2qwbet":[7119],"qc/vw2qwbeti":[7119],"c/vw2qwbetiv":[7119],"/vw2qwbetivi":[7119],"vw2qwbetivi/":[7119],"w2qwbetivi/a":[7119],"2qwbetivi/aa":[7119],"qwbetivi/aaa":[7119],"wbetivi/aaaa":[7119],"betivi/aaaaa":[7119],"etivi/aaaaaa":[7119],"tivi/aaaaaaa":[7119],"ivi/aaaaaaaa":[7119],"vi/aaaaaaaaa":[7119,7126],"/aaaaaaaaaci":[7119],"aaaaaaaaaci/":[7119],"aaaaaaaaci/v":[7119],"aaaaaaaci/vj":[7119],"aaaaaaci/vjk":[7119],"aaaaaci/vjk4":[7119],"aaaaci/vjk4b":[7119],"aaaci/vjk4ba":[7119],"aaci/vjk4bam":[7119],"aci/vjk4bamv":[7119],"ci/vjk4bamvg":[7119],"i/vjk4bamvgi":[7119],"/vjk4bamvgi8":[7119],"vjk4bamvgi8/":[7119],"jk4bamvgi8/s":[7119],"k4bamvgi8/s2":[7119],"4bamvgi8/s21":[7119],"bamvgi8/s210":[7119],"amvgi8/s210/":[7119],"mvgi8/s210/f":[7119],"vgi8/s210/fi":[7119],"gi8/s210/fig":[7119],"i8/s210/fig1":[7119],"8/s210/fig11":[7119],"/s210/fig11.":[7119],"s210/fig11.j":[7119],"210/fig11.jp":[7119],"10/fig11.jpg":[7119],"0/fig11.jpg)":[7119],"/fig11.jpg)f":[7119],"fig11.jpg)fi":[7119],"ig11.jpg)fig":[7119],"g11.jpg)fig ":[7119],"11.jpg)fig 1":[7119],"1.jpg)fig 11":[7119],"tent.com/-g_":[7120],"ent.com/-g_r":[7120],"nt.com/-g_r9":[7120],"t.com/-g_r9l":[7120],".com/-g_r9l8":[7120],"com/-g_r9l8s":[7120],"om/-g_r9l8sw":[7120],"m/-g_r9l8swc":[7120],"/-g_r9l8swcj":[7120],"-g_r9l8swcj0":[7120],"g_r9l8swcj0/":[7120],"_r9l8swcj0/v":[7120],"r9l8swcj0/vw":[7120],"9l8swcj0/vw2":[7120],"l8swcj0/vw2q":[7120],"8swcj0/vw2qw":[7120],"swcj0/vw2qwx":[7120],"wcj0/vw2qwxa":[7120],"cj0/vw2qwxak":[7120],"j0/vw2qwxakf":[7120],"0/vw2qwxakfl":[7120],"/vw2qwxakfli":[7120],"vw2qwxakfli/":[7120],"w2qwxakfli/a":[7120],"2qwxakfli/aa":[7120],"qwxakfli/aaa":[7120],"wxakfli/aaaa":[7120],"xakfli/aaaaa":[7120],"akfli/aaaaaa":[7120],"kfli/aaaaaaa":[7120],"fli/aaaaaaaa":[7120],"/aaaaaaaaab8":[7120],"aaaaaaaaab8/":[7120],"aaaaaaaab8/b":[7120],"aaaaaaab8/bi":[7120],"aaaaaab8/bi9":[7120],"aaaaab8/bi9z":[7120],"aaaab8/bi9zy":[7120],"aaab8/bi9zyi":[7120],"aab8/bi9zyie":[7120],"ab8/bi9zyie3":[7120],"b8/bi9zyie33":[7120],"8/bi9zyie33u":[7120],"/bi9zyie33uu":[7120],"bi9zyie33uu/":[7120],"i9zyie33uu/s":[7120],"9zyie33uu/s2":[7120],"zyie33uu/s21":[7120],"yie33uu/s210":[7120],"ie33uu/s210/":[7120],"e33uu/s210/f":[7120],"33uu/s210/fi":[7120],"3uu/s210/fig":[7120],"uu/s210/fig1":[7120],"u/s210/fig12":[7120],"/s210/fig12.":[7120],"s210/fig12.j":[7120],"210/fig12.jp":[7120],"10/fig12.jpg":[7120],"0/fig12.jpg)":[7120],"/fig12.jpg)f":[7120],"fig12.jpg)fi":[7120],"ig12.jpg)fig":[7120],"g12.jpg)fig ":[7120],"12.jpg)fig 1":[7120],"2.jpg)fig 12":[7120],"####[demo 12":[7121],"###[demo 12]":[7121],"##[demo 12](":[7121],"#[demo 12](h":[7121],"[demo 12](ht":[7121],"demo 12](htt":[7121],"emo 12](http":[7121],"mo 12](http:":[7121],"o 12](http:/":[7121]," 12](http://":[7121],"12](http://w":[7121],"om/#umr7m#37":[7121],"m/#umr7m#37)":[7121],"/#umr7m#37) ":[7121],"#umr7m#37) c":[7121],"umr7m#37) ca":[7121],"mr7m#37) can":[7121],"r7m#37) can ":[7121],"7m#37) can b":[7121],"m#37) can be":[7121],"#37) can be ":[7121],"37) can be u":[7121],"7) can be us":[7121],"figs 13 a, b":[7122],"igs 13 a, b,":[7122],"gs 13 a, b, ":[7122],"s 13 a, b, c":[7122]," 13 a, b, c ":[7122],"13 a, b, c a":[7122],"3 a, b, c an":[7122]," local-axes.":[7122],"fig 14 shows":[7123],"ig 14 shows ":[7123],"g 14 shows t":[7123]," 14 shows th":[7123],"14 shows the":[7123],"4 shows the ":[7123],"as in fig 13":[7123],"s in fig 13d":[7123]," in fig 13d ":[7123],"in fig 13d b":[7123],"n fig 13d bu":[7123]," fig 13d but":[7123],"fig 13d but ":[7123],"ig 13d but w":[7123],"g 13d but wi":[7123]," 13d but wit":[7123],"13d but with":[7123],"3d but with ":[7123],"fig 15 shows":[7124],"ig 15 shows ":[7124],"g 15 shows t":[7124]," 15 shows th":[7124],"15 shows the":[7124],"5 shows the ":[7124],"tent.com/-px":[7125],"ent.com/-pxn":[7125],"nt.com/-pxng":[7125],"t.com/-pxngv":[7125],".com/-pxngvp":[7125],"com/-pxngvpf":[7125],"om/-pxngvpfx":[7125],"m/-pxngvpfxb":[7125],"/-pxngvpfxbr":[7125],"-pxngvpfxbre":[7125],"pxngvpfxbre/":[7125],"xngvpfxbre/v":[7125],"ngvpfxbre/vw":[7125],"gvpfxbre/vw2":[7125],"vpfxbre/vw2q":[7125],"pfxbre/vw2qw":[7125],"fxbre/vw2qw0":[7125],"xbre/vw2qw09":[7125],"bre/vw2qw09l":[7125],"re/vw2qw09li":[7125],"e/vw2qw09lio":[7125],"/vw2qw09lioi":[7125],"vw2qw09lioi/":[7125],"w2qw09lioi/a":[7125],"2qw09lioi/aa":[7125],"qw09lioi/aaa":[7125],"w09lioi/aaaa":[7125],"09lioi/aaaaa":[7125],"9lioi/aaaaaa":[7125],"lioi/aaaaaaa":[7125],"ioi/aaaaaaaa":[7125],"/aaaaaaaaaca":[7125],"aaaaaaaaaca/":[7125],"aaaaaaaaca/r":[7125],"aaaaaaaca/rx":[7125],"aaaaaaca/rxt":[7125],"aaaaaca/rxta":[7125],"aaaaca/rxta7":[7125],"aaaca/rxta7m":[7125],"aaca/rxta7mu":[7125],"aca/rxta7mur":[7125],"ca/rxta7murq":[7125],"a/rxta7murqq":[7125],"/rxta7murqqs":[7125],"rxta7murqqs/":[7125],"xta7murqqs/s":[7125],"ta7murqqs/s2":[7125],"a7murqqs/s21":[7125],"7murqqs/s210":[7125],"murqqs/s210/":[7125],"urqqs/s210/f":[7125],"rqqs/s210/fi":[7125],"qqs/s210/fig":[7125],"qs/s210/fig1":[7125],"s/s210/fig13":[7125],"/s210/fig13a":[7125],"s210/fig13a.":[7125],"210/fig13a.j":[7125],"10/fig13a.jp":[7125],"0/fig13a.jpg":[7125],"/fig13a.jpg)":[7125],"tent.com/-9y":[7126],"ent.com/-9yp":[7126],"nt.com/-9ypx":[7126],"t.com/-9ypxt":[7126],".com/-9ypxti":[7126],"com/-9ypxtid":[7126],"om/-9ypxtidq":[7126],"m/-9ypxtidq9":[7126],"/-9ypxtidq9k":[7126],"-9ypxtidq9k4":[7126],"9ypxtidq9k4/":[7126],"ypxtidq9k4/v":[7126],"pxtidq9k4/vw":[7126],"xtidq9k4/vw2":[7126],"tidq9k4/vw2q":[7126],"idq9k4/vw2qx":[7126],"dq9k4/vw2qxc":[7126],"q9k4/vw2qxcr":[7126],"9k4/vw2qxcr1":[7126],"k4/vw2qxcr1-":[7126],"4/vw2qxcr1-v":[7126],"/vw2qxcr1-vi":[7126],"vw2qxcr1-vi/":[7126],"w2qxcr1-vi/a":[7126],"2qxcr1-vi/aa":[7126],"qxcr1-vi/aaa":[7126],"xcr1-vi/aaaa":[7126],"cr1-vi/aaaaa":[7126],"r1-vi/aaaaaa":[7126],"1-vi/aaaaaaa":[7126],"-vi/aaaaaaaa":[7126],"/aaaaaaaaace":[7126],"aaaaaaaaace/":[7126],"aaaaaaaace/q":[7126],"aaaaaaace/qv":[7126],"aaaaaace/qvt":[7126],"aaaaace/qvto":[7126],"aaaace/qvtoy":[7126],"aaace/qvtoy4":[7126],"aace/qvtoy4p":[7126],"ace/qvtoy4pp":[7126],"ce/qvtoy4ppr":[7126],"e/qvtoy4pprc":[7126],"/qvtoy4pprc0":[7126],"qvtoy4pprc0/":[7126],"vtoy4pprc0/s":[7126],"toy4pprc0/s2":[7126],"oy4pprc0/s21":[7126],"y4pprc0/s210":[7126],"4pprc0/s210/":[7126],"pprc0/s210/f":[7126],"prc0/s210/fi":[7126],"rc0/s210/fig":[7126],"c0/s210/fig1":[7126],"0/s210/fig13":[7126],"/s210/fig13b":[7126],"s210/fig13b.":[7126],"210/fig13b.j":[7126],"10/fig13b.jp":[7126],"0/fig13b.jpg":[7126],"/fig13b.jpg)":[7126],"ntent.com/-0":[7127],"tent.com/-0m":[7127],"ent.com/-0mu":[7127],"nt.com/-0muy":[7127],"t.com/-0muyf":[7127],".com/-0muyff":[7127],"com/-0muyff7":[7127],"om/-0muyff7w":[7127],"m/-0muyff7wz":[7127],"/-0muyff7wzf":[7127],"-0muyff7wzfw":[7127],"0muyff7wzfw/":[7127],"muyff7wzfw/v":[7127],"uyff7wzfw/vw":[7127],"yff7wzfw/vw2":[7127],"ff7wzfw/vw2q":[7127],"f7wzfw/vw2qx":[7127],"7wzfw/vw2qxq":[7127],"wzfw/vw2qxqb":[7127],"zfw/vw2qxqb9":[7127],"fw/vw2qxqb9o":[7127],"w/vw2qxqb9ow":[7127],"/vw2qxqb9owi":[7127],"vw2qxqb9owi/":[7127],"w2qxqb9owi/a":[7127],"2qxqb9owi/aa":[7127],"qxqb9owi/aaa":[7127],"xqb9owi/aaaa":[7127],"qb9owi/aaaaa":[7127],"b9owi/aaaaaa":[7127],"9owi/aaaaaaa":[7127],"owi/aaaaaaaa":[7127],"/aaaaaaaaaco":[7127],"aaaaaaaaaco/":[7127],"aaaaaaaaco/r":[7127],"aaaaaaaco/rk":[7127],"aaaaaaco/rku":[7127],"aaaaaco/rkup":[7127],"aaaaco/rkupk":[7127],"aaaco/rkupkt":[7127],"aaco/rkupktx":[7127],"aco/rkupktxj":[7127],"co/rkupktxjh":[7127],"o/rkupktxjh9":[7127],"/rkupktxjh9k":[7127],"rkupktxjh9k/":[7127],"kupktxjh9k/s":[7127],"upktxjh9k/s2":[7127],"pktxjh9k/s21":[7127],"ktxjh9k/s210":[7127],"txjh9k/s210/":[7127],"xjh9k/s210/f":[7127],"jh9k/s210/fi":[7127],"h9k/s210/fig":[7127],"9k/s210/fig1":[7127],"k/s210/fig13":[7127,7128],"/s210/fig13c":[7127],"s210/fig13c.":[7127],"210/fig13c.j":[7127],"10/fig13c.jp":[7127],"0/fig13c.jpg":[7127],"/fig13c.jpg)":[7127],"ntent.com/-u":[7128],"tent.com/-uw":[7128],"ent.com/-uwi":[7128],"nt.com/-uwiw":[7128],"t.com/-uwiwp":[7128],".com/-uwiwpj":[7128],"com/-uwiwpjp":[7128],"om/-uwiwpjpc":[7128],"m/-uwiwpjpcd":[7128],"/-uwiwpjpcdc":[7128],"-uwiwpjpcdcg":[7128],"uwiwpjpcdcg/":[7128],"wiwpjpcdcg/v":[7128],"iwpjpcdcg/vw":[7128],"wpjpcdcg/vw2":[7128],"pjpcdcg/vw2q":[7128],"jpcdcg/vw2qx":[7128],"pcdcg/vw2qxv":[7128],"cdcg/vw2qxv-":[7128],"dcg/vw2qxv--":[7128],"cg/vw2qxv--o":[7128],"g/vw2qxv--ou":[7128],"/vw2qxv--oui":[7128],"vw2qxv--oui/":[7128],"w2qxv--oui/a":[7128],"2qxv--oui/aa":[7128],"qxv--oui/aaa":[7128],"xv--oui/aaaa":[7128],"v--oui/aaaaa":[7128],"--oui/aaaaaa":[7128],"-oui/aaaaaaa":[7128],"oui/aaaaaaaa":[7128],"ui/aaaaaaaaa":[7128],"/aaaaaaaaacg":[7128],"aaaaaaaaacg/":[7128],"aaaaaaaacg/9":[7128],"aaaaaaacg/91":[7128],"aaaaaacg/91s":[7128],"aaaaacg/91sz":[7128],"aaaacg/91sz-":[7128],"aaacg/91sz-x":[7128],"aacg/91sz-x0":[7128],"acg/91sz-x0f":[7128],"cg/91sz-x0fg":[7128],"g/91sz-x0fgt":[7128],"/91sz-x0fgtk":[7128],"91sz-x0fgtk/":[7128],"1sz-x0fgtk/s":[7128],"sz-x0fgtk/s2":[7128],"z-x0fgtk/s21":[7128],"-x0fgtk/s210":[7128],"x0fgtk/s210/":[7128],"0fgtk/s210/f":[7128],"fgtk/s210/fi":[7128],"gtk/s210/fig":[7128],"tk/s210/fig1":[7128],"/s210/fig13d":[7128],"s210/fig13d.":[7128],"210/fig13d.j":[7128],"10/fig13d.jp":[7128],"0/fig13d.jpg":[7128],"/fig13d.jpg)":[7128],"      fig 13":[7129],"     fig 13a":[7129],"    fig 13a ":[7129],"   fig 13a  ":[7129],"  fig 13a   ":[7129]," fig 13a    ":[7129],"fig 13a     ":[7129],"ig 13a      ":[7129],"g 13a       ":[7129]," 13a        ":[7129],"13a         ":[7129],"3a          ":[7129],"       fig13":[7129],"      fig13b":[7129],"     fig13b ":[7129],"    fig13b  ":[7129],"   fig13b   ":[7129],"  fig13b    ":[7129]," fig13b     ":[7129],"fig13b      ":[7129],"ig13b       ":[7129],"g13b        ":[7129],"13b         ":[7129],"3b          ":[7129],"     fig 13c":[7129],"    fig 13c ":[7129],"   fig 13c  ":[7129],"  fig 13c   ":[7129]," fig 13c    ":[7129],"fig 13c     ":[7129],"ig 13c      ":[7129],"g 13c       ":[7129]," 13c        ":[7129],"13c         ":[7129],"3c          ":[7129],"     fig 13d":[7129],"fig 13a rota":[7131],"ig 13a rotat":[7131],"g 13a rotate":[7131]," 13a rotate ":[7131],"13a rotate a":[7131],"3a rotate ar":[7131],"ate around l":[7131,7132,7133],"te around lo":[7131,7132,7133],"e around loc":[7131,7132,7133],"round local-":[7131,7132,7133],"ound local-a":[7131,7132,7133],"und local-ax":[7131,7132,7133],"nd local-axi":[7131,7132,7133],"d local-axis":[7131,7132,7133],"fig 13b rota":[7132],"ig 13b rotat":[7132],"g 13b rotate":[7132]," 13b rotate ":[7132],"13b rotate a":[7132],"3b rotate ar":[7132],"fig 13c rota":[7133],"ig 13c rotat":[7133],"g 13c rotate":[7133]," 13c rotate ":[7133],"13c rotate a":[7133],"3c rotate ar":[7133],"ntent.com/-x":[7135],"tent.com/-x9":[7135],"ent.com/-x9v":[7135],"nt.com/-x9vy":[7135],"t.com/-x9vyv":[7135],".com/-x9vyvw":[7135],"com/-x9vyvwv":[7135],"om/-x9vyvwve":[7135],"m/-x9vyvwveh":[7135],"/-x9vyvwvehw":[7135],"-x9vyvwvehwi":[7135],"x9vyvwvehwi/":[7135],"9vyvwvehwi/v":[7135],"vyvwvehwi/vw":[7135],"yvwvehwi/vw2":[7135],"vwvehwi/vw2q":[7135],"wvehwi/vw2qy":[7135],"vehwi/vw2qyl":[7135],"ehwi/vw2qyll":[7135],"hwi/vw2qyll6":[7135],"wi/vw2qyll6z":[7135],"i/vw2qyll6zw":[7135],"/vw2qyll6zwi":[7135],"vw2qyll6zwi/":[7135],"w2qyll6zwi/a":[7135],"2qyll6zwi/aa":[7135],"qyll6zwi/aaa":[7135],"yll6zwi/aaaa":[7135],"ll6zwi/aaaaa":[7135],"l6zwi/aaaaaa":[7135],"6zwi/aaaaaaa":[7135],"zwi/aaaaaaaa":[7135],"/aaaaaaaaacs":[7135],"aaaaaaaaacs/":[7135],"aaaaaaaacs/7":[7135],"aaaaaaacs/7d":[7135],"aaaaaacs/7dc":[7135],"aaaaacs/7dcg":[7135],"aaaacs/7dcgp":[7135],"aaacs/7dcgpu":[7135],"aacs/7dcgpun":[7135],"acs/7dcgpunp":[7135],"cs/7dcgpunp_":[7135],"s/7dcgpunp_b":[7135],"/7dcgpunp_bq":[7135],"7dcgpunp_bq/":[7135],"dcgpunp_bq/s":[7135],"cgpunp_bq/s2":[7135],"gpunp_bq/s21":[7135],"punp_bq/s210":[7135],"unp_bq/s210/":[7135],"np_bq/s210/f":[7135],"p_bq/s210/fi":[7135],"_bq/s210/fig":[7135],"bq/s210/fig1":[7135],"q/s210/fig14":[7135],"/s210/fig14.":[7135],"s210/fig14.j":[7135],"210/fig14.jp":[7135],"10/fig14.jpg":[7135],"0/fig14.jpg)":[7135],"/fig14.jpg)f":[7135],"fig14.jpg)fi":[7135],"ig14.jpg)fig":[7135],"g14.jpg)fig ":[7135],"14.jpg)fig 1":[7135],"4.jpg)fig 14":[7135],"_edition in ":[7136],"in progress_":[7136],"*(to be expa":[7137],"(to be expan":[7137],"to be expand":[7137],"o be expande":[7137]," be expanded":[7137],"be expanded)":[7137],"e expanded)*":[7137],"next in the ":[7138],"ext in the p":[7138],"xt in the pl":[7138],"t in the pla":[7138],"in the playp":[7138,7143],"n the plaype":[7138,7143],"he playpen s":[7138,7143],"e playpen se":[7138,7143],"pen series -":[7138],"en series - ":[7138],"n series - [":[7138]," series - [*":[7138],"series - [**":[7138],"eries - [**0":[7138],"ries - [**02":[7138],"ies - [**02-":[7138],"es - [**02-b":[7138],"s - [**02-ba":[7138]," - [**02-bas":[7138],"- [**02-basi":[7138],"we saw that ":[7139],"e saw that w":[7139]," saw that we":[7139],"saw that we ":[7139],"aw that we n":[7139],"w that we ne":[7139]," that we nee":[7139],"that we need":[7139],"hat we neede":[7139],"at we needed":[7139],"t we needed ":[7139]," we needed a":[7139],"we needed a ":[7139],"e needed a b":[7139]," needed a bi":[7139],"needed a bit":[7139],"eeded a bit ":[7139],"eded a bit o":[7139],"ded a bit of":[7139],"ed a bit of ":[7139],"d a bit of '":[7139]," a bit of 'p":[7139],"a bit of 'po":[7139]," bit of 'pos":[7139],"bit of 'posi":[7139],"it of 'posit":[7139],"t of 'positi":[7139]," of 'positio":[7139],"of 'position":[7139],"f 'positioni":[7139]," 'positionin":[7139],"'positioning":[7139],"positioning'":[7139],"ositioning' ":[7139],"sitioning' t":[7139],"itioning' to":[7139],"tioning' to ":[7139],"ioning' to k":[7139],"oning' to ke":[7139],"ning' to kee":[7139],"ing' to keep":[7139],"ng' to keep ":[7139],"g' to keep o":[7139],"' to keep ou":[7139]," to keep our":[7139],"to keep our ":[7139],"o keep our b":[7139]," keep our ba":[7139],"keep our bas":[7139],"eep our basi":[7139],"ep our basic":[7139],"p our basic ":[7139],"ments from s":[7139],"ents from si":[7139],"nts from sit":[7139],"ts from sitt":[7139],"s from sitti":[7139]," from sittin":[7139],"from sitting":[7139],"rom sitting ":[7139],"om sitting a":[7139],"m sitting at":[7139]," sitting ato":[7139],"sitting atop":[7139],"itting atop ":[7139],"tting atop o":[7139],"ting atop on":[7139],"one another ":[7139],"ne another i":[7139],"e another in":[7139]," another in ":[7139],"another in t":[7139],"nother in th":[7139],"other in the":[7139],"her in the s":[7139],"er in the sc":[7139],"r in the sce":[7139]," the scene. ":[7139],"the scene. n":[7139],"he scene. no":[7139],"e scene. now":[7139]," scene. now ":[7139],"scene. now l":[7139],"cene. now le":[7139],"ene. now let":[7139],"ne. now let'":[7139],"e. now let's":[7139],". now let's ":[7139]," now let's l":[7139],"now let's le":[7139],"ow let's lea":[7139],"w let's lear":[7139]," let's learn":[7139],"let's learn ":[7139],"et's learn m":[7139],"t's learn mo":[7139],"'s learn mor":[7139],"s learn more":[7139],"ut positions":[7139],"positions (s":[7139],"ositions (so":[7139],"sitions (som":[7139],"itions (some":[7139],"tions (somet":[7139],"ions (someti":[7139],"ons (sometim":[7139],"ns (sometime":[7139],"s (sometimes":[7139],"mes called t":[7139],"es called tr":[7139],"s called tra":[7139],"ranslations)":[7139],"anslations) ":[7139],"nslations) a":[7139],"slations) as":[7139],"lations) as ":[7139],"ations) as w":[7139],"tions) as we":[7139],"ions) as wel":[7139],"ons) as well":[7139],"ns) as well ":[7139],"s) as well a":[7139],") as well as":[7139],"as well as a":[7139],"s well as ab":[7139]," well as abo":[7139],"well as abou":[7139],"ell as about":[7139],"ll as about ":[7139],"l as about r":[7139]," as about ro":[7139],"as about rot":[7139],"s about rota":[7139],"ut rotation ":[7139],"t rotation a":[7139],"nd scaling. ":[7139],"d scaling. r":[7139]," scaling. re":[7139],"scaling. rea":[7139],"caling. read":[7139],"aling. ready":[7139],"ling. ready?":[7139],"ing. ready? ":[7139],"ng. ready? s":[7139],"g. ready? su":[7139],". ready? sur":[7139]," ready? sure":[7139],"ready? sure ":[7139],"eady? sure y":[7139],"ady? sure yo":[7139],"dy? sure you":[7139],"y? sure you ":[7139],"? sure you a":[7139]," sure you ar":[7139],"sure you are":[7139],"ure you are!":[7139],"re you are! ":[7139],"e you are! [":[7139]," you are! [*":[7139],"you are! [**":[7139],"ou are! [**c":[7139],"u are! [**cl":[7139]," are! [**cli":[7139],"are! [**clic":[7139],"re! [**click":[7139],"e! [**click ":[7139],"! [**click h":[7139],"*click here ":[7139],"click here f":[7139],"lick here fo":[7139],"ick here for":[7139],"ck here for ":[7139],"k here for t":[7139]," here for th":[7139],"here for the":[7139],"ere for the ":[7139],"re for the n":[7139],"e for the ne":[7139]," for the nex":[7139],"for the next":[7139],"or the next ":[7139],"r the next t":[7139],"t tutorial.*":[7139]," tutorial.**":[7139],"tutorial.**]":[7139],"utorial.**](":[7139],"torial.**](h":[7139],"orial.**](ht":[7139],"rial.**](htt":[7139],"ial.**](http":[7139],"al.**](http:":[7139],"l.**](http:/":[7139],".**](http://":[7139],"r scene is n":[7140]," scene is no":[7140],"scene is now":[7140],"cene is now ":[7140],"ene is now b":[7140],"ne is now be":[7140],"e is now bec":[7140]," is now beco":[7140],"is now becom":[7140],"s now becomi":[7140],"namic, and a":[7140],"amic, and al":[7140],"mic, and all":[7140],"ic, and all ":[7140],"c, and all y":[7140],", and all yo":[7140]," and all you":[7140],"and all your":[7140],"nd all your ":[7140],"d all your m":[7140],"our meshes c":[7140],"ur meshes ca":[7140],"r meshes can":[7140],"meshes can m":[7140],"eshes can mo":[7140],"shes can mov":[7140],"hes can move":[7140],"es can move ":[7140],"s can move i":[7140]," can move in":[7140],"can move in ":[7140],"an move in a":[7140],"n move in al":[7140]," move in all":[7140],"move in all ":[7140],"ove in all d":[7140],"ve in all di":[7140],"e in all dir":[7140]," in all dire":[7140],"in all direc":[7140],"n all direct":[7140]," all directi":[7140],"all directio":[7140],"ll direction":[7140],"l directions":[7140]," directions!":[7140],"directions! ":[7140],"irections! f":[7140],"rections! fe":[7140],"ections! fee":[7140],"ctions! feel":[7140],"tions! feel ":[7140],"ions! feel f":[7140],"ons! feel fr":[7140],"ns! feel fre":[7140],"s! feel free":[7140],"! feel free ":[7140],"l free to tr":[7140]," free to try":[7140],"free to try ":[7140],"ree to try d":[7140],"ee to try di":[7140],"e to try dif":[7140]," to try diff":[7140],"to try diffe":[7140],"o try differ":[7140]," try differe":[7140],"try differen":[7140],"ry different":[7140],"different an":[7140],"ifferent ani":[7140],"fferent anim":[7140],"ferent anima":[7140],"erent animat":[7140],"t animations":[7140],"mations on d":[7140],"ations on di":[7140],"tions on dif":[7140],"ions on diff":[7140],"ons on diffe":[7140],"ns on differ":[7140],"s on differe":[7140]," different o":[7140],"different ob":[7140],"ifferent obj":[7140],"fferent obje":[7140],"ferent objec":[7140],"erent object":[7140],"rent objects":[7140],"ent objects,":[7140],"nt objects, ":[7140],"t objects, t":[7140]," objects, th":[7140],"objects, the":[7140],"bjects, then":[7140],"jects, then ":[7140],"ects, then c":[7140],"cts, then co":[7140],"ts, then com":[7140],"s, then come":[7140],", then come ":[7140]," come back a":[7140],"come back an":[7140],"ome back and":[7140],"me back and ":[7140],"e back and l":[7140]," back and le":[7140],"back and lea":[7140],"ack and lear":[7140],"ck and learn":[7140],"k and learn ":[7140]," and learn a":[7140],"and learn al":[7140],"nd learn all":[7140],"d learn all ":[7140]," all about [":[7140],"all about [*":[7140],"ll about [**":[7140],"l about [**s":[7140]," about [**sp":[7140],"about [**spr":[7140],"bout [**spri":[7140],"out [**sprit":[7140],"ut [**sprite":[7140],"t [**sprites":[7140]," [**sprites*":[7140],"[**sprites**":[7140],"**sprites**]":[7140],"*sprites**](":[7140],"sprites**](h":[7140],"prites**](ht":[7140],"rites**](htt":[7140],"ites**](http":[7140],"tes**](http:":[7140],"hp?p=22082).":[7140],"stay with us":[7141],"tay with us,":[7141],"ay with us, ":[7141],"y with us, b":[7141]," with us, be":[7141],"with us, bec":[7141],"ith us, beca":[7141],"th us, becau":[7141],"h us, becaus":[7141]," us, because":[7141],"us, because ":[7141],"s, because w":[7141],"use we are g":[7141],"se we are go":[7141],"g to learn a":[7141]," to learn a ":[7141],"to learn a n":[7141],"o learn a ne":[7141]," learn a new":[7141],"learn a new,":[7141],"earn a new, ":[7141],"arn a new, v":[7141],"rn a new, ve":[7141],"n a new, ver":[7141]," a new, very":[7141],"a new, very ":[7141]," new, very i":[7141],"new, very in":[7141],"ew, very int":[7141],"w, very inte":[7141],", very inter":[7141]," very intere":[7141],"very interes":[7141],"ery interest":[7141],"ry interesti":[7141],"y interestin":[7141],"teresting th":[7141],"eresting thi":[7141],"resting thin":[7141],"esting thing":[7141],"sting thing:":[7141],"ting thing: ":[7141],"ing thing: [":[7141],"ng thing: [c":[7141],"g thing: [co":[7141]," thing: [con":[7141],"thing: [conf":[7141],"hing: [confi":[7141],"ing: [config":[7141],"ng: [configu":[7141],"g: [configur":[7141],": [configuri":[7141]," [configurin":[7141],"[configuring":[7141],"configuring ":[7141],"onfiguring y":[7141],"nfiguring yo":[7141],"figuring you":[7141],"iguring your":[7141],"guring your ":[7141],"uring your e":[7141],"ring your en":[7141],"ing your env":[7141],"ng your envi":[7141],"g your envir":[7141]," your enviro":[7141],"your environ":[7141],"hp?p=22131).":[7141],"ylonjs/doc/3":[7142],"lonjs/doc/3d":[7142],"onjs/doc/3da":[7142],"njs/doc/3dan":[7142],"js/doc/3dana":[7142],"s/doc/3danal":[7142],"/doc/3danaly":[7142],"doc/3danalys":[7142],"oc/3danalyse":[7142],"c/3danalyser":[7142],"/3danalyser.":[7142],"3danalyser.p":[7142],"danalyser.pn":[7142],"analyser.png":[7142],"nalyser.png)":[7142],"you are fina":[7143],"ou are final":[7143],"u are finall":[7143]," are finally":[7143],"are finally ":[7143],"re finally a":[7143],"e finally at":[7143]," finally at ":[7143],"finally at t":[7143],"inally at th":[7143],"nally at the":[7143],"ally at the ":[7143],"lly at the b":[7143],"ly at the bo":[7143],"om of this t":[7143],"m of this tu":[7143],"ial.&nbsp; i":[7143],"al.&nbsp; it":[7143],"; it was a l":[7143]," it was a lo":[7143],"it was a lon":[7143],"t was a long":[7143]," was a long,":[7143],"was a long, ":[7143],"as a long, b":[7143],"s a long, bu":[7143]," a long, but":[7143],"a long, but ":[7143]," long, but f":[7143],"long, but fu":[7143],"ong, but fun":[7143],"ng, but fun ":[7143],"g, but fun t":[7143],", but fun tr":[7143]," but fun tri":[7143],"but fun trip":[7143],"ut fun trip,":[7143],"t fun trip, ":[7143]," fun trip, w":[7143],"fun trip, wa":[7143],"un trip, was":[7143],"n trip, wasn":[7143]," trip, wasn'":[7143],"trip, wasn't":[7143],"rip, wasn't ":[7143],"ip, wasn't i":[7143],"p, wasn't it":[7143],", wasn't it?":[7143]," wasn't it?&":[7143],"wasn't it?&n":[7143],"asn't it?&nb":[7143],"?&nbsp; thin":[7143],"&nbsp; thing":[7143],"nbsp; things":[7143],"bsp; things ":[7143],"sp; things w":[7143],"p; things wi":[7143],"; things wil":[7143]," things will":[7143],"things will ":[7143],"hings will b":[7143],"ings will be":[7143],"ngs will be ":[7143],"gs will be e":[7143],"s will be ea":[7143]," will be eas":[7143],"will be easy":[7143],"ill be easy ":[7143],"ll be easy f":[7143],"l be easy fr":[7143]," be easy fro":[7143],"be easy from":[7143],"e easy from ":[7143]," easy from n":[7143],"easy from no":[7143],"asy from now":[7143],"sy from now ":[7143],"y from now o":[7143]," from now on":[7143],"from now on.":[7143],"rom now on.&":[7143],"om now on.&n":[7143],"m now on.&nb":[7143]," now on.&nbs":[7143],"now on.&nbsp":[7143],"ow on.&nbsp;":[7143],"w on.&nbsp; ":[7143]," on.&nbsp; t":[7143],"nbsp; the ne":[7143],"bsp; the nex":[7143],"sp; the next":[7143],"p; the next ":[7143],"; the next t":[7143],"t tutorial i":[7143],"utorial in t":[7143],"torial in th":[7143],"orial in the":[7143],"rial in the ":[7143],"ial in the p":[7143],"al in the pl":[7143],"l in the pla":[7143]," tutorials..":[7143],"tutorials...":[7143],"utorials... ":[7143],"torials... i":[7143],"orials... is":[7143],"rials... is ":[7143],"ials... is a":[7143],"als... is ab":[7143],"ls... is abo":[7143],"s... is abou":[7143],". is about b":[7143]," is about bu":[7143],"is about bui":[7143],"s about buil":[7143]," about build":[7143],"about buildi":[7143],"bout buildin":[7143],"out building":[7143],"ut building ":[7143],"t building a":[7143],"building a v":[7143],"uilding a ve":[7143],"ilding a ver":[7143],"lding a very":[7143],"ding a very ":[7143],"ing a very b":[7143],"ng a very ba":[7143],"g a very bas":[7143]," a very basi":[7143],"a very basic":[7143]," very basic ":[7143],"very basic s":[7143],"ery basic sc":[7143],"ry basic sce":[7143],"y basic scen":[7143],"basic scene.":[7143],"asic scene.&":[7143],"sic scene.&n":[7143],"ic scene.&nb":[7143],"c scene.&nbs":[7143],"ne.&nbsp; i ":[7143],"e.&nbsp; i t":[7143],".&nbsp; i th":[7143],"&nbsp; i thi":[7143],"nbsp; i thin":[7143],"bsp; i think":[7143],"sp; i think ":[7143],"p; i think i":[7143],"; i think it":[7143]," i think it ":[7143],"i think it w":[7143]," think it wi":[7143],"think it wil":[7143],"hink it will":[7143],"ink it will ":[7143],"nk it will b":[7143],"k it will be":[7143],"it will be q":[7143],"t will be qu":[7143]," will be qui":[7143],"will be quit":[7143],"ill be quite":[7143],"ll be quite ":[7143],"l be quite e":[7143]," be quite ea":[7143],"be quite eas":[7143],"e quite easy":[7143],"quite easy a":[7143],"uite easy an":[7143],"ite easy and":[7143],"te easy and ":[7143],"e easy and f":[7143]," easy and fa":[7143],"easy and fas":[7143],"asy and fast":[7143],"sy and fast,":[7143],"y and fast, ":[7143]," and fast, f":[7143],"and fast, fo":[7143],"nd fast, for":[7143],"d fast, for ":[7143]," fast, for y":[7143],"fast, for yo":[7143],"ast, for you":[7143],"st, for you.":[7143],"t, for you.&":[7143],", for you.&n":[7143]," for you.&nb":[7143],"for you.&nbs":[7143],"or you.&nbsp":[7143],"r you.&nbsp;":[7143],"you.&nbsp; y":[7143],"ou.&nbsp; yo":[7143],"u.&nbsp; you":[7143],"; you have g":[7143]," you have gr":[7143],"you have gra":[7143],"ou have grad":[7143],"u have gradu":[7143]," have gradua":[7143],"have graduat":[7143],"ave graduate":[7143],"ve graduated":[7143],"e graduated ":[7143]," graduated f":[7143],"graduated fr":[7143],"raduated fro":[7143],"aduated from":[7143],"duated from ":[7143],"uated from t":[7143],"ated from tu":[7143],"ted from tut":[7143],"ed from tuto":[7143],"d from tutor":[7143]," from tutori":[7143],"from tutoria":[7143],"rom tutorial":[7143],"om tutorial ":[7143],"m tutorial #":[7143]," tutorial #0":[7143],"tutorial #0.":[7143],"utorial #0..":[7143],"torial #0...":[7143],"orial #0... ":[7143],"rial #0... t":[7143],"ial #0... th":[7143],"al #0... thi":[7143],"l #0... this":[7143]," #0... this ":[7143],"#0... this t":[7143],"0... this tu":[7143],"... this tut":[7143],".. this tuto":[7143],". this tutor":[7143],"p; you are a":[7143],"; you are al":[7143]," you are alr":[7143],"you are alre":[7143],"ou are alrea":[7143],"u are alread":[7143]," are already":[7143],"are already ":[7143],"re already a":[7143],"e already a ":[7143]," already a b":[7143],"already a ba":[7143],"lready a bab":[7143],"ready a baby":[7143],"eady a babyl":[7143],"ady a babylo":[7143],"dy a babylon":[7143],"y a babylon.":[7143],"n.js expert.":[7143],"matefrom\": 0":[7144],"atefrom\": 0,":[7144],"nimateto\": 2":[7145],"imateto\": 25":[7145],"mateto\": 250":[7145],"ateto\": 250,":[7145],"mateloop\": t":[7146],"ateloop\": tr":[7146],"teloop\": tru":[7146],"eloop\": true":[7146],"ame\": \"cube2":[7149],"me\": \"cube2\"":[7149],"e\": \"cube2\",":[7149],"\"id\": \"cube2":[7150],"id\": \"cube2\"":[7150],"d\": \"cube2\",":[7150],"osition\": [1":[7153],"sition\": [10":[7153],"ition\": [10,":[7153],"tion\": [10, ":[7153],"ion\": [10, 0":[7153],"on\": [10, 0,":[7153],"n\": [10, 0, ":[7153],"\": [10, 0, 0":[7153],": [10, 0, 0]":[7153]," [10, 0, 0],":[7153],"ame\": \"cube3":[7170],"me\": \"cube3\"":[7170],"e\": \"cube3\",":[7170],"\"id\": \"cube3":[7171],"id\": \"cube3\"":[7171],"d\": \"cube3\",":[7171],"metryid\": \"b":[7173],"etryid\": \"bo":[7173],"tryid\": \"box":[7173],"ryid\": \"boxp":[7173],"yid\": \"boxpr":[7173],"osition\": [-":[7174],"sition\": [-1":[7174],"ition\": [-10":[7174],"tion\": [-10,":[7174],"ion\": [-10, ":[7174],"on\": [-10, 0":[7174],"n\": [-10, 0,":[7174],"\": [-10, 0, ":[7174],": [-10, 0, 0":[7174]," [-10, 0, 0]":[7174],"[-10, 0, 0],":[7174],"terials\": []":[7190],"erials\": [],":[7190],"nerators\": [":[7191],"erators\": [{":[7191],"        \"use":[7192],"       \"usev":[7192],"      \"useva":[7192],"     \"usevar":[7192],"    \"usevari":[7192],"   \"usevaria":[7192],"  \"usevarian":[7192]," \"usevarianc":[7192],"hadowmap\": t":[7192],"adowmap\": tr":[7192],"dowmap\": tru":[7192],"owmap\": true":[7192],"wmap\": true,":[7192],"        \"map":[7193],"       \"maps":[7193],"      \"mapsi":[7193],"     \"mapsiz":[7193],"    \"mapsize":[7193],"   \"mapsize\"":[7193],"  \"mapsize\":":[7193]," \"mapsize\": ":[7193],"\"mapsize\": 1":[7193],"mapsize\": 10":[7193],"apsize\": 102":[7193],"psize\": 1024":[7193],"size\": 1024,":[7193],"        \"lig":[7194],"       \"ligh":[7194],"      \"light":[7194],"     \"lighti":[7194],"    \"lightid":[7194],"   \"lightid\"":[7194],"  \"lightid\":":[7194]," \"lightid\": ":[7194],"\"lightid\": \"":[7194],"lightid\": \"s":[7194],"ightid\": \"su":[7194],"ghtid\": \"sun":[7194],"htid\": \"sun\"":[7194],"tid\": \"sun\",":[7194],"        \"ren":[7195],"       \"rend":[7195],"      \"rende":[7195],"     \"render":[7195],"    \"renderl":[7195],"   \"renderli":[7195],"  \"renderlis":[7195]," \"renderlist":[7195],"nderlist\": [":[7195],"derlist\": [\"":[7195],"erlist\": [\"c":[7195],"rlist\": [\"cu":[7195],"list\": [\"cub":[7195],"ist\": [\"cube":[7195],"st\": [\"cube\"":[7195],"t\": [\"cube\",":[7195],"\": [\"cube\", ":[7195],": [\"cube\", \"":[7195]," [\"cube\", \"c":[7195],"[\"cube\", \"cu":[7195],"\"cube\", \"cub":[7195],"cube\", \"cube":[7195],"ube\", \"cube2":[7195],"be\", \"cube2\"":[7195],"e\", \"cube2\",":[7195],"\", \"cube2\", ":[7195],", \"cube2\", \"":[7195]," \"cube2\", \"c":[7195],"\"cube2\", \"cu":[7195],"cube2\", \"cub":[7195],"ube2\", \"cube":[7195],"be2\", \"cube3":[7195],"e2\", \"cube3\"":[7195],"2\", \"cube3\"]":[7195],"keletons\": [":[7197],"eletons\": []":[7197],"letons\": [],":[7197]," \"sounds\": [":[7198],"\"sounds\": [{":[7198],"sounds\": [{ ":[7198],"ounds\": [{  ":[7198],"unds\": [{   ":[7198],"nds\": [{    ":[7198],"ds\": [{     ":[7198],"s\": [{      ":[7198],"\": [{       ":[7198],": [{        ":[7198]," [{         ":[7198],"[{          ":[7198],"  \"name\": \"v":[7199]," \"name\": \"vi":[7199],"\"name\": \"vio":[7199],"name\": \"viol":[7199],"ame\": \"violo":[7199],"me\": \"violon":[7199],"e\": \"violons":[7199],"\": \"violons1":[7199],": \"violons11":[7199],"        \"vol":[7200],"       \"volu":[7200],"      \"volum":[7200]," \"volume\": 1":[7200],"\"volume\": 1,":[7200],"      \"autop":[7201],"autoplay\": t":[7201],"utoplay\": tr":[7201],"toplay\": tru":[7201],"oplay\": true":[7201],"play\": true,":[7201],"        \"loo":[7202],"       \"loop":[7202],"      \"loop\"":[7202],"   \"loop\": t":[7202],"  \"loop\": tr":[7202]," \"loop\": tru":[7202],"\"loop\": true":[7202],"loop\": true,":[7202],"        \"sou":[7203],"       \"soun":[7203],"      \"sound":[7203],"dtrackid\": 1":[7203],"        \"spa":[7204],"       \"spat":[7204],"      \"spati":[7204],"ialsound\": t":[7204],"alsound\": tr":[7204],"lsound\": tru":[7204],"sound\": true":[7204],"ound\": true,":[7204],"        \"ref":[7206],"       \"refd":[7206],"      \"refdi":[7206],"distance\": 1":[7206,7208],"istance\": 1.":[7206],"stance\": 1.0":[7206],"tance\": 1.0,":[7206],"        \"rol":[7207],"       \"roll":[7207],"      \"rollo":[7207],"fffactor\": 1":[7207],"ffactor\": 1.":[7207],"factor\": 1.0":[7207],"actor\": 1.0,":[7207],"       \"maxd":[7208],"      \"maxdi":[7208],"istance\": 10":[7208],"stance\": 100":[7208],"tance\": 100,":[7208],"        \"dis":[7209],"       \"dist":[7209],"      \"dista":[7209],"ncemodel\": \"":[7209],"cemodel\": \"l":[7209],"emodel\": \"li":[7209],"model\": \"lin":[7209],"odel\": \"line":[7209],"del\": \"linea":[7209],"el\": \"linear":[7209],"l\": \"linear\"":[7209],"\": \"linear\",":[7209],"        \"pan":[7210],"       \"pann":[7210],"      \"panni":[7210],"ingmodel\": \"":[7210],"ngmodel\": \"e":[7210],"gmodel\": \"eq":[7210],"model\": \"equ":[7210],"odel\": \"equa":[7210],"del\": \"equal":[7210],"el\": \"equalp":[7210],"l\": \"equalpo":[7210],"\": \"equalpow":[7210],": \"equalpowe":[7210]," \"equalpower":[7210],"\"equalpower\"":[7210],"equalpower\",":[7210],"        \"isd":[7211],"       \"isdi":[7211],"      \"isdir":[7211],"ectional\": f":[7211],"ctional\": fa":[7211],"tional\": fal":[7211],"ional\": fals":[7211],"onal\": false":[7211],"nal\": false,":[7211],"        \"con":[7212,7213,7214,7215],"       \"cone":[7212,7213,7214],"      \"conei":[7212],"nerangle\": 9":[7212],"erangle\": 90":[7212],"rangle\": 90,":[7212],"      \"coneo":[7213,7214],"terangle\": 1":[7213],"erangle\": 18":[7213],"rangle\": 180":[7213],"angle\": 180,":[7213],"utergain\": 0":[7214],"tergain\": 0,":[7214],"       \"conn":[7215],"      \"conne":[7215],"edmeshid\": 0":[7215],"dmeshid\": 0,":[7215],"        \"loc":[7216],"       \"loca":[7216],"      \"local":[7216],"ontomesh\": [":[7216],"ntomesh\": [1":[7216],"tomesh\": [1,":[7216],"omesh\": [1, ":[7216],"mesh\": [1, 0":[7216],"esh\": [1, 0,":[7216],"sh\": [1, 0, ":[7216],"h\": [1, 0, 0":[7216],"\": [1, 0, 0]":[7216],"und.com/#24c":[7219],"nd.com/#24c4":[7219],"d.com/#24c4k":[7219],".com/#24c4kc":[7219],"com/#24c4kc)":[7219],"om/#24c4kc).":[7219],"tent.com/-kv":[7220],"ent.com/-kvp":[7220],"nt.com/-kvp4":[7220],"t.com/-kvp4t":[7220],".com/-kvp4tf":[7220],"com/-kvp4tfz":[7220],"om/-kvp4tfzy":[7220],"m/-kvp4tfzyr":[7220],"/-kvp4tfzyra":[7220],"-kvp4tfzyrac":[7220],"kvp4tfzyrac/":[7220],"vp4tfzyrac/v":[7220],"p4tfzyrac/vw":[7220],"4tfzyrac/vw2":[7220],"tfzyrac/vw2q":[7220],"fzyrac/vw2qy":[7220],"zyrac/vw2qyw":[7220],"yrac/vw2qywc":[7220],"rac/vw2qywcg":[7220],"ac/vw2qywcg3":[7220],"c/vw2qywcg3c":[7220],"/vw2qywcg3ci":[7220],"vw2qywcg3ci/":[7220],"w2qywcg3ci/a":[7220],"2qywcg3ci/aa":[7220],"qywcg3ci/aaa":[7220],"ywcg3ci/aaaa":[7220],"wcg3ci/aaaaa":[7220],"cg3ci/aaaaaa":[7220],"g3ci/aaaaaaa":[7220],"3ci/aaaaaaaa":[7220],"ci/aaaaaaaaa":[7220],"/aaaaaaaaacw":[7220],"aaaaaaaaacw/":[7220],"aaaaaaaacw/e":[7220],"aaaaaaacw/ea":[7220],"aaaaaacw/eaw":[7220],"aaaaacw/eaws":[7220],"aaaacw/eawsl":[7220],"aaacw/eawslj":[7220],"aacw/eawsljb":[7220],"acw/eawsljbq":[7220],"cw/eawsljbqh":[7220],"w/eawsljbqha":[7220],"/eawsljbqhaa":[7220],"eawsljbqhaa/":[7220],"awsljbqhaa/s":[7220],"wsljbqhaa/s2":[7220],"sljbqhaa/s21":[7220],"ljbqhaa/s210":[7220],"jbqhaa/s210/":[7220],"bqhaa/s210/f":[7220],"qhaa/s210/fi":[7220],"haa/s210/fig":[7220],"aa/s210/fig1":[7220],"a/s210/fig15":[7220],"/s210/fig15.":[7220],"s210/fig15.j":[7220],"210/fig15.jp":[7220],"10/fig15.jpg":[7220],"0/fig15.jpg)":[7220],"/fig15.jpg)f":[7220],"fig15.jpg)fi":[7220],"ig15.jpg)fig":[7220],"g15.jpg)fig ":[7220],"15.jpg)fig 1":[7220],"5.jpg)fig 15":[7220]}],"data":[{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"---"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"---"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"---"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"---"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"---"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"---"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"---"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"---"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"---"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"---"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"---"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"---"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"---"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"---"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"---"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"---"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"---"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"---"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"---"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"---"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"---"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"---"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"---"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"---"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"---"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"---"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"---"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"---"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"---"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"---"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"---"},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"---"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"---"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"---"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"---"},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"---"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"---"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"---"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"---"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"---"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"---"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"---"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"---"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"---"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"---"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"---"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"---"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"---"},{"src":"tutorials/General","name":"General","text":"---"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"---"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"---"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"---"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"---"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"---"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"---"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"---"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"---"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"---"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"---"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"---"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"---"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"---"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"---"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"---"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"---"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"---"},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"---"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"---"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"---"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"---"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"---"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"---"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"---"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"---"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"---"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"---"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"---"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"---"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"---"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"---"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"---"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"---"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"---"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"---"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"---"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"---"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"---"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"---"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"---"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"---"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"---"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"---"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"ID_PAGE: 24827"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"PG_TITLE: 01. 3D on the Web Understanding the Basics"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"ID_PAGE: 22161"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"PG_TITLE: 01. Advanced Texturing"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"ID_PAGE: 21911"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"PG_TITLE: 01. Creating Basic Scene"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"ID_PAGE: 21901"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"PG_TITLE: 01. The PlayPen Tutorials"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"ID_PAGE: 22171"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"PG_TITLE: 02. Loading a Scene Produced with Blender"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"ID_PAGE: 21921"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"PG_TITLE: 02. Mid-Level Tutorials"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"ID_PAGE: 24828"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"PG_TITLE: 02. WebGL Basics"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"ID_PAGE: 22011"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"PG_TITLE: 02. Discover Basic Elements"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"ID_PAGE: 22041"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"PG_TITLE: 03. Position, Rotation, Scaling"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"ID_PAGE: 22181"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"PG_TITLE: 03. Unleash the StandardMaterial"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"ID_PAGE: 22051"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"PG_TITLE: 04. Materials"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"ID_PAGE: 24829"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"PG_TITLE: 03. Using Babylon.js for Beginners"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"ID_PAGE: 21951"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"PG_TITLE: 03. The Temechon Files"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"ID_PAGE: 21941"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"PG_TITLE: 04. More Advanced Features"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"ID_PAGE: 22061"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"PG_TITLE: 05. Cameras"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"ID_PAGE: 22191"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"PG_TITLE: 04. More About Lights"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"ID_PAGE: 22201"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"PG_TITLE: 05. Using Multi-Materials"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"ID_PAGE: 24831"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"PG_TITLE: 05. Game Pipeline Integration with Babylon.js"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"ID_PAGE: 24830"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"PG_TITLE: 04. Understanding Materials and Inputs"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"ID_PAGE: 22071"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"PG_TITLE: 06. Lights"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"ID_PAGE: 24832"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"PG_TITLE: 06. Loading Assets"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"ID_PAGE: 22211"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"PG_TITLE: 06. Creating a Convincing World"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"ID_PAGE: 24833"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"PG_TITLE: 07. Babylon.js Advanced Features"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"ID_PAGE: 22231"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"PG_TITLE: 07. Caching Resources in IndexedDB"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"ID_PAGE: 22241"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"PG_TITLE: 08. Creating a Small 3D Game with Babylon.js"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"ID_PAGE: 22081"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"PG_TITLE: 07. Animations"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"ID_PAGE: 24834"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"PG_TITLE: 08. Special Effects"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"ID_PAGE: 22082"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"PG_TITLE: 08. Sprites"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"ID_PAGE: 22091"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"PG_TITLE: 09. Cameras, Mesh Collisions and Gravity"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"ID_PAGE: 22251"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"PG_TITLE: 09. Using the Incremental Loading System"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"ID_PAGE: 22101"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"PG_TITLE: 10. Intersect Collisions - mesh"},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"ID_PAGE: 22261"},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"PG_TITLE: 10. Using the Cannon.js Physics Engine"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"ID_PAGE: 22271"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"PG_TITLE: 11. Using the Oimo.js Physics Engine"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"ID_PAGE: 22111"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"PG_TITLE: 11. Picking Collisions"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"ID_PAGE: 22121"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"PG_TITLE: 12. Particles"},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"ID_PAGE: 22281"},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"PG_TITLE: 12. Creating a 3D WebGL Procedural QR-Code Maze with Physics"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"ID_PAGE: 22291"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"PG_TITLE: 13. Using WebGL to Create Games for the Windows Store"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"ID_PAGE: 22301"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"PG_TITLE: 14. The Babylon.js Sandbox and Editor"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"ID_PAGE: 22141"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"PG_TITLE: 14. Height Map"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"ID_PAGE: 22131"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"PG_TITLE: 13. Environment"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"ID_PAGE: 22151"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"PG_TITLE: 15. Shadows"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"ID_PAGE: 22311"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"PG_TITLE: 15. Understanding Shaders with Babylon.js and ShaderMaterial"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"ID_PAGE: 24824"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"PG_TITLE: 16. Playing sounds and music"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"ID_PAGE: 25094"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"PG_TITLE: 17. Using decals"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"ID_PAGE: 22621"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"PG_TITLE: A Babylon.js Primer"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"ID_PAGE: 22671"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"PG_TITLE: Approved Naming Conventions"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"ID_PAGE: 22511"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"PG_TITLE: Adding Your Own Physics Engine Plugin to Babylon.js"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"ID_PAGE: 22641"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"PG_TITLE: Creating the Mini-fied Version"},{"src":"tutorials/General","name":"General","text":"ID_PAGE: 22401"},{"src":"tutorials/General","name":"General","text":"PG_TITLE: General"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"ID_PAGE: 22661"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"PG_TITLE: File Format Map (.babylon)"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"ID_PAGE: 22411"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"PG_TITLE: How Rotations and Translations Work"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"ID_PAGE: 22451"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"PG_TITLE: How to Merge Meshes"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"ID_PAGE: 22491"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"PG_TITLE: How to Create Your Own File Importer"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"ID_PAGE: 25096"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"PG_TITLE: How to dynamically morph a mesh"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"ID_PAGE: 22531"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"PG_TITLE: How to use Actions"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"ID_PAGE: 25091"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"PG_TITLE: How to use Curve3"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"ID_PAGE: 22551"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"PG_TITLE: How to use AssetsManager"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"ID_PAGE: 22421"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"PG_TITLE: How to use Bones and Skeletons"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"ID_PAGE: 22571"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"PG_TITLE: How to use Instances"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"ID_PAGE: 24825"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"PG_TITLE: How to use DepthRenderer to get depth values"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"ID_PAGE: 22591"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"PG_TITLE: How to use LOD"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"ID_PAGE: 22471"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"PG_TITLE: How to use Lens Flares"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"ID_PAGE: 22461"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"PG_TITLE: How to use Multi-Views"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"ID_PAGE: 22481"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"PG_TITLE: How to use FresnelParameters"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"ID_PAGE: 25090"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"PG_TITLE: How to use Path3D"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"ID_PAGE: 22441"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"PG_TITLE: How to use PostProcessRenderPipeline"},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"ID_PAGE: 22541"},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"PG_TITLE: How to use Tiled Grounds"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"ID_PAGE: 22581"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"PG_TITLE: How to use SceneOptimizer"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"ID_PAGE: 22502"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"PG_TITLE: How to use VirtualJoysticksCamera"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"ID_PAGE: 22521"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"PG_TITLE: How to use the Tags System"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"ID_PAGE: 22641"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"PG_TITLE: Creating the Mini-fied Version"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"ID_PAGE: 24822"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"PG_TITLE: In-Browser Mesh Simplification (Auto-LOD)"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"ID_PAGE: 22561"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"PG_TITLE: Optimizing Your Scene with Octrees"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"ID_PAGE: 24847"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"PG_TITLE: Parametric Shapes"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"ID_PAGE: 22601"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"PG_TITLE: How to use Procedural Textures"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"ID_PAGE: 25110"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"PG_TITLE: Position, Rotate, Translate and Spaces"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"ID_PAGE: 22691"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"PG_TITLE: Render Scene on a PNG"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"ID_PAGE: 25088"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"PG_TITLE: Ribbon Tutorial"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"ID_PAGE: 22681"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"PG_TITLE: Roadmap"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"ID_PAGE: 25101"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"PG_TITLE: Supporting fog with ShaderMaterial"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"ID_PAGE: 22631"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"PG_TITLE: The Playground Tutorial"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"ID_PAGE: 25100"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"PG_TITLE: Transparency and How Meshes Are Rendered"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"ID_PAGE: 6411"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"PG_TITLE: Tutorials"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"ID_PAGE: 24841"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"PG_TITLE: Using depth-of-field and other lens effects"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"ID_PAGE: 22611"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"PG_TITLE: Using the Debug Layer"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"ID_PAGE: 22431"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"PG_TITLE: How to use PostProcesses"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"ID_PAGE: 25362"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"PG_TITLE: Using the HDR Rendering Pipeline"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"ID_PAGE: 24837"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"PG_TITLE: Using the SSAO rendering pipeline"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"ID_PAGE: 24826"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"PG_TITLE: Video courses"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"ID_PAGE: 24846"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"PG_TITLE: v1.14 Classes Hotlist"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"ID_PAGE: 24845"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"PG_TITLE: v2.0 Classes Hotlist"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"ID_PAGE: 24840"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"PG_TITLE: Using the Volumetric LightScattering post-process"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"TAGS:"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"    - Videos"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"---"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"Explore 3D basics, and take a look at 3D without hardware (creating a software engine)."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"TAGS:"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"    - 02MidLevelTutorials"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"---"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"You have already seen how you can apply textures on meshes, but here you are going one step further, with more complex textures like mirrors, videos, bump mapping, and multi-texture."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"TAGS:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"---"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"### In this tutorial, we are going to create a basic 3D scene with Babylon.js."},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"TAGS:"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"---"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"Click the arrow on the sidebar to list all of our beginner-level tutorials with accompanying Babylon.js Playground demo scenes.&nbsp; You may also choose from the list below."},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"TAGS:"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"    - 02MidLevelTutorials"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"---"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"TAGS:"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"    - 02MidLevelTutorials"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"---"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"Click the arrow on the sidebar to list all of our mid-level tutorials and documentation. You may also choose from the list below."},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"TAGS:"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"    - Videos"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"---"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"Think of this as a WebGL 101 course, with a look at geometries and shaders, resources, and performance considerations."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"TAGS:"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"---"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"### In this tutorial, we are going to learn how to create basic elements using Babylon.js, such as boxes, spheres, and planes."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"TAGS:"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"---"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"### In this tutorial, we are going to learn how to position, scale and rotate any kind of objects that you created in our last tutorial. We will also set a parent and start to understand how parenting affects position, rotation and scaling."},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"TAGS:"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"    - 02MidLevelTutorials"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"---"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"TAGS:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"---"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"### Now that you can create different basic mesh elements anywhere in the scene, we are going to give those meshes some materials, to define how those mesh look."},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"TAGS:"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"    - Videos"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"---"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"Take a look at basic scene components (lights, cameras, and meshes), materials, and inputs (gamepads, touch, WebVR, and orientation), plus get insights on using the Playground."},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"TAGS:"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"    - 03TheTemechonFiles"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"---"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"### Temechon has a great collection of tutorials located at his own website:"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"TAGS:"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"---"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"Click the arrow on the sidebar to list all of the documentation for our advanced features. You may also choose from the list below."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"TAGS:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"---"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"# Babylon.js Cameras #"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"TAGS:"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"    - 02MidLevelTutorials"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"---"},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"TAGS:"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"    - 02MidLevelTutorials"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"---"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"TAGS:"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"    - Videos"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"---"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"Working with Blender, using Sandbox, and exploring 3ds Max."},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"TAGS:"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"    - Videos"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"---"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"Learn about materials, shaders and how to work with inputs."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"TAGS:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"---"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Now that you have learned about the camera types and how to place them into your scene, we will continue our tutorial series with learning about Babylon.js lights."},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"TAGS:"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"    - Videos"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"---"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"Load your scene, meshes, and assets. And take a look at offline mode."},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"TAGS:"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"    - 02MidLevelTutorials"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"---"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"TAGS:"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"    - Videos"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"---"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"Discover the power of the physics engine and create your own shader."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"TAGS:"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"    - 02MidLevelTutorials"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"---"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"TAGS:"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"    - 02MidLevelTutorials"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"---"},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"TAGS:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"---"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"## Animation"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"TAGS:"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"    - Videos"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"---"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"Get a look at shadows, lens flares, bones, and physics."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"TAGS:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"---"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"In this tutorial, we are going to learn how to manipulate Sprites. Sprites are 2D image/animation, and we will use them to display an image with alpha channel. Sprites always face the camera."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"TAGS:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"---"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Did you ever play a FPS (First Person Shooter) game? In this tutorial, we are going to simulate the same camera movements: the camera is on the floor, in collision with the ground, and potentially in collision with any objects in the scene."},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"TAGS:"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"    - 02MidLevelTutorials"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"---"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"In order to support incremental loading (introduced by v1.5.0), you just have to go to [this page](http://www.babylonjs.com/converter.html)."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"TAGS:"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"---"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"### In dynamic scenes, objects are moving and interacting with each other. To get the best rendering, you will want to know when your meshes are in contact with each other. In this tutorial, we are going to discover how the collision system works."},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"TAGS:"},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"    - 02MidLevelTutorials"},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"---"},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"TAGS:"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"    - 02MidLevelTutorials"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"---"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"## We're headed for David Rousset's Blog!"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"TAGS:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"---"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"### The last collision type could be very useful for you: it’s picking an object with your mouse. The main difficulty is to click on a 3D object whereas your screen is a flat 2D display."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"TAGS:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"---"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"### This tutorial is going to talk about the particle system in BabylonJS. Particles are often small sprites used to simulate hard-to-reproduce phenomena like fire, smoke, water, or abstract visual effects like magic glitter and faery dust."},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"TAGS:"},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"    - 02MidLevelTutorials"},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"---"},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"## We're headed for David Rousset's Blog!"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"TAGS:"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"    - 02MidLevelTutorials"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"---"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"## We're headed for David Rousset's Blog!"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"TAGS:"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"    - 02MidLevelTutorials"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"---"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"## We're headed for David Rousset's Blog!"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"TAGS:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"---"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"### In this tutorial, our goal is to understand height maps, and to learn how to generate realistic grounds."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"TAGS:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"---"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"### You have come a long way, have learned about shapes, lights, sprites, particles, materials.&nbsp; But there is something missing in your scenes: a proper environment.&nbsp; This is the first of three consecutive tutorials that talk about scene environment factors and effects.&nbsp; We will start off with simple scene `clearColor` (background color), then talk briefly about scene `ambientColor`, then on to 6-texture skyboxes, and then fog to give an illusion of depth to your scenes."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"TAGS:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"---"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"### In this tutorial, we are going to learn how to create shadows in Babylon JS. Shadows are now becoming dynamic, and they are now dynamically generated depending upon a light."},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"TAGS:"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"    - 02MidLevelTutorials"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"---"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"## We're headed for David Catuhe's Blog!"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"TAGS:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    - 02MidLevelTutorials"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"---"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Babylon.js sound engine is based on the [**Web Audio specification**](http://webaudio.github.io/web-audio-api/). We decided not to offer a fallback on the audio tag or other mechanism. So, to use our sound engine, you need to use a Web Audio compatible browser. Still, if you’re using it on not compatible browser, it won’t break the rest of our engine, it will simply play no sound."},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"TAGS:"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"    - 02MidLevelTutorials"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"---"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"Starting with Babylon.js v2.1, we introduced decals."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"TAGS:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"    - Others"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"---"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### Welcome to the... ###"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"TAGS:"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"    - General"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"---"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"If you want to contribute to babylon.js (What an *excellent* idea!), you should attempt to align your code with the following naming conventions:"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"TAGS:"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"\t- 04MoreAdvancedFeatures"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"---"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"TAGS:"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    - General"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"---"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"To create the minified version of Babylon.js you just have to "},{"src":"tutorials/General","name":"General","text":"TAGS:"},{"src":"tutorials/General","name":"General","text":"    - General"},{"src":"tutorials/General","name":"General","text":"---"},{"src":"tutorials/General","name":"General","text":"Click the arrow on the sidebar to expand this folder of general information and documentation. Choose from that sidebar or from the list below."},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"TAGS:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    - General"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"---"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"**Babylon.js** uses a JSON file format for describing scenes."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"TAGS:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"---"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Babylon.js provides many ways to locate and rotate your meshes."},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"TAGS:"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"---"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"If you want to merge meshes into a new one, you can use the following code:"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"TAGS:"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"---"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"By default, babylon.js comes with an importer for .babylon files."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"TAGS:"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"---"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###What is morphing ?"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"TAGS:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"---"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Actions are a simple way to add interactions in your scenes. An action is launched when its trigger is fired."},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"TAGS:"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"---"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"BabylonJS provides an object to manage some math curves for you : **Curve3**."},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"TAGS:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"---"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"In order to help developers load multiple assets, Babylon.js (starting with version 1.14) introduced the AssetsManager class."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"TAGS:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"---"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Babylon.js supports bones animations for your meshes."},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"TAGS:"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"---"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"Instances are an excellent way to use hardware accelerated rendering to draw a huge number of identical meshes (let's imagine a forest or an army)."},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"TAGS:"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"---"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"BABYLON.DepthRenderer is a tool used to generate depth texture (a texture that contains depth buffer and which can be used to read scene depth values)."},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"TAGS:"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"---"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"Babylon.js comes with an integrated support for level of detail."},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"TAGS:"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"---"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"Babylon.js allows you to simply create lens flares effect:"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"TAGS:"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"---"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"Babylon.js is able to render multi views of the same scene."},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"TAGS:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"---"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"Babylon.js 1.14 introduced new parameters for the StandardMaterial: _FresnelParameters_."},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"TAGS:"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"---"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"**Path3D** is a math object.  "},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"TAGS:"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"---"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"Post Process Renders pipelines allow you to create a chain of post processes and attach it to a camera."},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"TAGS:"},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"---"},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"## We're headed for Célian Garcia's document!"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"TAGS:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"---"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"Rendering a scene on a browser is a great experience because you can reach a lot of different users and hardware. But the main associated caveat is that you can encounter very low end devices."},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"TAGS:"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"---"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"The VirtualJoysticksCamera will create a Babylon.js camera that can move within your games, thanks to 2 touch-enabled joysticks drawn on the left &amp; right sides of the screen. It’s designed to be controlled via your 2 thumbs."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"TAGS:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"---"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"## Concepts"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"TAGS:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"---"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"## Different meshes for multiple cameras using Layermasks"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"TAGS:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"---"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"#About"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"TAGS:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"---"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"Octrees are a really powerful data structure that can quickly select entities based on space coordinates."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"TAGS:"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"---"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"The basic meshes you've seen up until now have an expected shape : when you create a sphere mesh, you expect to see a spherical shape. The same goes for a box mesh, a torus, a cylinder, etc."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"TAGS:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"---"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"In classic texturing, we use 2D images, often pictures that have been shaped specifically to match an object. Let’s imagine you are creating a medieval fantasy game, working on a dwarf pub, where there are multiple, big, \"old school\" wooden tables. With classic 2D texturing, you have 3 choices:"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"TAGS:"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"    - 02MidLevelTutorials"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"---"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The simple creature in Fig 1 is our pilot (a mesh) through the world of positions, rotations, translations and spaces in Babylon.js."},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"TAGS:"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"    - General"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"---"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"# Why is it better than \"ctrl + prt scr\" screenshot?"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"TAGS:"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"---"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Here you'll find almost everything to understand how the Ribbon object works and how to play with it. "},{"src":"tutorials/Roadmap","name":"Roadmap","text":"TAGS:"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"    - Others"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"---"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"## Roadmap"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"TAGS:"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"    - 01ThePlayPenTutorials"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"---"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"In order to support fog in your custom shaders, you will have to add some lines of code in your vertex and pixel shaders."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"TAGS:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"    - General"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"---"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## Introducing..."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"TAGS:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"---"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"This article has been written to help you understand how things are drawn on screen, and how transparency is handled in BabylonJS. Feel free to contribute in whatever way seems fit to you!"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"TAGS:"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"    - Others"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"---"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"## Tutorials and documentation of every flavor."},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"TAGS:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"---"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"BABYLON.LensRenderingPipeline is a predefined chain of postprocesses that helps achieving photograph-like realism."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"TAGS:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"---"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"The main goal of the debug layer is to provide a fully functional UI to help you debug a scene and find potential culprits."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"TAGS:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"---"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Postprocesses allow you to create 2D effects on top of your scene."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"TAGS:"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"---"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"The HDR Rendering pipeline is a set of multiple post-processes. It tends to simulate the eye adaptation to the light and darkness and also simulate the most realistic glare."},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"TAGS:"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"---"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"BABYLON.SSAORenderingPipeline is a rendering pipeline (chained post-processes) that will compute the ambient occlusion of a given scene from the screen space."},{"src":"tutorials/Video_courses","name":"Video_courses","text":"TAGS:"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"    - Videos"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"---"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"Do you have a great idea for a 3D game? If you want to build it with the same open source framework used to create Assassin's Creed Pirates, check out this exciting course! Babylon.js is a free, open source gaming framework that streamlines WebGL functionality. Use it to create 3D games and apps which work on every browser that has a GPU device."},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"TAGS:"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"    - General"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"---"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"### BabylonJS 1.14 Classes Hotlist ###"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"TAGS:"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"    - General"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"---"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"### BabylonJS 2.0 Classes Hotlist ###"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"TAGS:"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"    - 04MoreAdvancedFeatures"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"---"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"BABYLON.VolumetricLightScatteringPostProcess is a post-process that will compute the light scattering according to a light source mesh."},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"**Agenda**:"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"* Understanding 3D Basics via a software engine *[05:45]*"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"* Understanding the transformation pipeline *[09:49]*"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"* Its all about triangles *[20:26]*"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"* Moving from CPU to GPU *[31:42]*"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"![AdvancedTexturing](http://www.babylonjs.com/tutorials/Advanced%20Texturing/0.png)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"A picture from our [Advanced Texturing playground demo](http://babylonjs-playground.azurewebsites.net/#EKFLA#13)."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"## How can I do this ?"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"These new types of textures are considered advanced because we are not used to dealing with them, but you’ll see that it is very easy to create them with JavaScript and Babylon.js!"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"![Babylon JS 01](http://urbanproductions.com/wingy/babylon/misc/tut01pic01.jpg)"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"_Two Basic Shapes in a Basic Scene_"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Before you start, be sure you have a WebGL compatible browser (e.g.  Internet Explorer 11+, Firefox 4+, Google Chrome 9+, Opera 15+, etc.)."},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Create a Basic Scene](http://babylondocv2.azurewebsites.net/tutorials/01._Creating_Basic_Scene) [Old](http://babylondoc.azurewebsites.net/page.php?p=21911)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Discover Basic Elements](http://babylondocv2.azurewebsites.net/tutorials/02._Discover_Basic_Elements) [Old](http://babylondoc.azurewebsites.net/page.php?p=22011)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Position, Rotation &amp; Scaling](http://babylondocv2.azurewebsites.net/tutorials/03._Position,_Rotation,_Scaling) [Old](http://babylondoc.azurewebsites.net/page.php?p=22041)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Materials](http://babylondocv2.azurewebsites.net/tutorials/04._Materials) [Old](http://babylondoc.azurewebsites.net/page.php?p=22051)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Cameras](http://babylondocv2.azurewebsites.net/tutorials/05._Cameras) [Old](http://babylondoc.azurewebsites.net/page.php?p=22061)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Lights](http://babylondocv2.azurewebsites.net/tutorials/06._Lights) [Old](http://babylondoc.azurewebsites.net/page.php?p=22071)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Animations](http://babylondocv2.azurewebsites.net/tutorials/07._Animations) [Old](http://babylondoc.azurewebsites.net/page.php?p=22081)"},{"src":"tutorials/02._Loading_a_Scene_Produced_with_Blender","name":"02._Loading_a_Scene_Produced_with_Blender","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/06/28/babylon-js-how-to-load-a-babylon-file-produced-with-blender.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Advanced Texturing](http://babylondocv2.azurewebsites.net/tutorials/01._Advanced_Texturing) [Old](http://babylondoc.azurewebsites.net/page.php?p=22161)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Loading a Scene Produced with Blender](http://babylondocv2.azurewebsites.net/tutorials/02._Loading_a_Scene_Produced_with_Blender) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/06/28/babylon-js-how-to-load-a-babylon-file-produced-with-blender.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Unleash the StandardMaterial](http://babylondocv2.azurewebsites.net/tutorials/03._Unleash_the_StandardMaterial) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [More About Lights](http://babylondocv2.azurewebsites.net/tutorials/04._More_About_Lights) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/08/babylon-js-using-lights-in-your-babylon-js-game.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Using Multi-Materials](http://babylondocv2.azurewebsites.net/tutorials/05._Using_Multi-Materials) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/10/babylon-js-using-multi-materials.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Creating a Convincing World](http://babylondocv2.azurewebsites.net/tutorials/06._Creating_a_Convincing_World) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/08/06/babylon-js-creating-a-convincing-world-for-your-game-with-custom-shaders-height-maps-and-skyboxes.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Caching the Resources in IndexedDB](http://babylondocv2.azurewebsites.net/tutorials/07._Caching_Resources_in_IndexedDB) [Old](http://babylondoc.azurewebsites.net/page.php?p=22231)"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"** Agenda **"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"* WebGL 101 *[02:12]*"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"* Understanding Geometries and shaders *[07:01]*"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"* Performance Considerations *[27:28]*"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"* Introduction to Babylon.Js *[39:54]*"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"![Elements](http://urbanproductions.com/wingy/babylon/misc/tut02pic.jpg)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"[**Playground Demo Scene 2 - Seven basic shapes/mesh**](http://babylonjs-playground.azurewebsites.net/?2)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"## How can I do this ?"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"An easy way to get started using basic elements... is by visiting [**Playground Demo Scene 02**](http://babylonjs-playground.azurewebsites.net/?2).&nbsp; You might wish to use the 'Get .zip' choice on its top menu.&nbsp; The index.html that you will receive in that zip... contains everything you will need to start making basic elements.&nbsp; Remember that link, as we will talk more about it."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"I'm sure you have already read the&nbsp; [**Babylon.js Primer**](http://babylondoc.azurewebsites.net/page.php?p=22621) and the&nbsp; [**previous tutorial**](http://babylondoc.azurewebsites.net/page.php?p=21911), and thus you know how to format scene files.&nbsp; So, we won't talk about that, here.&nbsp; We are going to go step by step through [**Playground Demo Scene 02**](http://babylonjs-playground.azurewebsites.net/?2).&nbsp; Open that link in a new tab or window, and then come back here, and we'll get started."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"![Elements](http://www.babylonjs.com/tutorials/03%20-%20Rotation%20and%20scaling/03.png)"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"[**Playground Demo Scene 3 - Positioned, Scaled, and Rotated Boxes**](http://babylonjs-playground.azurewebsites.net/?3)"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"## How can I do this ?"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"As usual, we are beginning a createScene function by including the basic elements of a scene:"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```javascript"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"function createScene() {"},{"src":"tutorials/03._Unleash_the_StandardMaterial","name":"03._Unleash_the_StandardMaterial","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"![Elements](http://www.babylonjs.com/tutorials/04%20-%20Materials/04.png)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"[**Playground Demo Scene 4 - Materials**](http://www.babylonjs.com/playground/?4)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"## How can I do this ?"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"We are so adept at making createScene functions that we can do it in our sleep, right? So let's get rolling with an omni-directional PointLight and an orbiting ArcRotateCamera.  After that, we'll start making some basic mesh elements to test our materials upon."},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"** Agenda **"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"* Basic Scene components, meshes, lights and camera"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":" *[01:01]*"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"* Using the Playground *[35:05]*"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"<iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/03/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"></iframe>"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [Learn the basics about Babylon.js by creating your first game](http://pixelcodr.com/tutos/toad_attack/toad_attack.html)"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [Learn about Actions and ActionManager](http://pixelcodr.com/tutos/plane/plane.html)"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [Learn about shaders and a new physics engine plugin: Oimo.js](http://pixelcodr.com/tutos/oimo/oimo.html)"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [How to manipulate vertices in a mesh geometry](http://pixelcodr.com/tutos/trees/trees.html)"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [How to create a loading screen by creating a preloader](http://pixelcodr.com/tutos/preloader/preloader.html)"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [Create your first FPS with Babylon.js](http://pixelcodr.com/tutos/shooter/shooter.html)"},{"src":"tutorials/03._The_Temechon_Files","name":"03._The_Temechon_Files","text":"1. [Working with physics engine: Oimo.js](http://pixelcodr.com/tutos/physics/physics.html)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Adding Your Own Physics Engine Plugin to Babylon.js](http://babylondocv2.azurewebsites.net/tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js) [Old](http://babylondoc.azurewebsites.net/page.php?p=22511)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How Rotations and Translations Work](http://babylondocv2.azurewebsites.net/tutorials/How_Rotations_and_Translations_Work) [Old](http://babylondoc.azurewebsites.net/page.php?p=22411)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to Create Your Own File Importer](http://babylondocv2.azurewebsites.net/tutorials/How_to_Create_Your_Own_File_Importer) [Old](http://babylondoc.azurewebsites.net/page.php?p=22491)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to Merge Meshes](http://babylondocv2.azurewebsites.net/tutorials/How_to_Merge_Meshes) [Old](http://babylondoc.azurewebsites.net/page.php?p=22451)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to dynamically morph a mesh](http://babylondocv2.azurewebsites.net/tutorials/How_to_dynamically_morph_a_mesh) [Old](http://babylondoc.azurewebsites.net/page.php?p=25096)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Actions](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Actions) [Old](http://babylondoc.azurewebsites.net/page.php?p=22531)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use AssetsManager](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_AssetsManager) [Old](http://babylondoc.azurewebsites.net/page.php?p=22551)"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"In any Babylon.js scene, you can create as many cameras as you wish, but only one camera can be active at a time (unless you are using [multi-viewports](http://babylondoc.azurewebsites.net/page.php?p=22461))."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Camera management in Babylon.js is pretty simple. Babylon.js supports many types of cameras. We will begin with the two most-common types - the FreeCamera and the ArcRotateCamera."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **FreeCamera** - This is a 'first person shooter' (FPS) type of camera where you control the camera with the mouse and the cursors keys. Like many of our cameras, you can also add control keys, or reassign them to other keys, such as keys 'w', 'a', 's', and 'd'."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The FreeCamera does not automatically aim at a target, but after constructing a FreeCamera, you can easily set it to lock-on to a mesh or to a vector3 position... using the _lockedtarget_ property."},{"src":"tutorials/04._More_About_Lights","name":"04._More_About_Lights","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/08/babylon-js-using-lights-in-your-babylon-js-game.aspx)"},{"src":"tutorials/05._Using_Multi-Materials","name":"05._Using_Multi-Materials","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/10/babylon-js-using-multi-materials.aspx)"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"** Agenda **"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"* Working with Blender 3D *[03:07]* "},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"* Working with 3ds Max *[20:34]*"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"<iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/05/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"></iframe>"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"** Agenda **"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"* Materials"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":" *[02:03]* "},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"* Working with Inputs *[38:30]*"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"&lt;iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/04/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"&gt;&lt;/iframe&gt;"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![Elements](http://www.babylonjs.com/Screenshots/testlight.jpg)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"_A pretty sphere with multiple lights_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"## How can I do this ?"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Lights are used to produce the diffuse and specular color received by each pixel. This color is then used by materials to determine the final color of every pixel. Babylon.js allows you to create and register as many lights as you choose, but know that a single StandardMaterial can only handle 4 simultaneous lights (the first four enabled lights of the scene's lights list)."},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"** Agenda **"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"* Loading your scene, Meshes and assets *[02:41]* "},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"* Creating a 3D Windows Universal App *[20:12]* "},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"* Understanding Offline Mode *[32:28]*"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"&lt;iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/06/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"&gt;&lt;/iframe&gt;"},{"src":"tutorials/06._Creating_a_Convincing_World","name":"06._Creating_a_Convincing_World","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/08/06/babylon-js-creating-a-convincing-world-for-your-game-with-custom-shaders-height-maps-and-skyboxes.aspx)"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"** Agenda **"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"* Picking Meshes *[02:52]* "},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"* Create your own Shaders"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":" *[17:37]*"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"* Animations *[23:29]* "},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"* Physics Simulation *[28:59]* "},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"Starting with the **1.4 release** of Babylon.JS, you can now very easily indicate that you want to **cache the resources associated with your scene/game** inside the local **IndexedDB** of the browser. It can enhance the gamer experience as the JSON and textures files can be directly loaded from the database rather than from the web."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"### Usage:"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"To enable offline support, the first thing you need to do is create a _**.manifest**_ file associated with your scene. It should be named _NameOfYourScene.babylon.manifest_."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"**Note:** by default, the Babylon engine is configured to use online resources. So if you don’t provide any .manifest file, it will assume that you want the resources to be loaded directly from the web all the time."},{"src":"tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js","name":"08._Creating_a_Small_3D_Game_with_Babylon.js","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/10/07/understanding-deviceorientation-events-by-creating-a-small-3d-game-with-babylon-js.aspx)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Your scene is beginning to look great, but it is very static. To put dynamics in it, we are going to learn how to tell your computer to move your meshes in any way you choose."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"![Elements](http://www.babylonjs.com/tutorials/07%20-%20Animation/07.png)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"_Final result_"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"## How can I do this ?"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"** Agenda **"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"* Shadows *[01:20]* "},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"* Environment *[07:46]* "},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"* Lens Flares *[14:27]*"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"* Particles *[18:58]*"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"* Post-Processes *[25:12]*"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Nowadays, sprites are often used to display animated characters, and for particles, and to simulate 3D complex objects like trees. "},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"![Elements](http://www.babylonjs.com/tutorials/08%20-%20Sprites/08.png)"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"_Final result_"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"## How can I do this ?"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"![Elements](https://camo.githubusercontent.com/7422be3bf5ae147243aa3d29d9660a0210530201/687474703a2f2f7777772e626162796c6f6e6a732e636f6d2f7475746f7269616c732f30392532302d253230436f6c6c6973696f6e73253230477261766974792f30392e706e67)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"_Final result_"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"## How can I do this ?"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"To replicate this movement, we have to do 3 simple steps:"},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"You can then browse for a _.babylon_ file and the page will return a zip file containing the _.incremental.babylon_ file alongside associated resources (_.babylonmeshdata_ and _.babylongeometrydata_ files)."},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"These files can be used just like a standard _.babylon_ scene except that they will allow **Babylon.js** to load meshes and textures on the fly. This means that the meshes and the textures will not be loaded at startup but only when they become active (when the active camera can see them)."},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"You have to put the _.babylonmeshdata_ and _.babylongeometrydata_ files in the same folder as the _.incremental.babylon_ file."},{"src":"tutorials/09._Using_the_Incremental_Loading_System","name":"09._Using_the_Incremental_Loading_System","text":"The Espilit demo on the [main site](http://www.babylonjs.com) uses incremental loading if you want an example."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"![Collisions](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10.png)"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"_Final result_"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"## How can I do this ?"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"This tutorial is going to show you two ways of collision detection: the first one is to raise a collision event when two meshes are in contact, the other one is detecting contact between a mesh and a single point."},{"src":"tutorials/10._Using_the_Cannon.js_Physics_Engine","name":"10._Using_the_Cannon.js_Physics_Engine","text":"## Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2013/12/19/create-wonderful-interactive-games-for-the-web-using-webgl-and-a-physics-engine-babylon-js-amp-cannon-js.aspx)"},{"src":"tutorials/11._Using_the_Oimo.js_Physics_Engine","name":"11._Using_the_Oimo.js_Physics_Engine","text":"## Please click [right here](http://blogs.msdn.com/b/davrous/archive/2014/11/18/understanding-collisions-amp-physics-by-building-a-cool-webgl-babylon-js-demo-with-oimo-js.aspx)"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Let’s see how we can get your mouse position transposed in your 3D scene by this gun shooting example:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"![Picking](http://www.babylonjs.com/tutorials/11%20-%20Collisions%20PickResult/11.png)"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"_Final result_"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"![Particles](http://www.babylonjs.com/tutorials/12%20-%20Particles/12.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"A picture of [the playground's ParticleSystem demo](http://babylonjs-playground.azurewebsites.net/?12)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"## How can I do this ?"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"To perform this magic trick, the first thing to do is to create a new object, which will be the particle emitter. In our case, a box will be our emitting object, representing a particle fountain."},{"src":"tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","name":"12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics","text":"## Please click [right here](http://blogs.msdn.com/b/davrous/archive/2014/02/19/coding4fun-tutorial-creating-a-3d-webgl-procedural-qrcode-maze-with-babylon-js.aspx)"},{"src":"tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store","name":"13._Using_WebGL_to_Create_Games_for_the_Windows_Store","text":"## Please click [right here](http://blogs.msdn.com/b/davrous/archive/2013/11/19/using-webgl-to-create-games-for-the-windows-store.aspx)"},{"src":"tutorials/14._The_Babylon.js_Sandbox_and_Editor","name":"14._The_Babylon.js_Sandbox_and_Editor","text":"## Please click [right here](http://blogs.msdn.com/b/davrous/archive/2013/12/17/designers-test-amp-create-your-webgl-3d-worlds-inside-the-babylon-js-sandbox-amp-editor.aspx)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"![HeightMap](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14.png)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"_Final result_"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"## How can I do this ?"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* **Introduction**"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"![Environment](http://www.babylonjs.com/tutorials/13%20-%20Environment/13.png)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"_A picture showing Babylon.js fog in action_"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"## How can I do this?"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"We will talk about that nice fog effect, shortly.&nbsp; First, I want to introduce you to two interesting properties on the [scene class object](http://babylondoc.azurewebsites.net/page.php?p=24894):"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"![Shadows](http://www.babylonjs.com/tutorials/15%20-%20Shadows/15.png)"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"_Final result_"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"## How can I do this ?"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Shadows are easy to generate using the babylon.js “ShadowGenerator”. This function uses a shadow map: a map of your scene generated from the light’s point of view, as you can see here:"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"Please click [right here](http://blogs.msdn.com/b/eternalcoding/archive/2014/04/17/learning-shaders-create-your-own-shaders-with-babylon-js.aspx)"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"## More additional information"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"The ShaderMaterial will automatically add #define in your shader for the following options:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The sound engine offers **ambient** sound, **spatialized** sound and **directional** sound. It can be created by code or by loading a .babylon file. It follows the simple & powerful philosophy of the rest of the engine as you’re going to see. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The sound format supported is the one from the browser. It’s usually at least **.mp3** and **.wav**."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"**Note:** all music samples demonstrated in the playground has been composed by [**David Rousset**](https://soundcloud.com/david-rousset/) "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Creating an ambient sound or music##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is the code to create a sound or music playing as ambient (not spatialized):"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"Usually used to add details on meshes (bullets hole, local details, etc...), a decal is a mesh produced from a subset of a previous one with a small offset in order to appear on top of it."},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"![Decal](http://www.babylonjs.com/screenshots/decals.jpg)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"To create a decal, you can call this code:"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"```javascript"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"var newDecal = BABYLON.Mesh.CreateDecal(\"decal\", mesh, decalPosition, normal, decalSize, angle);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Babylon.js WebGL Game Creation System!##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"??"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Hi! Welcome to The Babylon.js Primer, an introduction to some of the things you will need to know in order to get the most out of this useful Javascript-based WebGL framework."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"What is a framework, you ask?&nbsp; You can think of a framework as scaffolding for a building, allowing you to build around it without worrying about the foundation. It makes a complicated system, (WebGL,) much easier to use."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"We hope to teach you a large amount of information in a very quick manner.&nbsp; Often there are more ways than one to accomplish a task here.&nbsp; I will let you discover those other ways by yourself.&nbsp; For now we will teach you the quickest and easiest ways, determined by studying the traits of other new users of Babylon.js."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## The Browser ##"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Private variables are named starting with _ : ```_myVariable```"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Camel casing is used for non static properties/functions/variables: ```var myUberUsefulVariable```"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Pascal casing must be used for \"static\" functions: ```BABYLON.Vector3.Project```"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Braces ({}) must be used for every loop even when there is only one line:"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"```"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"if (condition) {"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"Basically Babylon.js comes with a plugin already defined for cannon.js"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"# Define your plugin"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"You can create your own plugin by creating a class that provides the following interface:"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function initialize()```: Must initialize your engine"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"use [gulp](https://github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp)"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"But you may want to work with all basic files. In this case, please download the code and use the following includes (be aware to have the babylon folder at the root of your site. If you want to use your own shaders in this case, you just have to reference them with a \"./\" at beginning):"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"```"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Math/babylon.math.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.database.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.tools.tga.js\"></script>"},{"src":"tutorials/General","name":"General","text":"* A very beginner-level tutorial called the Babylon.js Primer is [here](http://babylondocv2.azurewebsites.net/tutorials/A_Babylon.js_Primer) [old](http://babylondoc.azurewebsites.net/page.php?p=22621)."},{"src":"tutorials/General","name":"General","text":"* If you want to contribute code, please read the [approved naming conventions](http://babylondocv2.azurewebsites.net/tutorials/Approved_Naming_Conventions) [old](http://babylondoc.azurewebsites.net/page.php?p=22671)."},{"src":"tutorials/General","name":"General","text":"* Here is some information about [building your own mini-fied version of Babylon.js](http://babylondocv2.azurewebsites.net/tutorials/Creating_the_Mini-fied_Version) [old](http://babylondoc.azurewebsites.net/page.php?p=22641)."},{"src":"tutorials/General","name":"General","text":"* If you are interested in the .babylon file format, you can find a description [here](http://babylondocv2.azurewebsites.net/tutorials/File_Format_Map_(.babylon)) [old](http://babylondoc.azurewebsites.net/page.php?p=22661)."},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"You can find the complete loader code here:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Loading/Plugins/babylon.babylonFileLoader.js"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Basic types"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":".babylon files uses the following convention for basic types:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"* **Vector3**: An array of 3 floats ([x, y, z]). Example: [1.1, 2.2, 3.3]"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"The basic way to define the position of a mesh is the following:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.position = new BABYLON.Vector3(x, y, z);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"The translation is applied **AFTER** the rotation which can be set with euler angles or quaternions:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"Note: Careful, when you merge cloned mesh, you need to update the world matrix of the mesh with computeWorldMatrix before calling the function."},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"**Note: This article covers the internal merging process. You can also use ```BABYLON.VertexData``` object and its ```merge()``` function for a simpler solution.**"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"```Javascript"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"var mergeMeshes = function (meshName, arrayObj, scene) {"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayPos = [];"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"You can also create your own importer by providing a specific object to the ```BABYLON.SceneLoader.RegisterPlugin``` function."},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"This object must have three properties:"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* A list of supported file extensions (```extensions```)"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* An ```importMesh``` function to import specific meshes"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* A ```load``` function to import complete scene"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"This part is about the way to morph some kind of meshes.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"For now, it concerns only ribbons, tubes, extruded shapes and lines.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"When talking about morphing, we mean here changing the vertices positions of an existing mesh. Indices remain unchanged. This means the mesh keeps the same number of vertices, the same faces between vertices and it remains the same object in your code."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Only its vertices change their coordinates.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"If you handle a box or another fixed basic shape, it's quite easy to access to vertices positions because your mesh has an expected shape. For example, you can guess a box has 4 vertices per face.   "},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"For instance, you can specify that when the user clicks (or touches) a mesh, an action is executed."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"# How to use it"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"To use actions, you have to attach an `BABYLON.ActionManager` to a mesh or to your scene:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`mesh.actionManager = new BABYLON.ActionManager(scene);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Once the ActionManager is created, you can start registering actions:"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"This object allow you to generate 3D curves according to some complex math function. You can then get an array of successive points (_Vector3_) representing the curve."},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"##Quadratic Bezier curve"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"http://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_curves"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"![Wikipedia Quadratic Bezier Curve](http://upload.wikimedia.org/wikipedia/commons/3/3d/B%C3%A9zier_2_big.gif)"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"This class can be used to import meshes into a scene or load text and binary files."},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"## Using AssetsManager"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"To use it, you just have to instantiate it with a current scene:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"![Bones](http://www.babylonjs.com/Screenshots/bones.jpg)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"### Basics"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Basically a skeleton (```BABYLON.Skeleton```) contains a hierarchy of bones (```BABYLON.Bone```). A bone is defined by a name, a parent (can be null) and a transformation matrix."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Here are the constructors:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"Instances are built from a mesh with the following code:"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"```javascript"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"var mesh = newMeshes[0];"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"for (var index = 0; index < 100; index++) {"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"    var newInstance = mesh.createInstance(\"i\" + index);"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"}"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"Using it is pretty straightforward:"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"```"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"var renderer = scene.enableDepthRenderer();"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"```"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"Starting from there, the scene will fill for you the renderer with depth values. All active meshes (Meshes which are visible from the current camera point of view) are drawn by the DepthRenderer. "},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"This feature allows you to specify different meshes based on distance to viewer."},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"For instance, here is how to define 4 levels of details for a given mesh:"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"```javascript"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot00 = BABYLON.Mesh.CreateTorusKnot(\"knot0\", 0.5, 0.2, 128, 64, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot01 = BABYLON.Mesh.CreateTorusKnot(\"knot1\", 0.5, 0.2, 32, 16, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot02 = BABYLON.Mesh.CreateTorusKnot(\"knot2\", 0.5, 0.2, 24, 12, 2, 3, scene);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"![Lens flares](http://www.babylonjs.com/Screenshots/lens.jpg)"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"To do so, you have to first create a LensFlareSystem:"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"```javascript"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var lensFlareSystem = new BABYLON.LensFlareSystem(\"lensFlareSystem\", light0, scene);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"```"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"## Active cameras"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"Basically, a scene has a ```scene.activeCamera``` property to define the point of view. But you can also define many active cameras with the following code:"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"```javascript"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"scene.activeCameras.push(camera);"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"scene.activeCameras.push(camera2);"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"![](http://www.babylonjs.com/Screenshots/fresnel.jpg)"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"There are 4 of them:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* ```StandardMaterial.diffuseFresnelParameters```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* ```StandardMaterial.opacityFresnelParameters```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* ```StandardMaterial.reflectionFresnelParameters```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Given an array of successive _Vector3_, it allows you to construct a path in space by computing on each point a triplet of vectors, the tangent, the normal and the binormal to keep direction and consistency (reduction of rotations).  "},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Here is the model inspired from  : http://www.cs.cmu.edu/afs/andrew/scs/cs/15-462/web/old/asst2camera.html  "},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Each triplet can then be used as a local system coordinate. You could set for example a camera on each normal sliding along a curve."},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Here is a simple example of the visualisation of the triplets on a sinus curve : http://www.babylonjs-playground.com/#2DLXYB  "},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Please zoom in and rotate : tangents in red, normals in blue, binormal in green.  "},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"A render pipeline can be managed by enabling and disabling some effects and displaying a specific pass for debugging."},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"## Base Render Pipeline"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"![](https://raw.githubusercontent.com/michael-korbas/Babylon.js/Docs/Docs/RenderPipeline/Resources/Architecture.png)"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"Renders Pipelines are composed of serval classes."},{"src":"tutorials/How_to_use_Tiled_Grounds","name":"How_to_use_Tiled_Grounds","text":"## Please click [right here](http://makina-corpus.com/blog/metier/2014/how-to-use-multimaterials-with-a-tiled-ground-in-babylonjs)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"The SceneOptimizer tool is designed to help you reach a specific framerate by gracefully degrading rendering quality at runtime."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"# Basic usage"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"The main function you have to know is ```BABYLON.SceneOptimizer.OptimizeAsync()```. You can call this function when you want to optimize your scene. The simplest call you can do is the following:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```javascript"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"BABYLON.SceneOptimizer.OptimizeAsync(scene),"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"It derives from the [FreeCamera](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Cameras/babylon.freeCamera.js) to provide a FPS-like experience and instantiates 2 [VirtualJoystick](http://babylondoc.azurewebsites.net/page.php?p=25064) for you, automatically."},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"**Note:** We’re using the [W3C Pointer Events](http://www.w3.org/TR/pointerevents/) model. To enable touch on all devices &amp; platforms, we’re using our [Hand.js polyfill](http://handjs.codeplex.com/) library. Don’t forget to include it in your project, otherwise the virtual joysticks will only work in IE."},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"### Using the BABYLON.VirtualJoysticksCamera camera"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"It’s the same concept as all our cameras, 1 line of code to activate all the magic. For instance, here is how to create a virtual joysticks camera at the center of the world:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Tag? You may already have heard or read this word before. Let's see some generic concepts."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"### Tags are used:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"- as an index term assigned to a piece of information"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"- to pass parameters to subroutines"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"- as components of the HTML markup language"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"A ```layerMask``` is a number assigned to each mesh and camera. It is used at the bit level to indicate whether lights and cameras should shine-upon or show the mesh. The default value, 0x0FFFFFFF, will cause the mesh to be shined upon shown by any stock light and camera."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"The feature is used primarily when multiple cameras are active at the same time. If you wish to have a mesh that is always visible on the screen and pickable, e.g. a button, you might add a second camera and light to the scene to exclusively show and light it."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"You'll need the 2nd camera to ONLY see the button. The button should also only be visible once."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"Notice that the default ```layerMask``` starts with the first 4 bits being 0, or off. If the 2nd camera and button were to both have a ```layerMask``` with one of the 4 values below, then the 2nd camera would only see the button: - 0x10000000 - 0x20000000 - 0x40000000 - 0x80000000"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Level of Details is a powerful tool that was added to BabylonJS in version 2.0 . The concept is rather simple - When the camera is in a certain distance from the mesh, lowering the amount of faces displayed will increase performance without the user noticing the reduction."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"LOD requires the developer to add a few meshes to the original mesh. One of the ways to create those meshes is simplification. Many 3D tools offer various simplification algorithms. It is sometimes called Decimation."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Starting Version 2.0, Babylon.js offers an In-browser simplification functionality that works asynchronous while trying not to disturb the rendering process. Ths LOD levels will be automatically added to the scene after finishing the calculation."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"#Usage - Simplifying a mesh"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"More on wikipedia: http://en.wikipedia.org/wiki/Octree"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"Babylon.js supports octrees through a class named ```BABYLON.Octree```. Dedicated functions are available to help you create these octrees when required:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"# Optimizing meshes selection for rendering"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"If your scene has a lot of meshes, it can be useful to create an octree to speed visible meshes selection (e.g. finding meshes the camera can see). To do so, just call this function:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"There is another kind of mesh whose final shapes aren't fixed. Their final shape depends upon some parameters. So we call these meshes \"Parametric Shapes\"."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"## The Ribbon"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"The ribbon is a very simple and versatile shape. As it is very elementary, you can model almost any shape using a ribbon or many merged ribbons."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"![Ribbon](http://jerome.bousquie.fr/BJS/images/ribbon.png)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- Create a single texture and use it on all of the tables (but every table is going to look the same)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- Create a collection of various wood textures and apply them randomly to each table"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- Create a separate texture for each table, insuring that they each look different "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"No choice seems to be a good one."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-TXIlDKjJp9U/VW2qvPO0UbI/AAAAAAAAABY/ZLIuZI43XnE/h120/fig1.png) "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 1"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"NOTE - When a mesh is created its position and rotation are both set to (0, 0, 0)."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"In all figures X axis is red, Y axis is Green and Z axis is blue."},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"With a ctrl + print screen you can't make screenshot with higher resolution than your screen resolution. With BabylonJS screenshot feature you can, there is no problem with creating a 1920x1080 screenshot on a 800x600 screen (provided the graphics card is powerful enough to compute it)."},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"Another cool aspect of using this feature, is that you can use a non active camera to make the screenshot, so you can create many screenshots, without switching beetween your different cameras!"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"# How can we do it?"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"Simply by calling this method: `BABYLON.Tools.CreateScreenshot(engine, camera, size),`"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"You need to provide your BabylonJS engine, and the camera you want to use for the rendering."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"## Under the hood"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"_series of paths_"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"_paths with different lengths_"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"It's not mandatory that all paths have the same length.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"In this example, _path2_ and _path3_ are longer than _path1_ and _path4_ : http://www.babylonjs-playground.com/#88AZQ   "},{"src":"tutorials/Roadmap","name":"Roadmap","text":"Here are the next updates we will *probably* add to babylon.js:"},{"src":"tutorials/Roadmap","name":"Roadmap","text":"**vNext++:**"},{"src":"tutorials/Roadmap","name":"Roadmap","text":" * Generate incremental format from 3dsmax"},{"src":"tutorials/Roadmap","name":"Roadmap","text":" * Morph targets"},{"src":"tutorials/Roadmap","name":"Roadmap","text":" * Sprites collisions"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"##Vertex shader"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"First you need to declare a varying variable:"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"varying float fFogDistance;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"# The BabylonJS Playground!"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"![](http://urbanproductions.com/wingy/babylon/misc/playground02.jpg)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"A Saved 'Custom' Playground Scene: http://babylonjs-playground.azurewebsites.net/#QKQHS"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## What is it?"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"The BabylonJS Playground is an on-line white-boarding and experimenting application... used to assist in creating scenes for the Javascript-based BabylonJS webGL framework.&nbsp; Your browser must be WebGL-ready and have Javascript active... in order to use the playground.&nbsp; &nbsp;Most modern browsers have these capabilities."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"# General Considerations"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"A general rule of thumb in real-time 3D rendering is that drawing several overlapping opaque objects is always easier than non-opaque ones. This is due to the fact that opaque objects are compatible with the use of a depth buffer, and thus no specific order is required when rendering them."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"A depth buffer is a surface using the same dimensions as the screen, and holding for every pixel the following information: how far from the camera was the last pixel drawn here. With this information, we can draw as many objects as we want and always be sure that we will never draw something that was supposed to be hidden by another object. BabylonJS offers access to this information with a special DepthRenderer object, as described [here](http://doc.babylonjs.com/page.php?p=24825). "},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Rendering objects without a depth buffer would require resorting to an old-school technique called [*Painter's Algorithm*](http://en.wikipedia.org/wiki/Painter's_algorithm), which is extremely simple: draw further objects first. Sky, then backdrop, etc. all the way to foreground objects. This is basically ordering objects by distance from camera (a.k.a. depth), and clearly not enough for most cases."},{"src":"tutorials/Tutorials","name":"Tutorials","text":"Please click the little arrow next to the Tutorials folder on the sidebar.&nbsp; You will see that we have 4 categories of tutorials, all selectable directly from the sidebar 'treeview'.&nbsp; You may also choose from the list below."},{"src":"tutorials/Tutorials","name":"Tutorials","text":"* [The PlayPen Tutorials](http://babylondoc.azurewebsites.net/page.php?p=21901) - Beginner tutorials with playground demo scenes"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"* [The Mid-Level Tutorials](http://babylondoc.azurewebsites.net/page.php?p=21921) - More tutorials, some with playground demo scenes"},{"src":"tutorials/Tutorials","name":"Tutorials","text":"* [The Temechon Files](http://babylondoc.azurewebsites.net/page.php?p=21951) - Forum user Temechon's fine offsite tutorials and demos"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"![DoF example](http://imgur.com/I26fggX.png)  "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"_An example of what can be achieved with this postprocess pipeline._"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"You can see a live example of it here: [http://www.babylonjs-playground.com/#DX6AV#4](http://www.babylonjs-playground.com/#DX6AV#4)"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"## Using the UI"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can display the debug layer by calling:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.show();"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can also display the debug layer by choosing a camera if you use multiple cameras:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"A postprocess is linked to a camera and can be part of a chain of postprocesses where each postprocess uses the result of the previous one as input for its own processing."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"# Base postprocess"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Every postprocess is based upon ```BABYLON.PostProcess``` which uses this constructor:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"BABYLON.PostProcess = function (name, fragmentUrl, parameters, samplers, ratio, camera, samplingMode, engine, reusable)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"The train demo (focus on the tunnel) : http://reath.free.fr/HDR/test.html"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"## Instancing the pipeline ##"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```javascript"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"var hdr = new BABYLON.HDRRenderingPipeline(\"pipeline_name\", scene, ratio, originalPostProcess, cameras);"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"You can find an example in our playground [here](http://www.babylonjs-playground.com/?24)"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"The post-processes chain is defined by:"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"* Original scene color post-process: saves the original scene color"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"* SSAO post-process"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"* Horizontal blur post-process"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"* Vertical blur post-process"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"Watch the creators of Babylon.js in this entertaining deep dive into 3D game development, including a look at collisions, particles, shadows, and texture. Explore basic 3D concepts, create a 3D scene, and connect the 3D assets creation tool to your website or app."},{"src":"tutorials/Video_courses","name":"Video_courses","text":"**NOTE:** For the **sample code** used throughout this course, please visit: https://github.com/deltakosh/MVA3DHTML5GameDev"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"Instructors | [David Catuhe](http://twitter.com/deltakosh) - Microsoft Principal Program Manager; [David Rousset](http://twitter.com/davrous) - Microsoft Senior Program Manager"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"<img src=\"http://az612410.vo.msecnd.net/wwwbabylonjs/doc/agendavideoscourse.jpg\" alt=\"Agenda\" style=\"width: 600px;\"/>"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| Big Dogs | Cameras | Lights | Materials | Misc1 | Misc2 |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| :----------: | :---------: | :---------: | :---------: | :---------: | :---------: |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Scene**](http://babylondoc.azurewebsites.net/page.php?p=24482) | [**ArcRot**](http://babylondoc.azurewebsites.net/page.php?p=24458) | [**DirLight**](http://babylondoc.azurewebsites.net/page.php?p=24473) | [**Material**](http://babylondoc.azurewebsites.net/page.php?p=24520) | [**ActionManager**](http://babylondoc.azurewebsites.net/page.php?p=24496) | [**BoundingBox**](http://babylondoc.azurewebsites.net/page.php?p=24508) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Node**](http://babylondoc.azurewebsites.net/page.php?p=24456) | [**AnaglyphArcRot**](http://babylondoc.azurewebsites.net/page.php?p=24459) | [**HemiLight**](http://babylondoc.azurewebsites.net/page.php?p=24474) | [**StandardMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24523) | [**Animation**](http://babylondoc.azurewebsites.net/page.php?p=24502) | [**BoundingSphere**](http://babylondoc.azurewebsites.net/page.php?p=24510) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Mesh**](http://babylondoc.azurewebsites.net/page.php?p=24479) | [**Target**](http://babylondoc.azurewebsites.net/page.php?p=24460) | [**PointLight**](http://babylondoc.azurewebsites.net/page.php?p=24475) | [**MultiMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24521) | [**Effect**](http://babylondoc.azurewebsites.net/page.php?p=24519) | [**CSG**](http://babylondoc.azurewebsites.net/page.php?p=24543) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**AbstractMesh**](http://babylondoc.azurewebsites.net/page.php?p=24477) | [**Follow**](http://babylondoc.azurewebsites.net/page.php?p=24461) | [**SpotLight**](http://babylondoc.azurewebsites.net/page.php?p=24476) | [**ShaderMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24522) | [**LensFlare**](http://babylondoc.azurewebsites.net/page.php?p=24514) | DebugLayer |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Camera**](http://babylondoc.azurewebsites.net/page.php?p=24457) | [**Free**](http://babylondoc.azurewebsites.net/page.php?p=24462) | [**Light**](http://babylondoc.azurewebsites.net/page.php?p=24472) | []() | [**SceneOptimize**](http://babylondoc.azurewebsites.net/search.php?q=SceneOptimiz) | [**CannonJSPlugin**](http://babylondoc.azurewebsites.net/page.php?p=24552) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| Big Dogs | Cameras | Lights | Materials | Misc1 | Misc2 |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| :----------: | :---------: | :---------: | :---------: | :---------: | :---------: | "},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Scene**](http://babylondoc.azurewebsites.net/page.php?p=24894) | [**ArcRotate**](http://babylondoc.azurewebsites.net/page.php?p=24872) | [**DirLight**](http://babylondoc.azurewebsites.net/page.php?p=24885) | [**Material**](http://babylondoc.azurewebsites.net/page.php?p=24952) | [**ActionManager**](http://babylondoc.azurewebsites.net/page.php?p=24910) | [**BoundingBox**](http://babylondoc.azurewebsites.net/page.php?p=24939) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Node**](http://babylondoc.azurewebsites.net/page.php?p=24870) | [**AnaglyphArcRotate**](http://babylondoc.azurewebsites.net/page.php?p=24873) | [**HemiLight**](http://babylondoc.azurewebsites.net/page.php?p=24886) | [**StandardMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24955) | [**Animation**](http://babylondoc.azurewebsites.net/page.php?p=24916) | [**BoundingSphere**](http://babylondoc.azurewebsites.net/page.php?p=24941) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Mesh**](http://babylondoc.azurewebsites.net/page.php?p=24891) | [**Target**](http://babylondoc.azurewebsites.net/page.php?p=24874) | [**PointLight**](http://babylondoc.azurewebsites.net/page.php?p=24887) | [**MultiMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24953) | [**Effect**](http://babylondoc.azurewebsites.net/page.php?p=24951) | [**CSG**](http://babylondoc.azurewebsites.net/page.php?p=24991) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**AbstractMesh**](http://babylondoc.azurewebsites.net/page.php?p=24889) | [**Follow**](http://babylondoc.azurewebsites.net/page.php?p=24875) | [**SpotLight**](http://babylondoc.azurewebsites.net/page.php?p=24888)\t| [**ShaderMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24954) | [**LensFlare**](http://babylondoc.azurewebsites.net/page.php?p=24946) | [**DebugLayer**](http://babylondoc.azurewebsites.net/page.php?p=24944) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Camera**](http://babylondoc.azurewebsites.net/page.php?p=24871) | [**Free**](http://babylondoc.azurewebsites.net/page.php?p=24876) | [**Light**](http://babylondoc.azurewebsites.net/page.php?p=24884) | []() | [**SceneOptimizer**](http://babylondoc.azurewebsites.net/page.php?p=25058) | [**CannonJSPlugin**](http://babylondoc.azurewebsites.net/page.php?p=25008) |"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"Don't hesitate to perform your tests using the playground [here](http://www.babylonjs-playground.com/?25)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"## How to use it ? Easily ##"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"var vls = new BABYLON.VolumetricLightScatteringPostProcess('vls', 1.0, camera, lightSourceMesh, samplesNum, BABYLON.Texture.BILINEAR_SAMPLINGMODE, engine, false);"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"<iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/01/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"></iframe>"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"* **Mirror**"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Mirror textures are used to simulate “mirrors” (!) which means that babylon.js will compute the reflection and fill the texture with the results. A mirror texture must be set in the _reflectionTexture_&nbsp; channel of a _StandardMaterial_ :"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```javascript"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"var mirrorMaterial = new BABYLON.StandardMaterial(\"texture4\", scene);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"mirrorMaterial.reflectionTexture = new BABYLON.MirrorTexture(\"mirror\", 512, scene, true);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"mirrorMaterial.reflectionTexture.mirrorPlane = new BABYLON.Plane(0, -1.0, 0, -10.0);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"mirrorMaterial.reflectionTexture.renderList = [sphere1, sphere2];"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"### The HTML Part"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"First, create a basic HTML5 web page:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```html"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<!DOCTYPE html>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<html xmlns=\"http://www.w3.org/1999/xhtml\">"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <head>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      <title>Babylon - Basic scene</title>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   </head>"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Sprites](http://babylondocv2.azurewebsites.net/tutorials/08._Sprites) [Old](http://babylondoc.azurewebsites.net/page.php?p=22082)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Cameras, mesh collisions &amp; gravity](http://babylondocv2.azurewebsites.net/tutorials/09._Cameras,_Mesh_Collisions_and_Gravity) [Old](http://babylondoc.azurewebsites.net/page.php?p=22091)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Intersect collisions objects](http://babylondocv2.azurewebsites.net/tutorials/10._Intersect_Collisions_-_mesh) [Old](http://babylondoc.azurewebsites.net/page.php?p=22101)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Picking Collisions](http://babylondocv2.azurewebsites.net/tutorials/11._Picking_Collisions) [Old](http://babylondoc.azurewebsites.net/page.php?p=22111)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Particles](http://babylondocv2.azurewebsites.net/tutorials/12._Particles) [Old](http://babylondoc.azurewebsites.net/page.php?p=22121)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Environment](http://babylondocv2.azurewebsites.net/tutorials/13._Environment) [Old](http://babylondoc.azurewebsites.net/page.php?p=22131)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Height Map](http://babylondocv2.azurewebsites.net/tutorials/14._Height_Map) [Old](http://babylondoc.azurewebsites.net/page.php?p=22141)"},{"src":"tutorials/01._The_PlayPen_Tutorials","name":"01._The_PlayPen_Tutorials","text":"1. [Shadows](http://babylondocv2.azurewebsites.net/tutorials/15._Shadows) [Old](http://babylondoc.azurewebsites.net/page.php?p=22151)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Creating a Small 3D game with Babylon.js](http://babylondocv2.azurewebsites.net/tutorials/08._Creating_a_Small_3D_Game_with_Babylon.js) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/10/07/understanding-deviceorientation-events-by-creating-a-small-3d-game-with-babylon-js.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Using the Incremental Loading System](http://babylondocv2.azurewebsites.net/tutorials/09._Using_the_Incremental_Loading_System) [Old](http://babylondoc.azurewebsites.net/page.php?p=22251)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Using the Cannon.js Physics Engine](http://babylondocv2.azurewebsites.net/tutorials/10._Using_the_Cannon.js_Physics_Engine) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2013/12/19/create-wonderful-interactive-games-for-the-web-using-webgl-and-a-physics-engine-babylon-js-amp-cannon-js.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Using the Oimo.js Physics Engine](http://babylondocv2.azurewebsites.net/tutorials/11._Using_the_Oimo.js_Physics_Engine) [Ext](http://blogs.msdn.com/b/davrous/archive/2014/11/18/understanding-collisions-amp-physics-by-building-a-cool-webgl-babylon-js-demo-with-oimo-js.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Creating a 3D WebGL Procedural QR-Code Maze with Physics](http://babylondocv2.azurewebsites.net/tutorials/12._Creating_a_3D_WebGL_Procedural_QR-Code_Maze_with_Physics) [Ext](http://blogs.msdn.com/b/davrous/archive/2014/02/19/coding4fun-tutorial-creating-a-3d-webgl-procedural-qrcode-maze-with-babylon-js.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Using WebGL to Create Games for the Windows Store](http://babylondocv2.azurewebsites.net/tutorials/13._Using_WebGL_to_Create_Games_for_the_Windows_Store) [Ext](http://blogs.msdn.com/b/davrous/archive/2013/11/19/using-webgl-to-create-games-for-the-windows-store.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [The Babylon.JS Sandbox & Editor](http://babylondocv2.azurewebsites.net/tutorials/14._The_Babylon.js_Sandbox_and_Editor) [Ext](http://blogs.msdn.com/b/davrous/archive/2013/12/17/designers-test-amp-create-your-webgl-3d-worlds-inside-the-babylon-js-sandbox-amp-editor.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Understanding Shaders with Babylon.js and ShaderMaterial](http://babylondocv2.azurewebsites.net/tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial) [Ext](http://blogs.msdn.com/b/eternalcoding/archive/2014/04/17/learning-shaders-create-your-own-shaders-with-babylon-js.aspx)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Playing sounds and music](http://babylondocv2.azurewebsites.net/tutorials/16._Playing_sounds_and_music) [Old](http://doc.babylonjs.com/page.php?p=24824)"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Using decals](http://babylondocv2.azurewebsites.net/tutorials/17._Using_decals) [Old](http://doc.babylonjs.com/page.php?p=25094)"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"<iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/02/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"></iframe>"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Let's look at the createScene function used in Playground Demo 2:"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var createScene = function () {"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var camera = new BABYLON.ArcRotateCamera(\"Camera\", 3 * Math.PI / 2, Math.PI / 8, 50, BABYLON.Vector3.Zero(), scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;camera.attachControl(canvas, false);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var light = new BABYLON.HemisphericLight(\"hemi\", new BABYLON.Vector3(0, 1, 0), scene);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;var light = new BABYLON.PointLight(\"Omni\", new BABYLON.Vector3(0, 100, 100), scene);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;var camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0.8, 100, new BABYLON.Vector3.Zero(), scene);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"Then create as many boxes as you want:"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```javascript"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"//Creation of 3 boxes"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;var box1 = BABYLON.Mesh.CreateBox(\"Box1\", 6.0, scene);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;var box2 = BABYLON.Mesh.CreateBox(\"Box2\", 6.0, scene);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;var box3 = BABYLON.Mesh.CreateBox(\"Box3\", 6.0, scene);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;[…]"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* **Position**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"function createScene() {"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    var light = new BABYLON.PointLight(\"Omni\", new BABYLON.Vector3(0, 100, 100), scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    var camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0.8, 100, new BABYLON.Vector3.Zero(), scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    //Creation of spheres"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    var sphere1 = BABYLON.Mesh.CreateSphere(\"Sphere1\", 10.0, 6.0, scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    var sphere2 = BABYLON.Mesh.CreateSphere(\"Sphere2\", 2.0, 7.0, scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    var sphere3 = BABYLON.Mesh.CreateSphere(\"Sphere3\", 10.0, 8.0, scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"[…]"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    //Positioning the meshes"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Curve3](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Curve3) [Old](http://doc.babylonjs.com/page.php?p=25091)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Bones and Skeletons](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Bones_and_Skeletons) [Old](http://babylondoc.azurewebsites.net/page.php?p=22421)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use DepthRenderer to get depth values](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_DepthRenderer_to_get_depth_values) [Old](http://doc.babylonjs.com/page.php?p=24825)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use FresnelParameters](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_FresnelParameters) [Old](http://babylondoc.azurewebsites.net/page.php?p=22481)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Instances](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Instances) [Old](http://babylondoc.azurewebsites.net/page.php?p=22571)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use LOD](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_LOD) [Old](http://babylondoc.azurewebsites.net/page.php?p=22591)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Lens Flares](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Lens_Flares) [Old](http://babylondoc.azurewebsites.net/page.php?p=22471)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Multi-Views](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Multi-Views) [Old](http://babylondoc.azurewebsites.net/page.php?p=22461)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Path3D](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Path3D) [Old](http://doc.babylonjs.com/page.php?p=25090)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use PostProcessRenderPipeline](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_PostProcessRenderPipeline) [Old](http://babylondoc.azurewebsites.net/page.php?p=22441)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Postprocesses](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_PostProcesses) [Old](http://babylondoc.azurewebsites.net/page.php?p=22431)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Procedural Textures](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_Procedural_Textures) [Old](http://babylondoc.azurewebsites.net/page.php?p=22601)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use SceneOptimizer Tool](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_SceneOptimizer) [Old](http://babylondoc.azurewebsites.net/page.php?p=22581)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use Tiled Grounds](http://makina-corpus.com/blog/metier/how-to-use-multimaterials-with-a-tiled-ground-in-babylonjs)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use VirtualJoysticksCamera](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_VirtualJoysticksCamera) [Old](http://babylondoc.azurewebsites.net/page.php?p=22502)"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Here is how you construct a Babylon.js FreeCamera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// FreeCamera >> You can move around the scene with mouse and cursor keys"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.FreeCamera(\"FreeCamera\", new BABYLON.Vector3(0, 1, -15), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The FreeCamera is constructed aiming in a +z direction. The position numbers we used in the constructor above... place it in a useful starting position. FreeCameras have many properties that you can use to adjust your view. Some of the most commonly used properties are _position_, _rotation_, _speed_, _inertia_, and _fov_. The FreeCamera is also used as the base camera for many of our other cameras, so you will come to 'view' it as an old friend. Please see the [FreeCamera API page](http://babylondoc.azurewebsites.net/page.php?p=24876) for more information."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **ArcRotateCamera** - This is a type of camera that rotates around a given target pivot. It can be controlled with cursors and mouse, or with touch events. It requires a third-party file called “hand.js”. This file is included in many of our demos, or it can be downloaded by [**clicking right here**](http://handjs.codeplex.com/releases/view/119684)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Here is how you construct our handy ArcRotateCamera:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"During this tutorial, I will show you how to use every kind of light that is supported by Babylon.js."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"## Activating/Deactivating Lights ##"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Every light can be activated or deactivated by calling its *setEnabled(true/false)* method. You can also control the global intensity of any light by using the *intensity* property. It uses a floating point value (such as 1.5). An example near the end of this tutorial shows how to use both the *intensity* property and the *setEnabled()* method."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"## Lights types##"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Here we go... with our 4 cool Babylon.js light types:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"- **The Point Light**"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"* CSG: Constructive Solid Geometries *[38:21]*"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"&lt;iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/07/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"&gt;&lt;/iframe&gt;"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"Inside this **.manifest** file, insert the following piece of JSON:"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"```javascript"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"{"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"&nbsp; \"version\" : 1,"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"&nbsp; \"enableSceneOffline\" : true,"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"&nbsp; \"enableTexturesOffline\" : true"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"}"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"There are two primary ways of doing animations in your scene. The first is to define a collection of keys and defining your object's situation at each key. The second way is for more complex animations, when you change animation code at run time."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"**1 - Basic animation**"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"The animation is based on objects called Animation (!!). An Animation is defined by various properties and a collection of keys. Every key represents the value of the Animation at that key's given time."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"To achieve today’s animated scene, we begin by creating our environment:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"function createScene() {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;//Here... your basic scene as before: [scene, light, camera]"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"&lt;iframe src=\"//channel9.msdn.com/Series/Introduction-to-WebGL-3D-with-HTML5-and-Babylonjs/08/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"&gt;&lt;/iframe&gt;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"1- **Sprite manager**"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"If you want to use sprites, you need to create a “sprite manager” to optimize GPU resources by grouping in one place multiple instances of a sprite."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"This manager is mandatory, even if you want to create one sprite. You just have to write:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"// Create a sprite manager"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"var spriteManagerTrees = new BABYLON.SpriteManager(\"treesManagr\", \"Assets/Palm-arecaceae.png\", 2000, 800, scene);"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"When creating a sprite manager, you have to decide a few parameters:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"**1 - Define and apply gravity**"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"The first thing to do is to define our gravity vector, defining the G-force. In a classic world such as Earth, the direction of the force of gravity is down (negative) along the Y axis, but feel free to change it!"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"scene.gravity = new BABYLON.Vector3(0, -9.81, 0);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":" "},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Gravity can be applied to any camera that you have defined previously in your code."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript "},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"camera.applyGravity = true; "},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"We are going to talk about the scene above. The first and second sphere (balloon) will collide on the rotated ground, the last one will be in collision only on a single point. Once you have created this basic scene, continue reading to learn how to check collisions."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"* **Intersect mesh**"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"The point here is to check contact between our balloons and the ground. We will use the “intersectsMesh()” function, with two parameters: the mesh to be checked, and the precision of the intersection (boolean)."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"```javascript"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"if (balloon1.intersectsMesh(plan1, false)) {"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"&nbsp;&nbsp; balloon1.material.emissiveColor = new BABYLON.Color4(1, 0, 0, 1);"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"} else {"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"&nbsp;&nbsp; balloon1.material.emissiveColor = new BABYLON.Color4(1, 1, 1, 1);"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"## How can I do this ?"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Babylon engine lets you do this very easily by giving you useful functions."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"First of all, after creation of a plane representing the wall, and a plane with our impact’s picture, we have to detect a click on the UI (User Interface). Once the event is raised, use the function “pick” to get some powerful information about the relation between your click and your scene."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"```javascript"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"//When click event is raised"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"window.addEventListener(\"click\", function () {"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"   // We try to pick an object"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"   var pickResult = scene.pick(scene.pointerX, scene.pointerY);"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"}),"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"var fountain = BABYLON.Mesh.CreateBox(\"fountain\", 1.0, scene);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"The emitter acts as the source of the particles, and its location in 3D space determines where they are generated and how they move. So pay attention to the location/rotation of this object."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"In our case, the emitter is our fountain, but if you wish, you can use only a vector (BABYLON.Vector3) as an emitter."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Now, we must create a new (not-rendered) ParticleSystem object:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"var particleSystem = new BABYLON.ParticleSystem(\"particles\", 2000, scene, customEffect);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Those mountains are very easy to generate with Babylon.js, and with only a single function. But before we do that, we have to create a new material, like we have done many times before:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```javascript"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"var groundMaterial = new BABYLON.StandardMaterial(\"ground\", scene);"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"groundMaterial.diffuseTexture = new BABYLON.Texture(\"Earth__land.jpg\", scene);"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"var groundPlane = BABYLON.Mesh.CreatePlane(\"groundPlane\", 200.0, scene);"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"groundPlane.material = groundMaterial;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"![HeightMap2](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-1.png)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"* `scene.clearColor` - changes the 'background' color."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"* `scene.ambientColor` - changes the color used in several effects, including ambient lighting."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Both of them are very useful, and powerful in their own right."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"### Changing the Background color (`scene.clearColor`)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"The 'clearColor' property on the scene object is the most rudimentary of environment properties/adjustments. Simply stated, this is how you change the background color of the scene.&nbsp; Here is how it is done:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.clearColor = new BABYLON.Color3(0.5, 0.8, 0.5);"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"![Shadows2](http://www.babylonjs.com/tutorials/15%20-%20Shadows/15-1.png)"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"The two parameters used by the shadow generator are: the size of the shadow map, and which light is used for the shadow map's computation."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"var shadowGenerator = new BABYLON.ShadowGenerator(1024, light);"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Next, you have to define which shadows will be rendered. Here we want the shadow of our torus, but you can “push” any meshes you want:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript "},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"shadowGenerator.getShadowMap().renderList.push(torus);"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"* Instances: **\"#define INSTANCES\"** will be added. You will have to add *\"world0\"*, *\"world1\"*, *\"world2\"*, *\"world3\"* attributes to you shader like [here](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Shaders/default.vertex.fx#L132)"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"* Bones: **\"#define BONES\"**, **\"#define x\"** (Where x is the number of bones used), **\"#define BONES4\"** will be added. You need to add *BABYLON.VertexBuffer.MatricesIndicesKind* and *BABYLON.VertexBuffer.MatricesWeightsKind* to your attributes list like [here](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Shaders/default.vertex.fx#L137)"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"// Load the sound and play it automatically once ready"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"Music\", \"music.wav\", scene, null, { loop: true, autoplay: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* 1st parameter: the **name** of your sound. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* 2nd parameter: **URL** of the sound to load. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* 3rd parameter: **scene** to attach the sound to. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* 4th parameter: **function** being called-back once the sound is ready to be played, we’ll see that later. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* 5th parameter: a **JSON object** providing various options we’ll see in details. But you can already understand the goal of the 2 options provided."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can test this first sample into our playground: "},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"```"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"This function takes the following parameters:"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"* name of the new mesh (string)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"* source mesh (Mesh)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"* position on source mesh where to generate the decal (Vector3 expressed in world coordinates)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"* normal of the source mesh where the decal will generated (Vector3 expressed in world coordinates)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"* Size of the decal (Vector3)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"* rotation angle (0 by default)"},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"You can play with a sample here (Try to click on the cat):"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Simply put, you will need to use a browser that supports WebGL and has Javascript activated.&nbsp; Internet Explorer 11+, Firefox 4+, Google Chrome 9+, Opera 12+, etc.&nbsp; WebGL is also supported by many browsers for mobile devices.&nbsp; I will let you investigate the details of mobile WebGL, but know that Babylon.js has many features designed with mobile WebGL in mind.&nbsp; Additionally, Babylon.js has complete support for full-immersion stereoscopic viewing and virtual reality head gear!"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Useful Links ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| Clickable Link&nbsp; | What you will find |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| ------------- | ------------- |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| [**BabylonJS Main Website**](http://www.babylonjs.com/) |&nbsp; Many great demos and useful links near the bottom |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| [**BabylonJS Forum**](http://www.html5gamedevs.com/forum/16-babylonjs) | Ask questions, help others, meet great friends |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| [**BabylonJS GitHub Site**](http://www.babylonjs.com) |&nbsp; Downloads, tutorials, and many links (scroll down when there) |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| [**BabylonJS API Documentation**](http://doc.babylonjs.com) | A complete API map of all Babylon.js classes |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| [**BabylonJS Playground**](http://babylonjs-playground.azurewebsites.net) |&nbsp; On-line white-boarding and basic scene testing site |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"| [**BabylonJS Sandbox**](http://www.babylonjs.com/sandbox) | On-line site for testing .babylon files exported from modelers |"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Scene File Layout ##"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"    this.doSomething();"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"}"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"```"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Braces start on the same line and end on the next one"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Each new file must contain only one class"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"You have to use **TypeScript** to submit a pull request."},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"If you want to add a new file, please do the following as well:"},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Update gulp's [config.json](https://github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/config.json)"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function setGravity(gravity)```: Used by Babylon.js to set the current gravity"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function runOneStep(delta)```: babylon.js will call this function for each frame, giving you the delta time between current and previous frame. This is the responsibility of the plugin to update meshes' position and rotation accordingly to the physics simulation."},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function registerMesh(mesh, impostor, options)```: babylon.js will call this function when the user wants to create a physics impostor for a mesh. ```options``` parameter contains 3 values: ```mass```, ```friction``` and ```restitution```. Possible values for ```impostor``` are the following:"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"&nbsp; * NoImpostor = 0;"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"&nbsp; * SphereImpostor = 1;"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"&nbsp; * BoxImpostor = 2;"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"&nbsp; * PlaneImpostor = 3;"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"&nbsp; * CompoundImpostor = 4;"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"&nbsp; * MeshImpostor = 4;"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.tools.dds.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.smartCollection.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.smartArray.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.tools.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/babylon.engine.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/babylon.node.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.filesInput.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Collisions/babylon.pickingInfo.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Culling/babylon.boundingSphere.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Culling/babylon.boundingBox.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Culling/babylon.boundingInfo.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.abstractMesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Lights/babylon.light.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Lights/babylon.pointLight.js\"></script>"},{"src":"tutorials/General","name":"General","text":"* Want to render a Babylon scene on a PNG image?&nbsp; Check [here](http://babylondocv2.azurewebsites.net/tutorials/Render_Scene_on_a_PNG) [old](http://babylondoc.azurewebsites.net/page.php?p=22691)."},{"src":"tutorials/General","name":"General","text":"* You can discover what we plan to add to Babylon.js on our [roadmap](http://babylondocv2.azurewebsites.net/tutorials/Roadmap) [old](http://babylondoc.azurewebsites.net/page.php?p=22681)."},{"src":"tutorials/General","name":"General","text":"&nbsp;"},{"src":"tutorials/General","name":"General","text":"* Learn about our handy on-line Playground [here](http://babylondocv2.azurewebsites.net/tutorials/The_Playground_Tutorial) [old](http://babylondoc.azurewebsites.net/page.php?p=22631)."},{"src":"tutorials/General","name":"General","text":"* Our new [Classes Hotlist for v2.0 Classes](http://babylondocv2.azurewebsites.net/tutorials/v2.0_Classes_Hotlist) [old](http://babylondoc.azurewebsites.net/page.php?p=24845) might be handy."},{"src":"tutorials/General","name":"General","text":"* Our new [Classes Hotlist for v1.14 Classes](http://babylondocv2.azurewebsites.net/tutorials/v1.14_Classes_Hotlist) [old](http://babylondoc.azurewebsites.net/page.php?p=24846) might also be useful."},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"* **Vector4**: An array of 4 floats ([x, y, z, w]). Example: [1.1, 2.2, 3.3, 4.4]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"* **Color3**: An array of 3 floats between 0 and 1 ([r, g, b]). Example: [0.2, 0.3, 0.5]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"* **Matrix**: An array of 16 floats exposed with row first convention"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"* **Boolean**: true or false"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Global structure"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"The global structure of a .babylon file is the following:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoClear\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"clearColor\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"ambientColor\": color3,"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.rotation = new BABYLON.Vector3(x, y, z); // Euler"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.rotationQuaternion = new BABYLON.Quaternion(x, y, z, w); // Quaternion"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"The rotation is computed in the object local space. ```rotation``` will be used if ```rotationQuaternion``` property is null (This is the default behavior). ```rotationQuaternion``` is used if both are set."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"**You MUST use rotationQuaternion when creating physics objects.**"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"If you want to apply a translation of the local space you have to use the following code:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.setPositionWithLocalVector(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"You can also get the current position of the object but in local space and not in parent space with the following code:"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayNormal = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayUv = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayUv2 = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayColor = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayMatricesIndices = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayMatricesWeights = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var arrayIndice = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var savedPosition = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var savedNormal = [];"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var newMesh = new BABYLON.Mesh(meshName, scene);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var UVKind = true;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var UV2Kind = true;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var ColorKind = true;"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"Here is a sample importer object:"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"```javascript"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"    BABYLON.SceneLoader.RegisterPlugin({"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"        extensions: \".babylon\","},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"        importMesh: function (meshesNames, scene, data, rootUrl, meshes, particleSystems, skeletons) {"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"            return true;"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"        },"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"        load: function (scene, data, rootUrl) {"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"            return true;"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"        }"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"    });"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"But when handling parametric shapes like ribbons, tubes, etc, it becomes very difficult to guess how and where vertices were positioned by the mesh constructor algorithm. For a tube, for instance, you only know the axis path you gave to build it (and radius, tessellation, of course).   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"So you will learn here how to update the shape of an existing mesh and how to morph it in the render loop.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###Ribbon"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"#####_ribbon updatable parameter : pathArray_ "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"_(reminder : only points positions can change in the path array, not the number of points. Please see the summary at the bottom of this page for more details)_ "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Let's create a ribbon.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"As explained in the Ribbon tutorial part, a good way to create a ribbon is to fill many arrays with _Vector3_ with two _for_ loops : one for each path, another one for the array of paths : the _pathArray_.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Here we create a simple plane ribbon in the xOz plane   "},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```javascript"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"mesh.actionManager.registerAction(new BABYLON.InterpolateValueAction(BABYLON.ActionManager.OnPickTrigger, light, \"diffuse\", BABYLON.Color3.Black(), 1000));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"For instance this action will animate the `light.diffuse` property to black in 1000ms when the user picks the mesh."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"You can also chain actions:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```javascript"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"mesh.actionManager.registerAction(new BABYLON.InterpolateValueAction(BABYLON.ActionManager.OnPickTrigger, light, \"diffuse\", BABYLON.Color3.Black(), 1000))"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"        .then(new BABYLON.SetValueAction(BABYLON.ActionManager.NothingTrigger, mesh.material, \"wireframe\", false));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var bezier2 = BABYLON.Curve3.CreateQuadraticBezier(origin, control, destination, nb_of_points);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **origin** : _Vector3_ the origin point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **control** : _Vector3_ the control point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **destination** : _Vector3_ the destination point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **nb_of_points** : _number_ the wanted final curve number of points in the array."},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"This static method returns an instance of _Curve3_.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Just use the Curve3 _getPoints()_ method to fill your array : _getPoints()_ returns an array of successive _Vector3_.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"You can then use it for ribbons, tubes, extrusion paths, etc.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"The _length()_ method returns the curve length.   "},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"var assetsManager = new BABYLON.AssetsManager(scene);"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Then you can add tasks to the manager:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"var meshTask = assetsManager.addMeshTask(\"skull task\", \"\", \"./\", \"skull.babylon\");"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Each task provides an ```onSuccess``` and an ```onError``` callback:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"BABYLON.Skeleton = function (name, id, scene)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"BABYLON.Bone = function (name, skeleton, parentBone, matrix)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Inside a skeleton, bones can be found inside the ```skeleton.bones``` array."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"A bone can contain [animations](http://babylondoc.azurewebsites.net/page.php?p=22081) to animate its ```matrix``` property."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"### Preparing mesh"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"A skeleton can be applied to a mesh through the ```mesh.skeleton``` property."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"You should note that babylon.js supports up to **4 bones influences per vertex**."},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"A mesh can have as many instances as you want."},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"Each instance has the same material as the root mesh. They can only vary on the following properties:"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"* ```position```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"* ```rotation```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"* ```rotationQuaternion```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"* ```setPivotMatrix```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"* ```scaling```"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"# Support"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"Instances are supported for collisions, picking, rendering and shadows. Even if the current hardware does not support hardware accelerated instances, babylon.js will be able to optimize rendering to take instances into account."},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"# Using Blender to create instances"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"**Warning: Transparent meshes are not drawn because they are not written to the depth buffer**"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"You can then use the texture associated with the renderer like any other textures by using ```getDepthMap()``` function:"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"```"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"var mat = new BABYLON.StandardMaterial(\"mat01\", scene);"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"mat.emissiveTexture = renderer.getDepthMap(); "},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"```"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"If you want to disable the renderer, just call the following code:"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"```"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot03 = BABYLON.Mesh.CreateTorusKnot(\"knot3\", 0.5, 0.2, 16, 8, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(15, knot01);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(30, knot02);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(45, knot03);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(55, null);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"```"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"The first parameter used with ```addLODLevel``` defines the distance to the camera. Beyond this distance, the specified level is used."},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"Each level is independent and can have its own material."},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"By defining a level of detail to null, you disable rendering of the current mesh, when it is viewed beyond the indicated distance to camera."},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"When a mesh is used as a level of detail for another mesh, it is linked to it and cannot be rendered directly."},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"The second parameter defines the source (the emitter) of the lens flares (it can be a camera, a light or a mesh)."},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"Then, you can add flares to your system with the following code:"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"```javascript"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var flare00 = new BABYLON.LensFlare(0.2, 0, new BABYLON.Color3(1, 1, 1), \"Assets/lens5.png\", lensFlareSystem);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var flare01 = new BABYLON.LensFlare(0.5, 0.2, new BABYLON.Color3(0.5, 0.5, 1), \"Assets/lens4.png\", lensFlareSystem);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var flare02 = new BABYLON.LensFlare(0.2, 1.0, new BABYLON.Color3(1, 1, 1), \"Assets/lens4.png\", lensFlareSystem);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var flare03 = new BABYLON.LensFlare(0.4, 0.4, new BABYLON.Color3(1, 0.5, 1), \"Assets/Flare.png\", lensFlareSystem);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var flare04 = new BABYLON.LensFlare(0.1, 0.6, new BABYLON.Color3(1, 1, 1), \"Assets/lens5.png\", lensFlareSystem);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"var flare05 = new BABYLON.LensFlare(0.3, 0.8, new BABYLON.Color3(1, 1, 1), \"Assets/lens4.png\", lensFlareSystem);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"```"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"## Viewports"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"If you want to use many cameras, you will need to specify a viewport for each camera:"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"```javascript"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1.0);"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 1.0);"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"```"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"A viewport is defined by the following constructor:"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"```javascript"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"BABYLON.Viewport = function (x, y, width, height);"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* ```StandardMaterial.emissiveFresnelParameters```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"## How fresnel is working"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"A fresnel term is computed by the StandardMaterial in order to change the way a color is applied by using viewing angle."},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"For instance, you can simulate great glass or reflection effects by just using a simple fresnel. The fresnel will let you have more reflection on edges and not all on the center."},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"To do so, just use this code:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```javascript"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters = new BABYLON.FresnelParameters();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Another example to show how the triplets slightly rotate when the curve goes more into depth  : http://www.babylonjs-playground.com/#2DLXYB#1  "},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Path3D creation :"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```javascript"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var points = [v1, v2, ..., vn];          // array of Vector3"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var path3d = new BABYLON.Path3D(points);"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"You can then get the triplets. Each following methods return an array of _Vector3_ which are respectively on each curve point the tangent, normal and binormal vectors :"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```javascript"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var tangents = path3D.getTangents();"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var normals = path3D.getNormals();"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var binormals = path3D.getBinormals();"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"| Class | Description |"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|--------|--------|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`BABYLON.PostProcessRenderPipelineManager`**| Managing all pipelines, allow you to enable or disable an effect, displaying a pass of post process for debugging.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`BABYLON.PostProcessRenderPipeline`**|Set of effects that can be ordered.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`BABYLON.PostProcessRenderEffect`**|A render effect is a smart postprocess who can manage their own instances itself.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`BABYLON.PostProcessRenderPass`**|A render pass is a render texture that you can use in differents render effects.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"## Reference"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"### BABYLON.PostProcessRenderPipelineManager"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"You have to provide at least a scene. That previous code line is actually equivalent to this:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```javascript"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"BABYLON.SceneOptimizer.OptimizeAsync(scene, BABYLON.SceneOptimizerOptions.ModerateDegradationAllowed(),"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"function() {"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"   // On success"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"}, function() {"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"   // FPS target not reached"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"}),"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"```javascript"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"var VJC = new BABYLON.VirtualJoysticksCamera(\"VJC\", BABYLON.Vector3.Zero(), scene);"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"```"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"The camera constructor takes the following parameters:"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"- Name"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"- Position"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"- Scene"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"### Video"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"- as labels for specific revisions of a project"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"- as unique identifiers in URI"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"- as links to other Facebook pages"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"..."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"(from [Wikipedia](http://en.wikipedia.org/wiki/Tag))"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"### Tags on forums / Categories"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"If you spend some time on forums (let's pick one randomly: [forum](http://http://www.html5gamedevs.com/forum/16-babylonjs/) ;)), you may have noticed that tags are attached to topics (and/or posts sometimes)."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"The author can write words (tags) to shortly describe his/her topic without having to write a gramatically correct sentence. It's kind of a list of words that you could say during a brainstorming after reading the post."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Example of a topic with tags:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"It should also be noted that should a mesh with a ```layerMask``` of 0, can never be seen by anyone. This might be good for hiding things."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"To setup for multi-cameras:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"if (scene.activeCameras.length === 0){"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    scene.activeCameras.push(scene.activeCamera);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"}"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"var secondCamera = new Babylon.Camera(...);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"secondCamera.layerMask = 0x10000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"scene.activeCameras.push(secondCamera);"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Any object of the class BABYLON.Mesh has a \"simplify\" function with the following signature:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"public simplify(settings: Array<ISimplificationSettings>,"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"                parallelProcessing: boolean = true,"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"                type: SimplificationType = SimplificationType.QUADRATIC,"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"                successCallback?: () => void);"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* **settings**"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"var octree = scene.createOrUpdateSelectionOctree(capacity, maxDepth)"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"You can call the function each time you want to update your octree. This function accepts two parameters:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* capacity: defines the maximum number of meshes you want on your octree's leaves. The default value is 64."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* maxDepth: defines the maximum depth (sub-levels) for your octree. Default value is 2, which means 8 * 8 * 8 = 512 blocks :) (This parameter takes precedence over capacity.)"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"**Warning: Octrees can be counterproductive if there are not enough meshes in your scene**"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"# Managing dynamic meshes"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"The main problem with octrees is that your meshes must be static. Indeed, an octree is not dynamic which means that it cannot take into account a mesh's movement."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"If you want to have dynamic meshes while keeping your octree, you can just register a mesh as dynamic like this:"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"CreateRibbon(name, pathArray, closeArray, closePath, offset, scene, updatable, sideOrientation);"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **name** : string."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **pathArray** : an array of paths.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"As explained in the [Basic Elements](02. Discover Basic Elements) section, the ribbon is the surface between two, or more, paths.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"A path is a series of successive points in space (Vector3).  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"So a path can be designed by many ways : you can set points manually, import them from some set of data (json, etc), compute them with some maths function ... or even a bit of all of this.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"The javascript representation of a path is simply an array of Vector3.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"A path must have at least two points (four points if you provide a single path). "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"In order to create a ribbon, you just have to pass an array of paths. This array can contain only one path and in this case, the _offset_ parameter is used. "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Enter **procedural textures**. "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Procedural texturing is a way to programmatically create a texture. There are 2 types of procedural textures: code-only, and code that references some classic 2D images, sometimes called 'refMaps' or 'sampler' images."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"One main advantage of procedural textures is that they are written using a fragment shader (using GLSL in the case of Babylon.js). That means that the code generating the texture is executed by the GPU and not the CPU (that is to say, NOT executed in JavaScript code). This has a huge performance impact in a positive way."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Procedural textures can be generated:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- Only once to create the texture which is put into cache"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- Every 1, 2, 3, or 4, or more frames to be able to create an animated texture (like fire)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"##Position and Rotation Methods##"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"###Position###"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The easiest way of placing the pilot within the world is ``` pilot.position = new BABYLON.Vector3(x, y, z);``` and this is equivalent to"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position.x  =  x;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position.y  =  y;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position.z  =  z;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"See [Demo 1](http://www.babylonjs-playground.com/#UMR7M#5)"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"The size parameter could be like this:"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"* If you need a square screenshot (ratio 1:1) simply use this: `size = 512;`."},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"![size = 512 HillValley render](http://pix.keuse.fr/images/screencdc.png)"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"* If you want to have a custom width and height (like 600x400) use this: `size = { width: 600, height: 400};` if you provide only one parameter, it will compute the missing one to keep canvas ratio."},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"![600x400 HillValley render](http://pix.keuse.fr/images/screenvwv.png)"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"* If you just want to keep your canvas ratio, with more or less precision: `size = { precision: 2 }` (in this example a 800x600 canvas will give you a 1600x1200 screenshot)."},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"Example with precision 0.5 on my computer (the result is 960x503):"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"As you can see, the final ribbon adjust to different lengths. The rule is they all start from first path points and each intermediate ribbon then stops at first of its both constituting paths end.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"There is also no incidence on light reflection for ribbon with different length paths : http://www.babylonjs-playground.com/#88AZQ#1  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Therefore you **can't add a texture** for now to a ribbon constructed with different length paths.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"This is due to the fact that the nested ribbon texturing algorithm only knows how to deal with a unique length for all paths. Indeed, as a ribbon is a parametric shape, so unpredictable, it's assumed that we could unwrap a volumic ribbon (so each one of its paths) onto a full rectangular image and this assumption keeps consistency only with the same length for all paths.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"So it's not mandatory that all the ribbon paths have the same length, but it is hardly recommended.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The best way to emulate different lengths for some parts of your mesh is then to simply use many ribbons.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"## Closed shapes : normals or textures ?   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The ribbon mesh provides two ways to automatically close an unclosed shape."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* _closeArray_ parameter : this will add an extra unit ribbon between the last path and the first path of your _pathArray_.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* _closePath_ parameter : this will join the last and first points of each _path_ in your _pathArray_.  "},{"src":"tutorials/Roadmap","name":"Roadmap","text":" * Continuous update of octrees using webworkers"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"Then you have compute this value inside the shader:"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"fFogDistance = (view * worldPosition).z; // This is the distance of the vertex from the point of view of the camera (Camera space)"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"##Pixel shader"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"First you need to add the following code to be able to compute the fog accordingly to parameters sent by the scene:"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"#define FOGMODE_NONE 0."},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"#define FOGMODE_EXP 1."},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"#define FOGMODE_EXP2 2."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"Briefly said, you can enter or modify Javascript-based BabylonJS scene code on the left-side 'editor' portion of the playground, press the Run button, and the playground will attempt to render the webGL scene on the right side, using the latest version of the BabylonJS framework."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## The Top Menu"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"![](http://urbanproductions.com/wingy/babylon/misc/playground_tm01.jpg)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"The playground's top menu currently contains 8 buttons:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Run** - The Run button is easy to understand. After you paste-in code to the editor, or after you make changes to the code in the editor, you press **Run**.&nbsp; This commands the playground to try to render your scene."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Save** - The Save button will cause your scene to be permanently stored in the playground's database, and it will issue a unique URL, which we will talk more about, below.&nbsp; Don't worry about accidentally overwriting any of the pre-installed demo scenes in the playground.&nbsp; That is not allowed to happen. Often, the **Save** button is used so that you may share the scene's URL with others, or to allow you to bookmark the saved URL in your browser, and return to continue your 'play' at another time."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Get .zip** - The Get .zip button is a handy playground feature. If you wish to take your scene home, publish it on a web server, or hand it out to others, THIS is your button.&nbsp; **Get .zip** attempts to install your editor code into a single index.html file, and puts that file into a zip called sample.zip.&nbsp; Then it offers the sample.zip file to you, for downloading.&nbsp; Once downloaded and unzipped, you will see the file named index.html.&nbsp; You can browse this file with a webGL-ready browser, and your scene should render nicely in your browser.&nbsp; After you are sure that your index.html file is working properly, you may want to publish it to a web server and share your beautiful playground scene with the entire world.&nbsp; There is no need to install framework files such as babylon.js and hand.js in nearby directories, because the index.html file references the same on-line versions of the framework... as the playground itself uses.&nbsp; The index.html file is ready-to-run and completely portable.&nbsp; (We love it!)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Testing against a depth buffer during render is a very common technique, simple to implement and perfomrance-inexpensive. However, things get more complicated for non-opaque objects, as a depth buffer can't be used anymore (since these objects don't completely hide what's behind them)."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"This is what a depth buffer looks like for a scene which contains only opaque meshes:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"![Opaque only meshes](http://i.imgur.com/2iWCAwT.png)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"# Rendering Order"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"## General Order"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Before actually drawing meshes on the screen, BabylonJS puts them in the following categories, which are presented in the order in which they are drawn:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"Three post-processes are used in the pipeline:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"- First, a _'chromatic aberration'_ post-process, which shifts very slightly red, green and blue channels on screen. This effect is stronger on the edges. "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"- Second, a _'highlights enhancing'_ post-process, which keeps only highlights in the scene, to be used in the depth-of-field blur"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"- Third, a _'depth-of-field'_ post-process, which actually does a bit more than that: "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  - blur on the edge of the lens "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  - lens distortion "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  - depth-of-field blur based on actual optics equation (the simulated lens has an inverse focal length of 0.1) "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  - depth-of-field 'bokeh' effect (shapes appearing in blurred areas) "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  - grain effect (noise or custom texture) "},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  - darken out-of-focus objects "},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.show(true, camera);"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"![Debug layer](http://www.babylonjs.com/forumpics/debuglayer.jpg)"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"### Options"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"This panel is designed to control display of all options."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Statistics, Logs, Meshes tree check-boxes allow you to enable/disable others panels"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Bounding boxes check-box can be used to force the display of all bounding boxes"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Clickable labels check-box can display a label for every node (Meshes, cameras and lights). These labels can be clicked to:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":" * Display an overlay on meshes"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"We will get back to _fragmentUrl_, _parameters_ and _samplers_ parameters."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The _ratio_ is used to define the size of the postprocess (0.5 means that your postprocess will have a width = canvas.width * 0.5 and a height = canvas.height * 0.5)."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The _camera_ parameter is self-explanatory."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The _samplingMode_ can be one of the following:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* BABYLON.Texture.NEAREST_SAMPLINGMODE"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* BABYLON.Texture.BILINEAR_SAMPLINGMODE (**default**)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* BABYLON.Texture.TRILINEAR_SAMPLINGMODE"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The _engine_ parameter is the engine where you want to attach your postprocess."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"The parameter ```originalPostProcess``` is the base color post-process for the pipeline. If ```null```, a ```BABYLON.PassPostProcess``` is created by default."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"The parameter ```cameras``` is an array of cameras on which the pipeline will be attached to."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"## Remove the pipeline ##"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```javascript"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.dispose();"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"Will detach the pipeline from all cameras of the previously given scene."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"## Working with parameters ##"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"* Combine post-process: blends the Vertical blur post-process output with the original scene color"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"Using it is pretty straightforward:"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"var ssao = new BABYLON.SSAORenderingPipeline('ssaopipeline', scene, 0.75);"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"The third argument is the ratio used by SSAO, Horizontal blur and Vertical blur post-processes"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"You can also set an array of Camera as fourth argument, then the constructor will automatically attach the rendering pipeline to the given cameras like:"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"var ssao = new BABYLON.SSAORenderingPipeline('ssaopipeline', scene, 0.75, [camera1 etc.]);"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"1. [3D on the Web: Understanding the Basics](http://doc.babylonjs.com/page.php?p=24827)"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"2. [WebGL Basics](http://doc.babylonjs.com/page.php?p=24828)"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"3. [Using Babylon.js for Beginners](http://doc.babylonjs.com/page.php?p=24829)"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"4. [Understanding Materials and Inputs](http://doc.babylonjs.com/page.php?p=24830)"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"5. [Game Pipeline Integration with Babylon.js](http://doc.babylonjs.com/page.php?p=24831)"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"6. [Loading Assets](http://doc.babylonjs.com/page.php?p=24832)"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"7. [Babylon.js: Advanced Features](http://doc.babylonjs.com/page.php?p=24833)"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Light**](http://babylondoc.azurewebsites.net/page.php?p=24472) | [**AnaglyphFree**](http://babylondoc.azurewebsites.net/page.php?p=24463) | []() | []() | [**Skeleton/Bone**](http://babylondoc.azurewebsites.net/search.php?q=bone) | [**OimoJSPlugin**](http://babylondoc.azurewebsites.net/page.php?p=24553) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**StandardMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24523) | [**DeviceOrient**](http://babylondoc.azurewebsites.net/page.php?p=24464) | **DataTypes** | **Textures** | Sound | [**Layer**](http://babylondoc.azurewebsites.net/page.php?p=24513) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Material**](http://babylondoc.azurewebsites.net/page.php?p=24520) | [**Gamepad**](http://babylondoc.azurewebsites.net/page.php?p=24586) | [**Color3**](http://babylondoc.azurewebsites.net/page.php?p=24532) | [**Texture**](http://babylondoc.azurewebsites.net/page.php?p=24527) | [**SubMesh**](http://babylondoc.azurewebsites.net/page.php?p=24547) | [**PickingInfo**](http://babylondoc.azurewebsites.net/page.php?p=24507) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Texture**](http://babylondoc.azurewebsites.net/page.php?p=24527) | [**Oculus**](http://babylondoc.azurewebsites.net/page.php?p=24466) | [**Color4**](http://babylondoc.azurewebsites.net/page.php?p=24533) | [**BaseTexture**](http://babylondoc.azurewebsites.net/page.php?p=24525) | [**Tags**](http://babylondoc.azurewebsites.net/page.php?p=24591) | [**PostProcess**](http://babylondoc.azurewebsites.net/search.php?q=PostProcess) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**BaseTexture**](http://babylondoc.azurewebsites.net/page.php?p=24525) | [**VrDeviceOrient**](http://babylondoc.azurewebsites.net/page.php?p=24467) | [**Matrix**](http://babylondoc.azurewebsites.net/page.php?p=24537) | [**CubeTexture**](http://babylondoc.azurewebsites.net/page.php?p=24526) | [**VertexData**](http://babylondoc.azurewebsites.net/page.php?p=24546) | []() |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**ParticleSystem**](http://babylondoc.azurewebsites.net/page.php?p=24550) | [**WebVR**](http://babylondoc.azurewebsites.net/page.php?p=24468) | [**Quaternion**](http://babylondoc.azurewebsites.net/page.php?p=24536) | [**DynamicTexture**](http://babylondoc.azurewebsites.net/page.php?p=24528) | [**ViewPort**](http://babylondoc.azurewebsites.net/page.php?p=24539) | [**AssetsManager**](http://babylondoc.azurewebsites.net/page.php?p=24581) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**ShadowGenerator**](http://babylondoc.azurewebsites.net/page.php?p=24516) | [**OculusGamepad**](http://babylondoc.azurewebsites.net/page.php?p=24469) | [**Vector2**](http://babylondoc.azurewebsites.net/page.php?p=24534) | ProceduralTexture | [**VirtualJoystick**](http://babylondoc.azurewebsites.net/page.php?p=24593) | [**Ray**](http://babylondoc.azurewebsites.net/page.php?p=24541) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**SceneLoader**](http://babylondoc.azurewebsites.net/page.php?p=24517) | [**Touch**](http://babylondoc.azurewebsites.net/page.php?p=24470) | [**Vector3**](http://babylondoc.azurewebsites.net/page.php?p=24535) | [**MirrorTexture**](http://babylondoc.azurewebsites.net/page.php?p=24530) | [**Gamepad**](http://babylondoc.azurewebsites.net/page.php?p=24586) | [**Collider**](http://babylondoc.azurewebsites.net/page.php?p=24505) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**SpriteManager**](http://babylondoc.azurewebsites.net/page.php?p=24575) | [**VirtualJoysticks**](http://babylondoc.azurewebsites.net/page.php?p=24471) | Vector4 | [**VideoTexture**](http://babylondoc.azurewebsites.net/page.php?p=24531) | [**FresnelParameters**](http://babylondoc.azurewebsites.net/page.php?p=24524) | EasingFunction |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Tools**](http://babylondoc.azurewebsites.net/page.php?p=24592) | [**Camera**](http://babylondoc.azurewebsites.net/page.php?p=24457) | [**Collection**](http://babylondoc.azurewebsites.net/page.php?p=24613) | []() | [**Geometry**](http://babylondoc.azurewebsites.net/page.php?p=24544) | [**Plane**](http://babylondoc.azurewebsites.net/page.php?p=24538) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"| [**Engine**](http://babylondoc.azurewebsites.net/page.php?p=24455) | []() | [**SmartArray**](http://babylondoc.azurewebsites.net/page.php?p=24590) | []() | [**Octree**](http://babylondoc.azurewebsites.net/page.php?p=24511) | [**All Classes**](http://babylondoc.azurewebsites.net/search.php?q=) |"},{"src":"tutorials/v1.14_Classes_Hotlist","name":"v1.14_Classes_Hotlist","text":"[Some links are searches.  Expect artifacts and search overshoot.]"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Light**](http://babylondoc.azurewebsites.net/page.php?p=24884) | [**AnaglyphFree**](http://babylondoc.azurewebsites.net/page.php?p=24877) | []() | []() | [**Skeleton**](http://babylondoc.azurewebsites.net/page.php?p=24935)/[**Bone**](http://babylondoc.azurewebsites.net/page.php?p=24934) | [**OimoJSPlugin**](http://babylondoc.azurewebsites.net/page.php?p=25009) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**StandardMaterial**](http://babylondoc.azurewebsites.net/page.php?p=24955) | [**DeviceOrientation**](http://babylondoc.azurewebsites.net/page.php?p=24878) | **DataTypes** | **Textures** | [**Sound**](http://babylondoc.azurewebsites.net/page.php?p=24932) | [**Layer**](http://babylondoc.azurewebsites.net/page.php?p=24945) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Material**](http://babylondoc.azurewebsites.net/page.php?p=24952) | [**Gamepad**](http://babylondoc.azurewebsites.net/page.php?p=24879)\t| [**Color3**](http://babylondoc.azurewebsites.net/page.php?p=24974) | [**Texture**](http://babylondoc.azurewebsites.net/page.php?p=24959) | [**SubMesh**](http://babylondoc.azurewebsites.net/page.php?p=25003) | [**PickingInfo**](http://babylondoc.azurewebsites.net/page.php?p=24938)\t|"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Texture**](http://babylondoc.azurewebsites.net/page.php?p=24959) | [**Oculus**](http://babylondoc.azurewebsites.net/page.php?p=24882) | [**Color4**](http://babylondoc.azurewebsites.net/page.php?p=24975) | [**BaseTexture**](http://babylondoc.azurewebsites.net/page.php?p=24957) | [**Tags**](http://babylondoc.azurewebsites.net/page.php?p=25061)&nbsp; &nbsp;&nbsp; &nbsp;| [**PostProcess**](http://babylondoc.azurewebsites.net/page.php?p=25010)\t|"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**BaseTexture**](http://babylondoc.azurewebsites.net/page.php?p=24957) | [**VrDeviceOrient**](http://babylondoc.azurewebsites.net/search.php?q=vrdevice) | [**Matrix**](http://babylondoc.azurewebsites.net/page.php?p=24980) | [**CubeTexture**](http://babylondoc.azurewebsites.net/page.php?p=24958) | [**VertexData**](http://babylondoc.azurewebsites.net/page.php?p=24994) | []() |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**ParticleSystem**](http://babylondoc.azurewebsites.net/page.php?p=25006) | [**WebVR**](http://babylondoc.azurewebsites.net/search.php?q=webvr) | [**Quaternion**](http://babylondoc.azurewebsites.net/page.php?p=24979) | [**DynamicTexture**](http://babylondoc.azurewebsites.net/page.php?p=24960) | [**ViewPort**](http://babylondoc.azurewebsites.net/page.php?p=24982) | [**AssetsManager**](http://babylondoc.azurewebsites.net/page.php?p=25040) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**ShadowGenerator**](http://babylondoc.azurewebsites.net/page.php?p=24948) | [**OculusGamepad**](http://babylondoc.azurewebsites.net/page.php?p=24883) | [**Vector2**](http://babylondoc.azurewebsites.net/page.php?p=24976) | [**ProceduralTexture**](http://babylondoc.azurewebsites.net/page.php?p=24965) | [**VirtualJoystick**](http://babylondoc.azurewebsites.net/page.php?p=25064) | [**Ray**](http://babylondoc.azurewebsites.net/page.php?p=24984) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**SceneLoader**](http://babylondoc.azurewebsites.net/page.php?p=24949) | [**Touch**](http://babylondoc.azurewebsites.net/page.php?p=24880) | [**Vector3**](http://babylondoc.azurewebsites.net/page.php?p=24977) | [**MirrorTexture**](http://babylondoc.azurewebsites.net/page.php?p=24963) | [**Gamepad**](http://babylondoc.azurewebsites.net/page.php?p=25045) | [**Collider**](http://babylondoc.azurewebsites.net/page.php?p=24936) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**SpriteManager**](http://babylondoc.azurewebsites.net/page.php?p=25034) | [**VirtualJoysticks**](http://babylondoc.azurewebsites.net/page.php?p=24881) | [**Vector4**](http://babylondoc.azurewebsites.net/page.php?p=24978) | [**VideoTexture**](http://babylondoc.azurewebsites.net/page.php?p=24964) | [**FresnelParams**](http://babylondoc.azurewebsites.net/page.php?p=24956) | [**EasingFunction**](http://babylondoc.azurewebsites.net/page.php?p=24917) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Tools**](http://babylondoc.azurewebsites.net/page.php?p=25062) | [**Camera**](http://babylondoc.azurewebsites.net/page.php?p=24871) | [**Collection**](http://babylondoc.azurewebsites.net/page.php?p=25087) | []() | [**Geometry**](http://babylondoc.azurewebsites.net/page.php?p=24992) | [**Plane**](http://babylondoc.azurewebsites.net/page.php?p=24981) |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| [**Engine**](http://babylondoc.azurewebsites.net/page.php?p=24869) | []()\t| [**SmartArray**](http://babylondoc.azurewebsites.net/page.php?p=25060) | []() | [**Octree**](http://babylondoc.azurewebsites.net/page.php?p=24942) | []() |"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"| []() | []() | [**SmartCollection**]() | []() | []() | [**All Classes**](http://babylondoc.azurewebsites.net/search.php?q=) |"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"*** Parameters ***"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- name - The post-process name {string}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- ratio - The size of the post-process and/or internal pass (0.5 means that your postprocess will have a width = canvas.width 0.5 and a height = canvas.height 0.5) {any}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- camera - The camera that the post-process will be attached to {BABYLON.Camera}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- lightSourceMesh - The mesh used as light source to create the light scattering effect (for example, a billboard with its texture simulating the sun) {BABYLON.Mesh}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- samplesNum - The post-process quality, default 100 {number}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- samplingMode - The post-process filtering mode {number}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- engine - The Babylon engine {BABYLON.Engine}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- reusable - If the post-process is reusable {boolean}"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- scene - If \"camera\" parameter is null (adding the post-process in a rendering pipeline), scene is needed to configure the internal pass {BABYLON.Scene}"},{"src":"tutorials/01._3D_on_the_Web_Understanding_the_Basics","name":"01._3D_on_the_Web_Understanding_the_Basics","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%201)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"A _mirrorTexture_ is created with a parameter that specifies the size of the rendering buffer (512x512 here, better reflection quality if increased)."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Then you have to define the reflection plane and a render list (the list of meshes to render inside the mirror)."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"You can also use a [CubeTexture](http://babylondoc.azurewebsites.net/page.php?p=24958) as a reflectionTexture on a StandardMaterial."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```javascript"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"material.reflectionTexture = new BABYLON.CubeTexture(\"textures/TropicalSunnyDay\", scene);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Like the CubeTextures used in skyboxes, the textures/TropicalSunnyDay directory must contain 6 textures, covering all 6 directions of the cube.&nbsp; Each image must be named according to the corresponding CubeTexture face: “TropicalSunnyDay_nx.jpg”, “TropicalSunnyDay_ny.jpg”, “TropicalSunnyDay_nz.jpg”, “TropicalSunnyDay_px.jpg”, “TropicalSunnyDay_py.jpg”, “TropicalSunnyDay_pz.jpg”."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"You can see this nice advanced texturing technique... in [this playground scene](http://babylonjs-playground.azurewebsites.net/#IRZYH), and in this [Fresnel](http://babylondoc.azurewebsites.net/page.php?p=24956)-enhanced [playground scene](http://babylonjs-playground.azurewebsites.net/#SBTYP), as well."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"* **Bump Mapping**"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Bump mapping is a technique in computer graphics to make a rendered surface look more realistic without modifying surface geometry. This is only a texture modification, so computation is the same but rendering is much better, have a look:"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"![bumpMap](http://www.babylonjs.com/tutorials/Advanced%20Texturing/1.png)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"The bump texture simulates bumps and dents using a map called a normal map."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <body>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   </body>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</html>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"### The CSS Style Part"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Inside the ```<head>``` part, please add this CSS to view the canvas in maximum size:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```css"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<style>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  html, body {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    overflow: hidden;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    width: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    height: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    margin: 0;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    padding: 0;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  }"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  #renderCanvas {"},{"src":"tutorials/02._Mid-Level_Tutorials","name":"02._Mid-Level_Tutorials","text":"1. [Position, Rotate, Translate and Spaces](http://babylondocv2.azurewebsites.net/tutorials/Position,_Rotate,_Translate_and_Spaces) [Old](http://doc.babylonjs.com/page.php?p=25110)"},{"src":"tutorials/02._WebGL_Basics","name":"02._WebGL_Basics","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%202)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//Creation of a box"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//(name of the box, size, scene)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var box = BABYLON.Mesh.CreateBox(\"box\", 6.0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//Creation of a sphere "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//(name of the sphere, segments, diameter, scene) "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var sphere = BABYLON.Mesh.CreateSphere(\"sphere\", 10.0, 10.0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//Creation of a plane"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//(name of the plane, size, scene)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var plane = BABYLON.Mesh.CreatePlane(\"plane\", 10.0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//Creation of a cylinder"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;//(name, height, diamTop, diamBottom, tessellation, [optional height subdivs], scene, updatable)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var cylinder = BABYLON.Mesh.CreateCylinder(\"cylinder\", 3, 3, 3, 6, 1, scene, false);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;// Creation of a torus"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;// (name, diameter, thickness, tessellation, scene, updatable)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var torus = BABYLON.Mesh.CreateTorus(\"torus\", 5, 1, 10, scene, false);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"You can easily position any boxes in the scene, anywhere you like. For example:"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```javascript"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"//Positioning the boxes"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"box1.position = new BABYLON.Vector3(-20,0,0);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"box2.position.x = -10; // or box2.position = new BABYLON.Vector3(-10,0,0);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"box3.position.x = 0;"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"And now, with the same ease of coding, you can rotate boxes around any axes.&nbsp; For example:"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* **Rotation** (angles are in radians)"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```javascript"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;//Rotate the box around the x axis"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;box1.rotation.x = Math.PI/4; // or box1.rotation = new BABYLON.Vector3(Math.PI/4,0,0);"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;//Rotate the box around the y axis"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;box2.rotation.y = Math.PI/6;"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* **Scaling**"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"And yes, it is just as easy to scale the boxes along any axes.&nbsp; For example:"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```javascript"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"//Scaling of 2x on the x axis"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;box3.scaling.x = 2; // or box3.scaling = new BABYLON.Vector3(2,1,1);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    sphere1.position.x = -40;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"    sphere2.position.x = -30;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"So far, you only have some grey-colored meshes. How drab! To apply a material to them, you will need to create a new material object like this:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"var materialSphere1 = new BABYLON.StandardMaterial(\"texture1\", scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"And apply this material to the object of your choice, e.g.:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"sphere1.material = materialSphere1;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Or, create and apply all in one step:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"sphere1.material = new BABYLON.StandardMaterial(\"texture1\", scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"“I tested my scene, and …nothing changed…”"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Exactly, because this material is the default one. You have to customize it as you like. You won’t change the mesh itself, but just the material."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"“So how can I adjust my material to give the perfect look to my object?”"},{"src":"tutorials/03._Using_Babylon.js_for_Beginners","name":"03._Using_Babylon.js_for_Beginners","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%203)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [How to use the Tags System](http://babylondocv2.azurewebsites.net/tutorials/How_to_use_the_Tags_System) [Old](http://babylondoc.azurewebsites.net/page.php?p=22521)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [In-Browser Mesh Simplification (Auto-LOD)](http://babylondocv2.azurewebsites.net/tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)) [Old](http://doc.babylonjs.com/page.php?p=24822)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Optimizing Your Scene with Octrees](http://babylondocv2.azurewebsites.net/tutorials/Optimizing_Your_Scene_with_Octrees) [Old](http://babylondoc.azurewebsites.net/page.php?p=22561)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Transparency and How Meshes Are Rendered](http://babylondocv2.azurewebsites.net/tutorials/Transparency_and_How_Meshes_Are_Rendered) [Old](http://doc.babylonjs.com/page.php?p=25100)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Using depth-of-field and other lens effects](http://babylondocv2.azurewebsites.net/tutorials/Using_depth-of-field_and_other_lens_effects) [Old](http://doc.babylonjs.com/page.php?p=24841)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Using the Debug Layer](http://babylondocv2.azurewebsites.net/tutorials/Using_the_Debug_Layer) [Old](http://babylondoc.azurewebsites.net/page.php?p=22611)"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Using the SSAO rendering pipeline](http://babylondocv2.azurewebsites.net/tutorials/Using_the_SSAO_rendering_pipeline) [Old](http://doc.babylonjs.com/page.php?p=24837)"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// ArcRotateCamera >> Camera turning around a 3D point (here Vector zero) with mouse and cursor keys"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, alpha, beta, radius, target, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   var camera = new BABYLON.ArcRotateCamera(\"ArcRotateCamera\", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The ArcRotateCamera is a little strange to use, at first, but in no time, you will be using them often and easily. There are three unique properties on the ArcRotateCamera which are named _alpha_ (in radians), _beta_ (in radians), and _radius_ (a number). If you imagine an ArcRotateCamera being a satellite orbiting the Earth, then the _alpha_ is the longitudinal or sideways axis, the _beta_ is the latitudinal or up/down axis, and the _radius_ is the altitude or height (distance) from the Earth's core. Here is an illustration:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"![](http://urbanproductions.com/wingy/babylon/misc/arc01.jpg)"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The ArcRotateCamera has many properties that you can use to adjust your view. Some of the most commonly used properties are _alpha_, _beta_, _radius_, _target_, _speed_, _inertia_, and _fov_."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"By default, (with no .alpha and .beta values set), ArcRotateCameras aim in a +x direction. Ironically, there is no rotation property on an ArcRotateCamera, but there is a position property. Because the orientation of an ArcRotateCamera is relative to its _target_ setting, it is wise to use a handy method called _setPosition()_ to set the camera position."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"In the example below, we will construct an ArcRotateCamera with a target of 'Zero()' and no initial _alpha_, _beta_, or _radius_ values. (Be warned: A zeroed-out ArcRotateCamera aims in a strange way until _setPosition()_ is called). Then we will use the setPosition() function with a common Vector3 position value... to set our _alpha_, _beta_, and _radius_ values all at once, automatically:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   // Create an ArcRotateCamera aimed at 0,0,0, with no alpha, beta or radius, so be careful. It will look broken."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   var camera = new BABYLON.ArcRotateCamera(\"ArcRotateCamera\", 0, 0, 0, BABYLON.Vector3.Zero(), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   // Quick, let's use the setPosition() method... with a common Vector3 position, to make our camera better aimed."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   camera.setPosition(new BABYLON.Vector3(0, 15, -30));"},{"src":"tutorials/04._Understanding_Materials_and_Inputs","name":"04._Understanding_Materials_and_Inputs","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%204)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"A point light is a light defined by an unique point in world space. The light is emitted in every direction from this point. A good example of a point light is the sun."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"You can control the color of any light... with the *diffuse* and *specular* properties:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"var light0 = new BABYLON.PointLight(\"Omni0\", new BABYLON.Vector3(1, 10, 1), scene);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.diffuse = new BABYLON.Color3(1, 0, 0);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.specular = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-44-73-metablogapi/8484.image_5F00_thumb_5F00_53D78E00.png)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"_Red diffuse point light with white specular_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"- **The Directional Light**"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"A directional light is defined by a direction (what a surprise!). The light is emitted from everywhere... toward a specific direction, and has an infinite range. By default, the directional light is created at origin (0,0,0) position. Like a point light, you can control the color of the light with the *diffuse* and *specular* properties:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Loading_Assets","name":"06._Loading_Assets","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%206)"},{"src":"tutorials/07._Babylon.js_Advanced_Features","name":"07._Babylon.js_Advanced_Features","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%207)"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"When you’re loading a scene using the Babylon engine, one of the first things it will try is loading this manifest file and checking this JSON description. If not found (404), it will directly load the resources from the web. If found, it will load the values. You can then change those values anytime, they will be verified every time the engine loads your scene."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"You have 3 parameters to fill:"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"1. The first one is _**version**_ and must be an integer. It’s simply the current version of your assets. If you’re changing it, the Babylon engine will detect that change during the next reload of your scene.&nbsp; This will force a complete reload &amp;amp; update of all the assets into the browser’s database. This can be useful is you want to be sure that the client browser is using up-to-date textures or scene description recently put on your web server."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"2. The second parameter _**enableSceneOffline**_ is a boolean. If set to true, you will be asking to load the JSON associated with your scene (the file with the .babylon extension) and store it into the local database of the user. Next time the user loads the game, the scene description will be directly loaded from the DB rather than from the hosting web server."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"3. The third parameter _**enableTexturesOffline**_ is also a boolean. This time, you will be asking the Babylon engine to load all textures (PNG or JPG files) and store them into the local database of the user. Thus, the textures will be directly streamed from the database rather than the web server."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"**Note:** images are loaded using XHR2 in the blob format. Only IE11 and Firefox support the storing of blob data into the IndexedDB. Chrome does not support it yet. That’s why, even if you’re setting “enableTexturesOffline” to true, Chrome will always try to download the textures from the web. Chrome’s users will at least benefit from loading the JSON scene from the DB."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"### Samples:"},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"Most of the samples on our website are configured to use offline for their scene and textures: [www.babylonjs.com](http://www.babylonjs.com) . For instance, you can try the Espilit scene. The scene is described in _espilit.babylon_ and the associated manifest file is _espilit.babylon.manifest_."},{"src":"tutorials/07._Caching_Resources_in_IndexedDB","name":"07._Caching_Resources_in_IndexedDB","text":"One of the scenes is configured to only cache the texture. It’s the “The Car” scene. It’s because the JSON file, _TheCar.babylon_, is more than 93 MB. IE11 and Chrome can’t store a big file like that into their DB. I’ve decided to avoid trying to cache it."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;//Create a box"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;var box1 = BABYLON.Mesh.CreateBox(\"Box1\", 10.0, scene);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;box1.position.x = -20;"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Our goal: move this “box1”. First, create our Animation object:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var animationBox = new BABYLON.Animation(\"myAnimation\", \"scaling.x\", 30, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Much information is in the parameters:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Parameter 1 - Name of this animation, nothing more."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Parameter 2 - The property concerned. This can be any mesh property, depending upon what you want to change. Here we want to scale an object on the X axis, so it will be “scaling.x”."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Parameter 3 - Frames per second requested: highest FPS possible in this animation."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Parameter 4 - Type of change. Here you decide and enter what kind of value will be modified: is it a float (e.g. a translation), a vector (e.g. a direction), or a quaternion. Exact values are:"},{"src":"tutorials/08._Special_Effects","name":"08._Special_Effects","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%208)"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"* Name: a name for this manager."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"* The 2D image URL (most of the time, you will want use an image format which contain alpha channel, like .PNG)."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"* The capacity of this manager : the maximum number of instances in this manager (in our example, we could create 2000 instances of trees)."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"* The cell size, corresponding to the size of your image, like we’ll see below."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"* The actual scene, to which we will add this manager."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"To give another example, look at this snippet:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"var spriteManagerPlayer = new BABYLON.SpriteManager(\"playerManagr\",\"Assets/Player.png\", 2, 64, scene);"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"This time, we only want 2 instances, and we said that our sprite’s size is 64. Here is what our image looks like:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"![Elements](http://www.babylonjs.com/tutorials/08%20-%20Sprites/08-1.png)"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Each image of a sprite must be contained in a 64 pixel square, no more no less."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"2- **Create an instance**"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Now that we have our manager, we can create instances of our sprite linked to this manager. Creating an instance is as simple as:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"**2 - Define an ellipsoid**"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"The next important step is to define the ellipsoid around our camera. This ellipsoid represents our player’s dimensions: a collision event will be raised when a mesh comes in contact with this ellipsoid, preventing our camera from getting too close to this mesh:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"![Ellipsoid](https://camo.githubusercontent.com/19931f529e19679a0e2556e23fc94536e6a9b88c/687474703a2f2f7777772e626162796c6f6e6a732e636f6d2f7475746f7269616c732f30392532302d253230436f6c6c6973696f6e73253230477261766974792f30392d312e6a7067)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"The _ellipsoid_ property on babylon.js cameras is default to size (0.5, 1, 0.5), but changing values will make you taller, bigger, smaller, thinner, it depends upon the adjusted axis. In the example below, we will make our camera's ellipsoid a bit bigger than the default one:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"//Set the ellipsoid around the camera (e.g. your player's size)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"camera.ellipsoid = new BABYLON.Vector3(1, 1, 1);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"**3 - Apply collision**"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Once you have those previous settings completed, our final step is to declare that we are interested in sensing collisions in our scene:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"// Enable Collisions"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"scene.collisionsEnabled = true;"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"camera.checkCollisions = true;"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"}"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"```"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"To avoid costly calculation by checking many details on a mesh, Babylon engine creates a bounding box around the object, and tests for intersection between this box, and the colliding mesh. Here is an example of a bounding box:"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"![Collisions](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10-1.png)"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"But this bounding box can be more or less precise, and that’s why we have our second parameter. In short, if this parameter is set to true (false by default), then the bounding box is closer to the mesh (OBB bounding type), but it’s a more costly calculation. Be aware that this type of bounding box is especially useful when your mesh is rotated to an angle."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"![Collisions](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10-2.png)"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"So think about the collisions details you need before to choose."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"If you want more information about this second parameter, you can have a look at this Wikipedia page, especially about AABB and OBB mode: [http://en.wikipedia.org/wiki/Bounding_volume](http://en.wikipedia.org/wiki/Bounding_volume)"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"* **Intersect point**"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"The other function you can use is “intersectsPoint()” with a specific point, like this:"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"```javascript"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"```"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":" "},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"The pickResult object is mainly composed of 4 pieces of information:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"1. _hit_ (bool): « True » if your click hits an object in the scene."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"1. _distance_ (float): the “distance” between the active camera and your hit (infinite if no mesh was hit)"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"1. _pickedMesh_ (BABYLON.Mesh): if you hit an object, this is the selected mesh. If not, it’s null."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"1. _pickedPoint_ (BABYLON.Vector3): the point you have clicked, transformed in 3D coordinates, depending on the object you’ve clicked. Null if no hit."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Now we have all the data we need to build our scene. We just have to position our gun’s impact picture (a plane made earlier... called impact) when the user clicks on the wall plane:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"```javascript"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"// if the click hits the wall object, we change the impact picture position"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"if (pickResult.hit) {"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"            impact.position.x = pickResult.pickedPoint.x;"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"            impact.position.y = pickResult.pickedPoint.y;"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"}"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"```"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Fast, and easy, isn’t it?"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Feel free to play with this scene... [at our online playground](http://babylonjs-playground.azurewebsites.net/?11)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Simple.&nbsp; The first parameter is the name, he second parameter is the maximum number of particles, the third parameter is the scene, and the optional fourth parameter is a reference to a shader effect for the particles, overriding the default shader.&nbsp; I will talk about the fourth parameter further below."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"An important part is to define the texture of each particle. Each one will have the same pattern, so choose carefully which one you want. But keep in mind that a single scene can contain multiple particleSystems, and each one can emit particles with unique texture patterns.&nbsp; Also keep in mind that multiple particle systems can use the same emitter object. "},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Our particle texture is going to be this one:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"![Flare](http://www.babylonjs.com/tutorials/12%20-%20Particles/Flare.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"To define the particle’s texture, add a line like this:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.particleTexture = new BABYLON.Texture(\"Flare.png\", scene);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"(in the playground demo, we used /textures/flare.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"For this texture, you can use an optional mask to filter some colors, or filter a part of the alpha channel."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.textureMask = new BABYLON.Color4(0.1, 0.8, 0.8, 1.0);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"_Our material, a texture, applied to the plane_"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* **Explanations of a height map**"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Understanding height maps is the main objective of this tutorial. A height map is simply a greyscale image like the one we are going to use:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"![HeightMap3](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/worldHeightMap.jpg)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"This image will now be used to generate our ground, using the different variants of gray of our picture. This image is the elevation data for your ground. Each pixel’s color is interpreted as a distance of displacement or “height” from the “floor” of your mesh. So, the whiter the pixel is, the taller your mountain will be."},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"To help you generate those gray-scale height maps, you can use software such as “Terragen”, or ”Picogen”. "},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* **Javascript code**"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Now let’s see this powerful function named “CreateGroundFromHeightMap”:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```javascript"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"var ground = BABYLON.Mesh.CreateGroundFromHeightMap(\"ground\", \"worldHeightMap.jpg\", 200, 200, 250, 0, 10, scene, false, successCallback);"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Or maybe you want to use one of our preset colors and avoid using the `new` keyword:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.clearColor = BABYLON.Color3.Blue();"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"This color and property is not used in any calculations for the final colors of mesh, materials, textures, or anything else. It is simply the background color of the scene.&nbsp; Easy."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"### Changing the Ambient color (`scene.ambientColor`)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Conversely, the `ambientColor` property on the scene object is a very powerful and influential environment property/adjustment.&nbsp; First, let's have a look at its syntax:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.ambientColor = new BABYLON.Color3(0.3, 0.3, 0.3);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"As you can see, it is set using the same format as `clearColor`, but `ambientColor` is used in quite a few calculations toward determining the final colors of scene items.&nbsp; Mainly, it is used in conjunction with a mesh's `StandardMaterial.ambientColor` to determine a FINAL `ambientColor` for the mesh material. "},{"src":"tutorials/13._Environment","name":"13._Environment","text":"You will find that when there is no `scene.ambientColor`, then `StandardMaterial.ambientColor` and `StandardMaterial.ambientTexture` will appear to do nothing.&nbsp; Set a `scene.ambientColor` of some value, like the example above, and `StandardMaterial.ambientColor`/`StandardMaterial.ambientTexture` will become active on meshes where you have applied such."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"By default, `scene.ambientColor` is set to `Color3(0, 0, 0)`, which means there is no `scene.ambientColor`."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"And finally, you will have to define where the shadows will be displayed... by setting a mesh parameter to true:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"ground.receiveShadows = true;"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"You may want to reduce shadow acne resulting from not precise enough shadow map. To do so, you can define the bias (which is 0.00005 by default).:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"shadowGenerator.bias = 0.01;"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"## Filters"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"If you want to go further, you can activate shadows filtering."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"There are three filters available:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"### Variance shadow map "},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"shadowGenerator.useVarianceShadowMap = true;"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","name":"15._Understanding_Shaders_with_Babylon.js_and_ShaderMaterial","text":"* Alpha test: **\"#define ALPHATEST\"** will be added"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PCY1J ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Handling the 'ready to play' callback function##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Calling the *BABYLON.Sound()* constructor with an URL generates 2 phases:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"1. the .wav or .mp3 file is loaded from your webserver using an async XHR"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"2. once loaded, the sound is being async decoded by web audio. If it succeeds, it raises the callback function you’ve provided."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is a sample code:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"Music\", \"music.wav\", scene,"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":" function () {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"  // Sound has been downloaded & decoded"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"  music.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":" }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"This code loads the “*music.wav*” file from the web server, decode it and play it in the callback function only once using the *play()* function. The play function plays the sound immediately if no parameter is passed. You can provide a parameter of type number to play the sound after x seconds. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Test it on our playground: "},{"src":"tutorials/17._Using_decals","name":"17._Using_decals","text":"http://www.babylonjs-playground.com/#1BAPRM"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Although we have another tutorial that covers basic scenes, I would like you to now EXAMINE a basic Babylon.js scene file.&nbsp; So here we go:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"![](http://urbanproductions.com/wingy/babylon/misc/codepic04.jpg)"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"That is a BIG picture, isn't it?&nbsp; This is a complete Babylon.js scene, using the 'single HTML file' method.&nbsp; This is not the only (or best) method of setting up a scene, but it is fast and easy.&nbsp; I have colored important sections of 'the big picture' and we will now examine each section individually."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### The External Includes - Red Section ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"'Includes' is not necessarily the best term to describe the red section of the big picture, but I will be using that term often in this tutorial.&nbsp; Three external Javascript files are being included into this scene."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The first external include is hand.minified-1.2.js (often simply called hand.js) - a small Javascript framework that assists the Babylon.js cameras."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The next is cannon.js - an optional physics 'engine' that allows WebGL shapes (meshes) to act like real life objects."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"After that comes oimo.js - a different physics 'engine' that performs a similar function to cannon.js, but is generally faster although it lacks some of the more advanced features present in cannon.js."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Most important, though, is the Babylon.js framework, our pride and joy."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Each of these includes are JavaSCRIPT files, and so they are included-in by using HTML `<SCRIPT>` elements/tags.&nbsp; The shown 'src' (source location) of these files is at the Babylon.js web site folders, but later I will tell you how to put these files on your home hard drive if you wish, and include them from there.&nbsp; They load-in faster when they are 'local', but you will need to change the 'src' URL once you have saved them locally.&nbsp; I will show you how to do that soon."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### The CSS Styles - Blue Section ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;Notice the blue section of the big picture.&nbsp; That is the CSS (Cascading Style Sheets) styles used to present the scene's web page,&nbsp; and adjust its WebGL canvas to be centered and filled-out nicely in your browser."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Someday, you may want to 'externalize' these styles by placing them in a separate file, possibly called styles.css.&nbsp; Then you could remove the blue section from this HTML file, and use a HTML LINK element/tag to include-in that separate CSS style document.&nbsp; I will not be telling you how to do that, but there are plenty of documents on the web that will show you how.&nbsp; It is very easy."},{"src":"tutorials/Approved_Naming_Conventions","name":"Approved_Naming_Conventions","text":"- Update [documentation](http://doc.babylonjs.com/page.php?p=22641)"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function registerMeshesAsCompound(parts, options)```: Babylon.js will call this function for compound objects. ```parts``` parameter contains an array of ```{mesh, impostor}```. ```options``` parameter is the same as above."},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function unregisterMesh(mesh)```: Called to remove a mesh from the simulation"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function applyImpulse(mesh, force, contactPoint)```: Apply a specific force to a specific contact point for a given mesh"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function createLink(mesh1, mesh2, pivot1, pivot2)```: Create a joint between two meshes"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function dispose()```: Free all allocated resources"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"* ```function isSupported()```: This function will be called by Babylon.js before everything else to ensure that your plugin can be instanciated (You have to check if required .js files are included for instance)"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"For implementation details, you can refer to cannon.js plugin: https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Physics/Plugins/babylon.cannonJSPlugin.js"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"# Using your plugin"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"When you launch the physics simulation, you can add a new parameter to ```enablePhysics``` function to indicate which plugin to use:"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"```javascript"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"scene.enablePhysics(null, new BABYLON.CannonJSPlugin()),"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Lights/babylon.spotLight.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Lights/babylon.hemisphericLight.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Lights/babylon.directionalLight.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Lights/Shadows/babylon.shadowGenerator.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Collisions/babylon.collider.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Collisions/babylon.collisionCoordinator.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Collisions/babylon.collisionWorker.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.camera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.targetCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.followCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.freeCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.touchCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.arcRotateCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.deviceOrientationCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.gamepads.js\"></script> "},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.gamepadCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Rendering/babylon.renderingManager.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Rendering/babylon.renderingGroup.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/babylon.scene.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.vertexBuffer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.instancedMesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.mesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.groundMesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.subMesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.baseTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.texture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.cubeTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.renderTargetTexture.js\"></script>"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"gravity\": vector3 (usually [0,-9,0]),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"cameras\": array of Cameras (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"activeCamera_\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"lights\": array of Lights (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"materials\": array of Materials (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"geometries\": {...} (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"meshes\": array of Meshes (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"multiMaterials\": array of MultiMaterials (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"shadowGenerators\": array of ShadowGenerators (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"skeletons\": array of Skeletons (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"particleSystems\": array of ParticleSystems (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"lensFlareSystems\": array of LensFlareSystems (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"actions\": array of actions (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"sounds\": array of Sounds (see below)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Cameras"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A camera is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"type\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string,"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var localPosition = mesh.getPositionExpressedInLocalSpace();"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"If you want to add an extra translation expressed in local space you have to use the following code:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.locallyTranslate(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Each time you call it with the same vector, it will move your mesh whereas ```setPositionWithLocalVector``` will move it only the first time. http://jsfiddle.net/gwenaelhagenmuller/35uFf/12/"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"For your convenience, we also added ```mesh.rotate``` and ```mesh.translate``` to add a rotation or a translation to a mesh (both in local and world space):"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.rotate(BABYLON.Axis.X, 1.0, BABYLON.Space.LOCAL);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.translate(BABYLON.Axis.X, 1.0, BABYLON.Space.WORLD);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Please note that ```mesh.rotate``` generates a quaternion and then uses ```mesh.rotationQuaternion```."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"#Generating a rotation from a target system#"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Sometimes you may know the final orientation you want to give to a mesh in terms of alignment with distant axis, but you don't what rotation to apply to it to achieve this wanted orientation. "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"There is a way to compute an Euler rotation from a set of axis : "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```javascript"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var rot = BABYLON.Vector.RotationFromAxis(axis1, axis2, axis3);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.rotation = rot;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var MatricesIndicesKind = true;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    var MatricesWeightsKind = true;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    for (var i = 0; i != arrayObj.length ; i++) {"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (!arrayObj[i].isVerticesDataPresent([BABYLON.VertexBuffer.UVKind]))"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            UVKind = false;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (!arrayObj[i].isVerticesDataPresent([BABYLON.VertexBuffer.UV2Kind]))"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            UV2Kind = false;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (!arrayObj[i].isVerticesDataPresent([BABYLON.VertexBuffer.ColorKind]))"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            ColorKind = false;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (!arrayObj[i].isVerticesDataPresent([BABYLON.VertexBuffer.MatricesIndicesKind]))"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            MatricesIndicesKind = false;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (!arrayObj[i].isVerticesDataPresent([BABYLON.VertexBuffer.MatricesWeightsKind]))"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            MatricesWeightsKind = false;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    }"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    for (i = 0; i != arrayObj.length ; i++) {"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        var ite = 0;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        var iter = 0;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        arrayPos[i] = arrayObj[i].getVerticesData(BABYLON.VertexBuffer.PositionKind);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        arrayNormal[i] = arrayObj[i].getVerticesData(BABYLON.VertexBuffer.NormalKind);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (UVKind)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            arrayUv = arrayUv.concat(arrayObj[i].getVerticesData(BABYLON.VertexBuffer.UVKind));"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (UV2Kind)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            arrayUv2 = arrayUv2.concat(arrayObj[i].getVerticesData(BABYLON.VertexBuffer.UV2Kind));"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (ColorKind)"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```meshesNames``` is the names of meshes to import"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```scene``` is the scene to load data into"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```data``` is the string representation of the file to load"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```rootUrl``` defines the root URL of your assets"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```meshes``` is the list of imported meshes"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```particleSystems``` is the list of imported particle systems"},{"src":"tutorials/How_to_Create_Your_Own_File_Importer","name":"How_to_Create_Your_Own_File_Importer","text":"* ```skeletons``` is the list of imported skeletons"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// path function"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var pathFunction = function(k) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  var path = [];"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  for (var i = 0; i < 60; i++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var x = i - 30;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var y = 0;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var z = k;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path.push(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  }"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  return path;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"};"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// ribbon creation"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var sideO = BABYLON.Mesh.BACKSIDE;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var pathArray = [];"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"for(var i = -20; i < 20; i++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  pathArray.push(pathFunction(i * 2));"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"}"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var mesh = BABYLON.Mesh.CreateRibbon(\"ribbon\", pathArray, false, false, 0, scene, true, sideO);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"example : http://www.babylonjs-playground.com/#1MSEBT "},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"In this case, the first click will animate the `light.diffuse` property, the second click will set `mesh.material` to false. The third one will start again and will animate the `light.diffuse` property and so on..."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Finally, you can add a condition to your actions. In this case, actions are launched when the trigger is fired if the condition is true:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```javascript"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"var condition1 = new BABYLON.PredicateCondition(sphere.actionManager, function () {"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"    return light1.diffuse.equals(BABYLON.Color3.Red());"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"});"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"sphere.actionManager.registerAction(new BABYLON.InterpolateValueAction(BABYLON.ActionManager.OnPickTrigger, camera, \"alpha\", 0, 500, condition1));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"In this example, the `camera.alpha` property will be animated to 0 in 500ms when the user clicks the sphere only if the `light1.diffuse` property is equal to red."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"# Triggers"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Currently, 10 different triggers are supported:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"The following list defines triggers associated with meshes:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.NothingTrigger`: Never raised. Used for sub-actions with `action.then` function"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnPickTrigger`: Raised when the user touches/clicks on a mesh"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnLeftPickTrigger`: Raised when the user touches/clicks on a mesh with left button"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var path = bezier2.getPoints();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var l = bezier2.length();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"##Cubic Bezier curve"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"http://en.wikipedia.org/wiki/B%C3%A9zier_curve#Higher-order_curves"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"![Wikipedia Cubic Bezier Curve](http://upload.wikimedia.org/wikipedia/commons/d/db/B%C3%A9zier_3_big.gif)"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var bezier3 = BABYLON.Curve3.CreateCubicBezier(origin, control1, control2, destination, nb_of_points)"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **origin** : _Vector3_ the origin point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **control1** : _Vector3_ the first control point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **control2** : _Vector3_ the second control point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **destination** : _Vector3_ the destination point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **nb_of_points** : _number_ the wanted final curve number of points in the array."},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"This static method returns an instance of _Curve3_.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Just use the Curve3 _getPoints()_ method to fill your array : _getPoints()_ returns an array of successive _Vector3_.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"You can then use it for ribbons, tubes, extrusion paths, etc.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"The _length()_ method returns the curve length.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"meshTask.onSuccess = function (task) {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    task.loadedMeshes[0].position = new BABYLON.Vector3(0, 0, 0);"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"}"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"You can do the same thing but with text and binary files:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"var textTask = assetsManager.addTextFileTask(\"text task\", \"msg.txt\");"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"textTask.onSuccess = function(task) {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    console.log(task.text);"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"}"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"var binaryTask = assetsManager.addBinaryFileTask(\"binary task\", \"grass.jpg\");"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"binaryTask.onSuccess = function (task) {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    // Do something with task.data"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"}"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Images are also supported through imageTask:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"The mesh must also have additional vertices data:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"* _Matrices weights_: 4 floats to weight bones matrices (```mesh.setVerticesData(matricesWeights, BABYLON.VertexBuffer.MatricesWeightsKind, false)```)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"* _Matrices indices_: 4 floats to index bones matrices (```mesh.setVerticesData(floatIndices, BABYLON.VertexBuffer.MatricesIndicesKind, false)```)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"The final matrix applied to each vertex is computed as follows:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"finalMatrix = worldMatrix * (bonesMatrices[index0] * weight0 + bonesMatrices[index1] * weight1 + bonesMatrices[index2] * weight2 + bonesMatrices[index3] * weight3)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"On low-end hardware, the maximum bones influences per vertex is reduced to 3."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"### Loading bones"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Skeletons and bones can be loaded from .babylon files (FBX and Blender exporter support bones generation)."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Here is a sample of how to load a boned mesh and how to launch skeleton animation:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```Javascript"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"BABYLON.SceneLoader.ImportMesh(\"him\", \"Scenes/Dude/\", \"Dude.babylon\", scene, function (newMeshes, particleSystems, skeletons) {"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    var dude = newMeshes[0];"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    dude.rotation.y = Math.PI;"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"Using Blender, you can create instances of a mesh by just creating a linked object:"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"![](http://www.html5gamedevs.com/uploads/monthly_05_2014/post-7026-0-82151000-1401073383.jpg)"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"# Using 3DS Max to create instances"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"Using 3DS Max, you can create instances of a mesh by just creating a clone instance object with clic right on the object:"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"![](http://www.html5gamedevs.com/uploads/monthly_11_2014/post-5292-0-54659600-1415793353.jpg)"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"## Demo"},{"src":"tutorials/How_to_use_Instances","name":"How_to_use_Instances","text":"### http://www.babylonjs.com/?INSTANCES"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"scene.disableDepthRender();"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"```"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"As you can see, you can use the depth map associated with the DepthRenderer with any materials or post-processes."},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"You can remove a LOD level by using ```removeLODLevel```:"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"```javascript"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.removeLODLevel(knot02);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.removeLODLevel(null);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"```"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"### Try: [LOD playground](http://www.babylonjs-playground.com/#QE7KM)"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"## Using LOD and instances"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"By default, instances will use LOD defined on root mesh. You do not have to specify anything on instances:"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"```javascript"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var count = 3;"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var scale = 4;"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot00 = BABYLON.Mesh.CreateTorusKnot(\"knot0\", 0.5, 0.2, 128, 64, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot01 = BABYLON.Mesh.CreateTorusKnot(\"knot1\", 0.5, 0.2, 32, 16, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot02 = BABYLON.Mesh.CreateTorusKnot(\"knot2\", 0.5, 0.2, 24, 12, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"var knot03 = BABYLON.Mesh.CreateTorusKnot(\"knot3\", 0.5, 0.2, 16, 8, 2, 3, scene);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.setEnabled(false);"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"To create a flare, you must specify the following parameters:"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- Size (a floating value between 0 and 1) "},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- Position (a floating value between -1 and 1). A value of 0 is located on the emitter. A value greater than 0 is beyond the emitter and a value lesser than 0 is behind the emitter "},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- Color "},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- Texture "},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"Babylon.js can also detect occlusions for you. A mesh can occlude the lens flares if the following conditions are met:"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- has a material"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- isVisible === true"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- isEnabled() === true"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"x, y, width, height are all absolute values (between 0 and 1)"},{"src":"tutorials/How_to_use_Multi-Views","name":"How_to_use_Multi-Views","text":"Keep in mind that the canvas is similar to a texture.  Its x/y of 0, 0... is in the lower left corner."},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"You can then control if the reflection is applied on the edges or on the center. For instance, if you want the reflection on the edges (by default), you can control it using the color properties:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```javascript"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.leftColor = BABYLON.Color3.White();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.rightColor = BABYLON.Color3.Black();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"![](http://www.babylonjs.com/forumpics/fresnel01.jpg)"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"Conversely, if you only want reflection in the center:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```javascript"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.leftColor = BABYLON.Color3.Black();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.rightColor = BABYLON.Color3.White();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"![](http://www.babylonjs.com/forumpics/fresnel02.jpg)"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"By using ```bias``` and ```power``` properties, you can control how the fresnel is computed along the surface of the object according to this formula:"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"There are also two other methods : one returning the _curve_ which is actually a copy of the initial _Vector3_ array given to create the path3D object and the other one returning the distance of each points from the first curve point (distance = zero) as a simple array of numeric values (the distances)."},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```javascript"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var curve = path3d.getCurve();"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var distances = path3d.getDistances();"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"In order to avoid memory re-allocation (in the render loop for instance) since the given _points_ array is internally copied, you can update an existing _Path3D_ object with its _update()_ method :"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```javascript"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var points1 = [v1, v2, ..., vn];          // array of Vector3"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var path3d = new BABYLON.Path3D(points1);"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var points2 = [u1, u2, ..., un];          // another array of Vector3"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"path3D.update(points2);"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"Tangents, normals and bi-normals are thus recomputed for this new path."},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"If you need to give a fixed orientation to the normal on the first path point, you can pass an extra Vector3 as parameter on creation or update :"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```javascript"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var initialVector = new BABYLON.Vector3(0, 1, 0);"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var otherVector = new BABYLON.Vector3(0, 0, 1);"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var points = [v1, v2, ..., vn];          // array of Vector3"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"var path3d = new BABYLON.Path3D(points, initialVector);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"<center>`new BABYLON.PostProcessRenderPipelineManager(),`</center> "},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"| Method | Description |"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|--------|--------|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`PostProcessRenderPipelineManager()`**|Create a new instance of PostProcessRenderPipelineManager.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`addPipeline(renderPipeline)`**|Add a new pipeline to an instance of PostProcessRenderPipelineManager.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`attachCamerasToRenderPipeline(renderPipelineName, cameras, unique)`**|Attach a render pipeline to a list(or unique) of cameras|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`detachCamerasFromRenderPipeline(renderPipelineName, cameras)`**|Detach a render pipeline from a list(or unique) of cameras|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`enableEffectInPipeline(renderPipelineName, renderEffectName, cameras)`**|Enable an effect in a pipeline for a list(or unique) of cameras|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`disableEffectInPipeline(renderPipelineName, renderEffectName, cameras)`**|Disable an effect in a pipeline for a list(or unique) of cameras|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`enableDisplayOnlyPass(renderPipelineName, passName, cameras)`**|Enable displaying of a specific pass used in a specific render pipeline, for a list(or unique) of cameras|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`disableDisplayOnlyPass(renderPipelineName, passName, cameras)`**|Disable displaying of a specific pass used in a specific render pipeline, for a list(or unique) of cameras|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`update`**|Update all pipelines.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"### BABYLON.PostProcessRenderPipeline"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"As you can see, you can provide success/fail callbacks and a set of options."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"A set of options contains a list of optimization to apply in a specific order. As soon as the target FPS is reached, the SceneOptimizer stops. There are different layers (or passes) that are applied one after another. The SceneOptimizer pauses between each layer to ensure a stable FPS, for measuring."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"By default, there are 3 sets available:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```javascript"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"BABYLON.SceneOptimizerOptions.LowDegradationAllowed()"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"BABYLON.SceneOptimizerOptions.ModerateDegradationAllowed()"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"BABYLON.SceneOptimizerOptions.HighDegradationAllowed()"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"All these sets return a ```BABYLON.SceneOptimizerOptions``` object configured with progressive degradations."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"Here are the properties available on a ```BABYLON.SceneOptimizerOptions``` object:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* targetFrameRate: a number defining the FPS you want to achieve (60 by default)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* optimizations: an array of ```BABYLON.SceneOptimization``` objects."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* trackerDuration: time in milliseconds between passes (2000 by default)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"SceneOptimizer comes with some out-of-the-box optimizations:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.TextureOptimization(priority, maximumSize)```: This optimization tries to reduce the size of render textures."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.HardwareScalingOptimization(priority, maximumScale)```: This optimization increments the value of hardware scaling. This is a really aggressive optimization."},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"Here is a 1 minute video demonstrating how it works:"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"[Virtual Joysticks Camera demo in video](https://www.youtube.com/watch?v=53Piiy71lB0)"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"![Screenshot of the Virtual Joysticks Camera in action on Espilit](http://david.blob.core.windows.net/babylonjs/VJCBabylon.jpg)"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"### Complete sample"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"Here is a complete sample that loads the Espilit demo and switches the default camera to a virtual joysticks camera:"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"```javascript"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"document.addEventListener(\"DOMContentLoaded\", startGame, false);"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"function startGame() {"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;if (BABYLON.Engine.isSupported()) {"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; var canvas = document.getElementById(\"renderCanvas\");"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; var engine = new BABYLON.Engine(canvas, true);"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; BABYLON.SceneLoader.Load(\"Espilit/\", \"Espilit.babylon\", engine, function (newScene) {"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"![Topic with tags](http://pix.keuse.fr/images/topic.jpg)"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Thus, if you need information about, let's say, meshes, you can search for topics having \"mesh\" as a word in those topics, BUT you could also search for \"mesh\" as a tag of the topic. Indeed, maybe the word is never used in the topic (maybe it's only used, or not, in the title) but the author can choose to add it as a tag in the aim to categorize his/her topic."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Tags can be used to categorize/group things."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Here the first search results:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"![Search results for \"mesh\" tag](http://pix.keuse.fr/images/meshtag.jpg)"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"### CSS classes"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"OK...? What's the link with tags? Why are we about to talk about CSS classes?"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Because CSS classes are great and Tags in Babylon.js can be considered similar, in principle, to CSS classes. So let's talk about them."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"CSS stands for Cascading Style Sheets. It's used to define how to display HTML elements."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"CSS classes are added to HTML elements (by writing them directly in the HTML code or by adding them via javascript) as a value of the ```class``` attribute of the corresponding HTML elements."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"HTML elements can have several CSS classes in their ```class``` attribute and the same CSS class can be used on different HTML elements. CSS classes, just like tags on forums, can then be used to categorize HTML elements. Thus, a same style (background, font, color...) can easily be applied to a group of HTML elements identified by a CSS class (or a list of CSS classes)."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"var Button = new BABYLON.Mesh(...);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"Button.layerMask = 0x10000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"## Lights"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"Unless the material for the meshes for the 2nd camera is purely emissive, this still leaves any light for the button shining on all the other meshes, and lights of the scene shining on the button. To keep scene lights from shining on the button, loop through the existing lights, and set the excludeWithLayerMask value:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"for(var i = scene.lights.length - 1; i >= 0; i--){"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    scene.lights[i].excludeWithLayerMask = 0x10000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"}"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"Then make the \"button\" light:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"var light = new BABYLON.Light(...);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"light.includeOnlyWithLayerMask = 0x10000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"A Simplification-Settings object has two parameters: "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"1. quality - a number between 0.0 and 1.0, defining the percentage of the decimation (1 being 100%) "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"2. distance - the distance from the object to which this LOD mesh will be added to. "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"3. (since 2.1) optimizeMesh - should the mesh be optimized (optional, defaults to false). More about optimization later."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"A simple example for an array of settings would be:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"[{ quality: 0.9, distance: 25, optimizeMesh:true },"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":" { quality: 0.3, distance: 50, optimizeMesh:true }]"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"For the typescript users and the \"new\" lovers exists a SimplificationSettings class. so this can also be done:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"var settings : Array<ISimplificationSettings> = []; //in JS: var settings = new Array();"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"settings.push(new BABYLON.SimplificationSettings(0.8, 60));"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"settings.push(new BABYLON.SimplificationSettings(0.4, 150));"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* **parallel processing"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"```javascript"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"octree.dynamicContent.push(mesh)"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"In this case, the octree will always select the dynamic mesh."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"# Optimizing collisions and picking"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"Computing collisions or clicking-on complex meshes (more than 10k vertices for instance) can be really slow. You can speed things up by subdividing your mesh into submeshes using ```mesh.subdivide(x)``` where x is the number of submeshes you want."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"Then you can optimize the selection of submeshes for collisions or picking by creating an octree on the mesh for its submeshes:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"```javascript"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"mesh.createOrUpdateSubmeshesOctree(capacity, maxDepth)"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"You can even specify the usage of your octree independently:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* ```mesh.useOctreeForCollisions```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* ```mesh.useOctreeForPicking```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* ```mesh.useOctreeForRenderingSelection``` : Octree for submeshes can even be used during mesh selection based on camera field of view. Once a mesh is selected by the camera, if the mesh has submeshes, the camera has to select which one is visible. In this case, having an octree can be really helpful."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **closeArray** : _default False_  boolean, if true an extra set of triangles is constructed between the last path and the first path of pathArray."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"example : http://www.babylonjs-playground.com/#295H7U  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here we populate an array called _paths_ with many path arrays.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Each _path_ array is populated itself with Vector3 along a Bézier curve. Anything else could have been chosen for this example, but I love this strange shape.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Before dealing with the ribbon, we just display each path with the _CreateLines()_ method so we can figure out what these paths look like. As we can see, the curves are side by side around an incomplete circle.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If we apply this _paths_ array to a ribbon mesh, we get this : http://www.babylonjs-playground.com/#295H7U#1  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"You can see that a surface is constructed between each _path_ as expected.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is the same with a plain material ans still the _paths_ displayed : http://www.babylonjs-playground.com/#295H7U#2  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If we set _closeArray_ to _true_, the missing surface between the first and the last _paths_ is then constructed : http://www.babylonjs-playground.com/#295H7U#3  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"The mesh becomes then a real closed volume and the light reflects in a continuous way along its surface.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **closePath** : _default False_ boolean, if true the last point of each path of _pathArray_ is joined to the first point of this same path.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"example : http://www.babylonjs-playground.com/#1TDTHJ  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is some kind of unclosed tubular ribbon. "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"It is made with only two paths _path1_ and _path2_ each following an incomplete circle.   "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If we set the _closePath_ to _true_ (http://www.babylonjs-playground.com/#1TDTHJ#1), you can notice that _path1_ and _path2_ are now closed and two triangles are added between the beginning and the end of each path.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If we give this ribbon a plain material, you can then notice it is really closed as the normals are computed to reflect the light in a continuous way : http://www.babylonjs-playground.com/#1TDTHJ#2  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is the example of the former _closeArray_ parameter with _closeArray_ and _closePath_ set to true : http://www.babylonjs-playground.com/#295H7U#4  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **offset** : _default half size of the pathArray length_, mandatory only for pathArray containing a single path.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"example : http://www.babylonjs-playground.com/#1W5VJN#14"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"See more about 'refreshrate' in the Custom Procedural Textures section... far below."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"# Procedural Textures in Babylon.js #"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"**Babylon.js** offers you an easy out-of-the-box way to use this kind of texture. The engine itself provides you with standard default textures that you can use right now. It also gives you the ability to create custom procedural textures and package them in a simple way."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"## Using Standard Procedural Textures ##"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Babylon.js has a number of pre-built procedural textures that are very easy to use. Applying a procedural texture is just the same as using a classic one. Let’s start with a simple mesh (a cylinder in this case) and attach it to your scene:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    var cylinder = BABYLON.Mesh.CreateCylinder(\"mycylinder\", 7, 2, 2, 12, 1, scene);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Then, you need to create a StandardMaterial:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    var material = new BABYLON.StandardMaterial(\"material\", scene);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"In this case a mathematician and game designer will agree "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position = new BABYLON.Vector3(3, 3, 3); "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position = new BABYLON.Vector3(2, 4, 1);"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"moves the pilot to position vector (2, 4, 1) as in Fig 2, since this is the last position vector set by the code."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-HD2SFW9hc80/VW2qzMQx58I/AAAAAAAAAFI/NkNpHIRsC94/s210/fig2.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 2"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"###Rotation###"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The easiest way of rotating the pilot within the world is ```pilot.rotation = new BABYLON.Vector3(alpha, beta, gamma)``` and this is equivalent to"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position.x  =  alpha;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position.y  =  beta;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.position.z  =  gamma;"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"![HillValley render with precision of 0.5](http://pix.keuse.fr/images/screenhsh.png)"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"The result will be automatically downloaded if your browser supports it, otherwise it will be displayed on a new tab, it will be in any cases a PNG picture. **This feature does not support antialiasing for now !**"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"Just for fun here is render of Hill Valley using 3840x2160 resolution (4K)."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Here's an unclosed ribbon : http://www.babylonjs-playground.com/#3XMWZ#1"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var ribbon = BABYLON.Mesh.CreateRibbon(\"ribbon\", paths, false, false, 0, scene, false, BABYLON.Mesh.BACKSIDE);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Don't mind about how it is mathematically built. This is not the topic.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The same closed ribbon with _closeArray_ set to _true_ : http://www.babylonjs-playground.com/#3XMWZ#2"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var ribbon = BABYLON.Mesh.CreateRibbon(\"ribbon\", paths, true, false, 0, scene, false, BABYLON.Mesh.BACKSIDE);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"As you can see, when rotating the camera, there is no edge on the ribbon surface. The light reflects continuously.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"If we now apply a texture to this automatically closed ribbon : http://www.babylonjs-playground.com/#3XMWZ#3  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You can notice that the texture isn't stretched on the surface added by the automatic closing.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The reason of this behavior is that, with ribbon _closeXXX_ parameters, priority is given on normals (the tools that compute light reflection) over textures.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"If you don't care about continuous light reflection but you do want your texture to be stretched along the whole surface, you just have to forget automatic closing (_closeArray_ then set to _false_) and close the ribbon by yourself.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"A simple way is just to re-push the first _path_ at the end of the _pathArray_"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"paths.push(paths[0]);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var ribbon = BABYLON.Mesh.CreateRibbon(\"ribbon\", paths, false, false, 0, scene, false, BABYLON.Mesh.BACKSIDE);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"#define FOGMODE_LINEAR 3."},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"#define E 2.71828"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"uniform vec4 vFogInfos;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"uniform vec3 vFogColor;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"varying float fFogDistance;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"float CalcFogFactor()"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"{"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" float fogCoeff = 1.0;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" float fogStart = vFogInfos.y;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" float fogEnd = vFogInfos.z;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" float fogDensity = vFogInfos.w;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" if (FOGMODE_LINEAR == vFogInfos.x)"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" {"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"  fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" }"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" else if (FOGMODE_EXP == vFogInfos.x)"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" {"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"  fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" }"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" else if (FOGMODE_EXP2 == vFogInfos.x)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**New** - The New button is a unique and handy feature. If you look carefully at the editor code in the picture above, or if you have selected one of the pre-installed playground scenes from the drop-down scene selector, you will notice that they are 'wrapped' in a function called 'createScene()'.&nbsp; The createScene() function is a very common function used in many BabylonJS scenes.&nbsp; Copying and pasting createScene() functions is done often with users of the BabylonJS framework.&nbsp; By pressing this button, you will empty the contents of the editor, and a basic un-programmed createScene() function will be placed in the editor.&nbsp; A camera is provided by default, but you may want to add some light and mesh, so the new scene becomes renderable."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Clear** - The Clear button is also easy to understand. This button simply empties all the code out of the playground editor.&nbsp; It is often used in preparing for the pasting-in of a createScene() function, or in preparation for some experimenting that you are about to embark-upon.&nbsp; The BabylonJS playground is a fantastic way to create experiments using the BabylonJS framework.&nbsp; It is a wonderful way to learn."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Font size** - The Font size button almost needs no explaining. This button and resulting pull-down selector allows you to adjust the font size of the code in the playground editor."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Scene Selector** - This pull-down selector button (shown as 'Custom' in the picture above)... is used to select any of the pre-installed playground demo scenes.&nbsp; 'Custom' is not the name of any of those demo scenes.&nbsp; The reason that it says 'Custom' is because the scene in the editor at the time that the picture was taken... was a 'custom' scene.&nbsp; It was a modified Basic Scene demo that I created for use in the picture.&nbsp; Often, when you first arrive at the playground site, this button will be labeled 'Basic Scene'.&nbsp; No matter what label is currently on the button, the button is called the **Scene Selector** button."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**Fullscreen** - The Fullscreen button also needs very little explaining. This button causes the right-side rendering canvas to go into fullscreen mode.&nbsp; Upon entering fullscreen mode, your browser will provide instructions about how to exit fullscreen mode and return to the playground's default split-screen mode."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## The Editor"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"![](http://urbanproductions.com/wingy/babylon/misc/playground_ed02.jpg)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"The playground's left-side code editor is a 'smart' editor which is based-upon [the Ace Editor](http://ace.c9.io/).&nbsp; The playground editor has many fantastic features.&nbsp; It uses type-ahead features such as automatically adding matched quotes, parentheses, braces, and brackets... handy things for a programming editor.&nbsp; It tries to spot programming errors, and places little icons along the left side when it sees potential syntax problems.&nbsp; If you place your mouse pointer over these little icons that sometimes appear, the editor will pop-up a small window telling you about what it has seen.&nbsp; The editor also has syntax highlighting, code-folding, text drag-and-drop, automatic indent and outdent, and a 4 million line capacity. Telling of the many features of our editor... is beyond the scope of this tutorial.&nbsp; You can learn more about the wonderful Ace Editor... with [a visit to their website](http://ace.c9.io/#nav=about)... and by simply spending some time using the playground editor."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"**oops** - One of the most important features in any programmer's editor... is UNDO and REDO, and our playground editor fully supports both of these features.&nbsp; I am not familiar with the undo and redo keypresses for all OS systems, but for Windows... undo is Control-z and redo is Shift-Control-z.&nbsp; You can do multiple undo and redo, as well. This is very handy, and again, we love it."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## The Rendering Canvas"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"![](http://urbanproductions.com/wingy/babylon/misc/playground_rc01.jpg)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"1. **Opaque meshes**"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"2. **Alpha tested meshes**"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"3. **Alpha blended meshes**, sorted by depth (= distance to camera)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"4. **Sprites** (handled by SpriteManager)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"5. **Particles** (handled by ParticleSystem)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Categories 4 and 5 are self-explanatory. Note that they are always drawn after all the other meshes, and that they do not use any depth buffer that may have been previously created. These simply cannot be hidden by regular meshes."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"## Rendering Groups"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Renderable objects can be organized into rendering groups, which act as layers. In each of these rendering groups, the order above will be used."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"To use rendering groups, you simply need to set the property `.renderingGroupId` on the objects you want to put in other layers than the default one (which has the ID of 0)."},{"src":"tutorials/Tutorials","name":"Tutorials","text":"* [More Advanced Features](http://babylondoc.azurewebsites.net/page.php?p=21941) - Information and documentation on advanced topics and features"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"## Usage ##"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"To use it, you must first define a set of parameters that will impact the actual post-processing performed. This is done by defining an object and setting the desired properties:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"```"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"var parameters = {"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  edge_blur: 1.0,"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  chromatic_aberration: 1.0,"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  distortion: 1.0,"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"  // etc."},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"};"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"```"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"And then simply create the object with the parameters you've defined earlier, like so:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"```"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"var lensEffect = new BABYLON.LensRenderingPipeline('lensEffects', parameters, scene, 1.0, camera);"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"```"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"Note that in the above example, the pipeline is immediately attached to the camera, but this is not mandatory. You can also use it like this:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"```"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"var lensEffect = new BABYLON.LensRenderingPipeline('lensEffects', parameters, scene, 1.0);"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"// ..."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":" * Enable/disable lights"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":" * Switch to camera"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Generate user marks (F12) check-box can be used with F12 tools to emit performance counters to UI Responsiveness profiler"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Rendering mode can be used to switch between solid/wireframe/point modes"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Texture channels can be used to turn specific textures off"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* Options can be used to turn specific engine options off"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"### Meshes tree"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"The meshes tree allows you to enable/disable meshes by name and could be used to determine how many vertices are contained in a specific mesh."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"### Statistics"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"The statistics panel gives you a global view of how specific engine parts are performing alongside WebGL info and capabilities."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"**Note about active vertices**: Active vertices are the number of vertices processed by the GPU. For instance if you have a quad with 4 vertices and 2 faces, the total vertices will be 6 because 2 faces of 3 vertices each are sent to the GPU even if two vertices are shared."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"### Logs"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can use the Logs panel to get log/warn/error message from the engine."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"## Controlling the debug layer by code "},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"The debug layer can be used without the UI as well. To do so, you just have to call it like this:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.show(false);"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The _reusable_ paameter indicates if your postprocess can be reused multiple times on the same camera (default is false)."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"# Attach postprocess"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Depending on how you have defined a postprocess, it can be attached one or more times to the same camera. "},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The same instance can also be attached to multiple cameras."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"A camera has two methods:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"#### **attachPostProcess**"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"NUMBER function(PostProcess postProcess [,NUMBER atIndice])"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"#### **detachPostProcess**"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"NUMBER function(PostProcess postProcess [,NUMBER[] atIndices])"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"# Builtin postprocesses"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Babylon.js comes with a set of ready to use postprocesses."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Pass: Do nothing. Used to copy the framebuffer into a postprocess for further use"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"### Gaussian Blur ###"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"The Gaussian Blur equation used:"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"![Elements](http://homepages.inf.ed.ac.uk/rbf/HIPR2/eqns/eqngaus1.gif)"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.gaussCoeff``` controls the overall effect: ```hdr.gaussCoeff * theEffect```. Default 0.3"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":" "},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.gaussMean``` is used to ajust the ```x``` value:  ```x - hdr.gaussMean```. Default 1.0"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.gaussStandDev``` controls the gaussian blur standard deviation (sigma). Default 0.8"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"### Bright Pass ###"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"The bright pass is rendered before the gaussian blur pass. It is used to compute the minimum light needed to compute the HDR effect."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.brightThreshold``` default value is 0.8"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"### HDR ###"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.exposure``` is used to ajust the colors. High exposures are used to see details in darkness and low exposures in bright areas. Default value is 1.0"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"If you want to attach manually the rendering pipeline, just use the scene rendering pipeline manager like:"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"var ssao = new BABYLON.SSAORenderingPipeline('ssaopipeline', scene, 0.75);"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(\"ssaopipeline\", cameras);"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"**Warning: To save your performances, you should compute the SSAO/blurH/blurV with a lower ratio than 1.0 **"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"If you want to detach and destroy the rendering pipeline, you can just call ```dispose()``` method"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"ssao.dispose();"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"You can see the SSAO post-process output by detaching the combine post-process like:"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"ssaopipeline\", ssao.SSAOCombineRenderEffect, cameras);"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"**Note: SSAO uses the depth map renderer and activates it by default. You can disable the depth map renderer by passing \"true\" as argument in the dispose() method **"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"For more customization, you can specify the SSAO and Combine post-processes ratios like:"},{"src":"tutorials/Video_courses","name":"Video_courses","text":"8. [Special Effects](http://doc.babylonjs.com/page.php?p=24834)"},{"src":"tutorials/v2.0_Classes_Hotlist","name":"v2.0_Classes_Hotlist","text":"[Some links are searches. Expect artifacts and search overshoot.]"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"The lightSourceMesh is a mesh that will contain the light colour, typically a billboard with a diffuse texture.  If your light source is coming from the floor, you can use the floor/ground mesh to compute the light scattering effect."},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"**Note: The light source mesh can be null. This causes a default lightSourceMesh to be created for you as a billboard **"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"To create the default mesh before the post-process, there is a static method that returns a billboard as default:"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"var defaultMesh = BABYLON.VolumetricLightScatteringPostProcess.CreateDefaultMesh(\"meshName\", scene);"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"You can access and modify the mesh using:"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"var mesh = vls.mesh;"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"By default, the post-process is computing the light scattering using the internal mesh position.  You can modify and set a custom position using (typically for the floor as the internal mesh):"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.useCustomLightPosition = true;"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.setLightPosition(new BABYLON.Vector3(5.0, 0.0, 5.0));"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/05._Game_Pipeline_Integration_with_Babylon.js","name":"05._Game_Pipeline_Integration_with_Babylon.js","text":"[Download **sample code** and Powerpoint **slides** for this chapter](https://github.com/deltakosh/MVA3DHTML5GameDev/tree/master/Chapter%205)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"![normalMap](http://www.babylonjs.com/tutorials/Advanced%20Texturing/normalMap.jpg)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"_A normal map_"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"And now, let’s code this amazing texture within two lines of JavaScript: first we create a new standard material, and then, simply declare a new bump texture:"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```javascript"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"var bumpMaterial = new BABYLON.StandardMaterial(\"texture1\", scene);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"bumpMaterial.bumpTexture = new BABYLON.Texture(\"normalMap.jpg\", scene);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"That’s it! The bump texture disturbs/perturbs the normal to produce a result like this, where you should recognize our normal map:"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"![finalResult](http://www.babylonjs.com/tutorials/Advanced%20Texturing/2.png)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"_Resulting gorgeous bumpy sphere_"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"&nbsp;"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"* **Video**"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"If you want to display a video in your scene, the Babylon engine has a special texture for that. This special texture works similar to other textures, with the exception of a few parameters. These parameters include video urls (an url array), the size of the video texture (here is 256), the scene, and a final optional boolean that indicates if you want to use [mipmap](http://en.wikipedia.org/wiki/Mipmap) or not."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Here is an example from our [Flat2009 demo](http://www.babylonjs.com/?9). This plays a video on the demo's ZTV screen (ecran = screen). "},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```javascript"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"ecran.material.diffuseTexture = new BABYLON.VideoTexture(\"video\","},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"[\"Scenes/Flat2009/babylonjs.mp4\", \"Scenes/Flat2009/babylonjs.webm\"], scene, true);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"The [_VideoTexture_ object](http://babylondoc.azurewebsites.net/page.php?p=24964) accepts an array of videos (to take into account various codecs).&nbsp; The first video in the array that can be loaded... is the one used as content source.&nbsp; Currently, HTML5 supports .mp4, .webm, and .ogv video formats."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"The internal [video DOM object](http://www.w3.org/wiki/HTML/Elements/video) is accessible via the VideoTexture.video property... which allows you to control some characteristics and monitor the status of the video (things such as play, pause, loop, autoplay, etc).&nbsp; See the link above for the full story."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"![video](http://www.babylonjs.com/tutorials/Advanced%20Texturing/3.png)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Even though we are working with advanced texturing techniques, _VideoTexture_ works in conjunction with a StandardMaterial. Simply put, it needs to have some light. As a handy alternative or video illumination assistant, you may want to set an _emissiveColor_ on the base material of the mesh."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    width: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    height: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    touch-action: none;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  }"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</style>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"### The Javascript External Includes Part (the framework)"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Now we load our framework files.  After the CSS, (but still inside the ```<head>``` part), please add:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```html"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<script src=\"babylon.js\"></script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<script src=\"hand.js\"></script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<script src=\"cannon.js\"></script>  <!-- optional physics engine -->"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<!-- <script src=\"Oimo.js\"></script>  New physics engine -->"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"(if you don't already have those files, you can find them here: https://github.com/BabylonJS/Babylon.js, and here: http://handjs.codeplex.com/)"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Next, we go inside the ```<body>``` part of the web page... and add a HTML5 canvas element, which will be used to draw our scene."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```html"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<canvas id=\"renderCanvas\"></canvas>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Now, we make the jump from HTML5 into Javascript.  Still inside the ```<body>``` part of the web page,  please add:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```javascript"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  // Get the canvas element from our HTML above"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  var canvas = document.getElementById(\"renderCanvas\");"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  // Load the BABYLON 3D engine"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  var engine = new BABYLON.Engine(canvas, true);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;// Creation of a knot"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;// (name, radius, tube, radialSegments, tubularSegments, p, q, scene, updatable)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var knot = BABYLON.Mesh.CreateTorusKnot(\"knot\", 2, 0.5, 128, 64, 2, 3, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;// Creation of a lines mesh"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;var lines = BABYLON.Mesh.CreateLines(\"lines\", ["},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(-10, 0, 0),"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(10, 0, 0),"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(0, 0, -10),"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(0, 0, 10)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;], scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;// Moving elements"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;box.position = new BABYLON.Vector3(-10, 0, 0);&nbsp; &nbsp;// Using a vector"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;sphere.position = new BABYLON.Vector3(0, 10, 0); // Using a vector"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;plane.position.z = 10;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; // Using a single coordinate component"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;cylinder.position.z = -10;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;torus.position.x = 10;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;knot.position.y = -10;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;return scene;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"}"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Starting with the box, we create 7 different basic elements, and then position them at the end of the function (to keep them from being atop one another).&nbsp; It's really quite easy, isn't it?&nbsp; Again, starting with the creation of the box, let's talk about each of the 7 shapes/meshes.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Box**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var box = BABYLON.Mesh.CreateBox(\"box\", 6.0, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, size of the box, the scene to attach the mesh, updatable? (if the mesh must be modified later) and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var box = BABYLON.Mesh.CreateBox(\"box\", 6.0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Sphere**"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* **Parenting**"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"Another Babylon feature is attaching an object, relatively to another, by creating a parent-child link between two meshes. This link implies that all parent transformations (position/rotation/scaling) will also be applied to the child’s transformations."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```javascript"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"//Positioning box3 relative to box1"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;box3.parent = box1;"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;&nbsp; &nbsp;box3.position.z = -10;"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"```"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"## Notes"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"Parent-child hierarchies are evaluated on every frame. So any position, rotation and scaling transformations made to the parent... prior to assigning it to children... will also be applied to the children when the parent is assigned."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"All transformations made after assigning a parent to a child... will be maintained with the child in relation to the parent."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"&nbsp;"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"Basically in simple terms, don't rotate or move a child until after you've assigned it to the parent, and keep in mind that additional rotations will be in relation to the parent after the parent rotations are applied to the child."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"### Some Links"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"This tutorial's createScene() can be viewed and experimented-with... by visiting [Babylon.js Playground scene 03](http://www.babylonjs.com/playground/?3). We also have some animated demonstrations that are part of the Babylon.js Primer, viewable in the Miscellaneous section.&nbsp; Here are links to those demos."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* [**Position demo**](http://www.babylonjs.com/playground/#35CPC)"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* [**Rotation demo**](http://www.babylonjs.com/playground/#YIT1S)"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"* [**Scaling demo**](http://www.babylonjs.com/playground/#1VMQNH)"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"##Next step##"},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"----"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"That is done by setting the properties on the material.  Let's see what they are:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **Transparency** (alpha channel)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Alpha compositing and transparency in general can be a bit complex. A specific article about that can be found [here](page.php?p=25100). You might also want to read [the wikipedia page about it](http://en.wikipedia.org/wiki/Alpha_compositing).  You will encounter even more uses for it when you enjoy the BabylonJS particle system, and BabylonJS sprites system. "},{"src":"tutorials/04._Materials","name":"04._Materials","text":" Alpha transparency, written in percent (%), can be applied to a material in this way:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.alpha = 0.5;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **Diffuse**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"The diffuse is the native color of the object material once it is lit with a light. You can specify a solid color with the ```diffuseColor``` property:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseColor = new BABYLON.Color3(1.0, 0.2, 0.7);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Or, you can use a texture:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseTexture = new BABYLON.Texture(\"grass.png\", scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"**More About Textures:** Be sure to use the correct path to your image (relative or absolute path). Supported image formats include JPG, PNG, JPEG, BMP, GIF… (every image format supported by your browser)."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"If you want to translate (offset) your texture on your mesh, you can use the “uOffset” and “vOffset” properties:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseTexture.uOffset = 1.5;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseTexture.vOffset = 0.5;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"And if you want to repeat/tile an image pattern (e.g. grass texture), you can use the “uScale” and “vScale” properties:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseTexture.uScale = 5.0;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseTexture.vScale = 5.0;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"![tof](http://www.babylonjs.com/tutorials/04%20-%20Materials/04-1.png)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"And if your texture has some alpha, you will need to specify it:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._More_Advanced_Features","name":"04._More_Advanced_Features","text":"* [Using the Volumetric LightScattering post-process](http://babylondocv2.azurewebsites.net/tutorials/Using_the_Volumetric_LightScattering_post-process) [Old](http://doc.babylonjs.com/page.php?p=24840)"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"When we use that useful _setPosition()_ method, we need not concern ourselves with _alpha_, _beta_, and _radius_. We just make sure we have a _target_ property set ( which we did in the constructor with new BABYLON.Vector3.Zero() ), and then use _setPosition()_ to put our camera exactly where we want it, in 3D space. The handy _setPosition()_ method does the rest. Easy."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The ArcRotateCamera is an excellent camera to animate. By default, the ArcRotateCamera has no _upperAlphaLimit_ or _lowerAlphaLimit_. So once you have set your arcCamera as the scene.activeCamera (see further below), you can send your ArcRotateCamera gently orbiting around your target... by putting this simple line of Javascript into the render loop of your scene:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   scene.activeCamera.alpha += .01;"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"It's beautiful, it's easy, it's Babylon.js. Please see the  [ArcRotateCamera API page](http://babylondoc.azurewebsites.net/page.php?p=23874) for more information."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Both of these basic Babylon.js cameras will automatically handle inputs for you... once you call the camera's _attachControl_ function. And you can revoke the control by using the _detachControl_ function. Most Babylon.js experts use a two-step process to activate and attach a camera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// First, set the scene's activeCamera... to be YOUR camera."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   scene.activeCamera = myCamera;"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Then attach the activeCamera to the canvas."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   scene.activeCamera.attachControl(canvas);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"This activate-and-attach code is also used for our unique purpose cameras, which we will now talk about."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"## Unique Purpose Cameras"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"There are some Babylon.js cameras that have unique purposes. I will try to explain their purposes as we examine each camera and their constructors."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **TouchCamera** - The TouchCamera is a camera that works closely with hand.js, and opens Babylon.js to the modern technology of DOM Gesture Events. Touch is a type a 'gesture', whether it be on a pad or screen, with finger(s), stylus, glove, feet, or laser pointer. Any movement that can be sensed... can be considered a gesture. You can learn all about gestures by visiting [**a wikipedia page that tells all about it**](http://en.wikipedia.org/wiki/Gesture_recognition)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The TouchCamera is specially programmed for nearly all modern gesture-active input devices. Much of its power comes from hand.js. If you would like to learn more about hand.js and its gestures-ready methods, take a look at [**this comprehensive blog entry**](http://blogs.msdn.com/b/eternalcoding/archive/2013/01/16/hand-js-a-polyfill-for-supporting-pointer-events-on-every-browser.aspx) written by our friend and hero David Catuhe."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"There is much underlying magic to the TouchCamera, but like everything else in Babylon.js, we make it easy and enjoyable for you. Here is how to construct a TouchCamera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// TouchCamera >> Move in your world with your touch-gesture device"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"var light0 = new BABYLON.DirectionalLight(\"Dir0\", new BABYLON.Vector3(0, -1, 0), scene);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.diffuse = new BABYLON.Color3(1, 0, 0);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.specular = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-44-73-metablogapi/1563.image_5F00_1ECD8F81.png)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"_Red diffuse directional light with white specular_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"- **The Spot Light**"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"A spot light is defined by a position (2nd arg), a direction (3rd arg), an angle (4th arg), and an exponent (5th arg). These values define a cone of light starting from the position, emitting toward the direction. "},{"src":"tutorials/06._Lights","name":"06._Lights","text":"The angle defines the size (field of illumination) of the spotlight's conical beam (in radians), and the exponent defines the speed of the decay of the light with distance (the light's 'reach distance'). Just like the other lights, you can control the color of the light with the *diffuse* and *specular* properties:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-44-73-metablogapi/7723.image_5F00_thumb_5F00_11F5CA14.png)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"&nbsp;_A simple drawing showing the shape of a spot light_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"var light0 = new BABYLON.SpotLight(\"Spot0\", new BABYLON.Vector3(0, 30, -10), new BABYLON.Vector3(0, -1, 0), 0.8, 2, scene);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.diffuse = new BABYLON.Color3(1, 0, 0);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.specular = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-44-73-metablogapi/1738.image_5F00_thumb_5F00_18AB6448.png)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"_A red diffuse spot light with white specular, a 0.8 radians-wide cone, and an exponent of 2_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"- **The Hemispheric Light**"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp; - ```BABYLON.Animation.ANIMATIONTYPE_FLOAT```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp; - ```BABYLON.Animation.ANIMATIONTYPE_VECTOR2```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp; - ```BABYLON.Animation.ANIMATIONTYPE_VECTOR3```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp; - ```BABYLON.Animation.ANIMATIONTYPE_QUATERNION```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp; - ```BABYLON.Animation.ANIMATIONTYPE_MATRIX```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp; - ```BABYLON.Animation.ANIMATIONTYPE_COLOR3```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Parameter 5. Finally, you have to decide and enter the type of behavior this animation will take at its upper limit (e.g. will it continue on, will it begin again, will it stop at the last key value, etc.):"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"* Use previous values and increment it: ```BABYLON.Animation.ANIMATIONLOOPMODE_RELATIVE```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"* Restart from initial value: ```BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"* Keep their final value: ```BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Now that we have our Animation object, it is time to say how those values will be modified. In our case, we want to scale our box, but not in a linear way: it must be faster when it became larger, and slower when it became thinner. So:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// An array with all animation keys"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var keys = []; "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; //At the animation key 0, the value of scaling is \"1\""},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;keys.push({"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; frame: 0,"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value: 1"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;});"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;//At the animation key 20, the value of scaling is \"0.2\""},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;keys.push({"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; frame: 20,"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value: 0.2"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;});"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;//At the animation key 100, the value of scaling is \"1\""},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"var player = new BABYLON.Sprite(\"player\", spriteManagerPlayer);"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Voilà, you have got your sprite displayed!"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"If you want to add parameters to this instance, you can manipulate it like any other meshes:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.position.y = -0.3;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"But because it’s a sprite, you may use specific parameters: you can change their size, or their orientation:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.size = 0.3;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.angle = Math.PI/4;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.invertU = -1;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Starting with Babylon.js v2.1, you can define sprite's width and height:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.width = 0.3;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.height = 0.4;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"You can keep using ```player.size``` and in this case width and height will just be the same."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"3- **Sprite animation**"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"One of the advantages of sprites is animations. You only have to load one large image file which will contain all animation images, one next to another. Just be careful to respect the square pixel size that you have specified in your manager (e.g. 64 pixel)."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Here is what a complete sprite image looks like:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"![Elements](http://www.babylonjs.com/tutorials/08%20-%20Sprites/08-2.png)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"And declare which meshes could be in collision with our camera:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"ground.checkCollisions = true;"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"box.checkCollisions = true;"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"That’s it! Easy!"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"You can play with the scene used in this tutorial... by visiting the Babylon.js [**playground demo**](http://www.babylonjs-playground.com/#4HUQQ)."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Now, your camera is going to fall on the y-axis until it collides with the ground. And, your camera will collide with the box when you move it too near to it."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"**4 - Object vs. object collision**"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"You can also do the same thing with a mesh by playing with _mesh.ellipsoid_ property and _mesh.moveWithCollisions(velocity)_ function. This function will try to move the mesh according to given velocity and will check if there is no collision between current mesh and all meshes with checkCollisions activated."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"You can also use _mesh.ellipsoidOffset_ to move the ellipsoid on the mesh (By default the ellipsoid is centered on the mesh)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"var speedCharacter = 8;"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"var gravity = 0.15;"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"var character = Your mesh;"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"character.ellipsoid = new BABYLON.Vector3(0.5, 1.0, 0.5);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"character.ellipsoidOffset = new BABYLON.Vector3(0, 1.0, 0);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"var forwards = new BABYLON.Vector3(parseFloat(Math.sin(character.rotation.y)) / speedCharacter, gravity, parseFloat(Math.cos(character.rotation.y)) / speedCharacter);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"forwards.negate();"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"character.moveWithCollisions(forwards);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"// or"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"var backwards = new BABYLON.Vector3(parseFloat(Math.sin(character.rotation.y)) / speedCharacter, -gravity, parseFloat(Math.cos(character.rotation.y)) / speedCharacter);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"character.moveWithCollisions(backwards);"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"var pointToIntersect = new BABYLON.Vector3(10, -5, 0);"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"if (balloon3.intersectsPoint(pointToIntersect)){"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"&nbsp;&nbsp; balloon3.material.emissiveColor = new BABYLON.Color4(1, 0, 0, 1);"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"}"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"```"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"We defined a precise point in our scene, and if our balloon intersects this point, wherever on the balloon, then the event is raised and we change the color of the balloon."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"You can play with the code used in this tutorial... by visiting [**a demo at our playground**](http://babylonjs-playground.azurewebsites.net/?10)."},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"## Next step"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"With those two functions, your scenes are becoming a lot more dynamic: you can define a specific reaction to object intersecting and colliding, and begin to introduce physics notions into your scene."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"## Advanced Picking Features"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Please note that the pickResult object can provide you with additional information, detailed below:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- `faceId`: this is the position of the picked face's indices in the indices array. These can be accessed like so:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"```"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"var indices = pickResult.pickedMesh.getIndices();"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"var index0 = indices[pickResult.faceId * 3];"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"var index1 = indices[pickResult.faceId * 3 + 1];"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"var index2 = indices[pickResult.faceId * 3 + 2];"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"```"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- `submeshId`: the ID of the picked submesh inside the picked mesh"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- `bu` and `bv` properties: these are the barycentric coordinates of the picked point in the face. The picked face is a polygon composed of 3 vertices, and the picked point is the barycenter of those three vertices with the following weights:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"  * `1 - bu - bv` for the vertex n. 0"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"  * `bu` for the vertex n. 1"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"  * `bv` for the vertex n. 2"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- `getTextureCoordinates()`: computes the texture coordinates of the picked point; these will be returned as a `Vector2` in texture space, which means its coordinates will be between 0 and 1."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Possible uses include:"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- Drawing on a texture using a DynamicTexture,"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- Modifying a face that was hit (delete, move vertices, change color...),"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- Changing a submesh material,"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"- etc."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"## Next step"},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"This collision method is convenient in a lot of situations. Once you understand mouse pick events, you can begin using that functionality to advance your application’s development."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"This is the output of this configuration:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"![TextureMask](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-1.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"The last main thing to do is to define our emitter that we talked about earlier:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"// Where the particles comes from"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.emitter = fountain; // the starting object, the emitter, a box in this case."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Now you should see your particle system working. But it might not be our final result. We can refine some parameters:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Box around our emitter. Our emitter is the center of particles source, but if you want your particles to emit from more than one point, then you can tell it to do so:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.minEmitBox = new BABYLON.Vector3(-1, 0, 0); // Starting all From"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.maxEmitBox = new BABYLON.Vector3(1, 0, 0);&nbsp; // To..."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"As you can see, particles are emitted from different positions along the X-axis:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"![EmitBox](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-2.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Now you can give some colors to your particles. Color one and two are combined, and “colorDead” is the color that the particle takes-on just before it disappears."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"// Colors of all particles (splited in 2 + specific color before dispose)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Size of particles:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"// Size of each particle (random between...)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.minSize = 0.1;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Many parameters here:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Name_"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Height map picture url_"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* Size of this mesh: "},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* > _Width_"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* > _Height_"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Number of subdivisions_: increase the complexity of this mesh in order to improve the visual quality of it:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"![HeightMap4](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-2.png)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Minimum height_ : The lowest level of the mesh"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Maximum height_ : the highest level of the mesh"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Scene_: the actual scene"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* _Updatable_: indicates if this mesh can be updated dynamically in the future (Boolean)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* successCallback : will be called after the height map was created and the vertex data is created. It is a function with the mesh as its first variable."},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Finally, when our new mesh is ready, we simply apply our material:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```javascript"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"ground.material = groundMaterial;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"And now we have a beautiful 3D view of the earth!"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"![HeightMap4](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-3.png)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"In my example, I have added a skybox (like we have learned before [here](https://github.com/BabylonJS/Babylon.js/wiki/13-Environment)), and a spotlight to simulate sun activity."},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Here is another example showing what you can achieve with BabylonJS height maps:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"![HeightMap5](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-4.png)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"(Please see the section on ambientColors in our [Unleash the Standard Material](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) tutorial, for more information.)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"### Skybox"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"To give a perfect illusion of a beautiful sunny sky, we are going to create a simple box, but with a special texture."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"![Skybox](http://www.babylonjs.com/tutorials/13%20-%20Environment/13-1.png)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"First, our box, nothing new, just take notice of the disabled [backface culling](http://en.wikipedia.org/wiki/Back-face_culling):"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"var skybox = BABYLON.Mesh.CreateBox(\"skyBox\", 100.0, scene);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"var skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skyboxMaterial.backFaceCulling = false;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skybox.material = skyboxMaterial;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Next, we set the `infiniteDistance` property. This makes the skybox follow our camera's position."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skybox.infiniteDistance = true;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Now we must remove all light reflections on our box (the sun doesn't reflect on the sky!):"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Next, we apply our special sky texture to it. This texture must have been prepared to be a skybox, in a dedicated directory, named “skybox” in our example:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"textures/skybox\", scene);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"It is _true_ by default, because it is useful to decrease the aliasing of the shadow.  But if you want to reduce computation time, feel free to change it."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"### Poisson sampling"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"shadowGenerator.usePoissonSampling = true;"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"If you set this one to _true_, Variance shadow maps will be disabled. This filter uses Poisson sampling to soften shadows. The result is better, but slower."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"### Blur variance shadow map "},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```javascript"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"shadowGenerator.useBlurVarianceShadowMap = true;"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"This is the better soften shadow filter but the slower as well. It uses blurred variance shadow map."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"The quality of the blur is defined by two properties:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"* shadowGenerator.blurScale: Define the scale used to downscale the shadow map before applying the blur postprocess. By default, the value is 2"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"* shadowGenerator.blurBoxOffset: Define the offset of the box's edge used to apply the blur. By default, the value is 1 (Meaning the box will go from -1 to 1 in bot direction resulting in 9 values read by the blur postprocess)."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"### Examples"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Please find here pictures of various filters used with a spot light:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"![Hard shadows](http://www.babylonjs.com/forumpics/hard.jpg)"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"*No filter*"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"![Poisson](http://www.babylonjs.com/forumpics/poisson.jpg)"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"*Poisson sampling*"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"![VSM](http://www.babylonjs.com/forumpics/vsm.jpg)"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"*Variance Shadow Map*"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PCY1J#1 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Playing a sound on mouse click or keydown##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"This sample code play a gunshot sound if you’re left-clicking or pressing the spacebar:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var gunshot = new BABYLON.Sound(\"gunshot\", \"sounds/gunshot.wav\", scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"window.addEventListener(\"mousedown\", function (evt) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    // left click to fire"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    if (evt.button === 0) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        gunshot.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"});"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"window.addEventListener(\"keydown\", function (evt) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    // Press space key to fire"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    if (evt.keyCode === 32) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        gunshot.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"});"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Test it on our playground: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PCY1J#4 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Some basic properties##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can set the volume of a sound via the options object or via the *setVolume()* function. You can set the play rate in the same manner."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can also be notified when the sound has finished playing by registering yourself into the onended event."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is a simple sample code mixing all that:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### The Internal Include - Green Section ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Here is the fifth HTML SCRIPT element/tag in the big picture scene file.&nbsp; We used 4 SCRIPT elements/tags to do the external includes.&nbsp; This one is an INTERNAL include.&nbsp; Notice that it has no 'src' URL.&nbsp; That is because it is a section of Javascript code that YOU have written directly into this document.&nbsp; Yes, YOU.&nbsp; Now you are a Javascript programmer!"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You could 'externalize' the entire green section, and possibly place it into a file called... 'myJavascript.js'... maybe in a folder called 'jsfolder'.&nbsp; Then you could remove the green section, and add one more EXTERNAL INCLUDE script element/tag that might look like this:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` html"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"<script src=\"./jsfolder/myJavascript.js\"></script>"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You need not concern yourself with that, at this point.&nbsp; Externalizing your Javascript is often done when you have written LOTS of Javascript code.&nbsp; Externalizing your code into separate files helps your project be organized, but it is not necessary this early in your webGL adventures."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The JS code you see inside the green section... will be talked about soon.&nbsp; Mainly, I would like you to study the big picture, and see how the single HTML file method of creating Babylon.js scenes... is structured.&nbsp; I want you to try to visualize and somewhat memorize... this scene file's 'layout'."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### The createScene() Function - Purple Section ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The purple section of the big picture... is the createScene() 'function'... a Javascript 'function'.&nbsp; It is the most important section of a 'single HTML file' Babylon.js scene.&nbsp; You are not required to use a createScene() function in your Javascript code, but please do... in these early days of your webGL learning.&nbsp; I have some magic to show you... which is available if you keep most of your scene code... inside a function called createScene().&nbsp; (Like the one shown in the big picture.)"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Inside the createScene() function (the purple section)... we will be doing the actual Babylon.js commands and directives that cause beautiful webGL to happen.&nbsp; The rest of the big picture sections... are simply helpers and preparations... for the fantastic purple section... the createScene() function.&nbsp; Remember its name, because I will be mentioning it often in many Playpen Series tutorials.&nbsp; It will become your best friend.&nbsp; This I can promise."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## A Visit to The Playground ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"We have worked hard and learned much, so we deserve some playground time, at the Babylon.js Playground web site.&nbsp; Here is a scene that I once created and then saved... at the playground:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## [BabylonJS Playground](http://babylonjs-playground.azurewebsites.net/#QKQHS) ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You might want to open that playground scene in a new window or new tab, so you can switch back and forth between here and there."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"See the 'createScene' function in the left-side code editing window?&nbsp; Does it look familiar?&nbsp; It is the very same code from the purple section of the big picture (but with a couple of word-wrapped lines).&nbsp; Now you can see why the createScene function is an important section.&nbsp; It is somewhat portable.&nbsp; You can copy createScene functions to/from the playground editor, and to/from your home scene files."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Let's pretend that you have been working on a scene file at home, and after many tries, you just cannot get it to work properly.&nbsp; You could copy your home createScene function, then visit the playground, press its **CLEAR** button to empty its editor window, and then paste YOUR createScene function into the editor. Press the playground's **RUN** button and see if it works.&nbsp; If it does not work, you can do some changes in the editor window, and hit **RUN** again... and again, and again.&nbsp; Experiment with it there, and if you still cannot get it to work, you can press the **SAVE** button.&nbsp; When you do that, the playground will give your scene a unique URL.&nbsp; It will look something like this:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://babylonjs-playground.azurewebsites.net/#QKQHS ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Now you can bookmark that unique URL, and then visit the Babylon.js forum at:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://www.html5gamedevs.com/forum/16-babylonjs/ ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"There, you can start a new topic, tell everyone the URL to your broken playground createScene function, and ask others if they will please visit your playground scene and help you get it working correctly.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"This is called white-boarding.&nbsp; It is an easy way to allow many people to work on your createScene function and help you figure out what is wrong.&nbsp; See how the createScene function is 'portable'?&nbsp; You took it from your home, to the playground, then played with it there for awhile.&nbsp; Then, if needed, you clicked the playground's **SAVE** button, which gave it a URL.&nbsp; &nbsp;Then you went to the forum and showed that URL to others, and asked for their help.&nbsp; Handy, huh?&nbsp; We think so."},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"```"},{"src":"tutorials/Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","name":"Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js","text":"The first parameter can be used to define gravity (which is (0, -9.82, 0) by default)."},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/procedurals/babylon.proceduralTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/procedurals/babylon.standardProceduralTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/procedurals/babylon.customProceduralTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.mirrorTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.dynamicTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/textures/babylon.videoTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/babylon.effect.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/babylon.material.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/babylon.standardMaterial.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/babylon.multiMaterial.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Loading/babylon.sceneLoader.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Loading/Plugins/babylon.babylonFileLoader.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Sprites/babylon.spriteManager.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Sprites/babylon.sprite.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Layer/babylon.layer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Particles/babylon.particle.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Particles/babylon.particleSystem.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Animations/babylon.animation.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Animations/babylon.animatable.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Animations/babylon.easing.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Culling/Octrees/babylon.octree.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Culling/Octrees/babylon.octreeBlock.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Bones/babylon.bone.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Bones/babylon.skeleton.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.postProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.postProcessManager.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.passPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.blurPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.refractionPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.blackAndWhitePostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.convolutionPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.filterPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.fxaaPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/LensFlare/babylon.lensFlare.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/LensFlare/babylon.lensFlareSystem.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Physics/Plugins/babylon.cannonJSPlugin.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Physics/Plugins/babylon.oimoJSPlugin.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Physics/babylon.physicsEngine.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.sceneSerializer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.csg.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.vrDistortionCorrectionPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.virtualJoystick.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.virtualJoysticksCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/babylon.shaderMaterial.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.mesh.vertexData.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.anaglyphPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.tags.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.andOrNotEvaluator.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/RenderPipeline/babylon.postProcessRenderPass.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/RenderPipeline/babylon.postProcessRenderEffect.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/RenderPipeline/babylon.postProcessRenderPipeline.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/RenderPipeline/babylon.postProcessRenderPipelineManager.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.displayPassPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Rendering/babylon.boundingBoxRenderer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Actions/babylon.condition.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Actions/babylon.action.js\"></script>"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"parentId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"lockedTargetId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"position\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"target\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"alpha\": float, // only for ArcRotateCamera and AnaglyphArcRotateCamera"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"beta\": float, // only for ArcRotateCamera and AnaglyphArcRotateCamera"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"radius\": float, // only for ArcRotateCamera, FollowCamera and AnaglyphArcRotateCamera"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"eye_space\": float, // only for AnaglyphFreeCamera and AnaglyphArcRotateCamera"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"heightOffset\": float, // only for FollowCamera"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"rotationOffset\": float, // only for FollowCamera"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"cameraRigMode\": int (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"fov\": float (in radians),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"minZ\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"maxZ\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"speed\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"inertia\": float (between 0 and 1),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"checkCollisions\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"applyGravity\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"ellipsoid\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"animations\": array of Animations (see below, can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimate\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateFrom\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateTo\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateLoop\": boolean (can be omitted)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Lights"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A light is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"type\": int (0 for point light, 1 for directional, 2 for spot and 3 for hemispheric),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"position\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"direction\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"angle\": float (for spot lights),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"exponent\": float (for spot lights),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"groundColor\": color3 (for hemispheric lights),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"intensity\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"range\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diffuse\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"specular\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"excludedMeshesIds\": array of string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"includedOnlyMeshesIds\": array of string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"where _axis1_, _axis2_ and _axis3_ are three left-handed oriented orthogonal vectors. "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"With this code, the mesh will be aligned thus : "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"* _axis1_ will become x axis in its local system"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"* _axis2_ will become y axis in its local system"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"* _axis3_ will become z axis in its local system"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"example : http://www.babylonjs-playground.com/#VYM1E#5 "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"The textured plane mesh is currently aligned with the axis between spheres (axis1) and \"faces\" the camera : axis2 = camera.position "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"#Baking Transform#"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"In certain situations you might be interested in applying a transform (position, rotation, scale) directly to the mesh vertices, instead of saving it as a property of the mesh. This is called baking, and can be useful in the following situations:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- building a set of static geometry"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- randomizing a series of mesh copies"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- mirroring a mesh along an axis"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- etc."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Two methods can be used for this process:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"`bakeTransformIntoVertices(transform: Matrix)`: this will bake the provided matrix directly into the mesh vertices. For example:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"// this will permanently mirror the mesh along the Y axis, while leaving the transform properties untouched"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var matrix = BABYLON.Matrix.Scaling(1, -1, 1);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.bakeTransformIntoVertices(matrix);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"`bakeCurrentTransformIntoVertices()`: this will bake the current transform properties of the mesh into the vertices, and clear those properties. This includes _rotation_, _translation_ and _scaling_."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Note: scaling a mesh will often give unrealistic results for lighting, since the normals will simply be scaled along and not properly recomputed. This is illustrated in the following picture: "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"![Normals illustration](http://i.imgur.com/18wDAH7.png) "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"_In the above picture, you can see an untransformed mesh on the left, the same mesh scaled along the X axis in the middle and on the right, the mesh with its normals correctly recomputed._"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"You can do a recomputation of your normals like so:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var indices = mesh.getIndices();"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var normals = mesh.getVerticesData(VertexBuffer.NormalKind);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            arrayColor = arrayColor.concat(arrayObj[i].getVerticesData(BABYLON.VertexBuffer.ColorKind));"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (MatricesIndicesKind)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            arrayMatricesIndices = arrayMatricesIndices.concat(arrayObj[i].getVerticesData(BABYLON.VertexBuffer.MatricesIndicesKind));"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        if (MatricesWeightsKind)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            arrayMatricesWeights = arrayMatricesWeights.concat(arrayObj[i].getVerticesData(BABYLON.VertexBuffer.MatricesWeightsKind));"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        var maxValue = savedPosition.length / 3;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        arrayObj[i].computeWorldMatrix(true);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        var worldMatrix = arrayObj[i].getWorldMatrix();"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        for (var ite = 0 ; ite != arrayPos[i].length; ite += 3) {"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            var vertex = new BABYLON.Vector3.TransformCoordinates(new BABYLON.Vector3(arrayPos[i][ite], arrayPos[i][ite + 1], arrayPos[i][ite + 2]), worldMatrix);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            savedPosition.push(vertex.x);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            savedPosition.push(vertex.y);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            savedPosition.push(vertex.z);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        }"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        for (var iter = 0 ; iter != arrayNormal[i].length; iter += 3) {"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            var vertex = new BABYLON.Vector3.TransformNormal(new BABYLON.Vector3(arrayNormal[i][iter], arrayNormal[i][iter + 1], arrayNormal[i][iter + 2]), worldMatrix);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            savedNormal.push(vertex.x);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            savedNormal.push(vertex.y);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            savedNormal.push(vertex.z);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        }"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        var tmp = arrayObj[i].getIndices();"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        for (it = 0 ; it != tmp.length; it++) {"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"            arrayIndice.push(tmp[it] + maxValue);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        }"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        arrayIndice = arrayIndice.concat(tmp);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        arrayObj[i].dispose(false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    }"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    newMesh.setVerticesData(BABYLON.VertexBuffer.PositionKind, savedPosition, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    newMesh.setVerticesData(BABYLON.VertexBuffer.NormalKind, savedNormal, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    if (arrayUv.length > 0)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        newMesh.setVerticesData(BABYLON.VertexBuffer.UVKind, arrayUv, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    if (arrayUv2.length > 0)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        newMesh.setVerticesData(BABYLON.VertexBuffer.UV2Kind, arrayUv, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    if (arrayColor.length > 0)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        newMesh.setVerticesData(BABYLON.VertexBuffer.ColorKind, arrayUv, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    if (arrayMatricesIndices.length > 0)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        newMesh.setVerticesData(BABYLON.VertexBuffer.MatricesIndicesKind, arrayUv, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    if (arrayMatricesWeights.length > 0)"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"        newMesh.setVerticesData(BABYLON.VertexBuffer.MatricesWeightsKind, arrayUv, false);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    newMesh.setIndices(arrayIndice);"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"    return newMesh;"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"};"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The important key to notice is that we set the **_updatable_** parameter to **_true_** in the _CreateRibbon()_ method : the one just between the _scene_ and the _sideO_ parameters.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"We can now imagine we want to change this existing ribbon _y_ coordinates according to a sinus function. So for each path in the existing _pathArray_ array we just change _Vector3_ coordinates.    "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Note we don't create new paths or a new _pathArray_ array. We just access with indexes to every element and just change values.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var updatePath = function(path) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  for (var i = 0; i < path.length; i++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var x = path[i].x;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var z = path[i].z;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var y = 20 * Math.sin(i/ 10);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].x = x;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].y = y;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].z = z;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  }"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"};"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// update pathArray"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"for(var p = 0; p < pathArray.length; p++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  updatePath(pathArray[p]);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"}"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The way to update then our existing mesh is quite simple : let's just re-use the _CreateRibbon()_ method and give it this mesh as last parameter with our modified _pathArray_.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"mesh = BABYLON.Mesh.CreateRibbon(null, pathArray, null, null, null, null, null, null, mesh);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The other parameters than _pathArray_ and _mesh_ are just ignored when updating, so they can be set to _null_ for better understanding.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The _CreateRibbon()_ method thus updates the given ribbon and returns it.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"example : http://www.babylonjs-playground.com/#1MSEBT#1   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Well, we just updated our ribbon's shape once for now.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"If we now want its shape to evolve dynamically, we just have to set the _pathArray_ computation (fixed to change with an extra _k_ parameter) and the _CreateRibbon()_ call inside the render loop.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var updatePath = function(path, k) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  for (var i = 0; i < path.length; i++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var x = path[i].x;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var z = path[i].z;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var y = 20 * Math.sin(i/ 10) * Math.sin(k + z / 40);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].x = x;"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnRightPickTrigger`: Raised when the user touches/clicks on a mesh with right button"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnCenterPickTrigger`: Raised when the user touches/clicks on a mesh with center button"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnPointerOverTrigger`: Raised when the pointer is over a mesh. Raised just once"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnPointerOutTrigger`: Raised when the pointer is no more over a mesh. Raised just once"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnIntersectionEnterTrigger`: Raised when the mesh is in intersection with another mesh. Raised just once"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnIntersectionExitTrigger`: Raised when the mesh is no more in intersection with another mesh. Raised just once"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"For intersection triggers, you have to specify the \"other\" mesh with the following code:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```javascript"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"mesh.actionManager.registerAction("},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"new BABYLON.SetValueAction({ trigger: BABYLON.ActionManager.OnIntersectionEnterTrigger, parameter: otherMesh }, "},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"mesh, \"scaling\", new BABYLON.Vector3(1.2, 1.2, 1.2)));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"You can as well define if you want to use precise intersections:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```javascript"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"mesh.actionManager.registerAction("},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"new BABYLON.SetValueAction({ trigger: BABYLON.ActionManager.OnIntersectionEnterTrigger, parameter: { mesh:otherMesh, usePreciseIntersection: true} }, "},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"mesh, \"scaling\", new BABYLON.Vector3(1.2, 1.2, 1.2)));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"The following list defines triggers associated with scene:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnEveryFrameTrigger`: Raised once per frame."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnKeyDownTrigger`: Raised when a key is pressed."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ActionManager.OnKeyUpTrigger`: Raised when a key is released."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"For OnKeyUpTrigger and OnKeyDownTrigger triggers, you can filter events based on a key, either in your code or with a parameter:"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var path = bezier3.getPoints();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var l = bezier3.length();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Playground example : http://www.babylonjs-playground.com/#1PSZDF#2"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Read from line 50"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"##Hermite spline"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"http://en.wikipedia.org/wiki/Cubic_Hermite_spline"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"![EScience Hermite](http://escience.anu.edu.au/lecture/cg/Spline/Image/HermiteSpec.gif)"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var hermite = BABYLON.Curve3.CreateHermiteSpline(p1, t1, p2, t2, nbPoints);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **p1** : _Vector3_ the origin point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **t1** : _Vector3_ the origin tangent vector,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **p2** : _Vector3_ the destination point,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **t2** : _Vector3_ the destination tangent vector,"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* **nbPoints** : _number_ the wanted final curve number of points in the array."},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"This static method returns an instance of _Curve3_.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Just use the Curve3 _getPoints()_ method to fill your array : _getPoints()_ returns an array of successive _Vector3_.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"You can then use it for ribbons, tubes, extrusion paths, etc.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"The _length()_ method returns the curve length.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var path = hermite.getPoints();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var l = hermite.length();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"##Curve3 object"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"You can also instantiate your own Curve3 object from a simple array of successive Vector3.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Why would you do this ?   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Because you can then use the _continue()_ method to stick together many curves whatever their initial origin.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Let's imagine you've got an array of your own filled Vector3 along a simple sinus curve.  "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var mySinus = [];"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"for (var i = 0; i < 30; i++) {"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":" mySinus.push( new BABYLON.Vector3(i, Math.sin(i / 10), 0) );"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"}"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"You don't really know where your last Vector3 is set in space but you would like to continue your _mySinus_ curve with the former _bezier3_ curve (although it starts from the system origin) and then the former _bezier2_ to design some extrusion path for instance.   "},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"var imageTask = assetsManager.addImageTask(\"image task\", \"img.jpg\");"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"imageTask.onSuccess = function(task) {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    console.log(task.image.width);"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"}"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Textures can also be loaded, through textureTask:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"var textureTask = assetsManager.addTextureTask(\"image task\", \"img.jpg\");"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"textureTask.onSuccess = function(task) {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    material.diffuseTexture = task.texture;"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"}"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"The manager itself provides three callbacks:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"* onFinish"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"* onTaskSuccess"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"* onTaskError"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```javascript"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"assetsManager.onFinish = function (tasks) {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    engine.runRenderLoop(function () {"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"        scene.render();"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"    }),"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"};"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Finally, to launch all the tasks, you have to call ```assetsManager.load();```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"You can see a live demo [here](http://www.babylonjs.com/scenes/assets)"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"## Using loading screen"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    dude.position = new BABYLON.Vector3(0, 0, -80);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    scene.beginAnimation(skeletons[0], 0, 100, true, 1.0);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"}),"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"A complete running example can be found [here](http://www.babylonjs.com/index.html?BONES)"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"### Cloning bones"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Bones and skeletons can be cloned (This is the case with the rabbits in the previous link)."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Here is a sample of how to load and clone a mesh and its skeleton:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```Javascript"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"BABYLON.SceneLoader.ImportMesh(\"Rabbit\", \"Scenes/Rabbit/\", \"Rabbit.babylon\", scene, function (newMeshes, particleSystems, skeletons) {"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        var rabbit = newMeshes[1];"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        rabbit.scaling = new BABYLON.Vector3(0.4, 0.4, 0.4);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        shadowGenerator.getShadowMap().renderList.push(rabbit);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        var rabbit2 = rabbit.clone(\"rabbit2\");"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        var rabbit3 = rabbit.clone(\"rabbit2\");"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        rabbit2.position = new BABYLON.Vector3(-50, 0, -20);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        rabbit2.skeleton = rabbit.skeleton.clone(\"clonedSkeleton\");"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        rabbit3.position = new BABYLON.Vector3(50, 0, -20);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        rabbit3.skeleton = rabbit.skeleton.clone(\"clonedSkeleton2\");"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        scene.beginAnimation(skeletons[0], 0, 100, true, 0.8);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        scene.beginAnimation(rabbit2.skeleton, 73, 100, true, 0.8);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        scene.beginAnimation(rabbit3.skeleton, 0, 72, true, 0.8);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    }),"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"### Cloning Complex Models"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"More complex models, such as the Dude, contain submeshes. When cloning you must iterate and clone the submeshes as well. Here is an example of how to clone a more complex model:"},{"src":"tutorials/How_to_use_DepthRenderer_to_get_depth_values","name":"How_to_use_DepthRenderer_to_get_depth_values","text":"**Note: By default, generated texture uses float components thanks to *WebGL OES_texture_float extension*. If this extension is not supported, Babylon.js reverts back to byte component which means less precision for depth values.**"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(15, knot01);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(30, knot02);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(45, knot03);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"knot00.addLODLevel(55, null);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"for (var x = -count; x <= count; x++) {"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"    for (var y = -count; y <= count; y++) {"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"        for (var z = 5; z < 10; z++) {"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"            var knot = knot00.createInstance(\"knotI\"),"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"            knot.position = new BABYLON.Vector3(x * scale, y * scale, z * scale);"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"        }"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"    }"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"}"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"```"},{"src":"tutorials/How_to_use_LOD","name":"How_to_use_LOD","text":"### Try: [LOD and instances playground](http://www.babylonjs-playground.com/#14ESWC)"},{"src":"tutorials/How_to_use_Lens_Flares","name":"How_to_use_Lens_Flares","text":"- checkCollisions === true"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"_finalFresnelTerm = pow(**bias** + fresnelTerm, **power**)_"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"By default, bias == 0 and power == 1"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"For instance, the following code:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```javascript"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters = new BABYLON.FresnelParameters();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.leftColor = BABYLON.Color3.Black();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.rightColor = BABYLON.Color3.White();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.power = 4;"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"...generates the following rendering:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"![](http://www.babylonjs.com/forumpics/fresnel03.jpg)"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"## How to use it"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"A _FresnelParameter_ is defined by the following properties:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* ```isEnabled``` to activate or deactivate fresnel effect"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* leftColor to define color used on edges"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* rightColor to define color used on center"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* bias to define bias applied to computed fresnel term"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"* power to compute exponent applied to fresnel term"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"Here is a simple example:"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```javascript"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionTexture = new BABYLON.CubeTexture(\"Scenes/Customs/skybox/TropicalSunnyDay\", scene);"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.diffuseColor = new BABYLON.Color3(0, 0, 0);"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.emissiveColor = new BABYLON.Color3(0.5, 0.5, 0.5);"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.alpha = 0.2;"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.specularPower = 16;"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"// do stuff ..."},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"path3d.update(points, otherVector);"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"```"},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"The first normal will then be the projection of your parameter vector onto the plane orthogonal to the first tangent at the first point position. "},{"src":"tutorials/How_to_use_Path3D","name":"How_to_use_Path3D","text":"In a simplest way, this is a mean to have a \"vertical\" (or quite vertical, depending on the path) first normal for instance."},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"<center>`new BABYLON.PostProcessRenderPipeline(BABYLON.Engine engine, string name),`</center> "},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"| Method | Description |"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|--------|--------|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`PostProcessRenderPipeline(engine, name)`**|Create a new instance of PostProcessRenderPipeline.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`addEffect(renderEffect)`**|Add a new render effect to the pipeline.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"### BABYLON.PostProcessRenderEffect"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"`new BABYLON.PostProcessRenderEffect(BABYLON.Engine engine, string name, string postProcessType, number ratio, BABYLON.Texture.SAMPLING_MODE samplingMode, bool singleInstance);`"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"| Method | Description |"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|--------|--------|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`PostProcessRenderEffect(engine, name, createPostProcessFunction, singleInstance)`**|Create a new instance of PostProcessRenderEffect. The createPostProcessFunction have to return a nes instance of the postprocess you want to use|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`addPass(renderPass)`**|Add a new pass to the effect.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`addRenderEffectAsPass(renderEffect)`**|Add a render effect as a pass.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`removePass(renderPass)`**|Delete a pass from the effect.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"| Attribut | Description |"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|--------|--------|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`parameters`**|Callback used for passing extra parameters on a post process.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"### BABYLON.PostProcessRenderPass"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"`new BABYLON.PostProcessRenderPass(BABYLON.Scene scene, string name, object size, BABYLON.Mesh[] renderList, function(){} beforeRender, function(){} afterRender)`"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.ShadowsOptimization(priority)```: This optimization disables shadows."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.PostProcessesOptimization(priority)```: This optimization disables post-processes."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.LensFlaresOptimization(priority)```: This optimization disables lens flares."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.ParticlesOptimization(priority)```: This optimization disables particles."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* ```BABYLON.RenderTargetsOptimization(priority)```: This optimization disables render targets."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"Based on these optimizations, the basic sets are configured like this:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* BABYLON.SceneOptimizerOptions.LowDegradationAllowed():"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 0: ShadowsOptimization and LensFlaresOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 1: PostProcessesOptimization and ParticlesOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 2: TextureOptimization(2, 1024)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* BABYLON.SceneOptimizerOptions.ModerateDegradationAllowed():"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 0: ShadowsOptimization and LensFlaresOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 1: PostProcessesOptimization and ParticlesOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 2: TextureOptimization(2, 512)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 3: RenderTargetsOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 4: HardwareScalingOptimization(4, 2)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"* BABYLON.SceneOptimizerOptions.HighDegradationAllowed():"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 0: ShadowsOptimization and LensFlaresOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 1: PostProcessesOptimization and ParticlesOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 2: TextureOptimization(2, 256)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 3: RenderTargetsOptimization"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":" * Level 4: HardwareScalingOptimization(4, 4)"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"# Advanced usage"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"You can create your own set of options with the following code:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```javascript"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"var result = new BABYLON.SceneOptimizerOptions(60, 2000);"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"var priority = 0;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.ShadowsOptimization(priority));"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.LensFlaresOptimization(priority));"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"// Next priority"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"priority++;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.PostProcessesOptimization(priority));"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.ParticlesOptimization(priority));"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; var VJC = new BABYLON.VirtualJoysticksCamera(\"VJC\", newScene.activeCamera.position, newScene);"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; VJC.rotation = newScene.activeCamera.rotation;"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; VJC.checkCollisions = newScene.activeCamera.checkCollisions;"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; VJC.applyGravity = newScene.activeCamera.applyGravity;"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; // Wait for textures and shaders to be ready"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; newScene.executeWhenReady(function () {"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;newScene.activeCamera = VJC;"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// Attach camera to canvas inputs"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;newScene.activeCamera.attachControl(canvas);"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// Once the scene is loaded, just register a render loop to render it"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;engine.runRenderLoop(function () {"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; newScene.render();"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}),"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; }),"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }, function (progress) {"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; // To do: give progress feedback to user"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }),"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"&nbsp;&nbsp; &nbsp;}"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"}"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"```"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"### If you’re switching back, don’t forget to dispose!"},{"src":"tutorials/How_to_use_VirtualJoysticksCamera","name":"How_to_use_VirtualJoysticksCamera","text":"If you switch back to another camera, don’t forget to call the dispose() function first. Indeed, the VirtualJoysticks are creating a 2D canvas on top of the 3D WebGL canvas to draw the joysticks with cyan and yellow circles. If you forget to call the dispose() function, the 2D canvas will remain, and will continue to use touch events input."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"_Style for all HTML elements of the page having the \"center\" class on them (to find elements with a specific class, write a period character, followed by the name of the class)_"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```css"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":".center"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"{"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"    text-align: center;"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"    color: red;"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"}"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Thanks to javascript, you can even retrieve all these elements and then do further javascript operations on them (jQuery plugins largely use CSS classes)."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var elements = document.getElementsByClassName(\".center\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"The above directive would gather a collection of all HTML elements that use the .center class."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Here we are! **Tags in babylon.js can be used to categorize/group elements, and helper functions are provided to retrieve/gather tagged elements.**"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"## Integration to babylon.js"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Tags were integrated into babylon.js on April 7, 2014. [Pull request](https://github.com/BabylonJS/Babylon.js/pull/170#event-109351015)"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"There was a [discussion](http://www.html5gamedevs.com/topic/4961-user-data-in-mesh-object/?p=30458) about adding this feature on the forum. The goal was to be able to retrieve meshes."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"### Pure javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"The concept was expanded to allow the adding of tags on any javascript object (not necessarily only the objects created by babylon.js). The ```Tag``` class that has been added to babylon.js contains all the necessary code for this generic concept ([Typescript code](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Tools/babylon.tags.ts)) and internally uses the ```AndOrNotEvaluator``` class ([Typescript code](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Tools/babylon.andOrNotEvaluator.ts))."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"The use of tags for a javascript object can be enabled/disabled like this (javascript code):"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"Finally, if there may be more lights generated later, you can register a call-back whenever a light is added:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"scene.onNewLightAdded = onNewLight;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"This could be:"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"onNewLight = function (newLight, positionInArray, scene) {"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    newLight.excludeWithLayerMask = 0x10000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"};"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"## Gun Sight Example"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"Here is a simple example of using a 2nd orthographic camera which shows a gun sight. To keep it simple, emissive material was used to avoid lighting it. Just copy and paste it into any scene, then call it. The ```layerMask``` chosen also allows Dialog extension to inter-operate. Perhaps these could be combined to do a heads-up tank sight with range finder."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"A commercial quality implementation would probably not use ```CreateBox()```, since it creates depth faces that cannot be seen straight-on anyway. It should also take into account a window size change, unless it is a tablet app."},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```javascript"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"function addGunSight(scene){"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    if (scene.activeCameras.length === 0){"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"        scene.activeCameras.push(scene.activeCamera);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    }"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var secondCamera = new BABYLON.FreeCamera(\"GunSightCamera\", new BABYLON.Vector3(0, 0, -50), scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    secondCamera.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    secondCamera.layerMask = 0x20000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    scene.activeCameras.push(secondCamera);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes = [];"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var h = window.innerHeight;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var w = window.innerWidth;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var y = BABYLON.Mesh.CreateBox(\"y\", h * .2, scene);"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"The code runs async. This flag sets the order of processing of each level. If set to true, all will run together. This will use more RAM (for a certain period of time) but will run quicker in general. There is a chance however, that the FPS will be reduces to an unaccepted level due to many parallel calculations between frames. Setting the flag to false will process one setting after the other. This will use only one single simplification object and will use less RAM. it can, however, take a little longer."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* **type**"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"To allow further types of simplification to be implemented (will be explained later, for those who are interested) the type of simplification should be stated. There is only one kind at the moment, BABYLON.SimplificationType.QUADRATIC. This is also the default value, if type is undefined."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* **success callback**"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Since this is an asynchronous function (which returns immediately) a callback is required in order to run code after the simplification process is over."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"This function will be called after the Auto-LOD process is successfully done. Not sure in which cases you will require that, but just in case you will - this is how you do it :-)"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* **usage example**"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"BABYLON.SceneLoader.ImportMesh(\"\", \"./\", \"DanceMoves.babylon\", scene, (newMeshes, particleSystems, skeletons) => {"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"    newMeshes[1].simplify([{ quality: 0.9, distance: 25 }, { quality: 0.3, distance: 50 }], "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"        false, BABYLON.SimplificationType.QUADRATIC, function() {"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"             alert(\"LOD finisehd, let's have a beer!\");"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"        });"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"});"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"##Demos "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Zoom in and out to see the effect, watch the number of active vertices closely."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Simplifying spheres. Materials of the spheres will be set after simplification ended completely."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"http://www.babylonjs-playground.com/#1ED15P#1"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Simplifying a color-based complex mesh. An alert window will pop when simplification is over. This mesh will also take time to load and requires optimization."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"With global mesh optimization - "},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"# GroundMesh"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"For the specific case of ground meshes, Babylon.js provides a class called ```BABYLON.GroundMesh``` that you can create using ```BABYLON.Mesh.CreateGround``` and ```BABYLON.Mesh.CreateGroundFromHeightMap```."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"By calling ```groundMesh.optimize(chunkSize)``` where chunkSize defines the number of submeshes you want, the mesh will be optimized for rendering, picking and collisions by creating an internal octree (Be sure to select a correct chunkSize)."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"# Using octrees manually"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"You can also use octrees from your code to get a list of meshes or submeshes."},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"Here are the helpful functions you can find on an octree:"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* ```select(frustumPlanes: Plane[], allowDuplicate: boolean)```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* ```intersects(sphereCenter: Vector3, sphereRadius: number, allowDuplicate: boolean)```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* ```intersectsRay(ray: Ray)```"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"These functions return a [SmartArray](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Tools/babylon.smartArray.ts) where duplicates are present or not according to ```allowDuplicate``` parameter/"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"# Demos"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* http://www.babylonjs.com/?OCTREE"},{"src":"tutorials/Optimizing_Your_Scene_with_Octrees","name":"Optimizing_Your_Scene_with_Octrees","text":"* http://www.babylonjs.com/?INSTANCES"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is a single path _path1_, a simple helix. It is just shown with _CreateLines()_.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"We can populate the _pathArray_ with this single path : _[path1]_  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"In this case, the ribbon will be constructed by joining each point of the path to another point located _offset_ positions further in the path. Example : _offset = 10_, the point 1 will be joined to the point 11, the point 2 to the point 12, etc.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If you don't provide an _offset_ value, or if you provide a value greater than half of_path1 length, the _offset_ will be set by default to half of _path1_ length.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Back to our example : http://www.babylonjs-playground.com/#1W5VJN#15  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"_Offset_ is set to 20 here.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Let's change it to 5 : http://www.babylonjs-playground.com/#1W5VJN#16  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"So this parameter allows you to construct different meshes from a same single path.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"So playing with _offset_, _closeArray_, or other parameters, you can easily get volumic shapes, even with a single path : http://www.babylonjs-playground.com/#1W5VJN#17  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":" "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **updatable** : boolean, true if the ribbon could updated after creation"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":" "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **sideOrientation** : _default DEFAULTSIDE_"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  possible other values :  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"    * BABYLON.Mesh.FRONTSIDE"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"    * BABYLON.Mesh.BACKSIDE"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"    * BABYLON.Mesh.DOUBLESIDE  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"    see full explanation about _sideOrientation_ parameter in [**02-Basic elements**](http://babylondoc.azurewebsites.net/page.php?p=22011)"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If you need more details about ribbon uses, you might want to read the [Ribbon Tutorial]() part."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"## The Tube"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Basically a tube is just a curved (or not) cylinder.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"However it can be far more than just a cylinder if you consider it as a parametric shape.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Example with a simple cos/sin path :  http://www.babylonjs-playground.com/#LG3GS#8    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"var tube =  BABYLON.Mesh.CreateTube(name, path, radius, tessellation, radiusFunction, cap, scene, updatable?, sideOrientation);"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **name** : string."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **path** : an array of successive Vector3. It represents the path the tube will be constructed along. This path is the central axis of the tube. This array must have at least two Vector3. The first point is the start of the tube and the last point is the end of the tube. So having only two points, you get a simple cylinder.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This path can be filled as you like : manually, by importing Vector3 from a data set, with some maths function or even a bit of all of this. It's just an array filled with Vector3 to set where the tube axis goes into space.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **radius** : a radius number value. This is the constant radius value applied along the tube. This value is taken into account only if the _radiusFunction_ parameter is _null_.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  * **tessellation** : the number of radial segments. If you set it to 3 you get a triangular tube section, if you set to 4 you get a squared section, and so on. So set it to what level of precision you need, just keep in mind the more segments, the heavier your mesh.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  *  **cap** : BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  *  **radiusFunction** : a custom javascript function.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If you pass this parameter to the _CreateTube()_ method, then the _radius_ parameter value will be ignored.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Your custom function will be called at each point of the path while constructing the tube.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"It will then be passed two arguments : the position of the current point _i_ and the _distance_ of this _i-th_ point from the beginnig of the tube.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Your function must just return a radius value.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Example :"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Now, create a WoodProceduralTexture object for which you need to pass a name, the size of the generated texture and the scene."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    var texture = new BABYLON.WoodProceduralTexture(\"texture\", 1024, scene);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"You are almost set! All you need to do now is to associate the texture to the material as a diffuseTexture, for instance, (or emissiveTexture, specularTexture, any other) and then apply the material to the mesh."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    material.diffuseTexture = texture;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    cylinder.material = material;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"You can optionally change the values of special default properties.  Here is an example of setting two properties for the WoodProceduralTexture:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    texture.woodColor = new BABYLON.Color3(0.49, 0.25, 0);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    texture.ampScale = new BABYLON.Vector2(1.0, 1.0);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"## All Standard Procedural Textures ##"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"All standard procedural textures can be used in the same ways, but they each have specific (special) properties:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **WoodProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **woodColor** to modify the color of the wood in the texture (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **ampScale** to change the waves amplitude in the wood (_**Int**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **MarbleProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **numberOfTilesHeight** controls the number of tiles in height (_**Int**_)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"where alpha, beta and gama are angles in radians that give the rotations"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":" anti-clockwise about the x, y and z axes respectively when viewed in "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"the positive direction along the axes."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Now a mathematician begins to get a little worried. Rotations are not commutative so the order they are carried out is important yet this method does not give any order. More of this later, for the moment consider the results of using pilot.rotation."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"A rotation of PI/2 about the y (vertical axis) is achieved by ```pilot.rotation =  new BABYLON.Vector3(0, Math.PI/2, 0);```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"See [Demo 2](http://www.babylonjs-playground.com/#UMR7M#27) and Fig 3."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-yiEQHWq-Rnc/VW2qzX3rTgI/AAAAAAAAAEI/gE8n7Jf-AdQ/s210/fig3.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 3"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The first thing to note is that the rotation takes place about axes local to the pilot. From the point of view of a simulation of the real world this makes sense, since when we observe things rotating generally we see them turning about their own local axes. For example watching a big (ferris) wheel or straightening a picture."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"What happens when the following is applied?"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation = new new BABYLON.Vector3(0, Math.PI/2, 0);"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation = new new BABYLON.Vector3(Math.PI/2, 0, 0);"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"You get the same result as just doing "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation = new new BABYLON.Vector3( Math.PI/2, 0, 0);"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"This can be seen in [Demo 3](http://www.babylonjs-playground.com/#UMR7M#25) by commenting out pilot.rotation lines in turn."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Just as pilot.position sets a position vector based from the world origin (0, 0, 0) so pilot.rotation sets, say, an 'orientation vector' starting from a local orientation matching the world orientation of (0, 0, 0). It is the last set rotation that is achieved."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The following three sets of code are all equivalent for a given alpha, beta and gamma."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation = new BABYLON.Vector3(alpha, beta, gamma);"},{"src":"tutorials/Render_Scene_on_a_PNG","name":"Render_Scene_on_a_PNG","text":"![4K render of Hill Valley](http://pix.keuse.fr/images/screenjqj.jpg)"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Example : http://www.babylonjs-playground.com/#3XMWZ#4  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Obviously, the same rules and workarounds apply to the _closePath_ parameter.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"automatically _path_ closed : http://www.babylonjs-playground.com/#3XMWZ#5  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"then textured : http://www.babylonjs-playground.com/#3XMWZ#6  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"## Maths computed paths"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The Ribbon is very adapted to elaborated maths computed meshes.    "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You can easily start from an equation to get a full volumic complex shape.     "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"There are many ways to do it.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"If you don't feel at ease with maths, here is a way to start :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"### First, let's have a small recall.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"We just set points in space. These points have got each a set of three coordinates : x, y and z.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"We call here these points _Vector3_.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"When we want to design a curve or a path in space, we need to get a collection of successive _Vector3_.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"We can't have an infinity of points.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"So we define a path with a certain number of _Vector3_. The more _Vector3_, the more smooth the curve and the more computations too.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"So when you want your path to follow a mathematical curve, you need to compute each path _Vector3_ coordinates.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You could choose a known math curve in wikipedia or dedicated sites (http://en.wikipedia.org/wiki/List_of_curves , http://www.mathcurve.com/courbes2d/courbes2d.shtml , http://www.uiowa.edu/~examserv/mathmatters/tutorial_quiz/geometry/commoncurves.html, etc) or, when you feel more comfortable, create you own.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"As you can see, curve equations are often like this : _f(x, y) = 0_ or like this : _y = f(x)_.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"This means _y_ is expressed in function of _x_.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"This kind of equation is called a _cartesian equation_. It is probably the most used among mathematicians, but it won't help us a lot because we need to compute _x_ and _y_ (and _z_) simultaneously to set each _Vector3_.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"So we will prefer the _parametric equations_.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"In a _parametric equation_ each different coordinate is defined in function of a parameter _k_ :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  _x = fct1(k)_   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  _y = fct2(k)_   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  _z = fct3(k)_   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"So if you are given a _cartesian equation_, it is quite almost possible to translate it in a _parametric equation_.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"example with a parabola : y =  x²   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"_the cartesian equation y = x * x_ will give the _parametric equation :_   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  _x = k_   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  _y = k * k_   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You then give _k_ values from -20 to 20 for example and you  get your 40 successive _Vector3_ on the parabola. Easy, isn't it ?  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You now know the way to fill a path with successive _Vector3_ along a math curve.  "},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" {"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"  fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" }"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":" return clamp(fogCoeff, 0.0, 1.0);"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"}"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"Then inside the shader you have to use this function to get the fog color:"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"float fog = CalcFogFactor();"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"##Javascript"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"You then have to add the following code for the onBind callback of your ShaderMaterial:"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"shaderMaterial.onBind = function(mat, mesh) {"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"    var effect = mat.getEffect();"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"    effect.setMatrix(\"view\", scene.getViewMatrix());"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"    effect.setFloat4(\"vFogInfos\", scene.fogMode, scene.fogStart, scene.fogEnd, scene.fogDensity); "},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"    effect.setColor3(\"vFogColor\", scene.fogColor);"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"}"},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"```"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"What can you say about the BabylonJS webGL rendering canvas, other than \"IT IS THE COOLEST THING ON THE PLANET!\".&nbsp; This right-side area of the playground is where the BabylonJS webGL framework attempts to render the scene that you currently have in the editor.&nbsp; Is the rendering canvas blank?&nbsp; Did you click the Run button?&nbsp; Have you got a camera?&nbsp; Is the camera aimed correctly?&nbsp; Do you have some lighting or an emissiveColor set on your mesh's material?"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"If your code is wrapped in a createScene() function, does it include *var scene = new BABYLON.Scene(engine),* near the top of the function?&nbsp; How about a *return scene;* line as the last line inside the function braces?&nbsp; Do you have some mesh like a box, cylinder, ground, sphere, plane, torus, torusknot, etc?"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"Are you running in free-flying mode and not wrapping your code in a createScene() function?&nbsp; That is certainly allowed, but you still need a camera, a light, and a mesh shape.&nbsp; These are a few things that can prevent your scene from rendering.&nbsp; Study the playground demo scenes listed under the drop-down Scene Selector button, and soon you will be a BabylonJS playground expert."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## Compilation Errors"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"![](http://urbanproductions.com/wingy/babylon/misc/playground_ce01.jpg)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"This is a picture of the playground's pop-up compilation error detector panel.&nbsp; A compilation error is an error detected by the BabylonJS framework... after you have clicked the Run button.&nbsp; It is not a syntax error detected by the editor, but the editor might ALSO detect it and possibly mark the problem line with a red X icon along its left side. The compilation error does not always contain pertinent information about the reason for the error, yet it is still handy.&nbsp; It tells you that the BabylonJS framework is not happy with something in your scene code.&nbsp; After making an adjustment to your code, you will want to close the compilation error pop-up (using its X closer) before clicking on Run again."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"## Playground URL formats"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"When you first arrive at the BabylonJS playground web site, the URL in your browser's address field... will look like this:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"http://www.babylonjs.com/playground/"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"If you choose one of the demo scenes from the drop-down Scene Selector button, the playground URL will change to this:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"http://www.babylonjs.com/playground/#"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"(Feel free to edit the code of the demo scenes and click Run or Save. You can't damage the pre-installed demos)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"When you save a scene to the playground's database in order to share the URL with others or remember the scene for later, the URL will look something like this:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"http://www.babylonjs.com/playground/#QKQHS"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"(Be sure to bookmark it, using your browser's bookmark system)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"If you save that scene again... (maybe after doing more work on the scene), the URL will increment, and look like this:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"This property exists on meshes, particle systems and sprite managers."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Rendering groups are rendered by ascending ID, starting with the default one. There can be no more than 4 rendering groups in total, meaning that the only valid IDs are 0, 1, 2 and 3."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"## Alpha Index"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Meshes have another property that has an influence on the rendering order: `.alphaIndex`"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"By default, this property is set to `Number.MAX_VALUE`, which is the highest value that a numerical variable can hold (around 1.79E+308)."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Unlike opaque and alpha-tested meshes, the BabylonJS rendering engine sorts alpha-blended meshes by depth before drawing them on screen (see below). The `.alphaIndex` property allows you to override this sorting, as one mesh which has a lower alpha index than another will *always* be rendered before it, regardless of their respective depth."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"To phrase it more simply: **alpha-blended are sorted *first* by alpha index, and *then* by depth (distance to camera).**"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Keep in mind that this property works only for alpha-blended mesh, and has absolutely no effect for opaque and alpha-tested ones."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"*Note: this property can be manually set on meshes in 3DS Max with the BabylonJS exporter plugin.*"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"# Opaque or Transparent?"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"How your meshes are categorized may be very important for the final aspect of your scene. Let's take a closer look at the way categories 1 to 3 are defined."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"### Opaque Meshes"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"These will be the easiest to render: their polygons are fully drawn on screen with their colors & textures. A depth buffer will be used to make sure nothing is drawn over something that is closer to the camera."},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline('lensEffects', camera);"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"```"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"Here is a list of properties you may set on your parameters object:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"| Property | Type | Description |"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|--------|--------|--------|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`chromatic_aberration`|number|0 means effect is disabled, 1 is for realism. Defines the spread of the RGB channels in the chromatic aberration shader.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`edge_blur`|number|0 means effect is disabled, 1 is for realism. Defines the amount of blur that will appear on the corners of the screen.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`distortion`|number|0 means effect is disabled, 1 is for realism. Defines the amount of lens-like distortion.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`grain_amount`|number|Varies from 0 to 1. Amount of grain to blend on screen.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`grain_texture`|BABYLON.Texture|Texture to use for grain effect; if unset, a random B&W noise is used instead.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`dof_focus_distance`|number|The distance at which focus is set. Everything out of focus will be blurred. Note that a focus distance above a few hundred units gives you infinity focus.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`dof_aperture`|number|Default: 1. How quickly things outside of focus will become blurred. Set high to give a 'miniature' effect (a.k.a. _tilt shift_).|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`dof_darken`|number|Default: 0. How much should out-of-focus objects be darkened. This effect should be used lightly! Set to 0 to disable.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`dof_pentagon`|boolean|Default: true. Makes a pentagon-like \"bokeh\" effect. \"Bokeh\" is a term for artifacts appearing when objects are very blurred: bright spots will often produce sharp geometric shapes, depending on the type of the lens.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`dof_gain`|number|Default: 1. How much highlights on blurred objects should be enhanced. Set to 0 to disable highlights enhancing.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`dof_threshold`|number|Default: 1. How wide should highlights be on blurred objects.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`blur_noise`|boolean|Default: true. Adds a very slight noise on the blur effect for out-of-focus objects.|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"The BABYLON.LensRenderingPipeline object created should be saved if you want to tweak the effects after its creation. This can be done with the following, self-explanatory methods:"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"| Methods |"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|--------|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setEdgeBlur(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disableEdgeBlur()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setGrainAmount(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disableGrain()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setChromaticAberration(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disableChromaticAberration()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setEdgeDistortion(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disableEdgeDistortion()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setHighlightsGain(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setHighlightsThreshold(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setFocusDepth(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disableDepthOfField()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setAperture(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setDarkenOutOfFocus(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`enablePentagonBokeh()`|"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"And for multiple cameras:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.show(false, camera);"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can hide the interface with:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.hide();"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can then control when labels and axis should be displayed with the following code:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.shouldDisplayLabel = function (node) {"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"    return false;"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"}"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.shouldDisplayAxis = function (mesh) {"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"    return mesh.name === \"sphere1\";"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"}"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can even control the ratio used to determine axis size:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"scene.debugLayer.axisRatio = 0.04; // 4% of canvas width"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"You can also control the UI by using CSS and target following IDs:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* DebugLayerStats"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* DebugLayerTree"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* DebugLayerLogs"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"* DebugLayerOptions"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"For instance:"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```javascript"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"document.getElementById(\"DebugLayerStats\").style.background = \"#484848\";"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"document.getElementById(\"DebugLayerStats\").style.zindex = \"999999\";"},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.PassPostProcess(\"Scene copy\", 1.0, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Black and white: apply a black and white effect:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.BlackAndWhitePostProcess(\"bandw\", 1.0, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Blur: apply a directional blur:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.BlurPostProcess(\"Horizontal blur\", new BABYLON.Vector2(1.0, 0), blurWidth, 0.25, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Convolution: apply a kernel matrix to every pixel:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var sepiaKernelMatrix = BABYLON.Matrix.FromValues("},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"                    0.393, 0.349, 0.272, 0,"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"                    0.769, 0.686, 0.534, 0,"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"                    0.189, 0.168, 0.131, 0,"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"                    0, 0, 0, 0"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"                );"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.ConvolutionPostProcess(\"Sepia\", sepiaKernelMatrix, 1.0, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* FXAA: apply a full screen antialiasing filter:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.FxaaPostProcess(\"fxaa\", 1.0, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Refraction: apply a refraction texture:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.minimumLuminance``` is the minimum luminance that the post-process can output. Luminance is >= 0. Default value is 1.0."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.maximumLuminance``` is the maximum luminance that the post-process can output. Luminance is > ```hdr.minimumLuminance```. Default value is 1e20."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.luminanceIncreaserate``` controls the eye adaptation speed to the darkness. Default value is 0.5."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```hdr.luminanceDecreaseRate``` controls the eye adaptation speed to the light Default value is 0.5."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"## Example of configuration to get focus on the effect ##"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```javascript"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"var hdr = new BABYLON.HDRRenderingPipeline(\"hdr\", scene, 1.0, [scene.activeCamera]);"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.brightThreshold = 0.7; // Minimum luminance needed to compute HDR"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.gaussCoeff = 0.5; // Gaussian coefficient = gaussCoeff * theEffectOutput;"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.gaussMean = 1; // The Gaussian blur mean"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.gaussStandDev = 5; // Standard Deviation of the gaussian blur."},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.exposure = 1.0;"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.minimumLuminance = 0.2;"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.maximumLuminance = 1e20;"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.luminanceDecreaseRate = 0.3; // Decrease rate: darkness to light"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"hdr.luminanceIncreaserate = 0.5; // Increase rate: light to darkness"},{"src":"tutorials/Using_the_HDR_Rendering_Pipeline","name":"Using_the_HDR_Rendering_Pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"var ssao = new BABYLON.SSAORenderingPipeline('ssaopipeline', scene, { ssaoRatio: 0.5, combineRatio: 1.0 }, [camera1 etc.]);"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"**Warning: If the custom light position is too far from the light source, the result will be distorted **"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"You can access the custom position using:"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"var position = vls.getLightPosition();"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"To customize the light scattering, you can modify the vertical direction of the light rays. If _invert_ is set true, the rays will go downward. Upward, if invert is set false."},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.invert = true;"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"To optimize performance, you can customize the rendering quality. In fact, this post-process uses an internal pass (render target texture) that will help the post-process to compute the light scattering effect. Of course, you can compute the pass in a lower ratio like:"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"var vls = new BABYLON.VolumetricLightScatteringPostProcess('vls', { postProcessRatio: 1.0, passRatio: 0.5 }, camera, lightSourceMesh, 75, BABYLON.Texture.BILINEAR_SAMPLINGMODE, engine, false);"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.useDiffuseColor is used to force rendering the diffuse color of the light source mesh instead of its diffuse texture."},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- If useDiffuseColor is true or material.diffuseTexture is undefined, use the diffuse color"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- If useDiffuseColor is false and material.diffuseTexture is not undefined, use diffuse texture"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- If useDiffuseColor is false and material.diffuseTexture is undefined, use diffuse color"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"Using the material.diffuseColor instead of material.diffuseTexture (as default) for the light's color:"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.useDiffuseColor = true; // False as default"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.mesh.material.diffuseColor = new BABYLON.Color3(0.0, 1.0, 0.0);"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"Using the material.diffuseTexture for the light's color:"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```javascript"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"ecran.material.emissiveColor = new BABYLON.Color3(1,1,1);"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"```"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"* **Multi Materials**"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Using a dedicated texture, multi materials can be assigned to one single mesh. It can be useful if you want your mesh to look different at different locations along its width, height, or depth. (such as a cutaway cross-section of the Earth's mantle)."},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"![multimap](http://www.babylonjs.com/tutorials/Advanced%20Texturing/4.png)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"Sometimes it is a bit difficult to determine which indices of a mesh should be textured by which of the multiple textures. David Catuhe has provided a comprehensive post about multi materials... on his blog:"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"[http://blogs.msdn.com/b/eternalcoding/archive/2013/07/10/babylon-js-using-multi-materials.aspx](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/10/babylon-js-using-multi-materials.aspx)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"You can view and play-with the demo used in this tutorial... [right here](http://babylonjs-playground.azurewebsites.net/#EKFLA#13)."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"After this, you will add your scene creation code.  To keep your code compatible with the Babylon.js Playground, we recommend that you insert a 'createScene' function at this point.  Besides generating a Babylon Scene object, createScene() is where you will add your basic scene requirements:  One camera, one light, and one or more shapes/meshes."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"So now, add this entire createScene function to your web page:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":" "},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```javascript"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  // This begins the creation of a function that we will 'call' just after it's built"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  var createScene = function () {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Now create a basic Babylon Scene object "},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Change the scene background color to green."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    scene.clearColor = new BABYLON.Color3(0, 1, 0);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // This creates and positions a free camera"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -10), scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // This targets the camera to scene origin"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    camera.setTarget(BABYLON.Vector3.Zero());"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // This attaches the camera to the canvas"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    camera.attachControl(canvas, false);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"        "},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // This creates a light, aiming 0,1,0 - to the sky."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    var light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Dim the light a small amount"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    light.intensity = .5;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Let's try our built-in 'sphere' shape. Params: name, subdivisions, size, scene"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    var sphere = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, 2, scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Move the sphere upward 1/2 its height"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    sphere.position.y = 1;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Let's try our built-in 'ground' shape.  Params: name, width, depth, subdivisions, scene"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    var ground = BABYLON.Mesh.CreateGround(\"ground1\", 6, 6, 2, scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    // Leave this function"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    return scene;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  };  // End of createScene function"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Yes, that is quite a function, but do not let it scare you.  You will learn more about the parameters and properties for lights, cameras, and built-in shapes... in the tutorials to come.  The main thing to know is that our createScene function has all requirements complete.  It contains:  "},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"*  a Babylon Scene object"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"*  a camera that has been attached"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"*  a light that has been aimed"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"*  a sphere that has been placed at position 0,1,0 (we moved it upward +y)"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"*  a ground plane that has been placed at position 0,0,0 (default position)"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"There are three more things to add to your web page.  First, a 'call' to the createScene function that we just completed.  Add this:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```javascript"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  // Now, call the createScene function that you just finished creating"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  var scene = createScene();"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```  "},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Then, the all-important rendering loop.  Add this:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var sphere = BABYLON.Mesh.CreateSphere(\"sphere\", 10.0, 10.0, scene, false,&nbsp; BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, number of segments (highly detailed or not), size, scene to attach the mesh, updatable? (if the mesh must be modified later) and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var sphere = BABYLON.Mesh.CreateSphere(\"sphere\", 10.0, 10.0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Beware to adapt the number of segments to the size of your mesh ;)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Plane**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var plane = BABYLON.Mesh.CreatePlane(\"plane\", 10.0, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, size, and scene to attach the mesh, updatable? (if the mesh must be modified later) and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var plane = BABYLON.Mesh.CreatePlane(\"plane\", 10.0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Disc (or a regular polygon)**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var disc = BABYLON.Mesh.CreateDisc(\"disc\", 5, 30, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, radius, tessellation, scene, updatable and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var disc = BABYLON.Mesh.CreateDisc(\"disc\", 5, 30, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"With the&nbsp; _tessellation_ value, you can get a regular polygon :&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"3 gives a triangle,&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"4 a square,&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"5 a pentagon,&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"6 a hexagon, 7 a heptagon, 8 an octogon, and so on."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Cylinder**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var cylinder = BABYLON.Mesh.CreateCylinder(\"cylinder\", 3, 3, 3, 6, 1, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, height, diamTop, diamBottom, tessellation, [height subdivs], scene, updatable and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var cylinder = BABYLON.Mesh.CreateCylinder(\"cylinder\", 3, 3, 3, 6, 1, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"The _height subdivs_ parameter (shown set to 1) is optional too."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Torus**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var torus = BABYLON.Mesh.CreateTorus(\"torus\", 5, 1, 10, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, diameter, thickness, tessellation (highly detailed or not), scene, updatable and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var torus = BABYLON.Mesh.CreateTorus(\"torus\", 5, 1, 10, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Knot**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var knot = BABYLON.Mesh.CreateTorusKnot(\"knot\", 2, 0.5, 128, 64, 2, 3, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, radius, tube, radialSegments, tubularSegments, p, q, scene, updatable and the optional side orientation (see below). These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var knot = BABYLON.Mesh.CreateTorusKnot(\"knot\", 2, 0.5, 128, 64, 2, 3, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"You can learn more about torus knots... [**RIGHT HERE**](http://en.wikipedia.org/wiki/Torus_knot)."},{"src":"tutorials/03._Position,_Rotation,_Scaling","name":"03._Position,_Rotation,_Scaling","text":"Now you know how to create and move objects in a scene, but all your meshes have the same 'skin'. Not for long, if you read our next tutorial about materials. [**Go to the Materials Tutorial**](http://babylondoc.azurewebsites.net/page.php?p=22051)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.diffuseTexture.hasAlpha = true;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"All of these texture settings apply to the other StandardMaterial properties as well. (.emissiveTexture, .ambientTexture, .specularTexture)  I will remind you.  Now let's continue talking about the other StandardMaterial properties."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **Emissive**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"The emissive is the color produced by the object itself. You can specify a solid color with the ```emissiveColor``` property:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.emissiveColor = new BABYLON.Color3(1, .2, .7);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Or, you can use a texture:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.emissiveTexture = new BABYLON.Texture(\"grass.png\", scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"See the **More About Textures** section above.  Change occurrences of 'diffuse' to 'emissive', of course."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **Ambient**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"The ambient can be seen as a second level of diffuse. The produced color is multiplied to the diffuse color. This is especially useful if you want to use light maps baked into textures. You can specify a solid color with the ```ambientColor``` property:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.ambientColor = new BABYLON.Color3(1, 0.2, 0.7);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Or, you can use a texture:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.ambientTexture = new BABYLON.Texture(\"grass.png\", scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"See the **More About Textures** section above.  Change occurrences of 'diffuse' to 'ambient', of course."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **Specular**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"The specular is the color produced by a light reflecting from a surface. You can specify a solid color with the ```specularColor``` property:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.specularColor = new BABYLON.Color3(1.0, 0.2, 0.7);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Or, you can use a texture:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.specularTexture = new BABYLON.Texture(\"grass.png\", scene);"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Again, see the **More About Textures** section far above.  Change occurrences of 'diffuse' to 'specular', of course."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"The specular property has one more setting.  The size/intensity of the specular reflection can be set using the ```specularPower``` property:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.specularPower = 32;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"*** Section on OpacityTexture needed here, coming soon. ***"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"There, we have visited the primary color and texture properties of StandardMaterial.  But we are not done yet.  Here are a few more handy properties."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **Back-Face Culling**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Simply put, “back-face culling” determines whether or not a StandardMaterial is visible from its back side (from behind).  TRUE = NOT visible.  More precisely, this rendering-speed-optimization technique determines if a polygon of a graphical object is visible or not. If set to TRUE or boolean 1, the  Babylon engine won’t render hidden face(s) of the meshes that use this material. It is set TRUE by default, but can be changed to false as wanted. You may want to read more about back-face culling at [the wikipedia page about it](http://en.wikipedia.org/wiki/Back_face_culling).  "},{"src":"tutorials/04._Materials","name":"04._Materials","text":"In this example, the texture has some alpha, and back-face culling is set to false for the front sphere... in order to see its black inside face:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"![tof](http://www.babylonjs.com/tutorials/04%20-%20Materials/04-2.png)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.backFaceCulling = false;"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"* **WireFrame**"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"You can see your object in wireframe mode... by using:"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"```javascript"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"materialSphere1.wireframe = true;"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.TouchCamera(\"TouchCamera\", new BABYLON.Vector3(0, 1, -15), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The TouchCamera uses a FreeCamera as its basis, so all the powerful properties and methods of our familiar FreeCamera... are also found on our TouchCamera. You can explore all the properties and methods available on the TouchCamera... at [**our API documentation site**](http://babylondoc.azurewebsites.net/page.php?p=23886)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **DeviceOrientationCamera** - The DeviceOrientationCamera is a camera that is specifically designed to react-to device orientation events. Device orientation is when you tilt your modern mobile device forward or back, left or right, to control cameras or other scene items. And once again, our friend and technology guru David Catuhe has created [**a wonderfully-detailed blog entry**](http://blogs.msdn.com/b/eternalcoding/archive/2013/10/07/understanding-deviceorientation-events-by-creating-a-small-3d-game-with-babylon-js.aspx) to tell us all about it."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Again, we we want it to be easy and enjoyable for you. Here is how you construct a Babylon.js DeviceOrientationCamera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// DeviceOrientationCamera >> Move in your scene with device orientation"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.DeviceOrientationCamera(\"DevOr_camera\", new BABYLON.Vector3(0, 1, -15), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The DeviceOrientationCamera also uses a FreeCamera as its basis, so all the powerful properties and methods of our familiar FreeCamera... are also found on our DeviceOrientationCamera. There are two rather important properties on the DeviceOrientationCamera: _angularSensibility_ and _moveSensibility_, which you can discover and explore... along with all of the other properties and methods... at [**our API documentation site**](http://babylondoc.azurewebsites.net/page.php?p=23880)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **FollowCamera** - Forum user AlexB was kind enough to contribute the handy FollowCamera to Babylon.js. (Thanks AlexB!) This camera is specifically designed to follow any scene item with a ._position_... as it moves. It can be set to follow from the rear, from the front, or from any angle. Its follow distance and movement speeds can be set, as well."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The constructor method we will show below... is from [Alex's FollowCamera forum thread](http://www.html5gamedevs.com/topic/8433-smooth-camera-follow/) and, as you can see, Alex makes it easy. Here is how you construct a Babylon.js FollowCamera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// FollowCamera >> Follow a mesh through your scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.FollowCamera(\"FollowCam\", new BABYLON.Vector3(0, 15, -45), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    camera.target = myMeshObject; // target any mesh or object with a \"position\" Vector3"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The code above... constructs the FollowCamera and adds a target mesh, which is all that is required. But the FollowCamera has some more useful properties that you can set if you choose to do so. Here's a few, with some example values:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"camera.radius = 30; // how far from the object to follow"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"camera.heightOffset = 8; // how high above the object to place the camera"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"camera.rotationOffset = 180; // the viewing angle"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"camera.cameraAcceleration = 0.05 // how fast to move"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"camera.maxCameraSpeed = 20 // speed limit"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"And don't forget to set:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"scene.activeCamera = camera;"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"There you have it. AlexB's cool FollowCamera. The FollowCamera is SO NEW, that we have not yet added it to our API documentation, but that will happen soon. We promise!"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **VirtualJoysticksCamera** - The VirtualJoysticksCamera is a camera that is specifically designed to react-to Virtual Joystick events. Virtual Joysticks are on-screen (canvas atop canvas) 2D graphics that are used to control cameras or other scene items. This time, another friend and hero of ours... David Rousset... takes us on [**a video tour with Virtual Joysticks**](https://www.youtube.com/watch?v=53Piiy71lB0), and makes it look easy. That is because it **is** easy. You can also [**read about Virtual Joysticks**](http://blogs.msdn.com/b/davrous/archive/2013/02/22/creating-an-universal-virtual-touch-joystick-working-for-all-touch-models-thanks-to-hand-js.aspx) on David's blog."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"With the touch of a touchscreen, or the click of a mouse button, the virtual joysticks activate. Not a bit of extra work for you. Like everything in Babylon.js, we try to make it easy and enjoyable. Here is how to construct a Babylon.js VirtualJoysticksCamera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// VirtualJoysticksCamera >> Move in your world with on-screen Virtual Joysticks"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.VirtualJoysticksCamera(\"VJ_camera\", new BABYLON.Vector3(0, 1, -15), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The VirtualJoysticksCamera also uses a FreeCamera as its basis, so all the properties and methods of our familiar FreeCamera... are found on our VirtualJoysticksCamera as well. "},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"We have a [special tutorial dedicated to the VirtualJoysticksCamera](http://babylondoc.azurewebsites.net/page.php?p=22502)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"You can explore all the properties and methods available on the VirtualJoysticksCamera... at [**our API documentation site**](http://babylondoc.azurewebsites.net/page.php?p=23887)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **AnaglyphCamera** - The AnaglyphCamera is for use with red and cyan 3D glasses. It is very new to Babylon.js, and to be honest quite sexy. It uses post-processing filtering techniques. There are actually two types of AnaglyphCamera."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The first is the **AnaglyphArcRotateCamera**. Its constructor looks like this:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// AnaglyphArcRotateCamera >> Analglyph 3D using filter-shifted ArcRotateCamera"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"A hemispheric light is an easy way to simulate realistic ambient environment light. A hemispheric light is defined by a direction to the sky (the 2nd arg in the constructor) and by 3 colors: one for the diffuse (the sky color - for pixels/faces facing upward), one for the ground (the color for pixels/faces facing downward), and one for the specular."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Above, I used the terms 'upward' and 'downward', but keep in mind that the direction to the sky (the 2nd arg in the constructor) can be set to any direction. The direction to the sky is often straight upward (0, 1, 0). We are simulating light from a cloudy sky, but even on cloudy days, the sun crosses the sky above the clouds. So, you could tilt this light slightly toward the east for cloudy morning skies, and slightly toward the west for cloudy evening skies. This is a soft light that cannot produce shadows."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Now, back to creating the useful and interesting hemispheric light:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"var light0 = new BABYLON.HemisphericLight(\"Hemi0\", new BABYLON.Vector3(0, 1, 0), scene);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.diffuse = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.specular = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.groundColor = new BABYLON.Color3(0, 0, 0);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-44-73-metablogapi/4760.image_5F00_thumb_5F00_058CC84D.png)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"_White/black hemispheric light - upward pixels white (diffuse), downward pixels black (groundColor)_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Our [web site](http://www.babylonjs.com/) has a nice lights demo in the Features Tests section, and a similar lights demo can be found at our 'playground', [right here](http://www.babylonjs.com/playground/?06)."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"## Extra Information About Babylon.js One-Line Constructors: ##"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Here is an example of a one-line constructor:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"var light0 = new BABYLON.SpotLight(\"Spot0\", new BABYLON.Vector3(0, 30, -10), new BABYLON.Vector3(0, -1, 0), 0.8, 2, scene);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"That one-line is all it takes to create a spot light. We want Babylon.js scene item creation... to be as quick and simple as possible. We also want the scene item to be seen/operating with just one line of programming. The spot light is a rather powerful scene item, and it takes quite a few arguments (args) in the constructor... in order for it to appear and operate in one line of code. Each 'arg' of the one-line constructor is setting a 'necessary initial property' on the scene item. By doing that, we know that it will turn-on/operate with just that one line."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"There are some properties which we set 'behind-the-scenes'. One such property is *intensity*. We 'default' that property to a float 1.0 value. We set that 'necessary initial property' for you. We also call the light's *setEnabled(true)* method."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"I want you to know two important things. First, all properties on a spot light or on any Babylon.js scene item... can be set after the object has been constructed. Second, if you so choose, you can null-out (set to zero/empty) the args in the one-line constructor, and then set all of the necessary initial properties yourself... property by property. You have already seen the fast/simple way to construct the spot light scene item. Below is an example of the slower and less-simple way to construct a spot light."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"var light0 = new BABYLON.SpotLight(\"\", new BABYLON.Vector3.Zero(), new BABYLON.Vector3.Zero(), 0, 0, scene);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.name = \"My Slowly and Discretely Constructed Spot Light\""},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.position = new BABYLON.Vector3(0, 30, -10);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.direction = new BABYLON.Vector3(0, -1, 0);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.angle = 0.8;"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.exponent = 2;"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.intensity = 0.5;"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.diffuse = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.specular = new BABYLON.Color3(1, 1, 1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light0.setEnabled(1);"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Using this 'long method' of scene item constructing... is rarely necessary or wanted. But we thought you should know that you can do constructing in this way, if you so choose."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"## Normals and Backfaces - Seeing the Light: ##"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"You may have heard words like '_normals_' and '_backfaces_' spoken or written, during your 3D travels. We will not be deeply examining those two terms in this tutorial, but I am going to try to explain how normals and backfaces... affect lights. "},{"src":"tutorials/06._Lights","name":"06._Lights","text":"The picture below will help you understand how lights interact with normals and backfaces. The picture shows two planes and two lights. One light is a spot light, the other is a point light. The arrows show the direction of the lighting normals, and these arrows are not visible in a standard scene. They are used in the picture to help illustrate the concept of normals, as are the diamond and cone shapes for the two lights. Let's look at the picture carefully."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;keys.push({"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; frame: 100,"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value: 1"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;});"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Next, two important steps:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"* Adding the animation array to the animation object:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"animationBox.setKeys(keys);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"* Link this animation to our box:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"box1.animations.push(animationBox);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Finally, you can launch your animation in one line of code, at any time in your application:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"scene.beginAnimation(box1, 0, 100, true);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"####Parameters for scene.beginAnimation"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;| Name | Type | Description"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"---|---|---|---"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;| target | any | The target"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;| from | number | The fps starting frame"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;| to | number | The fps ending frame"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"optional | loop | boolean | If true, the animation will loop (dependent upon BABYLON.Animation.ANIMATIONLOOPMODE)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"optional | speedRatio | number | default : 1. The speed ratio of this animation"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"optional | onAnimationEnd | () => void | The function triggered on the end of the animation (also dependent upon ANIMATIONLOOPMODE)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"optional | animatable | [Animatable](page.php?p=25171) | An optional specific animation"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"---"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"This function returns a ```BABYLON.Animatable``` object that you can use to get access to individual animations (for instance using ```getAnimationByTargetProperty``` function)."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"The ```BABYLON.Animatable``` object also supports the following functions:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```pause()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```restart()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```stop()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```reset()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"These commands will apply to every animation object contained in the Animatable's ._animations array. You can also get access to current running ```BABYLON.Animatable``` objects by using ```scene.getAnimatableByTarget()``` providing the target object."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"And you are done! Don't hesitate to combine many animations for one mesh object... by creating more Animations and pushing them into the mesh's _animation_ property. ;) We have now completed an Animation for box1.scaling.x. Maybe now you want to build an Animation for box1.scaling.y, and really get box1 moving playfully."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"**2 - Controlling animations**"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Each Animation has a property called ```currentFrame``` that indicates the current animation key."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"For advanced keyframe animation, you can also define the functions used to interpolate (transition) between keys. By default these functions are the following:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"BABYLON.Animation.prototype.floatInterpolateFunction = function (startValue, endValue, gradient) {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;return startValue + (endValue - startValue) * gradient;"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"};"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"This will animate our players in more than 40 positions, depending upon the situation (walking, jumping,…). Babylon's engine is automatically reading sprites on more than one line, so the engine does the work for you :)"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"If you want to begin the animation, simply call this function:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.playAnimation(0, 43, true, 100);"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"By calling « playAnimation » with those parameters, our player will be animated from frame 0 to frame 43. The third parameter is indicating if this animation will loop or not. And the last parameter is the delay between the frames (the smaller it is, the faster the animation)."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Finally, if you want to go to a specific image (e.g. the last one, when the character is not moving), just call:"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```javascript"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"player.cellIndex = 44;"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"```"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"You can play with the scene and code used in this tutorial... by visiting the Babylon.js [**Playground sprites demo**](http://babylonjs-playground.azurewebsites.net/?8)."},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"## Next step"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Don’t hesitate to use sprites in your scene: they are not resource intensive, and they really can help keep high frame rates in your application."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Demo by Dad72: [**Move character with gravity and collision**](http://www.castorengine.com/babylon/moveCharacter/)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"## Web worker based collision system (Since 2.1)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"BabylonJS 2.1 allows the user to move the collision calculations to an external web worker thus achieving better rendering time."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"The worker is integrated in the single framework file, and no changes are required by the developer."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"The scene has now a new flag (false per default):"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"scene.workerCollisions = true|false"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Setting this flag to true will start the worker in the background. The worker will then receive all collision requests from the cameras and meshes. Setting it to false will set the collision to the regular collision calculation as it always was."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"## ArcRotateCamera"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"The ArcRotateCamera can also check collisions but instead of sliding along obstacles, this camera won't move when a collision appends."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"To activate collisions, just call ```camera.checkCollisions = true```. You can define the collision radius with this code:"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```javascript"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"camera.collisionRadius = new BABYLON.Vector3(0.5, 0.5, 0.5)"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"```"},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"## Next step"},{"src":"tutorials/10._Intersect_Collisions_-_mesh","name":"10._Intersect_Collisions_-_mesh","text":"In our next tutorial, you will discover how to [check collisions between your scene and the mouse](http://babylondoc.azurewebsites.net/page.php?p=22111)."},{"src":"tutorials/11._Picking_Collisions","name":"11._Picking_Collisions","text":"Now you should know everything about collisions, so it’s time to move on to a classic effect in 3D : [particles](http://babylondoc.azurewebsites.net/page.php?p=22121)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.maxSize = 0.5;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* LifeTime of particles:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"// Life time of each particle (random between...)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.minLifeTime = 0.3;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.maxLifeTime = 1.5;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Emit rate. This is the density of particles, the rate of particle flow:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.emitRate = 1000;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"![emitRate](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-3.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"If you want to launch only a few particles at once, that can be done, as well.&nbsp; For example, if you want to emit only 300 particles:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.manualEmitCount = 300;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Be aware that the stream is no longer continuous.&nbsp; This is a one-shot particle emission, so this function overrides the previous “emitRate” parameter."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* The selected mode for particles. You can choose between “BLENDMODE_ONEONE” (default choice: source color is added to the destination color without alpha affecting the result), and “BLENDMODE_STANDARD” (to blend current color and particle color using particle’s alpha)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.blendMode = BABYLON.ParticleSystem.BLENDMODE_ONEONE;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Gravity. You can use gravity if you want to give an orientation to your particles (e.g.: fire particles travel upward on the Y-axis)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"//Set the gravity of all particles (not necessarily down)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.gravity = new BABYLON.Vector3(0, -9.81, 0);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Direction. Random direction of each particle after it has been emitted, between direction1 and direction2 vectors."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.direction1 = new BABYLON.Vector3(-7, 8, 3);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.direction2 = new BABYLON.Vector3(7, 8, -3);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"![emitRate](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-4.png)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* AngularSpeed. You can define a Z-axis rotation for each particle (in radian):"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.minAngularSpeed = 0;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.maxAngularSpeed = Math.PI;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Speed/Strength. You can define the power of emitting particles, and the overall motion speed (0.01 is default update speed, faster updates = faster animation)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.minEmitPower = 1;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.maxEmitPower = 3;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.updateSpeed = 0.005;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Duration. You can set the amount of time the particle system is running (depends of the overall speed above)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.targetStopDuration = 5;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"* **Tips**"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"When the user is manipulating the camera, it can be awkward if he can see under the ground, or if he zooms-out outside the skybox. So, to avoid that kind of situation, we can constrain the camera movement:"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```javascript"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"var camerasBorderFunction = function () {"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"        //Angle"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"        if (camera.beta < 0.1)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"            camera.beta = 0.1;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"        else if (camera.beta > (Math.PI / 2) * 0.9)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"            camera.beta = (Math.PI / 2) * 0.9;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"  //Zoom"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"        if (camera.radius > 150)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"            camera.radius = 150;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"        if (camera.radius < 30)"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"            camera.radius = 30;"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"    };"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"    scene.registerBeforeRender(camerasBorderFunction);"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"```"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"You may be interested in visiting [**the playground demo**](http://babylonjs-playground.azurewebsites.net/?14) that goes with this tutorial."},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"## Next step"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"(More about reflectionTextures can be found in our [Unleash the Standard Material](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) tutorial.)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"In that `/skybox` directory, we must find 6 sky textures, one for each face of our box. Each image must be named per the corresponding face: “skybox_nx.png”, “skybox_ny.png”, “skybox_nz.png”, “skybox_px.png”, “skybox_py.png”, “skybox_pz.png”."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"![Skybox](http://www.babylonjs.com/tutorials/13%20-%20Environment/13-2.png)"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"If you want some free skybox texture samples, point your browser to: http://3delyvisions.co/skf1.htm (look at licenses before use, please.)&nbsp; As you can see by those examples, skybox textures need not be textures of sky alone.&nbsp; Buildings, hills, mountains, trees, lakes, planets, stars, you name it (all can be used nicely) as part of skybox textures."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Final note, if you want your skybox to render behind everything else, set the skybox's `renderingGroupId` to `0`, and every other renderable object's `renderingGroupId` greater than zero, for example:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"skybox.renderingGroupId = 0;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"// Some other mesh"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"myMesh.renderingGroupId = 1;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"More info about rendering groups and rendering order can be found [here](page.php?p=25100)."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"### Fog"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Fog is quite an advanced effect, but fog in Babylon.js has been simplified to the maximum.&nbsp; It’s now very easy to add fog to your scenes.&nbsp; First, we define the fog mode like this:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.fogMode = BABYLON.Scene.FOGMODE_EXP;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Here are the available modes :"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"- `BABYLON.Scene.FOGMODE_NONE` - default one, fog is deactivated."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"- `BABYLON.Scene.FOGMODE_EXP` - the fog density is following an exponential function."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"- `BABYLON.Scene.FOGMODE_EXP2` - same that above but faster."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"- `BABYLON.Scene.FOGMODE_LINEAR` - the fog density is following a linear function."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"-> If you choose the `EXP`, or `EXP2` mode, then you can define the density option (default is `0.1`):"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.fogDensity = 0.01;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"-> Otherwise, if you choose `LINEAR` mode, then you can define where fog starts and where fog ends:"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.fogStart = 20.0;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.fogEnd = 60.0;"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"Finally, whatever the mode, you can specify the color of the fog (default is `BABYLON.Color3(0.2, 0.2, 0.3)`):"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```javascript"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"scene.fogColor = new BABYLON.Color3(0.9, 0.9, 0.85);"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"```"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"See, we told you it was easy."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"If you want to see and play with the playground scene for this tutorial, you can [**click right here**](http://babylonjs-playground.azurewebsites.net/?13)."},{"src":"tutorials/13._Environment","name":"13._Environment","text":"## Next step"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"![BlurVSM](http://www.babylonjs.com/forumpics/blurVSM.jpg)"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"*Blur Variance Shadow Map*"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"## About the light"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Keep in mind that this shadow generator can only be used with one light.  If you want to generate shadows from another light, then you will need to create another shadow generator."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Only directional and spot lights can cast shadows:"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"var light = new BABYLON.DirectionalLight(\"dir01\", new BABYLON.Vector3(-1, -2, -1), scene);"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"You must also define a _position_ for your light (because Babylon.js must have a light's point of view to create the shadow map):"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"light.position = new BABYLON.Vector3(20, 40, 20);"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"```"},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Spot lights use perspective projection and directional lights use orthogonal projection. Both projections are evaluated automatically for you to get the best shadow map possible."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"For directional light, you can control the size of the projection window by modifying ```light.shadowOrthoScale``` (0.1 by default which means that the projection window is increase by 10% from the optimal size)."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"The light's position, as well as the positions of the mesh that you have pushed into the renderlist, determine "},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"where the shadows will appear."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Now you might want to visit [**the playground scene**](http://babylonjs-playground.azurewebsites.net/?15) for this tutorial."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"## Next step"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var volume = 0.1;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var playbackRate = 0.5;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var gunshot = new BABYLON.Sound(\"Gunshot\", \"./gunshot-1.wav\", scene, null, { playbackRate: playbackRate, volume: volume });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"gunshot.onended = function () {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    if (volume < 1) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        volume += 0.1;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        gunshot.setVolume(volume);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    playbackRate += 0.1;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    gunshot.playbackRate = playbackRate;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"};"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The sound is first created with a *playbackRate* of 0.5 and a volume of 0.1. Everytime you will play the sound, at its end, the *onended* function will be called and the volume & playbackRate will increase. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Rather than setting the volume on a specific sound, you can also set the global volume of all sounds played by Babylon.js using the *setGlobalVolume()* function of the audio engine. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"BABYLON.Engine.audioEngine.setGlobalVolume(0.5);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Playing several sounds simultaneously and synchronized##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"For that, you need to call the play method on all sounds only once you’re sure they are all ready to be played. You then need to work with the ready to play callback."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music1 = new BABYLON.Sound(\"Violons11\", \"sounds/violons11.wav\", scene,"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    soundReady, { loop: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music2 = new BABYLON.Sound(\"Violons18\", \"sounds/violons18.wav\", scene,"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    soundReady, { loop: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music3 = new BABYLON.Sound(\"Cellolong\", \"sounds/cellolong.wav\", scene,"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    soundReady, { loop: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var soundsReady = 0;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"function soundReady() {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    soundsReady++;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    if (soundsReady === 3) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        music1.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        music2.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        music3.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Test it on our playground: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PCY1J#6 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Loading a sound from an ArrayBuffer##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can bypass the first phase (the embedded XHR request) if you’re calling the constructor with your own provided *ArrayBuffer*."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is a sample code demonstrating it:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var gunshotFromAB;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"loadArrayBufferFromURL(\"sounds/gunshot.wav\");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"function loadArrayBufferFromURL(urlToSound) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    var request = new XMLHttpRequest();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    request.open('GET', urlToSound, true);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    request.responseType = \"arraybuffer\";"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## More About The Playground ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Once again let's visit the saved playground scene that I sent you to, above."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://babylonjs-playground.azurewebsites.net/#QKQHS ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"This time, I would like you to press the **Get .zip** button.&nbsp; The playground will open a small panel allowing you to download this scene.&nbsp; Save the zip file in some new empty folder on your home computer.&nbsp; Now use an UNZIP utility program to unzip it.&nbsp; Notice that there is one file in the folder, called index.html.&nbsp; Please load that file into a text editor or programming editor.&nbsp; Does it look like the big picture above?&nbsp; Sure it does.&nbsp; ANY scene from the Babylon.js playground, including its pre-installed demo scenes, can be brought to your home with the **Get .zip** button.&nbsp; Most of them will look very similar to the big picture, above."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"There is a tutorial for the Babylon.js playground.&nbsp; Just [**click here**](http://babylondoc.azurewebsites.net/page.php?p=22631)."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Wow, this is a lot of information, isn't it?&nbsp; You have learned what a scene file (the big picture) looks like, you have learned about its important createScene() function and how copy'n'paste portable it is.&nbsp; You have seen a createScene() function in the Babylon.js playground, and you have been introduced to the playground's RUN, SAVE, and Get .zip buttons."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You are becoming a Babylon.js TOOLS expert.&nbsp; When I say 'tools', I mean... you have learned the things that SUPPORT the createScene() function.&nbsp; Are you ready to engage in learning some things about the code that is used in a createScene() function?&nbsp; I knew you were."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Diving into createScene() ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"I would like you to visit the Babylon.js Playground once again (open in a new window or new tab, if possible), but this time we will visit its base URL at:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://babylonjs-playground.azurewebsites.net ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Notice the button that is currently labeled **Basic Scene**.&nbsp; (It is actually called the Scene Selector button, but it is currently LABELED 'Basic Scene')"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Click on it, please.&nbsp; Notice that there is a wide variety of pre-installed scenes (createScene functions).&nbsp; Feel free to select any of them.&nbsp; Tour them, drag your pointer around on them, and even change the code in the editor and hit **RUN** again.&nbsp; You cannot damage the pre-installed scenes, even if you hit **SAVE**.&nbsp; You are safe in a playground of Babylon.js scenes, and you can see MANY createScene functions in action.&nbsp; You can play with their settings and hit Run again - fun.&nbsp; And again, you can use the **Get .zip** button on any of these playground demos, and take copies of them for your home collection.&nbsp; Handy, yes?"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Now for the good stuff.&nbsp; Every createScene() (every scene)... in Babylon.js... generally REQUIRES three things."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**1. A Camera.**&nbsp; The three most commonly used TYPES of cameras... are ArcRotateCamera, FreeCamera, and TouchCamera.&nbsp; There are many types of camera available in Babylon.js, but these three are the most common.&nbsp; ANY number of cameras can be coded into a scene, but only one of those cameras... is the 'active camera'.&nbsp; We have a tutorial in our Playpen Series... dedicated to talking about cameras."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**2. A Light.**&nbsp; &nbsp;There are 4 basic types of lights available in Babylon.js.&nbsp; They are PointLight, SpotLight, DirectionalLight, and HemisphericLight.&nbsp; ANY number of lights can be coded into a scene,&nbsp; but only the first 4 lights in the scene's lights list... will be used by the scene."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"To be honest, a light is not an absolute requirement.&nbsp; If the mesh in a scene... all have a material.emissiveColor or material.emissiveTexture properly set, then they will each produce their own light.&nbsp; They will be 'self-illuminated'.&nbsp; Careful, it is easy to get lost in a scene without a light.&nbsp; Good advice would be to ALWAYS have one light (a HemisphericLight aimed to the sky, is a very handy wide-lighting tool).&nbsp; You can adjust its .intensity value to set its brightness.&nbsp; We have a tutorial in our Playpen Series... dedicated to talking about lights."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**2. A Shape.**&nbsp; A shape is also called a **mesh**.&nbsp; Every scene needs something to be viewed, right?&nbsp; Cameras are invisible, and so are lights.&nbsp; Every scene needs a mesh, or many.&nbsp; There is no limit to the number of mesh in your scene.&nbsp; A mesh can be one of the many shapes that are built-in to Babylon.js, or it can be a shape that you plotted yourself using Babylon's VertexData system, or it can be a mesh that has been 'imported' into the scene... from a modeling package such as Blender or 3D Studio Max."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You can learn many more things about Babylon.js scenes... in the other [tutorials and documentation](http://babylondoc.azurewebsites.net/index.php).&nbsp; And don't forget to look at the 'createScene()' functions of the playground's pre-installed demo scenes.&nbsp; The Babylon.js playground is a learning wonderland, and it is a whole lot of fun, too."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Babylon.js Objects, Properties, Methods, and Values ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You have seen some createScene functions, and you have noticed that much of the Javascript code used to make a Babylon.js scene... sets values on object properties.&nbsp; To illustrate what I mean:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"object.property = value;"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Let's talk more about these four things... objects, properties, methods, and values."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**Objects**"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"First, do not think of objects as 3D shapes/mesh.&nbsp; Those ARE objects, but here, we are talking about...&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**Javascript Objects**"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Some of the common Javascript objects used in a Babylon.js scene... are named **engine, scene, canvas, mesh, light, camera, Vector3, Color3, ActionManager, and Animation**.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"For example, each of the following code lines... creates a Javascript object (or more):"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// Create a BABYLON.Engine type of object."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var engine = new BABYLON.Engine(canvas, true);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// Creates a BABYLON.Scene type of object."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Actions/babylon.actionManager.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Actions/babylon.interpolateValueAction.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Actions/babylon.directActions.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.geometry.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.linesMesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Rendering/babylon.outlineRenderer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.assetsManager.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/VR/babylon.vrDeviceOrientationCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/VR/babylon.webVRCamera.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Tools/babylon.sceneOptimizer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.meshLODLevel.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Audio/babylon.audioEngine.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Audio/babylon.sound.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Audio/babylon.soundtrack.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Debug/babylon.debugLayer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Materials/Textures/babylon.rawTexture.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.polygonMesh.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Mesh/babylon.meshSimplification.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Audio/babylon.analyser.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Rendering/babylon.depthRenderer.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.ssaoRenderingPipeline.js\"></script> "},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.volumetricLightScatteringPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.lensRenderingPipeline.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.colorCorrectionPostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.stereoscopicInterlacePostProcess.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/Cameras/babylon.stereoscopicCameras.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"    <script src=\"Babylon/PostProcess/babylon.hdrRenderingPipeline.js\"></script>"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"```"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"When working with all files, you can provide the following information to the engine:"},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"* BABYLON.Engine.CodeRepository: By default, this value points to \"/BABYLON/\""},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Materials"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A material is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"ambient\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diffuse\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"specular\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"specularPower\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"emissive\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"alpha\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"backFaceCulling\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"wireframe\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diffuseTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"ambientTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"opacityTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"reflectionTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"emissiveTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"specularTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"bumpTexture\": Texture (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"checkReadyOnlyOnce\": boolean"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Textures"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A texture is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string (filename),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"level\": float (between 0 and 1),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"hasAlpha\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"getAlphaFromRGB\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"coordinatesMode\": int (0 = explicit, 1 spherical, 2 = planar, 3 = cubic, 4 = projection, 5 = skybox),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uOffset\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"vOffset\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uScale\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"vScale\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uAng\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"vAng\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"wAng\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"wrapU\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"wrapV\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"coordinatesIndex\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"animations\": array of Animations (see below, can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"base64String\": string (can be omitted)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## MultiMaterials"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A multiMaterial is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"materials\": array of string (which are the ids of sub-materials)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Geometries"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"The structure of \"geometries\" is the following:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"boxes\": array of Boxes (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"spheres\": array of Spheres (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"cylinders\": array of Cylinders (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"toruses\": array of Toruses (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"grounds\": array of Grounds (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"planes\": array of Planes (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"torusKnots\": array of TorusKnots (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"vertexData\": array of VertexData (see below)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Boxes"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A box is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"size\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Spheres"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A sphere is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"segments\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diameter\": float,"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"BABYLON.VertexData.ComputeNormals(positions, indices, normals);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.updateVerticesData(VertexBuffer.NormalKind, normals, false, false);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Please note that recomputing the normals of your mesh may not be an ideal solution, as the results may be wrong in some parts of the mesh (e.g. seams on a sphere)."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"#Changing the Frame of Reference#"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Every mathematical vector and transformation is expressed in a certain _frame of reference_. This is for example handled by the `BABYLON.Space.LOCAL` and `BABYLON.Space.WORLD` constants used in the `rotate()` and `translate()` functions cited above, or `locallyTranslate()` and other similar functions."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"A _frame of reference_ is in fact a regular transformation matrix, i.e. an association of rotation, translation and scaling operations."},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"You may need to express a certain vector in a precise frame of reference, be it the one of a mesh or an arbitrary one. In this case, the function `BABYLON.Vector3.TransformCoordinates()` will come in handy. "},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Here is how you would compute the _up_ vector (Y+) inside the frame of reference of a mesh:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"mesh.computeWorldMatrix();"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var matrix = mesh.getWorldMatrix();"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var up_local = new BABYLON.Vector3(0,1,0);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"var up_global = BABYLON.Vector3.TransformCoordinates(up_local, matrix);"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"```"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"Potential uses of `BABYLON.Vector3.TransformCoordinates()` may be:"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- computing direction and axis vectors for `applyImpulse()` and other physics-related functions"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- setting the position and speed of a mesh relative to another, without the use of parenting"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":" (e.g. a spaceship shooting missiles)"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].y = y;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].z = z;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  }"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"};"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// path array population ..."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var mesh = BABYLON.Mesh.CreateRibbon(\"ribbon\", pathArray, false, false, 0, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// morphing"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var k = 0;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"scene.registerBeforeRender(function() {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  // path array update"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  for(var p = 0; p < pathArray.length; p++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    updatePath(pathArray[p], k);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  }"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  // ribbon update"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  mesh = BABYLON.Mesh.CreateRibbon(null, pathArray, null, null, null, null, null, null, mesh);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  k += 0.05;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"});"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"example : http://www.babylonjs-playground.com/#1MSEBT#3   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###Lines and DashedLines"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"#####_lines and dashed lines updatable parameter : points_ "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"_(reminder : only points positions can change, not the number of points. Please see the summary at the bottom of this page for more details)_"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Once we got the understanding for ribbons, we can apply it to Lines or DashedLines.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"It's even easier as Lines just require a path of points as parameter.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var points1 = [v1, v2, ..., vN]; // vector3 array"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var lines = BABYLON.Mesh.CreateLines(\"lines\", points1, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var dashedlines = BABYLON.Mesh.CreateDashedLines(\"lines\", points1, dashSize, gapSize, nb, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var points2 = [u1, u2, ..., uN]; // another vector3 array"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"lines = BABYLON.Mesh.CreateLines(null, points2, null, null, lines);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"dashedlines = BABYLON.Mesh.CreateDashedLines(null, points2, null, null, null, null, null, dashedlines);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"We can, of course, set the update method within the render loop.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"example lines : http://www.babylonjs-playground.com/#24PQRQ  "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"dashed lines : http://www.babylonjs-playground.com/#XKYAE#3    "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":" "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###Tube   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"#####_tube updatable parameters : path, radius, radiusFunction_"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"_(reminder : only points positions can change in the path, not the number of points. Please see the summary at the bottom of this page for more details)_   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":" "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Nothing differs for tubes. Let's create a tube and then update it according to new _path_, _radius_ or _radiusFunction_ values : "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var path1 = [v1, ..., vN]; //vector3 array : tube axis1"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var radius1 = 5;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var path2 = [u1, ..., uN]; // another vector3 array : tube axis2"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var radius2 = 8;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var tube = BABYLON.Mesh.CreateTube(\"tube\", path1, radius1, 12, null, cap, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"tube = BABYLON.Mesh.CreateTube(null, path2, radius2, null, null, null, null, null, tube);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Of course, it also works with the _radiusFunction_ parameter :   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var radiusFunction1 = function(i, distance) { ... };"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var radiusFunction2 = function(i, distance) { ... };"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var tube = BABYLON.Mesh.CreateTube(\"tube\", path1, null, 12, radiusFunction1, cap, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"tube = BABYLON.Mesh.CreateTube(null, path2, null, null, radiusFunction2, null, null, null, tube);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"example : http://www.babylonjs-playground.com/#ACKC2#1       "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"PG here with radiusFunction animation + closure explanation "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###Extruded shape "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"#####_extrusion updatable parameters for ExtrudeShape(): shape, path, scale, rotation_   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"#####_extrusion updatable parameters for ExtrudeShapeCustom(): shape, path, scaleFunction, rotateFunction_ "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"_(reminder : only points positions can change in the path, not the number of points. Please see the summary at the bottom of this page for more details)_   "},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```javascript"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyUpTrigger, function (evt) {"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   if (evt.sourceEvent.key == \"r\") {"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"       ..."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   }"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"}));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction({ trigger: BABYLON.ActionManager.OnKeyUpTrigger, parameter: \"r\" },"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"  function () {"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"            ..."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"  }));"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"```"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"# Actions"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Most of the action have a `propertyPath` property. This string defines the path to the property to affect with the action. You can use direct values like `position` or `diffuse`. But you can also provide complex paths like `position.x`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.SwitchBooleanAction`: Used to switch the current value of a boolean property:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`SwitchBooleanAction(trigger, target, propertyPath, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.SetValueAction`: Used to specify a direct value for a property:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`SetValueAction(trigger, target, propertyPath, value, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.IncrementValueAction`: Add a specified value to a number property:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`IncrementValueAction(trigger, target, propertyPath, value, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.PlayAnimationAction`: Launch an animation on a specified target:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`PlayAnimationAction(trigger, target, from, to, loop, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.StopAnimationAction`: Stop an animation on a specified target:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`StopAnimationAction(trigger, target, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.DoNothingAction`: Do nothing :)"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`DoNothingAction(trigger, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.CombineAction`: This action is a container. You can use it to execute many actions simultaneously on the same trigger. The children property must be an array of actions:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`CombineAction(trigger, children, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ExecuteCodeAction`: Execute your own code when the trigger is raised and the condition is true:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`ExecuteCodeAction(trigger, func, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.SetParentAction`: Used to define the parent of a node (camera, light, mesh):"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`SetParentAction(trigger, target, parent, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.InterpolateValueAction`: This action creates an animation to interpolate the current value of a property to a given target. The following types are supported:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `number`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.Color3`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.Vector3`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.Quaternion`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`InterpolateValueAction(trigger, target, propertyPath, value, duration, condition, stopOtherAnimations)`"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"So you can create your own _Curve3_ object and then stick it the _bezier3_ and _bezier2_.  "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var mySinusCurve3 = new BABYLON.Curve3(mySinus);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var myFullCurve = mySinusCurve3.continue(bezier3).continue(bezier2);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"The _**continue()**_ method returns a new _Curve3_ object and lets _mySinusCurve3_, _bezier3_ and _bezier2_ unchanged.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"If you then need to draw the curve or use it for ... whatever you want (extrusion path, ribbon path, shape path, path3D, etc), you just get the array of points with the _**getPoints()**_ method. This method simply returns an array of successive _Vector3_."},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var path = myFullCurve.getPoints();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var extruded = BABYLON.Mesh.ExtrudeShape(\"extrudedShape\", shape, path, 1, 0, scene);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"If you need then to know the curve length, just use the _**length()**_ method.    "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var l = myFullCurve.length();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"Here is an example where a Hermite Spline is used to close smoothly a concatenation of two Bezier curves :   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* The first and last points of the concatenation are used as last and first point of the Hermite spline.  "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"* The first and last segments of the concatenation are used as last and first tangent vectors of the Hermite. Since these segment are quite small, they are scaled according to the concatenation _length_ so the longer the concatenation, the more curved the spline.   "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```javascript"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"// two concatened cubic Bezier"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var cubicA = BABYLON.Curve3.CreateCubicBezier(vA0, vA1, vA2, vA3, 50);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var cubicB = BABYLON.Curve3.CreateCubicBezier(vB0, vB1, vB2, vB3, 50);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var continued = cubicA.continue(cubicB);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"// initial Hermite values from continued first and last segments"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var t = continued.length() / 2;                             // tangent scale factor"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var points = continued.getPoints();"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var p1 = points[points.length - 1];                         // last continued point = first hermite point"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var t1 = (p1.subtract(points[points.length - 2])).scale(t); // last segment scaled = hermite tangent t1"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var p2 = points[0];                                         // first continued point = last hermite point"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var t2 = (points[1].subtract(p2)).scale(t);                 // first segment scaled = hermite tangent t2"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var hermite = BABYLON.Curve3.CreateHermiteSpline(p1, t1, p2, t2, 50);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"continued = continued.continue(hermite);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"// finally drawing a smooth closed curve"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"var closedCurve = BABYLON.Mesh.CreateLines(\"closed\", continued.getPoints(), scene);"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"```"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"example : http://www.babylonjs-playground.com/#2GCEVH  "},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"The orange and yellow curves are Bezier curves.   "},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"By default, the AssetsManager will display a loading screen while loading assets:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"![](http://www.babylonjs.com/Screenshots/assets.jpg)"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"If you want to disable the loading screen, you have to set ```assetsManager.useDefaultLoadingScreen``` to false."},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"The loading screen will also be displayed while loading a scene using SceneLoader if ```BABYLON.SceneLoader.ShowLoadingScreen``` is set to true (by default)."},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"In the same way, you can also display or hide the loading screen manually using these functions:"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"* ```engine.displayLoadingUI()```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"* ```engine.hideLoadingUI()```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Loading text is controlled using ```engine.loadingUIText = \"text\"```"},{"src":"tutorials/How_to_use_AssetsManager","name":"How_to_use_AssetsManager","text":"Background color is controlled using ```engine.loadingUIBackgroundColor = \"red\"``` for instance."},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```Javascript"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"BABYLON.SceneLoader.ImportMesh(\"him\", \"Dude/\", \"dude.babylon\", scene, function (newMeshes, particleSystems, skeletons) {"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    newMeshes[0].position = new BABYLON.Vector3(0, 0, 5);  // The original dude"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    scene.beginAnimation(skeletons[0], 0, 120, 1.0, true);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    dudes = [];"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    for (i = 0; i < 10; i++) { // 10 clones"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        var xrand = Math.floor(Math.random() * 501) - 250;"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        var zrand = Math.floor(Math.random() * 501) - 250;"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        var c = [];"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        for (j = 1; j < newMeshes.length; j++) {"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"            c[j] = newMeshes[j].clone(\"c\" + j);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"            c[j].position = new BABYLON.Vector3(xrand, 0, zrand);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"            c[j].skeleton = newMeshes[j].skeleton.clone();"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"            scene.beginAnimation(c[j].skeleton, 0, 120, 1.0, true);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        }"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"        dudes[i] = c;"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"    }"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"}"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"### Attaching a mesh to a specific bone"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Starting with babylon.js v2.2, you can now attach a mesh to a bone (like a sword in the hand of your character for instance). To do so, just specify on which bone with the following code:"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"sword.attachToBone(skeleton.bones[34], character);"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"```"},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"Please note that you also need to specify on which mesh the bone is currently applied."},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"// Fresnel"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters = new BABYLON.FresnelParameters();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.reflectionFresnelParameters.bias = 0.1;"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.emissiveFresnelParameters = new BABYLON.FresnelParameters();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.emissiveFresnelParameters.bias = 0.6;"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.emissiveFresnelParameters.power = 4;"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.emissiveFresnelParameters.leftColor = BABYLON.Color3.White();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.emissiveFresnelParameters.rightColor = BABYLON.Color3.Black();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.opacityFresnelParameters = new BABYLON.FresnelParameters();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.opacityFresnelParameters.leftColor = BABYLON.Color3.White();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"material.opacityFresnelParameters.rightColor = BABYLON.Color3.Black();"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"```"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"A complete demo can be found here: http://www.babylonjs.com/?FRESNEL"},{"src":"tutorials/How_to_use_FresnelParameters","name":"How_to_use_FresnelParameters","text":"If you want to experiment FresnelParameters, just go here: http://www.babylonjs.com/playground/?19"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"| Method | Description |"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|--------|--------|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`PostProcessRenderPass(scene, name, size, renderList, beforeRender, afterRender)`**|Create a new instance of PostProcessRenderPass.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"|**`setRenderList(meshes)`**|Update the renderList.|"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"## Let's play with Render Pipeline"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"### Simple Pipeline"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var canvas = document.getElementById(\"renderCanvas\");"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var engine = new BABYLON.Engine(canvas, true);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var camera_01 = new BABYLON.ArcRotateCamera(\"Camera_01\", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var camera_02 = new BABYLON.ArcRotateCamera(\"Camera_02\", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var camera_03 = new BABYLON.ArcRotateCamera(\"Camera_03\", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var camera_04 = new BABYLON.ArcRotateCamera(\"Camera_04\", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_01.viewport = new BABYLON.Viewport(0.0, 0.0, 0.5, 0.5);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_02.viewport = new BABYLON.Viewport(0.5, 0.0, 0.5, 0.5);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_03.viewport = new BABYLON.Viewport(0.0, 0.5, 0.5, 0.5);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_04.viewport = new BABYLON.Viewport(0.5, 0.5, 0.5, 0.5);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.activeCameras.push(camera_01);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.activeCameras.push(camera_02);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.activeCameras.push(camera_03);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.activeCameras.push(camera_04);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var light0 = new BABYLON.PointLight(\"Omni_0\", new BABYLON.Vector3(0, 0, 10), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var light1 = new BABYLON.PointLight(\"Omni_1\", new BABYLON.Vector3(0, 10, 0), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var light2 = new BABYLON.PointLight(\"Omni_2\", new BABYLON.Vector3(10, 0, 0), scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var box = BABYLON.Mesh.CreateBox(\"Box\", 3.0, scene);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_01.attachControl(canvas);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_02.attachControl(canvas);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_03.attachControl(canvas);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"camera_04.attachControl(canvas);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var standardPipeline = new BABYLON.PostProcessRenderPipeline(engine, \"standardPipeline\");"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var blackAndWhiteEffect = new BABYLON.PostProcessRenderEffect(engine, \"blackAndWhiteEffect\","},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"    function() {return new BABYLON.BlackAndWhitePostProcess(\"bw\", 1.0, null, null, engine, true)});"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var horizontalBlur = new BABYLON.PostProcessRenderEffect(engine, \"horizontalBlurEffect\","},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"    function() { return new BABYLON.BlurPostProcess(\"hb\", new BABYLON.Vector2(1.0, 0), 10, 1.0, null, null, engine, true) });"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"// Next priority"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"priority++;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.TextureOptimization(priority, 256));"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"// Next priority"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"priority++;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.RenderTargetsOptimization(priority));"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"// Next priority"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"priority++;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"result.optimizations.push(new BABYLON.HardwareScalingOptimization(priority, 4));"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"return result;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"You can also create your own optimization by creating your own object:"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```javascript"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"function mySceneOptimization(priority) {"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"  if (typeof priority === \"undefined\") {"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"     priority = 0;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"  }"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"  this.priority = priority;"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"  this.apply = function (scene) {"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"     // Work on scene..."},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"  };"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"}"},{"src":"tutorials/How_to_use_SceneOptimizer","name":"How_to_use_SceneOptimizer","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"// enable tags for myJSObj"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.EnableFor(myJSObj);"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"// disable tags for myJSObj"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.DisableFor(myJSObj);"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```EnableFor``` adds functions to the javascript object in the aim to:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"*  test if it has tags ```hasTags```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"*  add tags to it ```addTags```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"*  remove tags from it ```removesTags```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"*  test if it matches a tags query ```matchesTagsQuery``` (see below)"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Those functions are proxies of static methods of ```Tags``` (```HasTags```, ```AddTagsTo```, ```RemoveTagsFrom``` and ```MatchesQuery```)."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```Tags``` also contains ```GetTags``` which retrieves the array of tags of the javascript object."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Remark: Tags.AddTagsTo enables tags for the object if needed"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj1 = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"// enable tags for myJSObj1"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.EnableFor(myJSObj);// => addTags is available on myJSObj1"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"// add tags to myJSObj1"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.addTags(\"tag1 tag2\"); // same as BABYLON.Tags.AddTagsTo(myJSObj1, \"tag1 tag2\"),"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj2 = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"// add tags to myJSObj2 without having to enable tags for it first"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.AddTagsTo(myJSObj2, \"tag1 tag2\"); // addTags couldn't be used on myJSObj2 since tags were not previously enabled for myJSObj2"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Tags query:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```Tags.MatchesQuery``` (and ```matchesTagsQuery``` if tags are enabled for the javascript object) accepts a list of correct tags (see \"Rules to respect\") containing parenthesis, and boolean evaluators such as ```(tag1 && (tag2 || tag4 || !tag5)) || !(!tag1) && !!!tag5```. The tags query is evaluated thanks to ```AndOrNotEvaluator```."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Full example:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj1 = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.AddTagsTo(myJSObj1, \"tag1 tag2\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj2 = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.AddTagsTo(myJSObj2, \"tag3 tag4 tag5\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj3 = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.EnableFor(myJSObj3);"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var myJSObj4 = {};"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj4.hasTags(); // TypeError: undefined is not a function"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.HasTags(myJSObj4); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj3.hasTags(); // false"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    y.scaling = new BABYLON.Vector3(0.05, 1, 1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    y.position = new BABYLON.Vector3(0, 0, 0);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes.push(y);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var x = BABYLON.Mesh.CreateBox(\"x\", h * .2, scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    x.scaling = new BABYLON.Vector3(1, 0.05, 1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    x.position = new BABYLON.Vector3(0, 0, 0);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes.push(x);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var lineTop = BABYLON.Mesh.CreateBox(\"lineTop\", w * .8, scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineTop.scaling = new BABYLON.Vector3(1, 0.005, 1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineTop.position = new BABYLON.Vector3(0, h * 0.5, 0);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes.push(lineTop);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var lineBottom = BABYLON.Mesh.CreateBox(\"lineBottom\", w * .8, scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineBottom.scaling = new BABYLON.Vector3(1, 0.005, 1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineBottom.position = new BABYLON.Vector3(0, h * -0.5, 0);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes.push(lineBottom);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var lineLeft = BABYLON.Mesh.CreateBox(\"lineLeft\", h, scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineLeft.scaling = new BABYLON.Vector3(0.010, 1,  1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineLeft.position = new BABYLON.Vector3(w * -.4, 0, 0);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes.push(lineLeft);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var lineRight = BABYLON.Mesh.CreateBox(\"lineRight\", h, scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineRight.scaling = new BABYLON.Vector3(0.010, 1,  1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    lineRight.position = new BABYLON.Vector3(w * .4, 0, 0);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    meshes.push(lineRight);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var gunSight = BABYLON.Mesh.MergeMeshes(meshes);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    gunSight.name = \"gunSight\";"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    gunSight.layerMask = 0x20000000;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    gunSight.freezeWorldMatrix();"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    var mat = new BABYLON.StandardMaterial(\"emissive mat\",scene);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    mat.checkReadyOnlyOnce = true;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    mat.ambientColor = new BABYLON.Color3(1,1,1);"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"    gunSight.material = mat;"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"}"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"http://www.babylonjs-playground.com/#2JBSNA#3"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"With optimization during simplification - "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"http://www.babylonjs-playground.com/#2JBSNA#4"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"#Rules, Quirks and thing to pay attention to"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Not all meshes can be simplified. Better - all meshes can be simplified, some however, should not be."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"An object like a Box (if built in an optimal way, like the BABYLON.Mesh.CreateBox function) has no \"extra faces\" that can be removed. removing one single face will cause it to... not be a box."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"##A few \"rules\" to follow"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"(and never forget, rules are meant to be broken!) :"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"1. Try simplifying meshes with more than 500 faces. Less than that will make no sense probably."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"2. Best meshes to simplify are complex objects"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"3. Meshes like a plane will probably lose their shape after simplification."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"4. The lower the quality of the mesh the further the distance should be. This should not be linear - a complex mesh that was simplified to 90% will probably still look almost the same, but at 30% it is very obvious that the mesh was simplified. Lower quality simplification should have a large distance defined."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"5. Try simplifying \"whole\" meshes. A mesh containing many distant objects on one will simplify rather poorly. LOD will work on such meshes poorly as well, since the position of the mesh is not actually the position of all mesh-parts. A good example are the while bar stools in the WCafe example. All are loaded as one single mesh, making them almost impossible to simplify (using this algorithm)."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"6. Set the mesh's material before starting the decimation. The LOD Mesh uses them when initialized. If they will not be set, expect the material to disappear when the given distance reached."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"##Quirks"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* Quadratic simplification can be calculated using many factors. Position, normals, colors, UV coordinates etc'. The more factor, the slower it will run (more calculations). The decision was made to stay with position only - this means that after simplification the UV coordinates will sometimes be a bit off. It is usually unnoticeable if you follow Rule nr. 4."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* Meshes might change their shape. Very noticeable with a small plane."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* Meshes might suddenly have \"holes\" in them. This can be avoided using the mesh optimization (starting 2.1, described further down)"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* Submeshes are supported starting BabylonJS 2.1. Meshes with submeshes would not be decimated 100% correctly due to the lack of border detection (see next point). Give it a try and see if it fits your needs. Contact me with questions."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* Some triangles on the borders will be \"deleted\". The reason is usually the (lack of) border detection, which is a part of the original paper. The feature was not included in the implementation due to the amount of time needed to calculate that correctly. Maybe in the future!"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"* Objects that are initialized using an image (best example is a Height Map-based ground) will only decimate after the image was fully loaded. Height Map can be initialized using the callback that can be set as the last variable of the function:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"var ground = BABYLON.Mesh.CreateGroundFromHeightMap(\"ground\", \"worldHeightMap.jpg\", 200, 200, 250, 0, 10, scene, false, function(groundMesh) {"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"    // Add simplify code here"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"    groundMesh.simplify(.......);"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"});"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"## Mesh optimization (Starting BabylonJS 2.1)"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Due to the nature of Babylon's file format, it is possible that many vertices will have the same positions, normals, but different color/uv information. This presents a problem to the decimation process, which relays on having all triangles with the same position altered. "},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"If you try simplifying a mesh, and it suddenly lacks a few triangles, this will be the reason - your mesh is not \"optimized\" for simplification."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"There are two types of optimization available:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"1. Global altering function, which is a part of BABYLON.Mesh:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"mesh.optimizeIndices(function() {"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"//do whatever you want here"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"});"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"This option alters(!) the mesh's indices order. It is faster, but might change the UV coordinates of vertices of the mesh. If that is the case, use:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"2. optimization during simplification - The Simplification Settings now include a new variable : optimizeMesh, which is a boolean that defaults to false. If set to true, a non-altering mesh optimization will run during the mesh's preparation for decimation. The simplification will run on a temporary array of vertices and will correlate the new vertices' positions with the old uv/color information. This is the better option, but also the slower option (will be noticeable with very large meshes like the demo skull - http://www.babylonjs-playground.com/#2JBSNA#4)."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Check which one of the methods works best for you. Both have their up and down sides, for better results use the 2nd option (set optimizeMesh to true in the settings)."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"#Developing further simplification algorithms"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"var myFunction = function(i, distance) {"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  var radius = 3 * Math.cos(distance / 5);"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  return radius;"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"};"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"var tube = BABYLON.Mesh.CreateTube(\"lumps\", path, null, 20, myFunction, scene);"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is an example with both an _i_ sinusoidal radius function and _x_ sinusoidal incrementing path :"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"http://www.babylonjs-playground.com/#LG3GS#9    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here's another example with a circular path and varying radius : http://www.babylonjs-playground.com/#LG3GS#10    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"## Extrusion"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"What is extrusion ?  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Extrusion is the way to transform a 2D shape into a volumic shape.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Let's imagine that you define a star shape by filling an array with successive _Vector3_. In order to have a 2D shape, you only set these points in the xOy plane, so every z coordinate is zero.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"ex : http://www.babylonjs-playground.com/#RF9W9  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Let's show the World axis so it is clearer : http://www.babylonjs-playground.com/#RF9W9#1  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Let's now imagine you could stretch this 2D shape along the Z-axis to give it some volume... this is extrusion :  http://www.babylonjs-playground.com/#RF9W9#30    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Let's now imagine you can extrude your star along a 3D path in space, a sinus curve for example, and not only along the z-axis.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"http://www.babylonjs-playground.com/#RF9W9#31    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Extrusion can be accomplished with two different methods. A basic one and an advanced or custom one.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"BASIC METHOD  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"BABYLON.Mesh.ExtrudeShape(name, shape, path, scale, rotation, cap, scene, updatable?, sideOrientation)"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **name** : the extruded mesh name."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **shape** : the shape to be extruded, an array of successive Vector3."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **path** : the path to extrude the shape along, an array of successive Vector3."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **scale** : _default 1_, the value to scale the initial shape."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **rotation** : _default 0_, the step value to rotate the shape at each path point."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"*  **cap** : BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **scene** : the current scene."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **updatable?** : if the mesh is updatable."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **sideOrientation** : the side orientation - _front, back_ or _double_.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If we change the _scale_ value from 1 to 3 for example (line 84), the initial star is scaled to 3 along the curve : http://www.babylonjs-playground.com/#RF9W9#4  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If we now change the _rotation_ step value from 0 to _PI / 24_ for example, the curve is twisted this angle at each curve point : http://www.babylonjs-playground.com/#RF9W9#5  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Of course, even if you define your 2D shape in the xOy plane as described, the extrusion still works along any path direction : http://www.babylonjs-playground.com/#RF9W9#32    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Moreover, the shape doesn't need to be closed. You can have a simple (or complex) open shape : http://www.babylonjs-playground.com/#RF9W9#7  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Extrusion : http://www.babylonjs-playground.com/#RF9W9#33      "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Extrusion with rotation : http://www.babylonjs-playground.com/#RF9W9#34    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Remember that your shape doesn't need to be centered on the coordinate system either. Here is an offset simple shape : http://www.babylonjs-playground.com/#RF9W9#10  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Extrusion (the extrusion path is shown in magenta so the offset is visible) : http://www.babylonjs-playground.com/#RF9W9#35    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Now rotation... around the path axis : http://www.babylonjs-playground.com/#RF9W9#36    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"As you can see, this is a way to build complex curved helix meshes without handling maths or simpler ones : http://www.babylonjs-playground.com/#RF9W9#37    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"As the shape to be extruded is unpredictable, it is assumed that the cap, if want to add it one or two to your extruded mesh, is computed with its center set to the shape barycenter.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"ADVANCED METHOD  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"BABYLON.Mesh.ExtrudeShapeCustom(name, shape, path, scaleFunction, rotateFunction, ribbonCloseArray, ribbonClosePath, cap, scene)"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **name** : the extruded mesh name,"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **shape** : the shape to be extruded, an array of successive Vector3."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **path** : the path to extrude the shape along, an array of successive Vector3."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **scaleFunction** : a custom javascript function. This function is called on each path point and is given the _i_ position of the point in the path and its _distance_ from the begining of the path. It must return a _scale_ numeric value. This value will be the scaling applied to the shape drawn at the _i-th_  point."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **rotationFunction** : a custom javascript function. This function is called on each path point and is given the _i_ position of the point in the path and its _distance_ from the begining of the path. It must return a _rotation_ numeric value. This value will be the rotation applied to the shape drawn at the _i-th_  point."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **ribbonCloseArray** : _default false_, boolean. The underlying ribbon _closeArray_  parameter. This can be used to automatically close a path with right normals computation."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **ribbonClosePath** : _default false_, boolean. The underlying ribbon _closePath_  parameter. This can be used to automatically close a shape with right normals computation.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"*  **cap** : BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **scene** : the current scene."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **updatable?** : if the mesh is updatable."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **sideOrientation** : the side orientation - _front, back_ or _double_."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"In this advanced method, the _scale_ and _rotation_ parameters are replaced by custom functions.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  **_scaleFunction_**   "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This javascript function will be called on each path point iteration when extruding. It will be passed two parameters : _i_ and _distance_.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **i** is the point position in the path, starting from zero for the first point."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **distance** is the current point distance from the begining of the path.  "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **numberOfTilesWidth** controls the number of tiles in width (_**Int**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **jointColor** changes the color for the joint between tiles (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **marbleColor** changes the color for the tile itself (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **BrickProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **numberOfBricksHeight** controls the number of bricks in height (_**Int**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **numberOfBricksWidth** controls the number of bricks in width (_**Int**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **jointColor** changes the color for the joint between bricks (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **brickColor** changes the color for the brick itself (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **FireProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **time** can be set manually(float) if autoGenerateTime(boolean) is set to false. It is used inside the fire shader to animate it"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **speed** controls the speed of the flames (_**BABYLON.Vector2**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **fireColors** is an array of 6 (_**BABYLON.Color3/4**_) defining the different color of the fire. You can define them manually of use presets available as static properties of the class (**PurpleFireColors**, **GreenFireColors**, **RedFireColors**, **BlueFireColors**) "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **GrassProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **grassColor** is an array of 3 (_**BABYLON.Color3/4**_) for the grass. Should be green but you can create red grass if you want to (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **groundColor** is the base color for the ground (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **RoadProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **roadColor** is the color for the road (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **CloudProceduralTexture**"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **skyColor** is the color for the sky (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" - **cloudColor** is the color for the cloud (_**BABYLON.Color3/4**_)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"## Creating Custom Procedural Textures ##"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"### Using a Files-Based Custom Procedural Texture ###"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"To use a files-based custom procedural texture, you need to create a folder containing at least 2 files:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- config.json"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- custom.fragment.fx"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"The config file is a Javascript Simple Object Notation file containing 4 elements. Here is an example:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     \"animate\": false,"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     \"refreshrate\": 0,"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     \"uniforms\": ["},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"      {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"type\": \"float\","},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"name\": \"dirtAmplifier\","},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"value\": \"6.0\""},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"      }"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"  ],"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     \"sampler2Ds\": ["},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"      {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"sample2Dname\": \"dirt\","},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"textureRelativeUrl\": \"textures/dirt.jpg\""},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"      },"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"      {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"sample2Dname\": \"grass\","},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"          \"textureRelativeUrl\": \"textures/grass.png\""},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"      }"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.x  =  alpha;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.y  =  beta;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.z  =  gamma;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.x  =  beta;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.z  =  gamma;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.y  =  alpha;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"since the rendering is done after the angles are set. In other words the order of setting rotations for x, y and z is not important."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"[Demo 4](http://www.babylonjs-playground.com/#UMR7M#11) shows an example with alpha = beta = gamma = PI/2 with the result is shown in Fig 4. "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-8hFr6rL0-AM/VW2qz8n4mMI/AAAAAAAAAEE/tqCnYgrRKLY/s210/fig4.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 4"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Commenting out different groups of lines in [Demo 4](http://www.babylonjs-playground.com/#UMR7M#11) shows that the order in which the x, y and z rotations are set makes no difference to the result.  The actual order is rotation around y first, then x then z."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"To see that the rotations are around the local axis use [Demo 4](http://www.babylonjs-playground.com/#UMR7M#11) and "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Step 1 comment out all rotation"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Step 2 comment out all rotations except "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.y = Math.PI/2;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```  "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Step 3 comment out all rotations except "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.y = Math.PI/2;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.x = Math.PI/2; "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Step 4 Comment out all rotations except"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```typescript "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.y = Math.PI/2;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.x = Math.PI/2;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"pilot.rotation.z = Math.PI/2;"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"```"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":" "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Results for 1, 2, 3 and 4 are in Figs 5a, b, c, d."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-eJLh8Kv_fCo/VW2q0hEOxXI/AAAAAAAAADI/XN2Sp-vQANA/s210/fig5a.jpg)  ![](https://lh3.googleusercontent.com/-KDKmxOGZy_Y/VW2q0-n8aOI/AAAAAAAAAEA/o_CmG0imIjg/s210/fig5b.jpg) "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-ryMZR5kfGu4/VW2q1PmlE5I/AAAAAAAAADQ/3GvWjsHPHpw/s210/fig5c.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-Gs1pqOB1_XQ/VW2q1dw1eiI/AAAAAAAAADw/1mDeScFg9O4/s210/fig5d.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"            Fig 5a            Fig5b                 Fig 5c             Fig 5d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Starting at "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 5a apply a rotation around local (= world) y axis (green)  to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 5b apply a rotation around local x axis (red) to obtain "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 5c apply a rotation around local z axis (blue) to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 5d"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"### Back to the Ribbon"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Well, we just learnt how to fill a path but a Ribbon needs many paths (okay, we can still construct a ribbon with a single path too, but it's more complex), so how do we add different paths as there is no real interest to add many times the same path ?   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"It's quite easy once you've got your parametric equation.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Let's get into javascript now.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Your former parametric equation could be this way :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var path = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var k = -20; k <= 20; k++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var x = k;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var y = k * k;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var z = 0;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  path.push(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Right ?   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"http://www.babylonjs-playground.com/#1HSC2O   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Let's now imagine, you create the same path array 10 times on the z-axis with _z = t_ :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var paths = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var t = 0; t < 10; t++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var path = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  for (var k = -20; k <= 20; k++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var x = k;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var y = k * k;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var z = t;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    path.push(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  }"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  paths.push(path);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"What do we get now ?   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"http://www.babylonjs-playground.com/#1HSC2O#1   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"An array _paths_ filled with 10 similar _paths_.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Just what is needed to create a ribbon : http://www.babylonjs-playground.com/#1HSC2O#2   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"If you now change slightly each path equation so they aren't all similar, say, by dividing _y_ by _t_ :  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var paths = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var t = 1; t < 10; t++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var path = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  for (var k = -20; k <= 20; k++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var x = k;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var y = k * k / t;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var z = t;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    path.push(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  }"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  paths.push(path);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You immediatly get a set of different paths along the z-axis : http://www.babylonjs-playground.com/#1HSC2O#8   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"So a more complex ribbon : http://www.babylonjs-playground.com/#1HSC2O#9     "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"At last, if we change a bit _x_ and _z_ variation to scale the curve, we can get a nice parabolic shape :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var paths = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var t = 1; t < 10; t++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var path = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  for (var k = -20; k <= 20; k++) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var x = k * 8;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var y = k * k / t;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var z = t * 50;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    path.push(new BABYLON.Vector3(x, y, z));"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  }"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  paths.push(path);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"http://www.babylonjs-playground.com/#1HSC2O#10    "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Quick fun ?    "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"multiply _y_ by _Math.sin(t)_ to make it wave : http://www.babylonjs-playground.com/#1HSC2O#11    "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"or funnier : http://www.babylonjs-playground.com/#1HSC2O#12    "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"I couldn't stop playing ...  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"### Summary"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"An easy way to create math computed shapes is so :  "},{"src":"tutorials/Supporting_fog_with_ShaderMaterial","name":"Supporting_fog_with_ShaderMaterial","text":"And, you are done :)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"http://www.babylonjs.com/playground/#QKQHS#1"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"If you save that scene again... the URL will increment, and look like this:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"http://www.babylonjs.com/playground/#QKQHS#2"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"(Again, be sure to bookmark this URL so you can easily return to it later)"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"And lastly, if you want to load a specific pre-installed demo scene, such as the #12 Particles demo, you can use a URL that looks like this:"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"http://www.babylonjs.com/playground/?12"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"### Maintaining Your Focus"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"Sometimes you will run a scene and use your cursor keys and mouse in the rendering canvas, and then want to 'focus' back to the editor... to make some more code changes.&nbsp; Sometimes, you will need to mouse-click somewhere in the editor area... to give the editor focus again.&nbsp; Once the editor has focus, your cursor keys will, once again, move the editor's cursor.&nbsp; This happens most often when a Babylon FreeCamera is the active camera."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"### And... That's A Wrap"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"Hey, thanks for reading this tutorial and for discovering the BabylonJS playground.&nbsp; We are very proud of it, and we think you will enjoy using it.&nbsp; This tutorial is still quite new, and will likely be changing often.&nbsp; Be sure to check back for updates and future features."},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"### The BabylonJS Playground is located at... http://www.babylonjs.com/playground/"},{"src":"tutorials/The_Playground_Tutorial","name":"The_Playground_Tutorial","text":"#### Feel free to discuss the BabylonJS Playground, or any other BabylonJS framework topic... on our forum... located at...&nbsp; http://www.html5gamedevs.com/forum/16-babylonjs/"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"### Alpha Tested Meshes"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Same as opaque meshes, except that some parts of these meshes can be defined as completely transparent. Alpha test means that each pixel of the mesh can be either opaque (and then drawn on screen and in the depth buffer) or transparent, which means the pixel is completely discarded. Although very efficient, this type of render usually gives off aliased borders & does not allow for smooth transparency effects."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"A pixel is considered transparent if its alpha value is < 0.4, and opaque if not. This value is currently hardcoded."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"### Alpha Blended Meshes"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"These meshes have translucent parts that may have an alpha value of 0.0 (completely transparent) to 1.0 (completely opaque). Their color is blended with what's behind them to reflect that. These meshes are sorted by depth, based on the center of their bounding sphere. This does not prevent some problems when several alpha-blended meshes overlap."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Also, note that backface culling is pretty much obligatory for alpha blended meshes, otherwise polygons from the front and the back of the objects will be garbled."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"This is what a depth buffer looks like for a scene that contains each of those type of meshes:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"![All kinds of meshes](http://i.imgur.com/l0XIlKv.png)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"*In this scene, the sphere is alpha tested, the base blocks are opaque and the pillars are alpha blended.*"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"The following list will help you understand in which categories your meshes will be put. For more information on each of the properties mentioned here, take a look at the [Materials Tutorial](page.php?p=22051)."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"**Alpha blended meshes:**"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Any mesh that either has :"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":" - the property `hasVertexAlpha` set to true (automatically set for exported meshes if vertices have individual alpha (transparency) values)"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":" - a `.visibility` value < 1"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- In case of a mesh using StandardMaterial, if it either has:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":" - an opacity texture defined"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":" - the opacity Fresnel effect active"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- In case of another type of material, if the material's `.needAlphaBlending()` function returns `true`"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"**Alpha tested meshes:**"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- In case of a mesh using StandardMaterial, if it has:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":" - a diffuse texture with the property `.hasAlpha` set to `true`"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- In case of another type of material, if the material's `.needAlphaTesting()` function returns `true`"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"**Opaque meshes:**"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Any mesh that does not fit into one of the above categories"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disablePentagonBokeh()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`setAperture(amount: number)`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`enableNoiseBlur()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"|`disableNoiseBlur()`|"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"## A Word Of Advice ##"},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"These effects are based on general approximations of real world optics phenomenons. As such, some situations may end up looking a bit off or even completely wrong. Tweaking the parameters (including on-the-fly adjustments) will allow you to mitigate these problems, for example by lowering aperture in situations where you know that blurred objects will not render correctly."},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"Keep in mind that the approximation used does not give good results when an object inside focus is rendered on top of a strongly blurred one, or the other way around. Bleeding around one object or the other will probably occur in this case."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.RefractionPostProcess(\"Refraction\", \"refMap.jpg\", new BABYLON.Color3(1.0, 1.0, 1.0), 0.5, 0.5, 1.0, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The constructor of this postprocess is the following:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"BABYLON.RefractionPostProcess = function (name, refractionTextureUrl, color, depth, colorLevel, ratio, null, samplingMode, engine, reusable)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"_refractionTextureUrl_ is the URL of the refraction map. The luminance of every pixel is used to define the refraction level (white = min, black = max)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"_color_ is the base color of the refraction (used to taint the rendering)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"_depth_ is the simulated refraction depth"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"_colorLevel_ is the coefficient of the base color (0 to remove base color tainting)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Color Correction: apply a color filter:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.ColorCorrectionPostProcess(\"color_correction\", \"./table.png\", 1.0, null, null, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"The second parameter of the constructor is the URL of the color look-up table (also known as _LUT_) that contains the filter to apply. This must be a texture 16 pixels high and 256 pixels wide containing a modified set of RGB colors (x=red value, y=green value, z=blue value). The post-processing will then map the RGB values of the rendered pixels to the new values contained in the look-up table."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Here is what the default (without filter) look-up table looks like:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"![LUT](http://udn.epicgames.com/Three/rsrc/Three/ColorGrading/RGBTable16x1.png)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Examples of filtered LUT to use for various filters:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"![LUT](http://i.imgur.com/gC9vQCz.png)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" Inverted colors"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"![LUT](http://i.imgur.com/rupMyVN.png)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" High contrast"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"![LUT](http://i.imgur.com/IX93hGO.png)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" Posterize"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"You can easily create new filters by using a image editing software to alter the look-up table to fit your needs. Copy/paste the default look-up table on a screenshot or picture before altering it to see in real time what the filtered image will look like."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"# Custom postprocesses"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"You can also develop your own postprocess using ```BABYLON.PostProcess``` object."},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"To do so, you need to create a .fragment.fx file, a shader-storing DOM node, or a ShaderStore entry where you will store the GLSL shader code used for every pixel of the screen:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"GLSL"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"#ifdef GL_ES"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"precision highp float;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"#endif"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"// Samplers"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"varying vec2 vUV;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"uniform sampler2D textureSampler;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"// Parameters"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"uniform vec2 screenSize;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"uniform float highlightThreshold;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"float highlights(vec3 color)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"{"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" return smoothstep(highlightThreshold, 1.0, dot(color, vec3(0.3, 0.59, 0.11)));"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"}"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"void main(void) "},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"{"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" vec2 texelSize = vec2(1.0 / screenSize.x, 1.0 / screenSize.y);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" vec4 baseColor = texture2D(textureSampler, vUV + vec2(-1.0, -1.0) * texelSize) * 0.25;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" baseColor += texture2D(textureSampler, vUV + vec2(1.0, -1.0) * texelSize) * 0.25;"},{"src":"tutorials/Using_the_SSAO_rendering_pipeline","name":"Using_the_SSAO_rendering_pipeline","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.useDiffuseColor = false; // False as default"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"vls.mesh.material.diffuseTexture= new BABYLON.Texture(...);"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"```"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"## And now, it's time to play ! ##"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"Feel free to tour some examples of Volumetric LightScattering in the playground :"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [Base demo](http://www.babylonjs-playground.com/?25)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [Colorful experiment](http://babylonjs-playground.azurewebsites.net/#1XOMH0)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [Video texture as source](http://babylonjs-playground.azurewebsites.net/#1ELQC1)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [Spherical Harmonics as source](http://babylonjs-playground.azurewebsites.net/#HYFQJ) (hit RUN again and again for this one)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [Particles as source #1](http://babylonjs-playground.azurewebsites.net/#2L5DBX)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [Particles as source #2](http://babylonjs-playground.azurewebsites.net/#MYY6S#3)"},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"- [VLS through CSG-created slots](http://babylonjs-playground.azurewebsites.net/#UUXLX#2)"},{"src":"tutorials/01._Advanced_Texturing","name":"01._Advanced_Texturing","text":"You might also be interested in our [Unleash the Standard Material](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) tutorial, and our [basic materials](http://babylondoc.azurewebsites.net/page.php?p=22051) tutorial."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  // Register a render loop to repeatedly render the scene"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  engine.runRenderLoop(function () {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    scene.render();"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  });"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```  "},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"And last, an optional but handy canvas/window resize event handler.  Add this:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```javascript"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  // Watch for browser/canvas resize events"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  window.addEventListener(\"resize\", function () {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"    engine.resize();"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"  });"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"There.  All the Javascript inserting is done.  Make sure you close the script, body, and html elements. The last three lines of your HTML5 web page... should be:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```html"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</body>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</html>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"You are done! Save your file (in the same folder as babylon.js, hand.js, and cannon.js) and browse it with your WebGL-ready browser.  You should see your new scene displayed in 3D on its canvas."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"A near-exact duplicate of the createScene function used in this tutorial... can be seen [**RIGHT HERE**](http://www.babylonjs.com/playground/#1GM4YQ) at the Babylon.js Playground.  You will also see the scene render LIVE, ONLINE!  Use the playground's 'Get .zip' choice if you want to download the entire index.html file used in this tutorial."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"## Got Troubles? ##"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Here is what the entire web page should look like:"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```html"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<!doctype html>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<html>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<head>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <meta charset=\"utf-8\">"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <title>Babylon - Basic scene</title>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <style>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      html, body {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         overflow: hidden;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         width: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         height: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         margin: 0;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         padding: 0;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      }"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      #renderCanvas {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         width: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         height: 100%;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         touch-action: none;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      }"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   </style>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <script src=\"babylon.js\"></script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <script src=\"hand.js\"></script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <script src=\"cannon.js\"></script> <!-- optional physics engine -->"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</head>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"<body>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <canvas id=\"renderCanvas\"></canvas>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   <script type=\"text/javascript\">"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // Get the canvas element from our HTML below"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      var canvas = document.querySelector(\"#renderCanvas\");"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // Load the BABYLON 3D engine"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      var engine = new BABYLON.Engine(canvas, true);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // -------------------------------------------------------------"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // Here begins a function that we will 'call' just after it's built"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      var createScene = function () {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Now create a basic Babylon Scene object"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         var scene = new BABYLON.Scene(engine);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Change the scene background color to green."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         scene.clearColor = new BABYLON.Color3(0, 1, 0);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // This creates and positions a free camera"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -10), scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // This targets the camera to scene origin"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         camera.setTarget(BABYLON.Vector3.Zero());"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // This attaches the camera to the canvas"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         camera.attachControl(canvas, false);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // This creates a light, aiming 0,1,0 - to the sky."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         var light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Dim the light a small amount"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         light.intensity = .5;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Let's try our built-in 'sphere' shape. Params: name, subdivisions, size, scene"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         var sphere = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, 2, scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Move the sphere upward 1/2 its height"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         sphere.position.y = 1;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Let's try our built-in 'ground' shape. Params: name, width, depth, subdivisions, scene"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         var ground = BABYLON.Mesh.CreateGround(\"ground1\", 6, 6, 2, scene);"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         // Leave this function"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         return scene;"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      }; // End of createScene function"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // -------------------------------------------------------------"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // Now, call the createScene function that you just finished creating"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      var scene = createScene();"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // Register a render loop to repeatedly render the scene"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      engine.runRenderLoop(function () {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         scene.render();"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      });"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      // Watch for browser/canvas resize events"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      window.addEventListener(\"resize\", function () {"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"         engine.resize();"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"      });"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"   </script>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</body>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"</html>"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"## Moving On ##"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"From this point forward in the Basic Series tutorials, I will mostly talk about things that are contained in the createScene function (the part between the dashed lines). I will assume that you already know how to insert a createScene function into a Babylon.js HTML5 scene document (like the one above)."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Lines Mesh**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var lines = BABYLON.Mesh.CreateLines(\"lines\", ["},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;new BABYLON.Vector3(-10, 0, 0),"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;new BABYLON.Vector3(10, 0, 0),"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;new BABYLON.Vector3(0, 0, -10),"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;new BABYLON.Vector3(0, 0, 10)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"], scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, [array of comma-separated vectors], scene. "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"I could explain how the Lines Mesh constructor works, but I think you can see how it works just by looking at the demo code above.&nbsp; Notice the [ and ].&nbsp; Those are the enclosing tokens for an array, yet another kind of Javascript value.&nbsp; The first vector3 of the array is the starting location for drawing lines.&nbsp; After that, a comma, and then the next vector3 location... indicating where the line is drawing-to next.&nbsp; Then, another comma, and another vector3 to a new location.&nbsp; You can add as many vectors as you wish, but notice that the LAST vector3 does not have a comma following it.&nbsp; Please make your array of vectors be formatted similarly.&nbsp; &nbsp;&nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of DashedLines Mesh**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var dashedlines = BABYLON.Mesh.CreateDashedLines(\"dashedLines\", [v1, v2, ... vn], dashSize, gapSize, dashNb, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are : name, [array of Vectors3], dashSize, gapSize, dashNumber, scene.&nbsp; &nbsp;&nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"As for Lines, a line along the vectors3 will be displayed in space. It will try to set _dashNumber_ strokes on this line depending on the length of each segment between two successive vectors3.&nbsp; &nbsp;&nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"_dashSize_ and _gapSize_ are relative to each other dash and gap sizes within these strokes.&nbsp; &nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Ribbon**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"What is a ribbon ?&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Imagine a first series of successive points defining a path.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Now get another series of successive points, so another path.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"If you construct then triangular faces by joining alternately each point of the first and the second path like when you lace shoes, you get a ribbon.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Your paths don't need to be parallel. They don't even need to be straight lines or in the same plane.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"They are, well, what you want. The ribbon will just follow your paths.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Now, imagine, instead of having only two paths, you've got many successive different paths.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"The full ribbon will then be the continuous surface joining all these inbetween pair of paths surface."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var ribbon = BABYLON.Mesh.CreateRibbon(\"ribbon\", [path1, path2, ..., pathn], false, false, 0, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, pathArray, closeArray, closePath, offset, scene, updatable? (if the mesh must be modified later)&nbsp; and the optional side orientation (see below)."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * name : a string, the name you want to give to your shape,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * pathArray : an array populated with paths. Paths are also arrays, populated with series of successive _Vector3_. You need at least one path to construct a ribbon and each path must contain at least four _Vector3_,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * closeArray : boolean, if true an extra set of triangles is constructed between the last path and the first path of _pathArray_,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * closePath : boolean, if true the last point of each path of _pathArray_ is joined to the first point of this path,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * offset : integer (default half the _path_ size) mandatory only if the _pathArray_ contents only one path. The ribbon will be constructed joining each i-th point of the single path to the i+offset-th point. It is ignored if _pathArray_ has got more than one path,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * scene : the current scene,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * updatable : if the ribbon should updated later"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * sideOrientation : the wanted side orientation (front, back or double side)."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var ribbon = BABYLON.Mesh.CreateRibbon(\"ribbon\", [path1, path2, ..., pathn], false, false, 0, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"I you need more details about how to deal with this method, you would probably read the [**Parametric Shapes**]() part."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* ** Creation of a Tube**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var tube = BABYLON.Mesh.CreateTube(\"tube\", [V1, V2, ..., Vn], radius, tesselation, radiusFunction, cap, scene, false, BABYLON.Mesh.DEFAULTSIDE);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are : name, path, radius, tesselation, optional radiusFunction, cap, scene, updatable, sideOrientation."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * name : string, the name of the tube mesh,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * path : an array of successive Vector3, at least two Vector3,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * radius : the tube radius, taken into account when _radiusFunction_ parameter set to _null_,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * tesselation : the number of radial segments,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * radiusFunction : _optional_, a javascript function returning a radius value, can be let to _null_,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * cap : BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL,&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * updatable : if the tube could be updated later,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * sideOrientation : the wanted side orientation (front, back or double side)."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"These two last parameters can be omitted if you just need the default behavior :"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var tube = BABYLON.Mesh.CreateTube(\"tube\", [V1, V2, ..., Vn], radius, tesselation, radiusFunction, cap, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"The tube can be used also as a [**Parametric Shapes**]() by setting a radius function."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"#### Updatable"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"This parameter present in each mesh creation method tells if the mesh could be updated once it is created.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"If false (default value), the mesh data are passed only once to the GPU.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"If true, the mesh data may be recomputed and passed to the GPU at each frame refresh.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"#### Side Orientation"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"When a mesh is created, a side orientation is given to it.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"The side orientation is used to give visibility and/or light reflection to each side of the mesh.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"There are four possible values for this parameter :&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * BABYLON.Mesh.FRONTSIDE,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * BABYLON.Mesh.BACKSIDE,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * BABYLON.Mesh.DOUBLESIDE,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp; * BABYLON.Mesh.DEFAULT which is the default value and equals FRONTSIDE currently."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"This parameter is optional. If not given, the DEFAULT value is set.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"*(We assume the backFaceCulling is enabled by default)*&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"For instance, imagine you create a basic shape like a box, a sphere or a plane and you don't give it a material.&nbsp; &nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"If you go behind the plane or inside the box or the sphere, you can check that the faces aren't visible any longer : this meshes are constructed with the default side orientation _FRONTSIDE_. This means each side is only a front view.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"test it : http://www.babylonjs-playground.com/#14RNAU#4&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"If you give your former mesh a material and light it up, you can then check the back (or internal) face is now visible, but it doesn't reflect the light. Same reason : the default side orientation is still _FRONTSIDE_.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"*(you can disable _backFaceCulling_ with this _sideOrientation_ value)*"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Now just change the _sideOrientation_ parameter to _BABYLON.Mesh.BACKSIDE_.&nbsp; &nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"As you can then check, you can now only see either the back of the plane or the inside of the box or the sphere.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"test it : http://www.babylonjs-playground.com/#14RNAU#5&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"If you give your mesh some material, you can then check the light now only reflects on the back face (plane) or only inside (box, sphere, etc).&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"*(you can disable _backFaceCulling_ with this _sideOrientation_ value)*"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"At last, change the _sideOrientation_ parameter to _BABYLON.Mesh.DOUBLESIDE_.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"As you guess, now the mesh faces are visible both sides. And if you give it a material, the light then reflects both sides too.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"test it : http://www.babylonjs-playground.com/#14RNAU#6&nbsp; &nbsp;"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"So why not always use _BABYLON.Mesh.DOUBLESIDE_ by default ?&nbsp; "},{"src":"tutorials/04._Materials","name":"04._Materials","text":" ```"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"![tof](http://www.babylonjs.com/tutorials/04%20-%20Materials/04-3.png)"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Again, you can see things from this tutorial... come to life... by browsing to [the Babylon.js Playground scene 4](http://www.babylonjs.com/playground/?4)."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"More information about materials can be found by reading [**Unleash the StandardMaterial**](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) and also [**Advanced Texturing**](http://babylondoc.azurewebsites.net/page.php?p=22161)."},{"src":"tutorials/04._Materials","name":"04._Materials","text":"##Next step##"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"----"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, alpha, beta, radius, target (in Vector3), eyeSpace (in degrees), scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"var camera = new BABYLON.AnaglyphArcRotateCamera(\"aar_cam\", -Math.PI/2, Math.PI/4, 20, new BABYLON.Vector3.Zero(), 0.033, scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The second is the **AnaglyphFreeCamera**. Its constructor looks like this:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// AnaglyphFreeCamera >> Analglyph 3D using filter-shifted FreeCamera"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position (in Vector3), eyeSpace (in degrees), scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"var camera = new BABYLON.AnaglyphFreeCamera(\"af_cam\", new BABYLON.Vector3(0, 1, -15), 0.033, scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The _eyeSpace_ parameter (and property) sets the amount of shift between the left eye view and the right eye view. Once you are wearing your 3D glasses, you might want to experiment with this float value."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"You can learn all about anaglyphs by visiting a [Wikipedia page that explains it thoroughly](http://en.wikipedia.org/wiki/Anaglyph_3D). "},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **GamepadCamera** - Local superhero David \"davrous\" Rousset, who invented our cool VirtualJoysticksCamera, is also the inventor of our cool GamepadCamera. Thanks David!  The Babylon.js GamepadCamera is specially designed to work with... you guessed it... gamepads. This camera works closely with Babylon.js Gamepad, Gamepads, and Xbox360Pad classes. More will be written about that, soon, and nearby."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Ok, let's create a GamepadCamera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// GamepadCamera >> Move in your scene with gamepad controls"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"var camera = new BABYLON.GamepadCamera(\"Camera\", new BABYLON.Vector3(0, 15, -45), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"Easy. Many of the powerful properties and methods found on our familiar FreeCamera... are also found on our GamepadCamera. Take notice of the ._angularSensibility_ and ._moveSensibility_ properties, similar to our DeviceOrientationCamera. You can explore all the properties and methods available on the GamepadCamera... at [our API documentation site](http://babylondoc.azurewebsites.net/page.php?p=23881)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **VRDeviceOrientationFreeCamera** - The [VRDeviceOrientationFreeCamera](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Cameras/VR/babylon.vrDeviceOrientationCamera.js) is yet to be documented."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// VRDeviceOrientationFreeCamera >> Move in your VR scene with device orientation"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.VRDeviceOrientationFreeCamera(\"VRDO\", new BABYLON.Vector3(0, 1, -15), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The VRDeviceOrientationFreeCamera uses FreeCamera as its basis, so all of the properties and methods of FreeCamera... are also found on our VRDeviceOrientationFreeCamera. "},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"* **WebVRFreeCamera** - The [WebVRFreeCamera](https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Cameras/VR/babylon.webVRCamera.js) is yet to be documented."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// WebVRFreeCamera >> Move in your VR scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Parameters : name, position, scene"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"    var camera = new BABYLON.WebVRFreeCamera(\"WVR\", new BABYLON.Vector3(0, 1, -15), scene);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"The WebVRFreeCamera uses FreeCamera as its basis, so all of the properties and methods of FreeCamera... are also found on our WebVRFreeCamera."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"## Wrapping Up ##"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"As a last reminder, Babylon.js cameras require you to use “attachControl” and “detachControl” functions, as needed. Most Babylon.js experts... use a two-step process to activate and attach a camera:"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```javascript"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// First, set the scene's activeCamera... to be YOUR camera."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   scene.activeCamera = myCamera;"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"// Then attach the activeCamera to the canvas."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"   scene.activeCamera.attachControl(canvas);"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"```"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"You already knew about activating and attaching cameras, didn't you? You remembered from the last time I told you, right? :)"},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"## Next step"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"![](http://urbanproductions.com/wingy/babylon/misc/normals03.jpg)"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"&nbsp;_A blue back-faced plane and a blue front-faced plane, with a spot light and point light_"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"As you can see, when a standard Babylon.js plane has its backface lit (the left plane), the lights have no affect, because its normals are not facing toward the lights. Conversely, when a standard plane has its frontface lit (the right plane), both lights work perfectly to light the plane, because its normals are facing toward the lights. "},{"src":"tutorials/06._Lights","name":"06._Lights","text":"It is also interesting to note that neither plane blocks the lights. You can see that the arrows on the left plane, are lit by the lights. The plane is not blocking the light rays. The only way that any mesh can block light rays in Babylon.js, is with the use of a ShadowGenerator or two. "},{"src":"tutorials/06._Lights","name":"06._Lights","text":"As a last note, I want you to know that the left plane's material.backFaceCulling = false. Whether it is set to true or false, there will be no change in how lights affect backfaces. The lights are primarily concerned about the direction of the lighting normals (the arrows). The standard Babylon.js plane (and ground) has its lighting normals aimed toward the frontface."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"**NEW**: In recent versions of Babylon.js, a new property was introduced... called _.range_:"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```javascript"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"light.range = 300;"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"```"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"More information about the _.range_ property... coming soon. Stay tuned."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"## Next Step ##"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"With the use of these powerful lights, your scene is likely really starting to 'shine'. And don't forget that you can animate light positions, directions, colors, and therefore create wonderful 'light shows'. We'll talk about that soon, or have fun discovering how to do it on your own. Maybe you could do light property settings inside the scene's render loop function. Its fun and beautiful!"},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Although not truly a light, you might be interested in our [Volumetric Light Scattering](http://babylondoc.azurewebsites.net/page.php?p=24840) (GodRays) system."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"BABYLON.Animation.prototype.quaternionInterpolateFunction = function (startValue, endValue, gradient) {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;return BABYLON.Quaternion.Slerp(startValue, endValue, gradient);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"};"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"BABYLON.Animation.prototype.vector3InterpolateFunction = function (startValue, endValue, gradient) {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;return BABYLON.Vector3.Lerp(startValue, endValue, gradient);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"};"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"**3 - Helper function**"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"You can use an extended function to create a quick animation:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```Javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Animation.CreateAndStartAnimation = function(name, mesh, tartgetProperty, framePerSecond, totalFrame, from, to, loopMode);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"To be able to use this function, you need to know that :"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- Your animation will have predefined key frames (Only 2 keyframes are generated : **Start** and **End**)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- The animation works only on **AbstractMesh** objects."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- The animation is starting right after the method call."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Here is a straightforward sample using the **CreateAndStartAnimation()** function :"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```Javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"BABYLON.Animation.CreateAndStartAnimation('boxscale', box1, 'scaling.x', 30, 120, 1.0, 1.5);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Pretty straightforward ? :)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"**4 - Easing functions**"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"You can add some behaviors to your animations, using easing functions. "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"If you want more informations about easing functions, here are some useful links : "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- [MSDN Easing functions documentation](http://msdn.microsoft.com/en-us/library/ee308751.aspx)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- [Easing functions cheat sheet](http://easings.net/fr)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"All those easing functions are implemented in BABYLON allowing you to apply custom mathematical formulas to your animations."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Here are the predefined easing functions you can use : "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.CircleEase()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.BackEase(amplitude)```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.BounceEase(bounces, bounciness)```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.CubicEase()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.ElasticEase(oscillations, springiness)```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.ExponentialEase(exponent)```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.PowerEase(power)```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.QuadraticEase()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.QuarticEase()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.QuinticEase()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.SineEase()```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"You can use the **EasingMode** property to alter how the easing function behaves, that is, change how the animation interpolates. "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"There are three possible values you can give for EasingMode: "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.EasingFunction.EASINGMODE_EASEIN``` : Interpolation follows the mathematical formula associated with the easing function."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.EasingFunction.EASINGMODE_EASEOUT``` : Interpolation follows 100% interpolation minus the output of the formula associated with the easing function."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"- ```BABYLON.EasingFunction.EASINGMODE_EASEINOUT``` : Interpolation uses EaseIn for the first half of the animation and EaseOut for the second half."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Here is a straightforward sample to animate a torus within a ```CirleEase``` easing function :"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```Javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"//Create a Vector3 animation at 30 FPS"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var animationTorus = new BABYLON.Animation(\"torusEasingAnimation\", \"position\", 30, BABYLON.Animation.ANIMATIONTYPE_VECTOR3, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// the torus destination position"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var nextPos = torus.position.add(new BABYLON.Vector3(-80, 0, 0));"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// Animation keys"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var keysTorus = [];"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"keysTorus.push({ frame: 0, value: torus.position });"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"keysTorus.push({ frame: 120, value: nextPos });"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"animationTorus.setKeys(keysTorus);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// Creating an easing function"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var easingFunction = new BABYLON.CircleEase();"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// For each easing function, you can choose beetween EASEIN (default), EASEOUT, EASEINOUT"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// Adding the easing function to the animation"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"animationTorus.setEasingFunction(easingFunction);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"// Adding animation to my torus animations collection"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"torus.animations.push(animationTorus);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"//Finally, launch animations on torus, from key 0 to key 120 with loop activated"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"scene.beginAnimation(torus, 0, 120, true);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"You can play with bezier curve algorithm too, using the **BezierCurveEase(x1, y1, x2, y2)** function. "},{"src":"tutorials/07._Animations","name":"07._Animations","text":"For purpose, here is a good reference to create your curve algorithm : [http://cubic-bezier.com](http://cubic-bezier.com)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Here is a pretty cool implementation using the bezier curve algorithm :"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"![](http://www.dotmim.com/sitefiles/babylon/bezier.jpg)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```Javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var bezierEase = new BABYLON.BezierCurveEase(0.32, -0.73, 0.69, 1.59);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Finally, you can extend the **EasingFunction** base function to create your own easing function, like this :"},{"src":"tutorials/08._Sprites","name":"08._Sprites","text":"Now you know how to create a complete simple dynamic scene and it is going to be important to talk about [collisions](http://babylondoc.azurewebsites.net/page.php?p=22101)."},{"src":"tutorials/09._Cameras,_Mesh_Collisions_and_Gravity","name":"09._Cameras,_Mesh_Collisions_and_Gravity","text":"Great, now you can develop a real FPS game! But maybe you would like to know when a mesh is in collision with another mesh? Good, because that is exactly the purpose of our [next tutorial](http://doc.babylonjs.com/page.php?p=22101)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* Dispose. Disposes (or not) the particle system on stop (very useful if you want to create a one shot particle system with a specific targetStopDuration):"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.disposeOnStop = true;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Finally, you can start this particle system whenever you want in your code with:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.start();"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"And naturally stop it:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"particleSystem.stop();"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Feel free to play with this scene... [**at our online playground**](http://babylonjs-playground.azurewebsites.net/?12)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"### customEffect (the fourth parameter in the constructor)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"var ps = new BABYLON.ParticleSystem(\"particles\", 2000, scene, **customEffect**);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"The customEffect is a type of BABYLON.Effect used to target a valid shader program."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"The primary author of Babylon.js was kind enough to make us [a fantastic playground demo of a particle system using a fragment shader effect](http://babylonjs-playground.azurewebsites.net/#1ASENS). Visit that link, and you can see a fragment shader program that has been stored in a shader store. Notice the line:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"BABYLON.Effect.ShadersStore[\"myParticleFragmentShader\"] = [...]"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"A bit below that, you will see:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```javascript"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"var effect = engine.createEffectForParticles(\"myParticle\", [\"time\"]);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"_.createEffectForParticles_ accepts the following parameters:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"- fragment name (can be in the shaders store or the id of a DOM element)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"- array of additional parameters (uniforms)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"- array of additional samplers (for additional textures!)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"The particle Effect Object is a slightly-modified [Babylon Effect Object](http://babylondoc.azurewebsites.net/page.php?p=24951). Also notice that the ShadersStore is a namespace upon this special [Effect Object](http://babylondoc.azurewebsites.net/page.php?p=24951). "},{"src":"tutorials/12._Particles","name":"12._Particles","text":"The Effect Object has many 'setter' methods on it, one of which is _.setFloat_. Notice how it is used in the registerBeforeRender function. This causes the speed of the effect to cycle across about a 20 second time span. We are (the demo author is) varying the time parameter of the fragment shader program... from within the scene's render loop! WE LOVE IT!"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Here is a short comment from Deltakosh... regarding that playground demo linked above:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"> By default Babylon.js will give you a vUV and a vColor varying parameter. It will also transmit you the particle texture. But you can feel free to add any new parameter, like I did, with 'time'."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"This section of the tutorial is under construction. We will have much more to say, soon."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"## Custom functions"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"You can get even more control over particles by using custom functions:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* ```startDirectionFunction: (emitPower: number, worldMatrix: Matrix, directionToUpdate: Vector3)```: This function can be defined to specify initial direction for every new particle. By default, this function is defined with the following code:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"startDirectionFunction = (emitPower: number, worldMatrix: Matrix, directionToUpdate: Vector3): void => {"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;var randX = randomNumber(this.direction1.x, this.direction2.x);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;var randY = randomNumber(this.direction1.y, this.direction2.y);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;var randZ = randomNumber(this.direction1.z, this.direction2.z);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;Vector3.TransformNormalFromFloatsToRef(randX * emitPower, randY * emitPower, randZ * emitPower, worldMatrix, directionToUpdate);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"}"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* ```startPositionFunction = (worldMatrix: Matrix, positionToUpdate: Vector3)```: This function can be defined to specify initial position for every new particle. By default, this function is defined with the following code:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"startPositionFunction = (worldMatrix: Matrix, positionToUpdate: Vector3): void => {"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;var randX = randomNumber(this.minEmitBox.x, this.maxEmitBox.x);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;var randY = randomNumber(this.minEmitBox.y, this.maxEmitBox.y);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;var randZ = randomNumber(this.minEmitBox.z, this.maxEmitBox.z);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;Vector3.TransformCoordinatesFromFloatsToRef(randX, randY, randZ, worldMatrix, positionToUpdate);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"}"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"* ```customUpdateFunction: (particles: Particle[])```: This function can be defined to provide custom update for active particles. This function will be called instead of regular update (age, position, color, etc.). Do not forget that this function will be called on every frame so try to keep it simple and fast :). By default the following code is used:"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"updateFunction = (particles: Particle[]): void => {"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;for (var index = 0; index < particles.length; index++) {"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; var particle = particles[index];"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; particle.age += this._scaledUpdateSpeed;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (particle.age >= particle.lifeTime) { // Recycle"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particles.splice(index, 1);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; this._stockParticles.push(particle);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; index--;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; continue;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; else {"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particle.colorStep.scaleToRef(this._scaledUpdateSpeed, this._scaledColorStep);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particle.color.addInPlace(this._scaledColorStep);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; if (particle.color.a < 0)"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;particle.color.a = 0;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particle.angle += particle.angularSpeed * this._scaledUpdateSpeed;"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particle.direction.scaleToRef(this._scaledUpdateSpeed, this._scaledDirection);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particle.position.addInPlace(this._scaledDirection);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; this.gravity.scaleToRef(this._scaledUpdateSpeed, this._scaledGravity);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; particle.direction.addInPlace(this._scaledGravity);"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"&nbsp;&nbsp; &nbsp;} "},{"src":"tutorials/12._Particles","name":"12._Particles","text":"}"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"```"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"## Next step"},{"src":"tutorials/14._Height_Map","name":"14._Height_Map","text":"Well done! Your scene looks good now, and you can imagine a lot of new landscapes! One more important thing you need to know is [how to create shadows](http://babylondoc.azurewebsites.net/page.php?p=22151). Shadows will give your scene a beautiful rendering effect, don't forget it!"},{"src":"tutorials/13._Environment","name":"13._Environment","text":"You should have a beautiful scene now, but except from your 3D models, your world is pretty flat, and that’s a shame for your scene. So, in our next environment tutorial, we are going to transform your flat ground into beautiful mountains. To learn this, go [here!](http://babylondoc.azurewebsites.net/page.php?p=22141)."},{"src":"tutorials/15._Shadows","name":"15._Shadows","text":"Now that you are becoming a real professional about Babylon.js, maybe it’s time to go deeper into the code to manipulate complex shaders, mesh, or textures. Our [home menu for our wiki](http://babylondoc.azurewebsites.net/index.php) is your portal to many advanced topics. You can also participate in this project by going to our Github page: [https://github.com/BabylonJS/Babylon.js](https://github.com/BabylonJS/Babylon.js) and also by participating in our very active forum: [http://www.html5gamedevs.com/forum/16-babylonjs](http://www.html5gamedevs.com/forum/16-babylonjs). See you there."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    request.onreadystatechange = function () {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        if (request.readyState == 4) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"            if (request.status == 200) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"                gunshotFromAB = new BABYLON.Sound(\"FromArrayBuffer\", request.response, scene, soundReadyToBePlayed);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"            }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    };"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    request.send(null);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"function soundReadyToBePlayed() {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    gunshotFromAB.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Test it on our playground: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PCY1J#2 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Loading a sound using the Assets Manager##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The assets manager is pretty useful as it handles for you some great features such as a loading screen. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music1, music2, music3;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"// Assets manager"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var assetsManager = new BABYLON.AssetsManager(scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var binaryTask = assetsManager.addBinaryFileTask(\"Violons18 task\", \"sounds/violons18.wav\");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"binaryTask.onSuccess = function (task) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    music1 = new BABYLON.Sound(\"Violons18\", task.data, scene, soundReady, { loop: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var binaryTask2 = assetsManager.addBinaryFileTask(\"Violons11 task\", \"sounds/violons11.wav\");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"binaryTask2.onSuccess = function (task) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    music2 = new BABYLON.Sound(\"Violons11\", task.data, scene, soundReady, { loop: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var binaryTask3 = assetsManager.addBinaryFileTask(\"Cello task\", \"sounds/cellolong.wav\");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"binaryTask3.onSuccess = function (task) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    music3 = new BABYLON.Sound(\"Cello\", task.data, scene, soundReady, { loop: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var soundsReady = 0;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"function soundReady() {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    soundsReady++;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    if (soundsReady === 3) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        music1.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        music2.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        music3.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"assetsManager.load();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Test it on our playground: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PCY1J#8 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Creating a spatial 3D sound##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"To transform a sound into a spatial sound, you need to specify that via the options:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"music\", \"music.wav\","},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    scene, null, { loop: true, autoplay: true, spatialSound: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Default properties of a spatial sound are:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* **distanceModel** (the attenuation) is using a “**linear**” equation by default. Other options are “*inverse*” or “*exponential*”. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* **maxDistance** is set to **100**. This means that once the listener is farther than 100 units from the sound, the volume will be 0. You can’t hear the sound anymore"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* **panningModel** is set to “**HRTF**”. The specification says it’s: “*a higher quality spatialization algorithm using a convolution with measured impulse responses from human subjects. This panning method renders stereo output*”. This is the best algorithm when using a headphone. The other available option is “*equalpower*”."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"**maxDistance** is only used when using the “*linear*” attenuation. Otherwise, you can tune the attenuation of the other models using the **rolloffFactor** and **refDistance** options. Both are set to 1 by default but you can change it of course."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"For instance:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"music\", \"music.wav\","},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    scene, null, {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        loop: true, autoplay: true, spatialSound: true,"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        distanceModel: \"exponential\", rolloffFactor: 2"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Default position of sound in the 3D world is *(0,0,0)*. To change that, use the *setPosition()* function:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"music.setPosition(new BABYLON.Vector3(100, 0, 0));"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"To have a better understanding, please have a look to this sample into our playground: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#2AH4YH ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Move into the scene using keyboard & mouse. Each sound is represented by a purple sphere. When you’re entering a sphere, you’ll start hearing one the music. The sound is louder at the center of the sphere and fall down to 0 when leaving the sphere."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Attaching a sound to a mesh##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"This is probably the simplest way to handle 3D sounds in your scene. Simply create a *BABYLON.Sound*, attach it to an existing mesh and you’re done! If the mesh is moving, the sound will move with it. You have nothing to do. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here’s the code to use:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"Violons\", \"sounds/violons11.wav\", scene, null, { loop: true, autoplay: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"// Sound will now follow the box mesh position"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"music.attachToMesh(box);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// Creates a BABYLON.FreeCamera type of object"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var camera = new BABYLON.FreeCamera(\"freecam\", new BABYLON.Vector3(0, 0, 5), scene);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// Creates a BABYLON.DirectionalLight type of object"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var light = new BABYLON.DirectionalLight(\"Dir0\", new BABYLON.Vector3(0, -1, 0), scene);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// Creates a BABYLON.Mesh type of object"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var mybox = BABYLON.Mesh.CreateBox(\"box\", 6.0, scene);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You get the idea.&nbsp; Javascript objects, are used often in Babylon.js scenes.&nbsp; Sometimes you will create them, and other times you will get a 'reference' or 'handle' to an object that was created earlier.&nbsp; Getting a reference/handle to a Javascript object, essentially means opening a communication line to an already-built object."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Each of these Javascript objects have named 'pockets' to store things-within.&nbsp; Often, values, data, and objects... get stored in those pockets.&nbsp; These value-storing pockets are called object 'properties'.&nbsp; Properties are commonly 'set' (putting a value INTO the pocket), and often 'get' (looking into the pocket to see what's there)."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**Properties**"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Properties store values.&nbsp; These values are used by the Babylon.js framework... to 'render' the scene.&nbsp; Here is an example:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"light.intensity = 0.5;"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Here, we 'set' the property named 'intensity' on the object called 'light' to a value of 0.5 (0.5 is called a FLOATING POINT value, or just 'a float').&nbsp; We'll talk about values, shortly.&nbsp; The main thing I want you to notice is that the property (pocket) had a NAME... .intensity, and we stored the value 0.5 into that pocket (on the object named 'light')."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**Methods**"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The other common type of 'pocket' on a Javascript object... is called a 'method' (sometimes called a 'function').&nbsp; Methods are used to store Javascript code onto Javascript objects.&nbsp; Earlier, I said that properties are 'set'.&nbsp; Well, methods are 'called'.&nbsp; Here is the way a method is 'called'."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"scene.getMeshByName(\"box\");"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Here, we have 'called' the getMeshByName() method that is located on the object called 'scene'.&nbsp; See that \"box\" thing inside the parentheses?&nbsp; That is called a 'parameter' or sometimes called an 'argument' or just... 'an arg'.&nbsp; Some methods require one or more parameters inside the parentheses, and some require none at all.&nbsp; If you look at your createScene function (method) from the big picture above, it had empty parentheses.&nbsp; It did not require any parameters in order to be called.&nbsp; At other times, you might see createScene(engine).&nbsp; In this case, the createScene method DOES require a parameter...&nbsp; a Javascript ENGINE-type of object."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"It is beyond the scope of this tutorial to teach everything about callable methods and settable properties on Javascript objects.&nbsp; The main thing is to try to take notice WHEN a 'pocket' on an object... is a property, and when it is a method.&nbsp; Methods always use parentheses... sometimes empty, sometimes full of parameters/args.&nbsp; Properties never use parentheses and therefore never require parameters."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Sometimes, methods are used to SET values of properties, and sometimes methods are used to GET values of properties.&nbsp; These methods/functions are often called GETTERS and SETTERS.&nbsp; Notice the word 'get' in the getMeshByName method above?&nbsp; It is a GETTER method.&nbsp; Here is a more proper use of that 'call':"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var box_I_made = scene.getMeshByName(\"box\");"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"This call is getting a reference/handle on a box that was made earlier in the code, and putting that reference into a variable called 'box_I_made'.&nbsp; After you get that reference, you can do things to the box... like set property values."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"box_I_made.rotation.y = Math.PI/2;&nbsp; // Rotate the box 90 degrees on the Y-axis."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"It is difficult for me to explain, but actually quite easy to do, thanks to Babylon.js.&nbsp; Experimenting with properties and methods... is the fastest way to learn."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**Values**"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Values... are often the things that are stored in an object's properties ('pockets') and the things that are returned when GETTER methods are called.&nbsp; As crazy as this sounds, all values are Javascript objects.&nbsp; Remember that 0.5 float that we saw earlier?&nbsp; That is a Floating Point&nbsp; NUMBER OBJECT.&nbsp; The 'box_I_made' variable above... it is a MESH OBJECT.&nbsp; The names of mesh, cameras, and lights... are STRING OBJECTS. Objects are everywhere, but they are good friends that help us stay organized."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"There are two types of value objects that are very common in Babylon.js.&nbsp; They are the Vector3 value, and the Color3 value.&nbsp; Vector3 and Color3 values... deserve to have their own section in this giant tutorial.&nbsp; Here we go..."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Vector3 and Color3 Values ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Two of the most-used values in Babylon.js, are Vector3 values and Color3 values."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### Vector3 Values ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Vector3 values take the form of..."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Vector3(xValue, yValue, zValue)"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"They are often used to set/store..."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"- the value of a .position property on mesh, light, or camera objects"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"- the value of a .rotation property on a mesh object"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"- the value of a .scaling property on a mesh object"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"- the value of a .direction property on a light object"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The three 'parameters' inside the parentheses of a Vector3 value... are floats.&nbsp; They can be negative or positive, and there is no practical limit to the size of those values.&nbsp; Let's look at a Vector3 being used to set the .position of a mesh."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"box.position = new BABYLON.Vector3(0, 10, 0);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The xValue is 0, meaning that the box is positioned in the center of the x-axis.&nbsp; The yValue is 10, meaning that the box is positioned 10 units above the center of the y-axis.&nbsp; The zValue is 0, meaning that the box is positioned in the center of the z-axis.&nbsp; Easy.&nbsp; We will talk more about positioning... further below.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Now let's look at a Vector3 being used to set a .rotation value:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"box.rotation = new BABYLON.Vector3(Math.PI/4, 0, 0);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Here, our box is being rotated around the x-axis... about 45 degrees.&nbsp; In Babylon.js, rotation is measured in radians.&nbsp; Math.PI/4 is approximately .707 radians.&nbsp; To rotate 90 degrees, it would be Math.PI/2, or about 1.57 radians.&nbsp; For 180 degrees, it would be Math.PI, or about 3.14 radians.&nbsp; To rotate 360 degrees, it would Math.PI times 2, or about 6.28 radians."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Keep in mind that Vector3 values can be negative numbers as well.&nbsp; So you could easily use -Math.PI/4, -Math.PI/2, -Math.PI, and -Math.PI times 2.&nbsp; These values would rotate the object in the opposite direction around the x-axis.&nbsp; How about this Vector3 rotation:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"box.rotation = new BABYLON.Vector3(Math.PI/2, 0, -.707);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"If you think that it rotates our box in a positive (+) direction 90 degrees around the x-axis, AND ALSO rotates our box 45 degrees in a negative (-) direction around the z-axis, you would be correct.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Even though Vector3 values can contain very large negative or positive numbers, it is rarely necessary for any xValue, yValue, or zValue... to be outside the range of -6.28 to +6.28 **for setting rotations**.&nbsp; Any numbers outside that range would be unnecessary, because -6.28 (radians) rotates 360 degrees in one direction, and +6.28 (radians) rotates 360 degrees in the opposite direction.&nbsp; That's a full range of rotation, isn't it?&nbsp; We'll talk a bit more about rotation, further below."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Now let's see a Vector3 used for scaling (stretching and shrinking) a mesh:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"box.scaling = new BABYLON.Vector3(1, 1, 3);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Scaling is a way to shrink or stretch a mesh along any of the 3 scene axes.&nbsp; In the above example, the xValue (1) indicates that no scaling change to the mesh along its x-axis... is desired.&nbsp; The yValue of 1 indicates that we want no change in scaling along the y-axis, either.&nbsp; The zValue of 3 indicates that we we are 'stretching' our mesh along its z-axis... to 3 times its normal size.&nbsp; Easy, right?&nbsp; You bet!&nbsp; "},{"src":"tutorials/Creating_the_Mini-fied_Version","name":"Creating_the_Mini-fied_Version","text":"* BABYLON.Engine.ShadersRepository: By default, this value points to \"/BABYLON/Shaders/\""},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Cylinders"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A cylinder is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"height\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diameterTop\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diameterBottom\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tessellation\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"subdivisions\": integer,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Toruses"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A torus is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"diameter\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"thickness\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tessellation\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Grounds"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A ground is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"width\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"height\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"subdivisions\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Planes"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A plane is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"size\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## TorusKnots"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A torusKnot is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"radius\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tube\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"radialSegments\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tubularSegments\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"p\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"q\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"canBeRegenerated\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## VertexData"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A vertexData is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"updatable\": bool,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"positions\": array of floats (3 per vertex),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"normals\": array of floats (3 per vertex),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uvs\": array of floats (2 per vertex),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv2s\": array of floats (2 per vertex) which is the 2nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv3s\": array of floats (2 per vertex) which is the 3nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv4s\": array of floats (2 per vertex) which is the 4nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv5s\": array of floats (2 per vertex) which is the 5nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv6s\": array of floats (2 per vertex) which is the 6nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"colors\": array of floats (3 per vertex) which is the per vertex color (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"matricesIndices\": array of ints (4 per vertex) which is the matrices indices for bones (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"matricesWeights\": array of floats (4 per vertex) which is the matrices weights for bones (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"indices\": array of ints (3 per face),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Instances"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A instance is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"position\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"rotation\": vector3 (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"rotationQuaternion\": vector4 (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"scaling\": vector3"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Meshes"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A mesh is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"tags\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"parentId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"materialId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"geometryId\": string (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"position\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"rotation\": vector3 (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"rotationQuaternion\": vector4 (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"scaling\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"pivotMatrix\": matrix,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"freezeWorldMatrix\": boolean (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"infiniteDistance\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"showBoundingBox\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"showSubMeshesBoundingBox\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"isVisible\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"isEnabled\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"pickable\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"applyFog\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"alphaIndex\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"checkCollisions\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"billboardMode\": int (0 = None, 1 = X, 2 = Y, 4 = Z, 7 = All),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"receiveShadows\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"physicsImpostor\": int (0 = None, 1 = Box, 2 = Sphere),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"physicsMass\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"physicsFriction\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"physicsRestitution\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"positions\": array of floats (3 per vertex),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"normals\": array of floats (3 per vertex),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uvs\": array of floats (2 per vertex),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uvs2\": array of floats (2 per vertex) which is the 2nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv3s\": array of floats (2 per vertex) which is the 3nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv4s\": array of floats (2 per vertex) which is the 4nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv5s\": array of floats (2 per vertex) which is the 5nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"uv6s\": array of floats (2 per vertex) which is the 6nd texture coordinates (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"colors\": array of floats (4 per vertex) which is the per vertex color (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"hasVertexAlpha\": boolean to indicate if colors field contains useful alpha value (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"matricesIndices\": array of ints (4 per vertex) which is the matrices indices for bones (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"matricesWeights\": array of floats (4 per vertex) which is the matrices weights for bones (can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"indices\": array of ints (3 per face),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"subMeshes\": array of SubMeshes (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"animations\": array of Animations (see below, can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimate\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateFrom\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateTo\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateLoop\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"instances\": array of Instances (see below, can be omitted),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"actions\": array of actions (see below)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"Please note that a parent mesh must be described before their children nodes"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## SubMeshes"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A subMesh is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"materialIndex\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"verticesStart\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"verticesCount\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"indexStart\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"indexCount\": int"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Animations"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"An animation can be defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"dataType\": int (0 = float, 1 = vector3, 2 = quaternion, 3 = matrix),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"framePerSecond\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"loopBehavior\": int (0 = relative, 1 = cycle, 2 = constant),"},{"src":"tutorials/How_Rotations_and_Translations_Work","name":"How_Rotations_and_Translations_Work","text":"- applying a projection matrix to a world position vector to end up with a screen-space position vector"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"We can see extrusion as some tube generalization : a tube would be a circle _shape_ extruded along a path.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"So we have here the same update capabilities than for a tube (_path_ or shape _scale_ which would be the equivalent to tube _radius_) and some extra parameters : the _rotation_ step can be updated and the _shape_ itself also !   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"It is mandatory that the new _shape_ array has the same number of Vector3 than the _shape_ used to build the original instance. A good way to assure this is simply to keep the original _shape_ instance and to modify it instead of creating a new one (or to modify a copy of it).   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var shape1 = [s1, s2, ...sN]; // Vector3 array"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var shape2 = [t1, t2, ...tN]; // another Vector3 array"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var path1 = [p1, p2, ...pN]; // Vector3 array"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var path2 = [q1, q2, ...qN]; // another Vector3 array"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var scale1 = 1;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var scale2 = 3;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var rotation1 = 0;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var rotation2 = 0.2;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// extrusion"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var extruded = BABYLON.Mesh.ExtrudeShape(\"ext\", shape1, path1, scale1, rotation1, cap, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// mesh update"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"extruded = BABYLON.Mesh.ExtrudeShape(null, shape2, path2, scale2, rotation2, null, null, null, null, extruded);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Idem for _ExtrudeShapeCustom()_ accepting _scaleFunction_ and _rotateFunction_ parameters :   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// path and shape var declared before ..."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var myScale1 = function(i, distance) { ... };"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var myScale2 = function(i, distance) { ... };"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var myRotation1 = function(i, distance) { ... };"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var myRotation2 = function(i, distance) { ... };"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// extrusion"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var ext = BABYLON.Mesh.ExtrudeShapeCustom(\"ext\", shape1, path1, myScale1, myRotation1, false, false, cap, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// mesh update"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"ext = BABYLON.Mesh.ExtrudeShapeCustom(null, shape2, path2, myScale2, myRotation2, null, null, null, null, null, null, ext);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Both new functions can be used in the render loop.      "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The funny part is, as _ExtrudeShape()_ and _ExtrudedShapeCustom()_ build the same mesh (only parameters change), you can create a simple extruded shape with _ExtrudeShape()_ and then morph it with _ExtrudeShapeCustom()_ if you need more complexity.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var ext = BABYLON.Mesh.ExtrudeShape(\"ext\", shape1, path1, scale1, rotation1, cap, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// mesh update"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"ext = BABYLON.Mesh.ExtrudeShapeCustom(null, shape2, path2, myScale2, myRotation2, null, null, null, null, null, null, ext);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"PG examples here ...   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###Other shapes : updateMeshPositions"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"For now, we just talked about parametric shapes which can be updated with their own _CreateXXX()_ initial method. "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"But what about the other mesh types : boxes, spheres, cylinders, etc ? "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"There is no mean to update them with their initial _CreateXXX()_ because a box remains a box, a sphere remains a sphere whether you change their size, radius, etc. "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"So usually, the right way to change these basic shapes is to play with their ```mesh.scale``` property. "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Nevertheleless, if you create your basic shape with its _updatable_ parameter set to true, you can access another way to morph/change the shape afterwards : the _updateMeshPositions()_ method. "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"This method needs two parameters :"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"* a _positionFunction_ which is js function which will modify the mesh _positions_ array,"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"* a _computeNormals_ boolean (default = true) to skip/unskip the normals re-computation after the mesh update ."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var box = BABYLON.Mesh.CreateBox(\"box\", 5.0, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var positionFunction = function(positions) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":" // modify positions array values here"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"};"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"box.updateMeshPositions(positionFunction, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"PG examples here ..."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###More speed : freezeNormals !"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The former _CreateXXX()_ update functions try to be as much optimized as possible to run fast in the render loop.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"However, you may need some more speed for any reason (huge mesh with dozens of thousands of vertices for instance).   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"So, if your mesh doesn't need to reflect the light (emissive color only for instance), you can skip the normals re-computation which is a CPU consuming process.    "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Use then the _freezeNormals()_ method just after your mesh is created :   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var tube = BABYLON.Mesh.CreateTube(\"tube\", path, 3, 12, null, BABYLON.Mesh.NO_CAP, scene, true);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"tube.freezeNormals();"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"// path update here ..."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"tube = BABYLON.Mesh.CreateTube(null, path, 3, null, null, null, null, null, null, tube);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"If you need to reset the normals computation process on, use then once the _unfreezeNormals()_ method."},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"tube.unfreezeNormals();"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"The normals will then be recomputed and re-applied on the next _CreateXXX()_ update call.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"###Summary   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"* To create an updatable mesh, it is mandatory to set its _updatable_ parameter to _true_ when calling _CreateXXX()_ method.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"* To update then an existing parametric shape, we just have to use the same _CreateXXX_ method as we used to construct it. "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"* Only the existing mesh and the data relative to new positions (path, pathArray, array of points) must be passed to this method, the other parameters are ignored.    "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"* If we want to morph the mesh, we then use the _CreateXXX()_ method within the render loop.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"In this case, it is important not to allocate new memory each frame : we access our arrays by indexes and just change values instead of creating new arrays, we access existing objects instead of instantiating new ones, etc. We also take care about the weight of each object (number of sides, number of vertices, etc).    "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"example : if we need to update a Lines mesh in the render loop, it is to say to update the _points_ array each frame, it is better to change each array element values (_points[i].x = newXValue; points[i].y = newYValue; points[i].z = newZValue;_) in a _for_ loop instead of instantiating a new _points_ array.   "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"Use case with a _path_ parameter as all parametric shapes have one :    "},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```javascript"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var path = [v1, v2, ..., vN]; // your own array, created once"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var mesh = CreateXXX(\"mesh\", path, etc, ..., scene, true); // updatable = true : creates your initial mesh"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var computeValue = function(val1, val2) { ... }; // your update logic : returns a value in function of val1 and val2"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var getParam = function() { ... }; // returns a param value evolving in the render loop"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"var updatePath = function(path, k) { // updates the existing path array elements"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  for (var i = 0; i < path.length; i++) {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var x = computeValue(path[i].x, k);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var y = computeValue(path[i].y, k);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    var z = computeValue(path[i].z, k);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].x = x;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].y = y;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"    path[i].z = z;"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  }"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"};"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"scene.registerBeforeRender(function() {"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  var k = getParam();"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  updatePath(path, k);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"  mesh = CreateXXX(null, path, null, ..., null, mesh);"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"});"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"```"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.PlaySoundAction` and `BABYLON.StopSoundAction`: The \"sound\" parameter is the reference of the sound you created using `var sound = new BABYLON.Sound(...)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`PlaySoundAction(trigger, sound, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`StopSoundAction(trigger, sound, condition)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"# Conditions"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"There are three kinds of conditions:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.ValueCondition`: This condition is true when a given property is equal / greater / lesser / different from a specific value. The following operands are thus supported:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.ValueCondition.IsEqual`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.ValueCondition.IsDifferent`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.ValueCondition.IsGreater`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"   * `BABYLON.ValueCondition.IsLesser`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`ValueCondition(actionManager, target, propertyPath, value, operator)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.PredicateCondition`: This condition uses a predicate to determine its state:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`PredicateCondition(actionManager, predicate)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"* `BABYLON.StateCondition`: This condition checks the ```state``` property of an object and compares it to given value:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`StateCondition(actionManager, target, value)`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"# Experimenting actions"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"So basically, let's imagine you want to almost hide a mesh when the user touches it."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"First of all you have to add a `BABYLON.ActionManager` on it:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`mesh.actionManager = new BABYLON.ActionManager(scene);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Then you can create an action that will be associated with the `BABYLON.ActionManager.OnPickTrigger` trigger. This action will interpolate the ```mesh.visibility``` property to 0.2:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`var action = new BABYLON.InterpolateValueAction(BABYLON.ActionManager.OnPickTrigger, mesh, \"visibility\", 0.2, 1000);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"Then add this action to the mesh:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`mesh.actionManager.registerAction(action);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"And you're done! Easy, right?"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"You can also chain another action to restore the `mesh.visibility` property to default value:"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`var action = new BABYLON.InterpolateValueAction(BABYLON.ActionManager.OnPickTrigger, mesh, \"visibility\", 0.2, 1000);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`var action2 = new BABYLON.InterpolateValueAction(BABYLON.ActionManager.OnPickTrigger, mesh, \"visibility\", 1.0, 1000);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"`mesh.actionManager.registerAction(action).then(action2);`"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"In this case, the first click will hide the button, the following click will restore it, and so on..."},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"# Playground"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"If you want to play with actions, you can try them at our playground:"},{"src":"tutorials/How_to_use_Curve3","name":"How_to_use_Curve3","text":"In light blue, these two curves are continued each other and a hermite curve is also added in continuation to close the path.   "},{"src":"tutorials/How_to_use_Bones_and_Skeletons","name":"How_to_use_Bones_and_Skeletons","text":"You can find a sample [here](http://www.babylonjs-playground.com/#11BH6Z#18)"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"var verticalBlur = new BABYLON.PostProcessRenderEffect(engine, \"verticalBlurEffect\","},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"    function() { return new BABYLON.BlurPostProcess(\"vb\", new BABYLON.Vector2(0, 1.0), 10, 1.0, null, null, engine, true) });"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"standardPipeline.addEffect(blackAndWhiteEffect);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"standardPipeline.addEffect(horizontalBlur);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"standardPipeline.addEffect(verticalBlur);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.addPipeline(standardPipeline);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(\"standardPipeline\", camera_01);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(\"standardPipeline\", camera_02);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(\"standardPipeline\", camera_03);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(\"standardPipeline\", camera_04);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"standardPipeline\", \"blackAndWhiteEffect\", camera_01);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"standardPipeline\", \"blackAndWhiteEffect\", camera_02);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"standardPipeline\", \"horizontalBlurEffect\", camera_02);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"standardPipeline\", \"verticalBlurEffect\", camera_02);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"standardPipeline\", \"horizontalBlurEffect\", camera_03);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"scene.postProcessRenderPipelineManager.disableEffectInPipeline(\"standardPipeline\", \"verticalBlurEffect\", camera_03);"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"//Render Loop"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"engine.runRenderLoop(function () {"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"    scene.render();"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"});"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.HasTags(myJSObj3); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj2.hasTags(); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.hasTags(); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag2\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1 || tag2\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1 && tag2\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag3\"); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"!tag3\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1 && tag3\"); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1 || tag3\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1 && !tag3\"); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.removeTags(\"tag1\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj1.matchesTagsQuery(\"tag1 && !tag3\"); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj2.removeTags(\"tag4 tag3 tag5\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj2.hasTags(); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.DisableFor(myJSObj2);"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj2.hasTags(); // TypeError: undefined is not a function"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj3.matchesTagsQuery(\"\"); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj3.matchesTagsQuery(); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj4.matchesTagsQuery(\"\"); // TypeError: undefined is not a function"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"myJSObj4.matchesTagsQuery(); // TypeError: undefined is not a function"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.MatchesQuery(myJSObj4, \"\"); // false"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.MatchesQuery(myJSObj4, undefined); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"BABYLON.Tags.MatchesQuery(myJSObj4); // true"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"### Rules to respect"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"* the tags \"true\" and \"false\" are reserved and cannot be used as tags."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"* a tag cannot start with \"||\", \"&&\", or '!'"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"* a tag cannot contain whitespaces"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"### Use in babylon.js"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"Since it's possible to use tags on any javascript object and since meshes are javascript objects, it's possible to add tags on them and to retrieve them according to a tags query."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var meshes = myScene.getMeshesByTags(\"tag1 && (tag2 || tag4 || !tag5)) || !(!tag1) && !!!tag5\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"All tags added to meshes, cameras, lights... are saved to the scene files (see [.babylon file format](https://github.com/BabylonJS/Babylon.js/wiki/Babylon.js-file-format)) and reloaded from them."},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"## What to do with them?"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"It's up to you!"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"You can use them to retrieve all the meshes that should be lighted by the light \"light1\":"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var meshesToLightByLight1 = myScene.getMeshesByTags(\"mustBeLightedByLight1\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"or make some green ghosts appear when you want:"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```javascript"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"var ghosts = myScene.getMeshesByTags(\"ghost && green\");"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"for(var index=0; index < ghosts.length; index++) {"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"    ghosts[index].isVisible = true;"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"}"},{"src":"tutorials/Layermasks_and_Multi-cam_Textures","name":"Layermasks_and_Multi-cam_Textures","text":"```"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"If you want to add a new simplification algorithm there are a few steps that are required:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"1. Create a class that implements the BABYLON.ISimplifier interface (and of course implement the function! :-) )"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"2. Add the type of simplification to the SimplificationType enum"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"3. Add the class init in the mesh.simplify function (the inner function \"getSimplifier\" should contain your type)."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"4. ???"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"5. Profit"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"#Accessing the simplification class directly"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"You can access the quadratic error decimation directly and play with its features. You can do that by creating an object of the class QuadraticErrorSimplification"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"var decimator = new QuadraticErrorSimplification(meshToDecimate);"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"Afterwards you can play with the following object variables:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"1. decimationIterations - max number of iterations of the decimation process. The simplification will (usually) stop before the max number of iterations, but it actually all depends on the next variable. Default : 100."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"2. aggressiveness - The threshold that decides if a triangle is up for a deletion is decided using this variable. Making it to a low value (2, for example) will cause the decimation to be a little slower but more percise in selecting the triangles. Settings it to a high value (15 for example) will probably cause the decimation to end in 1 or 2 iterations, since a lot of triangles will be chosen for deletion. Anyhow once the quality is reached the process stops. The question - did it choose the better triangles to decimate! Default : 7."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"3. syncIterations - the number of synchronous iterations inside the async iterations. Rather hard to explain, but a lower number will hurt the performance less but will make the process take a bit more time. If you need explanations look at the AsyncLoop class in babylon.tools.js or contact @raananw ."},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"After setting the variables you run run the simplify function that will start the entire process:"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"<pre>"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"simplify(settings, successCallback);"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"</pre>"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This custom function must return a _scale_ numeric value which will be applied to the shape on the _i-th_ point.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Example :"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"var myScale = function(i, distance) {"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  var scale = 2 * Math.sin(i / 5);"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  return scale;"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"};"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is an example with an unclosed un-centered simple shape whose scale evolves linearly along the path : http://www.babylonjs-playground.com/#RF9W9#38    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Now if we use a sinus scaling function instead and as the shape isn't centered, we get interesting results : http://www.babylonjs-playground.com/#RF9W9#39    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"We can even emulate rotation by alternately scaling positive/negative : http://www.babylonjs-playground.com/#RF9W9#40    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  **_rotateFunction_**  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This javascript function will be called on each path point iteration when extruding. It will be passed two parameters : _i_ and _distance_.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **i** is the point position in the path, starting from zero for the first point."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **distance** is the current point distance from the begining of the path. "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This custom function must return a _rotation_ numeric value which will be applied to the shape on the _i-th_ point.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Example :"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"var myRotation = function(i, distance) {"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  var rotation = distance / 20;"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  return rotation;"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"};"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Here is an example of constant scale and rotation evolving with the distance : http://www.babylonjs-playground.com/#RF9W9#41    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"You can set a non-linear rotation function of course, sinus here : http://www.babylonjs-playground.com/#RF9W9#42    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  **Fixed values**"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This advanced method needs two custom functions. But you may want to use a custom scale function with a fixed (or no) rotation function, for example. In this case, just pass a custom rotation function returning a fixed value :  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Example :  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"var noRotation = function(i, distance) {"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  return 0;"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"};"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"If you carefully read the code of this previous example, you can see in line 41 that the _scaleFunction_ returns the constant 1 value : http://www.babylonjs-playground.com/#RF9W9#41      "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"  **_ribbonCloseXXX_ parameters**"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"The extruded mesh is based on an underlying ribbon. When you extrude a shape, you actually make a particular ribbon.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"This means you can also set this ribbon _closeArray_ and _closePath_ parameter if you need to automatically close the extruded shape.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"NOTE : the _closeXXX_ names are the ribbon ones. Not the extruded shape ones.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"So it may be confusing because :  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **_ribbonCloseArray_** set to true will close your shape extrusion path,"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"* **_ribbonClosePath_** set to true will close your shape itself (if unclosed).  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Let's now do this unclosed, un-centered extruded shape : http://www.babylonjs-playground.com/#RF9W9#20  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"And this almost circular path : http://www.babylonjs-playground.com/#RF9W9#21  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Extrusion with constant scale and no rotation : http://www.babylonjs-playground.com/#RF9W9#43    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Now let's set the _ribbonCloseArray_ to true :http://www.babylonjs-playground.com/#RF9W9#44    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"As you can see, it closes the extrusion path. Let's set it back to false and let's set the _ribbonClosePath_ to true instead : http://www.babylonjs-playground.com/#RF9W9#45    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Now the shape is closed.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Both together : http://www.babylonjs-playground.com/#RF9W9#46    "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":" **Summary**  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"At last, the extrude custom function call would be, for example:  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```javascript"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"BABYLON.Mesh.ExtrudeShapeCustom(\"extruded\", shape, path, myScale, myRotation, false, true, scene)"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"```"},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"A shape is an array of successive Vector3. This means 2D or 3D shapes can be extruded as well.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"The shape is to be designed in the local coordinate system knowing that the z-axis will be the extrusion path axis.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Finally, shapes don't have to be centered in the local coordinate system.  "},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"A centered shape will be extruded symmetrically centered along the path axis. An un-centered shape will be extruded offset from the path axis.  "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     ]"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    }"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"The **animate** property indicates if a time value should be created and increased each time the fragment shader code is executed."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"The **refreshrate** property is set to 0 if you want the texture to only render once. If set to 1, it will render every frame, 2 every two frames, etc."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"**Uniforms** are the values that will be passed from the javascript code to the shader code. By setting them that way, you can allow the custom texture user to modify this value at runtime... to customize the texture. "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Uniforms can be of type:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":" "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **float** (parameters : value)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **Vector2** (parameters: x, y)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **Vector3** (parameters: x, y, z)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **Color3** (parameters: r, g, b)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"- **Color4** (parameters: r, g, b, a)"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"**Textures2D** are 2D image files that are passed to the shader code as **sampler2D** variables. They can be read by the shader code and be used to create the final pixel color. You only need to provide a name and the relative path inside the folder."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"The **custom.fragment.fx** file contains the GLSL code. The purpose of this wiki article is not to teach you how to create a fragment shader or how it works. You simply need to know that the code contained in your main function will be called once for each pixel to create on the texture. In this main function, you only know the coordinates of the current pixel in the final texture."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Here is a simple code which is setting all pixels to a specific gray."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    #ifdef GL_ES"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    precision highp float;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    #endif"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    void main(void) {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     vec3 color = vec3(0.9, 0.9, 0.9);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     gl_FragColor = vec4(color, 1.0);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    }"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Gl_FragColor is the variable in which you put the color object you want the pixel to be."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Here is a more complex example using 2 samplers and mixing their color equally. "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    #ifdef GL_ES"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    precision highp float;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    #endif"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    varying vec2 vPosition;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    varying vec2 vUV;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    uniform sampler2D grass;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    uniform sampler2D dirt;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    void main(void) {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     vec3 color = mix(texture2D(dirt, vUV).xyz, texture2D(grass, vUV).xyz, 0.5);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"     gl_FragColor = vec4(color, 1.0);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    }"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"To use this custom texture, you need to make your folder available to your babylon.js html/javascript files and use a **CustomProceduralTexture** class instead of a standard one. The difference is only that you specify a new parameter which is the relative path to the folder containing the custom texture. Babylon.js will automatically read the config.json and custom.fragment.fx files and load everything for you."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"    var texture = new BABYLON.CustomProceduralTexture(\"texture\", \"./pathtotexture\", 1024, scene);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"### Using a ShaderStore for Shader Storage ###"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"You can also use the ShaderStore to write a shader inline and use it in a CustomProceduralTexture."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"This can be done easily using the **BABYLON.Effect.ShaderStore** array : "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"BABYLON.Effect.ShadersStore[\"LinesPixelShader\"] ="},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"#ifdef GL_ES\\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"precision highp float;\\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"#endif\\n\\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"varying vec2 vUV; \\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"void main(void) {\\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \" gl_FragColor = vec4(vUV.x,vUV.y,-vUV.x, 1.0);\\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"}\\n\" +"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"       \"\";"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Note that your shader name should be suffixed with **PixelShader** as the Procedural Texture shader is always a pixel shader. Babylon.JS will automatically understand it is a pixel shader."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"To use this shader, you just have to create a CustomProceduralTexture and put the name of your shader in the store instead of the path to the files."},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"var customProcText = new BABYLON.CustomProceduralTexture(\"customtext\", \"Lines\", 1024, scene);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"### Using a DOM Element for Shader Storage ###"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Finally you can also use **DOM Elements** to store your shader. You just have to create a script tag in your HTML file like this:"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"<script type=\"application/pixelShader\" id=\"LinesPixelShader\">"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"        #ifdef GL_ES"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"        precision highp float;"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"        #endif"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"        varying vec2 vUV; "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"        void main(void) {"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"             gl_FragColor = vec4(vUV.x,vUV.y,-vUV.x, 1.0);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"        }"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"</script>"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"To use it, you just have to create a simple object containing one property which is named **fragmentElement** and contains the id identifying the script DOM element."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"##Translate and Rotate##"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Translate and Rotate change the position and orientation of a mesh along a given vector or axis using either the world or the mesh's local axes."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"###Translate###"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"you can use pilot.translate(vector, distance, space) to move the pilot the given distance in the direction of the vector based on either the world or local space."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"####The World Space####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The world space is set using BABYLON.Space.WORLD"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"[Demo 5](http://www.babylonjs-playground.com/#UMR7M#14) using the vectors (3, 3, 3) and (2, 4, 1) with a distance of 1 shows that in the world space pilot.translate behaves like pilot.position set to these vectors."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Experimenting with the distance shows that the pilot moves distance * vector length."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"It is often useful if the given vector is a unit vector so the distance moved is precisely the distance given."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"For a given V = new BABYLON.Vector3(x, y, z) a unit vector in this direction is given by V.normalize(). Also V.length() will give the length of the vector."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"For convenience unit vectors in the positive directions of the x, y and z axes are pre-defined as the constants BABYLON.Axis.X, BABYLON.Axis.Y and BABYLON.Axis.Z respectively."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"####The Local Space####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"The local space is set using BABYLON.Space.LOCAL. "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"In the local space translate behaves as would a mathematical translate. That is, a sequence of translations is an accumulation of direction vectors as opposed to the setting of a position vector."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"[Demo 6](http://www.babylonjs-playground.com/#UMR7M#15) shows how the translation (3, 3, 3) followed by the translation (2, 4, 1) results in the translation (5, 7, 4)."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"###Rotate###"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"NOTE  "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"* local-axes means axes local to the pilot that maintain their original orientation to the pilot, ie as the pilot turns the local axes turn with it."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"* world-local-axes means axes local to the pilot that stay in the direction of the world axes whatever the orientation of the pilot."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"####The world space.####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Rotations take place around the world-local-axes and are accumulative. This can be seen in [Demo 7](http://www.babylonjs-playground.com/#UMR7M#16)."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Commenting the correct lines in [Demo 7](http://www.babylonjs-playground.com/#UMR7M#16) gives the sequence in Figs 6a, b, c, d."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-5ti2Ahyaszg/VW2q1qwIOnI/AAAAAAAAADc/4Vomi3kXUvU/s210/fig6a.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"1[](https://lh3.googleusercontent.com/-oNmkqraiIkg/VW2q2OmbCsI/AAAAAAAAADk/Y8_s5Y35byo/s210/fig6b.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-AWKJUC_TxOU/VW2q2t_YxyI/AAAAAAAAAD4/09lbS3gKkgY/s210/fig6c.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-TcRVwV1YfKo/VW2q2n1VqpI/AAAAAAAAADs/uxqN-ft5npE/s210/fig6d.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"            Fig 6a            Fig6b                 Fig 6c             Fig 6d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Starting from"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 6a rotate about the world-local-axis y to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 6b rotate about world-local-axis y to obtain  "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 6c rotate about world local axis x to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 6d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"####The local space####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"[Demo 8](http://www.babylonjs-playground.com/#UMR7M#17) shows that the rotations take place around the local-axes and are accumulative. The stages are shown in Figs 7a, b, c, d, e"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-9LHIGaanKrU/VW2q3T2kXFI/AAAAAAAAAEc/0Q0-fQr9SiE/s210/fig7a.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-dpp79sOIFMg/VW2q3wemWSI/AAAAAAAAAEM/AoWev1t4ODU/s210/fig7b.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-nybw5ErTfGc/VW2q4Z4IVwI/AAAAAAAAAEg/I1zCMBcJBNI/s210/fig7c.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-wC2ZcwTce9I/VW2q4_-s6GI/AAAAAAAAAEk/ApmBi9O4DQ0/s210/fig7d.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-ccXHJ4DM7s4/VW2q6NgYZ8I/AAAAAAAAAE8/GQHH_6CGlAU/s210/fig7e.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"            Fig 7a            Fig7b                 Fig 7c               Fig 7d               Fig 7e"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Starting from "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 7a rotate about local-axis y to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 7b rotate about local-axis y to obtain  "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 7c rotate about local-axis x to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 7d rotate about local-axis z to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 7e"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"###Combining translate and rotate###"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Whether the pilot is rotated in the world or the local space applying pilot.translate in the world space is essentially equivalent to applying pilot.position. "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"So what happens when pilot.translate is applied in the local space after rotations."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Firstly when rotating in the world space the word-local-axes are used for rotation and these are then also used for pilot.translate(vector, distance, BABYLON.Space.LOCAL). See Figs 8a, b"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"[Demo 9](http://www.babylonjs-playground.com/#UMR7M#20) can be used to play with WORLD rotations followed by LOCAL translations"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-dFoKaUKuhco/VW2q6JTUs7I/AAAAAAAAAFA/Hys5M-c3F5k/s210/fig8a.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-Di1IAnzgGeo/VW2q6VjteKI/AAAAAAAAAE4/_cV4zZnFnw8/s210/fig8b.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"            Fig 8a            Fig8b "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Starting from "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to choose a 2D math curve,"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to get its parametric equation,"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to fill an array with _Vector3_ computed with a simple _for_ loop iterating on the number of points wanted (set them in a 2D plane to start, with z = 0 for instance),"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to check your curve with _BABYLON.Mesh.CreateLines(\"name\", yourArray, scene)_,"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to derivate your first curve by varying _x_ or _y_ and iterating on _z_ since adding each derivated path into a _paths_ array,"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to check again with _BABYLON.Mesh.CreateLines(\"name\", yourArray, scene)_ on each _z_ iteration,"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* to finally build your ribbon with the _paths_ array. "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"## From Basic Shapes to Complex Ones"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The Ribbon is very versatile. So you can redo every BabylonJS basic shapes.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Why would you want to do this ?  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Well, you probably don't. There is no need to re-invent the wheel. But you could need to model your own shape which derivates from one of the basic shapes.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"The main rule should be :  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* if you need a basic shape as it stands, then use the provided BJS basic shapes."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* if you need a shape made up of many basic shapes, then use Constructive Solid Geometry or merge provided BJS basic shapes."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* if you need a computed shape having a symetry axis, then use the Tube mesh or the extrusion, which don't require many maths."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"* if you need something else, then use the Ribbon itself... and your maths skills."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"### Sphere"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Let's try here to redo a sphere and then to modify it into something different.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"As you've seen in the former part, you need to create many paths to build a ribbon. For a sphere, you can imagine that you stack many circles, each circle being a path.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"To create a circle, you just set points at _x = sin(angle)_ and _z = cos(angle)_ and give _angle_ some values between 0 and 2 x PI.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var pi2 = Math.PI * 2;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var step = pi2 / 60;       // we want 60 points"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var i = 0; i < pi2; i += step ) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var x = radius * Math.sin(i);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var z = radius * Math.cos(i);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var y = 0;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  path.push( new BABYLON.Vector3(x, y, z) );"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  }"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"path.push(path[0]);       // to close the circle"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#1   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Now, you add circles along the y-axis, making the radius evolving with another angle _p_ varying from the sphere south pole -PI / 2 to its north pole +PI /2. These circles (path) are stored in an array called _paths_ :     "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var radius = 10;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var tes = 60;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var pi2 = Math.PI * 2;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var step = pi2 / tes;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var paths = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var p = -Math.PI / 2; p < Math.PI / 2; p += step / 2) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var path = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  for (var i = 0; i < pi2; i += step ) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var x = radius * Math.sin(i) * Math.cos(p);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var z = radius * Math.cos(i) * Math.cos(p);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var y = radius * Math.sin(p);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    path.push( new BABYLON.Vector3(x, y, z) );"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    }"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    path.push(path[0]);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    paths.push(path);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Let's apply a ribbon to these paths : http://www.babylonjs-playground.com/#E6IX1#2   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You get (almost) a sphere.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"To get a nice full sphere, you need to complete the missing point at north pole and set the ribbon _closePath_ parameter to true instead of manually close each circle after the former iteration :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var lastPath = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var j = 0; j < pi2; j += step ) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  lastPath.push( new BABYLON.Vector3(0, radius, 0) );"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"paths.push(lastPath);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var sphere = BABYLON.Mesh.CreateRibbon(\"sph\", paths, false, true ,  0, scene);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#3  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Pretty much maths and iterations o far to get a simple sphere, isn't it ?  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"This is why you should really use the BJS provided sphere if you only want a sphere !  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":" "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"But don't worry, all those efforts so far aren't vain. From now, let's the magic happens with only little changes ...   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Remember : the _for_ loop iterating on _p_ is for the south to north pole angle. What if you don't increment _p_ until PI / 2 but stop before, say at PI /2 - 1.5 :   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var p = -Math.PI / 2; p < Math.PI / 2 - 1.5; p += step / 2) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#4   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Quite easy. You just derivated the initial sphere into another shape you wouldn't have got another way.   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Now, you can keep the original pole angle limit PI / 2 but add a new behavior : if a certain angle limit is reached, then inverse the y radius around this limit.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var yRadius;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var limit = Math.PI / 2 - 1;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var p = -Math.PI / 2; p < Math.PI / 2; p += step / 2) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var path = [];"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  yRadius = p < limit ? Math.sin(p) : 2 * Math.sin(limit) - Math.sin(p) ;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  for (var i = 0; i < pi2; i += step ) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var x = radius * Math.sin(i) * Math.cos(p);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var z = radius * Math.cos(i) * Math.cos(p);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    var y = radius * yRadius;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"    path.push( new BABYLON.Vector3(x, y, z) );"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  }"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  paths.push(path);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"} "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo :  http://www.babylonjs-playground.com/#E6IX1#5   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Let's change the initial _for_ loop limits now :  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var p = -Math.PI / 2 + 0.5; p < Math.PI / 2  - 0.5; p += step / 2) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#6  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Well, is this still a sphere ?   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Let's close the ribbon :"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"var sphere = BABYLON.Mesh.CreateRibbon(\"sph\", paths, true, true ,  0, scene);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#7   "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Well, it's no longer a sphere, but a symetric shape you could probably have got in a simpler way with a Tube mesh or with CSG ... or not.  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Since you wrote the initial sphere maths code, you've added until now very few changes to get this derivated shape."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Too symetric, not enough, ok ? let's morph it once more so you get out the CSG or Tube way :  let's moderate _x_ with an extra _cosinus_ function"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var i = 0; i < pi2; i += step ) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var x = radius * Math.sin(i) * Math.cos(p) * Math.cos(i / 6);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var z = radius * Math.cos(i) * Math.cos(p);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var y = radius * yRadius;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  path.push( new BABYLON.Vector3(x, y, z) );"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#8  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"You are now in the real Ribbon world !"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"Want more ? let's moderate _y_ with another _cosinus_ function and multiply _z_ by 2 (why ? why not !)."},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```javascript"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"for (var i = 0; i < pi2; i += step ) {"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var x = radius * Math.sin(i) * Math.cos(p) * Math.cos(i / 6);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var z = radius * Math.cos(i) * Math.cos(p) * 2;"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  var y = radius * yRadius * Math.cos(i * 2);"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"  path.push( new BABYLON.Vector3(x, y, z) );"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"}"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"```"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"demo : http://www.babylonjs-playground.com/#E6IX1#9  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"## Various paths concatenation  "},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"_make many different computed or manual pathArrays, then concatenate them_  "},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"Occasionally, you may have some of your meshes falling into the wrong category, e.g. an alpha tested mesh unnecessarily marked as alpha-blended, or a mesh staying opaque when it shouldn't. This will give you weird glitches, which can sometimes be very annoying. You should refer to this article to check how your meshes and materials properties are set."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"You're welcome to use this [playground example](http://babylonjs-playground.azurewebsites.net/#1PHYB0#6) to experiment on the different things explained here. Pressing F9 will switch between normal render and depth buffer render."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"## Things To Do And Not To Do"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Make sure your alpha blended meshes do not intersect, as this will inevitably lead to render glitches."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Avoid having heavily stretched alpha blended meshes (i.e. large planes); since the center of its bounding sphere is used for depth sorting, doing this may result in a mesh being sorted as far away from the camera but actually closer to many other meshes."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Use alpha test as much as possible; this may look perfect for a pixel art style, or if the transparent parts boundaries are straight horizontal or vertical lines."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- To get rid of jagged edges on your alpha tested meshes, use anti-aliasing for your scene ([FxaaPostProcess](page.php?p=22431)); when using anti-aliasing, you can even disable the built-in smoothing of WebGL when creating the engine object:"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"`engine = new BABYLON.Engine(canvas, false); // built-in smoothing will be disabled`"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"This may help you with visible seams between meshes & other similar issues."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Do not forget to enable backface culling with alpha blended meshes!"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- Use rendering groups to have better control over the order in which your meshes are displayed. These are especially useful if you know that some meshes will be above others 100% of the time (for example, an overlayed UI drawn on top of the scene)."},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"- A mesh's alphaIndex property can be very useful as well, since they allow you to override the depth sorting of alpha-blended meshes. Also this property does not suffer from the same limitation as Rendering Groups (4 layers at most), and only has an effect on alpha-blended meshes."},{"src":"tutorials/Using_depth-of-field_and_other_lens_effects","name":"Using_depth-of-field_and_other_lens_effects","text":"Finally, these effects can be pretty intensive on the GPU. A lower blur effect (i.e. smaller blur radius) will be less demanding, so you can try to lower aperture instead of disabling it altogether. Highlight enhancing is also quite intensive, so be sure that this effect contribute to the quality of your render if you have it active."},{"src":"tutorials/Using_the_Debug_Layer","name":"Using_the_Debug_Layer","text":"Feel free to test it on the [playground](http://www.babylonjs-playground.com/#1IG874)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" baseColor += texture2D(textureSampler, vUV + vec2(1.0, 1.0) * texelSize) * 0.25;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" baseColor += texture2D(textureSampler, vUV + vec2(-1.0, 1.0) * texelSize) * 0.25;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" "},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" baseColor.a = highlights(baseColor.rgb);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":" gl_FragColor = baseColor;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"}"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Your shader must define the following values:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Precision must be set to highp"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* A varying vUV must be used to read texture coordinates"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* The first sampler must be named textureSampler"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Once you created your sampler, you can create a postprocess:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess = new BABYLON.PostProcess(\"Down sample\", \"./Scenes/Customs/postprocesses/downsample\", [\"screenSize\", \"highlightThreshold\"], null, 0.25, null, BABYLON.Texture.BILINEAR_SAMPLINGMODE, engine, true);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"You have to specify:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* A name"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* The URL of the shader coder*"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* A list of your uniforms parameters"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* A list of additional samplers"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* The ratio"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* The parent camera (deprecated)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* The sampling mode"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* The engine"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"* Can be reusable"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"(*Please see the link at the bottom of this document to learn more ways to store shader code.)"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"You can set up things before the postprocess is applied by specifying a onApply function:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"postProcess.onApply = function (effect) {"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat2(\"screenSize\", postProcess1.width, postProcess1.height);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat(\"highlightThreshold\", 0.90);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"};"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"Please note that you can also use the output of a previous postprocess as the source for your own sampler:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"effect.setTextureFromPostProcess(\"sceneSampler\", postProcess0);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"# Chaining postprocesses"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"You can chain postprocesses on a specific camera. They are processed using the creation order. For instance here is the code used to simulate a bloom effect:"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```javascript"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var blurWidth = 1.0;"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess0 = new BABYLON.PassPostProcess(\"Scene copy\", 1.0, camera);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess1 = new BABYLON.PostProcess(\"Down sample\", \"./Scenes/Customs/postprocesses/downsample\", [\"screenSize\", \"highlightThreshold\"], null, 0.25, camera, BABYLON.Texture.BILINEAR_SAMPLINGMODE);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"postProcess1.onApply = function (effect) {"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat2(\"screenSize\", postProcess1.width, postProcess1.height);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat(\"highlightThreshold\", 0.90);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"};"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess2 = new BABYLON.BlurPostProcess(\"Horizontal blur\", new BABYLON.Vector2(1.0, 0), blurWidth, 0.25, camera);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess3 = new BABYLON.BlurPostProcess(\"Vertical blur\", new BABYLON.Vector2(0, 1.0), blurWidth, 0.25, camera);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"var postProcess4 = new BABYLON.PostProcess(\"Final compose\", \"./Scenes/Customs/postprocesses/compose\", [\"sceneIntensity\", \"glowIntensity\", \"highlightIntensity\"], [\"sceneSampler\"], 1, camera);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"postProcess4.onApply = function (effect) {"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setTextureFromPostProcess(\"sceneSampler\", postProcess0);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat(\"sceneIntensity\", 0.5);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat(\"glowIntensity\", 0.4);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"    effect.setFloat(\"highlightIntensity\", 1.0);"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"};"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"```"},{"src":"tutorials/How_to_use_PostProcesses","name":"How_to_use_PostProcesses","text":"You might want to read more about shaders and try our CYOS shader editor [**RIGHT HERE**](http://blogs.msdn.com/b/eternalcoding/archive/2014/04/17/learning-shaders-create-your-own-shaders-with-babylon-js.aspx)."},{"src":"tutorials/Using_the_Volumetric_LightScattering_post-process","name":"Using_the_Volumetric_LightScattering_post-process","text":"Have fun !"},{"src":"tutorials/How_to_Merge_Meshes","name":"How_to_Merge_Meshes","text":"```"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Try to memorize this web page layout, and see how the createScene function is at the heart of it. After you have spent some time using the Babylon.js Playground, you will see how createScene() is portable, and can be easily copied and pasted TO and FROM the playground editor window. This will allow others to help you with problems, and will also allow you to help others with their problems."},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"## Next step ##"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"----"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Now you are ready to go further and learn how to create more elements like spheres, cylinders, boxes, etc."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Because this value creates twice more vertices than the mesh needs to be rendered with only one side. In other terms, your mesh will be twice heavier.&nbsp; "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"*(you shouldn't disable _backFaceCulling_ with _BABYLON.Mesh.DOUBLESIDE_ value)*"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"### More Basic Elements - Grounds"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Up to this point, we have been talking about basic elements from our [**Playground Demo Scene 02**](http://babylonjs-playground.azurewebsites.net/?2), but three important mesh shapes (basic elements) are not included in that demo scene.&nbsp; They are each ways of making 'ground' in Babylon.js.&nbsp; Let's take a look: "},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Ground**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var ground = BABYLON.Mesh.CreateGround(\"ground\", 6, 6, 2, scene);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, width, depth, subdivs, scene"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Our [**Playground Demo Scene 01**](http://www.babylonjs-playground.com/?1) uses a CreateGround constructor... so you can see one in action by using the above link."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Creation of a Ground From HeightMap**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var ground = BABYLON.Mesh.CreateGroundFromHeightMap(\"ground\", \"heightmap.jpg\", 200, 200, 250, 0, 10, scene, false, successCallback);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, heightmapPath, width, depth, subdivs, minheight, maxheight, scene, updatable, successCallback"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"HeightMap grounds are easy, but we decided to create a separate tutorial so we could say more about this important Babylon.js feature. Please see our [**HeightMap Tutorial**](http://babylondoc.azurewebsites.net/page.php?p=22141) to learn all about heightMap grounds."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"* **Create of a Tiled Ground**"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Thanks to forum user Kostar111 for this handy Tiled Ground constructor. Here is the basic code needed to create a tiled ground."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```javascript"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var precision = {"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;\"w\" : 2,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;\"h\" : 2"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"};"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var subdivisions = {"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;'h' : 8,"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"&nbsp;&nbsp; &nbsp;'w' : 8"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"};"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"var tiledGround = BABYLON.Mesh.CreateTiledGround(\"Tiled Ground\", -3, -3, 3, 3, subdivisions, precision, scene, false);"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"```"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Parameters are: name, xmin, zmin, xmax, zmax, subdivisions = the number of tiles. (subdivisions.w : in width; subdivisions.h: in height), precision = the number of subdivisions inside a tile. (precision.w : in width; precision.h: in height), scene, updatable."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"Kostar111 was also kind enough to give us a fine tutorial about how to use tiled grounds. [**Click right here**](http://makina-corpus.com/blog/metier/how-to-use-multimaterials-with-a-tiled-ground-in-babylonjs) to view it. At that link, Kostar111 thoroughly explains how the tiled ground works, and also provides some Babylon.js Playground scenes that nicely demonstrate some of its many uses."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"## Wrapping Up ##"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"And that’s it! Now you have seen all of our basic elements, and some ways to use them. Keep watching this area of the tutorial for new basic elements, as they are being added quite quickly. Feel free to imagine a few of your own basic element ideas, and present them on the forum. Help us make our list of basic elements grow, if you can."},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"## Next step ##"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"----"},{"src":"tutorials/04._Materials","name":"04._Materials","text":"Great, your scene is looking better than ever with those materials! Later we will see how to use advanced techniques with materials. But for now, we have to learn [**how to use cameras**](http://babylondoc.azurewebsites.net/page.php?p=22061)."},{"src":"tutorials/05._Cameras","name":"05._Cameras","text":"You have now learned how to use the two most-common cameras, and you have been introduced to all of our innovative 'unique purpose' cameras. You can control how you see your scene, you can choose your input and viewing devices, and you now know how to move cameras around. To give your scene a more realistic effect, we are now going to learn [**how to manage lights**](http://babylondoc.azurewebsites.net/page.php?p=22071). See you soon."},{"src":"tutorials/06._Lights","name":"06._Lights","text":"Guess what! The next tutorial... is about animation! [Click this and let's go!](http://babylondoc.azurewebsites.net/page.php?p=22081)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```Javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"var FunnyEase = (function (_super) {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;__extends(FunnyEase, _super);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;function FunnyEase() {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; _super.apply(this, arguments);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;}"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;FunnyEase.prototype.easeInCore = function (gradient) {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; // Here is the core method you should change to make your own Easing Function"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; // Gradient is the percent of value change"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return Math.pow(Math.pow(gradient, 4), gradient);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;};"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;&nbsp; &nbsp;return FunnyEase;"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"})(BABYLON.EasingFunction);"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"You will find a complete demonstration of the easing functions behaviors, in the playground : [**Easing function playground**](http://babylonjs-playground.azurewebsites.net/?20)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"**5 - Complex animation**"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"The complex animation lets you choose everything at each frame of the animation (each tick). The code computed at run time must be located in this function:"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```javascript"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"scene.registerBeforeRender(function () {"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"&nbsp;//Your code here"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"});"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"```"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"This function can be very useful for complex animation like games, where characters have to move depending on many parameters."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Don’t hesitate to combine all those types of animations. If well done, it’s very powerful."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Don't forget to [visit our API documentation](http://babylondoc.azurewebsites.net/page.php?p=29) in order to learn more about the [**Babylon.js Animation**](http://babylondoc.azurewebsites.net/page.php?p=24916) class."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"You can view, edit, and get a zip of the code used in this tutorial... [**right here**](http://babylonjs-playground.azurewebsites.net/?7) ...at the Babylon.js Playground.&nbsp; The demo for the easing section is listed a few lines earlier."},{"src":"tutorials/07._Animations","name":"07._Animations","text":"## Next step"},{"src":"tutorials/12._Particles","name":"12._Particles","text":"ParticleSystems are very powerful and versatile tools that can help bring realness and movement to your scenes. Don’t hesitate to use them as they are not resource-intensive."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Calling the *attachToMesh()* function on a sound will transform it automatically into a spatial 3D sound. Using the above code, you’ll fall into default Babylon.js values: a *linear* attenuation with a *maxDistance* of 100 and a panning model of type “*HRTF*”."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Put your headphone and launch this sample into our playground:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/index.html?23 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Creating a spatial directional 3D sound##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"By default, spatial sounds are omnidirectional. But you can have directional sounds if you’d like to."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"**Note:** directional sounds only work for spatial sounds attached to a mesh. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is the code to use:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"Violons\", \"violons11.wav\", scene, null, { loop: true, autoplay: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"music.setDirectionalCone(90, 180, 0);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"music.setLocalDirectionToMesh(new BABYLON.Vector3(1, 0, 0));"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"music.attachToMesh(box);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"setDirectionalCone takes 3 parameters:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* **coneInnerAngle**: size of the inner cone in degree"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* **coneOuterAngle**: size of the outer cone in degree"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"* **coneOuterGain**: volume of the sound when you’re outside the outer cone (between 0.0 and 1.0)"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Outer angle of the cone must be superior or equal to the inner angle, otherwise an error will be logged and the directional sound won’t work. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"*setLocalDirectionToMesh()* is simply the orientation of the cone related to the mesh you’re attached to. By default, it’s *(1,0,0)*."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can play with this sample from our playground to better understand the output: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#1BO0YS ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Move into the 3D scene. If you’re inside the space defined by the grey cone, you should hear the music, if not you’ll not hear it as the **coneOuterGain** is set to 0. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Creating your own custom attenuation function##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"If you want to manage the attenuation (or distance model in Web Audio) using a specific algorithm, you can by-pass the native Web Audio attenuation using Babylon.js custom attenuation function."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"**Note:** Web Audio is “*hardware accelerated*”. It means it’s mainly handled by a dedicated audio chip on your device via native code (the browser). This then almost costs nothing on the performance side for 3D real-time rendering. Switching to custom attenuation will use Babylon.js distance computation based on JavaScript and will be slower. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Moreover, the custom attenuation will only works on spatial sounds (obviously) but also on sound connected to a Babylon.js mesh. That said, let’s now view the code to do that. First, you must specify it in the options:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"// Create and load the sound async"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var music = new BABYLON.Sound(\"Music\", \"music.wav\", scene, null, { loop: true, autoplay: true, useCustomAttenuation: true });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You’ll switch to internal Babylon.js math computations. The default custom attenuation function is a linear one. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"To create your own logic you need such code:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"// Creating custom attenuation function. Near the object, volume is almost 0."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"// The farest, the louder"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"music.setAttenuationFunction(function (currentVolume, currentDistance, maxDistance, refDistance, rolloffFactor) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    return currentVolume * currentDistance / maxDistance;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"});"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can play with these 5 parameters and do whatever you’d like with it. Simply return a number that will be the volume applied to the sound."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"In this example, the logic is a bit weird as the volume is louder the farther you are from the mesh. ;-)"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Play with it in our Playground: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#1YIXEO ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Moreover, Firefox has currently a bug in their Web Audio implementation in handling properly linear attenuation. This can be fixed by using the Babylon.js default linear custom attenuation."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here’s a previous sample code that now works properly in Firefox: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#2AH4YH#2 ###"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Manipulating sound loaded from a .babylon file##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Our *.babylon* file format can describe the sounds to load. It’s documented here: http://doc.babylonjs.com/page.php?p=22661 "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Currently only our 3DS Max exporter can export sounds directly to *.babylon*. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"To access to a sound loaded by the Babylon.js *.babylon* fileloader, you need to use the *getSoundByName()* function on the scene object. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is a simple sample loading a *.babylon* scene file embedding some sounds:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var canvas = document.getElementById(\"renderCanvas\");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var engine = new BABYLON.Engine(canvas, true);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"BABYLON.SceneLoader.Load(\"TestScene/\", \"testsound.babylon\", engine, function (newScene) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    newScene.executeWhenReady(function () {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        newScene.activeCamera.attachControl(canvas);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        var gunshotSound = newScene.getSoundByName(\"gunshot-1.wav\");"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        window.addEventListener(\"keydown\", function (evt) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"            if (evt.keyCode === 32 && gunshotSound) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"                    gunshotSound.play();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"            }"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        engine.runRenderLoop(function () {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"            newScene.render();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"        });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    });"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"}, function (progress) {"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"    // To do: give progress feedback to user"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"});"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Pressing the spacebar will play the gunshot sound. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Using Sound Tracks##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"It could be useful to isolate your music & sounds on several tracks to better manage volume on a grouped instance of sounds. It will be also used in a future release to apply effects on a specific track."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"By default, Babylon.js is creating a **BABYLON.SoundTrack** object to act as its main track. Every time you’re creating a new *BABYLON.Sound*, it’s added for you into this main track."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var soundTrack = new BABYLON.SoundTrack(scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"soundTrack.AddSound(cellolong);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"soundTrack.AddSound(violons11); "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Using this code, the “*cellolong*” and “*violons11*” sounds will be moved from the main Babylon.js track to this specific sound track. This now means that you change the volume of this track, and thus of these 2 sounds, independently from the main track. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The *AddSound()* function will move the sound from its original container (the main track or a specific track) to the new sound track specified. For instance, with this code:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var soundTrack1 = new BABYLON.SoundTrack(scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"soundTrack1.AddSound(cellolong);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"soundTrack1.AddSound(violons11);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var soundTrack2 = new BABYLON.SoundTrack(scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"soundTrack2.AddSound(violons11);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The “*violons11*” sound will finally live only in “*soundTrack2*”."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"## Using the Analyser##"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can easily analyze in real-time the audio frequencies. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"The easiest code to understand how it works is this one:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var myAnalyser = new BABYLON.Analyser(scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"BABYLON.Engine.audioEngine.connectToAnalyser(myAnalyser);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"myAnalyser.drawDebugCanvas();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"This will connect to the global volume of the audio engine and will draw the frequencies of all sounds played together into a 2D canvas display on top of the screen. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"![Image Analyser Debug Canvas](http://az612410.vo.msecnd.net/wwwbabylonjs/doc/simpleanalyserdebug.png)"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can change the position and size of the debug canvas and use an analyser on a sound track instead of the global audio engine:"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"``` javascript"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"var myAnalyser = new BABYLON.Analyser(scene);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"soundTrack1.connectToAnalyser(myAnalyser);"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"myAnalyser.DEBUGCANVASSIZE.width = 160;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"myAnalyser.DEBUGCANVASSIZE.height = 100;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"myAnalyser.DEBUGCANVASPOS.x = 40;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"myAnalyser.DEBUGCANVASPOS.y = 30;"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"myAnalyser.drawDebugCanvas();"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"```"},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"You can also call yourself the analyser functions to create your own usage of it. "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"Here is a full sample: "},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"### http://www.babylonjs-playground.com/#PTV7W#1 ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"I will talk more about scaling... further below."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Another use for a Vector3 value... is setting the .direction for certain types of lights:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"mySpotLight.direction = new BABYLON.Vector3(0, -1, 0);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Generally speaking, when a Vector3 value is used to set a DIRECTION, the xValue, yValue, and zValue are each in a range of negative 1... to positive 1.&nbsp; In the example above, our light is aimed negative on the y-axis... or... straight down.&nbsp; Directions (directional vectors) are used for more things than just lights, but lights is a common use.&nbsp; Directional vectors are not always easy things to determine the x, y, and z parameters/values for.&nbsp; We have some helpful tools on our lights... that will assist you in setting directions.&nbsp; You will learn about those tools in our lights tutorial."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### Color3 Values ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Color3 values look very much like Vector3 values.&nbsp; Here is an example:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(rValue, gValue, bValue)"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The rValue is for red, the gValue is for green, and the bValue is for blue.&nbsp; I bet you have already figured out that Color3 values are used for setting colors.&nbsp; The rValue, gValue, and bValue, all contain float numbers in the range of 0 to 1.&nbsp; Let's look at a few examples:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(1, 0, 0) - red"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(0, 1, 1) - cyan"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(0, 1, 0) - green"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(1, 0, 1) - violet"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(1, 1, 0) - yellow"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(0, 0, 0) - black"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(1, 1, 1) - white"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(0.5, 0.5, 0.5) - medium gray"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"BABYLON.Color3(0.2, 0, 0.2) - dark purple"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Not so difficult.&nbsp; Let's say that you wanted to put a color on a box that you have already created.&nbsp; The first thing you do is create a Javascript object called a StandardMaterial.&nbsp; Then you would apply (set) that StandardMaterial as the box's .material property.&nbsp; This is covered by our Materials tutorial, but let's look at how that is done, here."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var myMaterial = new BABYLON.StandardMaterial(\"mymat\", scene);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"myBox.material = myMaterial;&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The first line creates a StandardMaterial and puts it into the variable named myMaterial.&nbsp; The second line sets the box's .material property... to be that newly-made StandardMaterial.&nbsp; The appearance of the box will not change yet, because we have not given the StandardMaterial any information about what color we want the box to be.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"One of the many properties on a StandardMaterial object... is named .diffuseColor.&nbsp; That property is the primary way to set a basic color.&nbsp; And right here... is where we use our new Color3 value.&nbsp; Let's have a look:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"myMaterial.diffuseColor = new BABYLON.Color3(0, 0.5, 0);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Our box is now colored medium green.&nbsp; It's just that easy.&nbsp; The StandardMaterial object has many other properties on it.&nbsp; You can add color to properties such as&nbsp; .specularColor, .emissiveColor, .ambientColor.&nbsp; All those properties are set (if you choose)... using our friend... the Babylon.js Color3 value."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Another use of the Color3 value is to set the .diffuse property of lights.&nbsp; Take careful note that the name of this property is .diffuse, and not .diffuseColor.&nbsp; Lights use a property named .diffuse to set their primary color.&nbsp; Let's take a look at how to set the primary color of a light that you have already created:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"myLight.diffuse = new BABYLON.Color3(0.5, 0, 0);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"And there we go.&nbsp; We have colored the light beam that emits from our light... to be medium red.&nbsp; There is one more use for a Color3 value, and that is on one of our newest basic shape objects... called a LINES object.&nbsp; A LINES object does not use a StandardMaterial object for its color.&nbsp; It uses a property called .color.&nbsp; Here is an example of a LINES object being created, and then colored:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` javascript"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// Creation of a triangular lines mesh"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"var myLines = BABYLON.Mesh.CreateLines(\"itsName\", ["},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(-5, 0, 5),"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(5, 0, 5),"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(0, 0, -5),"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; new BABYLON.Vector3(-5, 0, 5)"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"], scene);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"// And here is how it is colored green..."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"myLines.color = new BABYLON.Color3(0,1,0);"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"The creation of the lines object was a bit strange, but it sure was easy to make it green, using a Color3 value.&nbsp; You will learn more about the lines mesh.... in our Basic Elements tutorial.&nbsp; For now, I just wanted to show you that it does not use a .diffuseColor property like a box with a StandardMaterial applied, nor a .diffuse property like we used for coloring light beams.&nbsp; It, instead, uses a property called .color.&nbsp; Simple."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## My New Friends - .position, .rotation, and .scaling&nbsp; ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"As you toured the Babylon.js Playground demo scenes, you surely saw some .position, .rotation, and maybe some .scaling properties being 'set' with values.&nbsp; Let's take a look at each one:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**POSITION** - Also called translation, every mesh is POSITIONED in a scene using X, Y, and Z settings.&nbsp; You can think of the .position property... as the mesh's LOCATION.&nbsp; The link below... is a saved playground scene that illustrates using a mesh's .position property.&nbsp; Try to open it in a new window or new tab, so you can jump back and forth between this tutorial... and the playground scene:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://babylonjs-playground.azurewebsites.net/#35CPC ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"In the yellow text at the top of the scene, you will see the Babylon.js one-line way to set mybox.position (using our friend... the Vector3 value object)."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Below that, in green text, you will see 3 more lines of Babylon.js code.&nbsp; You see, you are NOT required to use a Vector3 to set a .position on a mesh.&nbsp; You can use the '**discrete**' way, instead.&nbsp; Loosely defined, 'discrete' means... piece by piece... one step at a time.&nbsp; If you would like to set a mesh's .position values axis by axis, feel free to use the handy green 'discrete' ways of doing it."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Watch this positioning demo scene for some time, if you please.&nbsp; It will not take long for you to completely understand mesh positioning.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**ROTATION** - Every mesh is ROTATED in a scene... by setting the amount of spin around the shape's X, Y, and Z axes.&nbsp; Picture a box with a rod stuck through every side and coming out the opposite side.&nbsp; There are 6 sides to a box, so there would be 3 rods, an X rod, a Y rod, and a Z rod.&nbsp; Rotation is the amount (and direction) of spin... AROUND each of these invisible rods.&nbsp; "},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Let's take a look at a playground scene that I once created and saved.&nbsp; In this demo, I made those invisible rods... be visible:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://babylonjs-playground.azurewebsites.net/#YIT1S ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Take some time to carefully watch that scene.&nbsp; Like the last demo scene, the yellow text shows a Vector3 being used to set the .rotation property with some computer-generated values.&nbsp; The box is shown doing positive and negative rotations around each of the 3 axes.&nbsp; Under the yellow text... you again see the green text...&nbsp; showing the 3 'discrete' ways to set the box's .rotation property with values.&nbsp; I bet you understand this completely, don't you?&nbsp; Easy."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"**SCALING** - Scaling... is stretching or shrinking... along any of the 3 scene axes.&nbsp; Let's jump right into a saved playground scene that demonstrates scaling:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"### http://babylonjs-playground.azurewebsites.net/#1VMQNH ###"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Again, take some time to watch the scene.&nbsp; And once more, the yellow text shows the one-line Vector3 way of setting a mesh's .scaling, or you can use one or more of the discrete ways of setting scaling... shown in the green text. You may have noticed that scaling values are never negative.&nbsp; It would be illogical to use a negative scaling value, and if you decide to use some negative values, unexpected results may occur."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"I would like you to take note... that scaling is **for mesh only**.&nbsp; For example, you can POSITION a mesh, camera, or light.&nbsp; You can often ROTATE a mesh, camera, or light.&nbsp; But SCALING... is for mesh.&nbsp; If you stretch or shrink (scale) a camera or light, you will break its electrical parts.&nbsp; (It's a joke, ok?)&nbsp; &nbsp;There is no reason to set scaling for a camera or light.&nbsp; They are invisible scene items."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Quick Downloading 'The Big 4' Externals ##"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Remember 'The Big Picture' far above?&nbsp; In that section, I introduced you to 'The Big 4' external include files...&nbsp; hand.js, cannon.js, oimo.js, and babylon.js.&nbsp; Many people use GitHub version-management systems to download those files from the Babylon.js GitHub source code repository.&nbsp; Some people make their own 'minified' versions of Babylon.js... using the absolute latest source code files.&nbsp; Others like to be able to grab reasonably fresh versions of The Big 4... in simpler ways."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"When you click Get .zip at the Babylon.js playground, you get a zip that contains a file called index.html.&nbsp; If you examine index.html in a text editor, you will see a file that looks very much like The Big Picture far above.&nbsp; Look at the external includes section... the first four HTML SCRIPT elements/tags.&nbsp; The .src attribute within each of those SCRIPT elements... point to URL's located at the Babylon.js web site."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"If you want to make your home demo scenes run faster, you can download copies of the external includes... and put them into a folder.&nbsp; That folder should be located WITHIN the folder that holds your index.html.&nbsp; For example, in the same folder as index.html, you could create a folder called 'js' (no quotes).&nbsp; Inside the js folder, you could put home copies of The Big 4 external include files."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Once you have that folder made, you can use the 4 links shown below... to get copies of The Big 4... and put each of them into your js folder."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"[**hand.js**](http://www.babylonjs.com/hand.minified-1.2.js)&nbsp; <= right-click... save link/target"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"[**cannon.js**](http://www.babylonjs.com/cannon.js)&nbsp; <= right-click... save link/target"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"[**oimo.js**](http://www.babylonjs.com/oimo.js)&nbsp; <= right-click... save link/target"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"[**babylon.js**](http://www.babylonjs.com/babylon.js)&nbsp; &nbsp;<= right-click... save link/target"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Store each of those files into the new js folder.&nbsp; Also, you might want to copy them to some other folder as well, for using later.&nbsp; Try to remember to repeat these actions fairly often, maybe once per month, to ensure that you are always using a reasonably fresh version of The Big 4 files.&nbsp; Babylon.js is always evolving.&nbsp; New features are being added very quickly, and you want your home versions of The Big 4... to be fresh, so you can take advantage of those new features."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Once you have those external includes saved into your new js folder, you need to make some adjustments to the HTML.&nbsp; In your index.html file, you will need to change the .src attributes of all four external includes (the first four SCRIPT elements).&nbsp; Likely, you will want to make your SCRIPT elements look like this:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` html"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <script src=\"./js/hand.minified-1.2.js\"></script>"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <script src=\"./js/cannon.js\"></script>&nbsp; <!-- optional -->"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <script src=\"./js/oimo.js\"></script>&nbsp; <!-- optional -->"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <script src=\"./js/babylon.js\"></script>"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"If you are not using physics in your scene, you might want to remark-out (disable) the script elements that include-in cannon.js and oimo.js.&nbsp; To do that, you could do this:"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"``` html"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <script src=\"./js/hand.minified-1.2.js\"></script>"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <!-- <script src=\"./js/cannon.js\"></script> -->"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <!-- <script src=\"./js/oimo.js\"></script> -->"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"&nbsp;&nbsp; &nbsp; <script src=\"./js/babylon.js\"></script>"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"```"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"Easy.&nbsp; Most of these things you already know, don't you?&nbsp; I thought so."},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"## Hey, you made it! ##"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"property\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"keys\": array of AnimationKeys (see below),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimate\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateFrom\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateTo\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoAnimateLoop\": boolean"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## AnimationKeys"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"An animationKey is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"frame\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"values\": array of float (depending of animated value)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## ShadowGenerators"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A shadowGenerator is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"useBlurVarianceShadowMap\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"useVarianceShadowMap\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"usePoissonSampling\": boolean,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"mapSize\": int (between 64 and 2048, must be a power of 2),"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"bias\": shadow bias,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"lightId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"renderList\": array of string (which are IDs of meshes)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Skeletons"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A skeleton is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"id\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"bones\": array of Bones (see below)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Bones"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A bone is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"parentBoneIndex\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"matrix\": matrix,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"animations\": array of Animations (must be of matrix type)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## ParticleSystems"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A particle system is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"emitterId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"gravity\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"direction1\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"direction2\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"minEmitBox\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"maxEmitBox\": vector3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"color1\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"color2\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"colorDead\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"deadAlpha\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"emitRate\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"updateSpeed\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"targetStopFrame\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"minEmitPower\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"maxEmitPower\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"minLifeTime\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"maxLifeTime\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"minSize\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"maxSize\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"minAngularSpeed\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"maxAngularSpeed\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"textureName\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"blendMode\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"capacity\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"textureMask\": color4,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"linkToEmitter\": bool"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## LensFlareSystems"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A lens flare system is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"emitterId\": string,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"borderLimit\": int,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"flares\": array of LensFlares (see below)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## LensFlares"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A lens flare is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"position\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"size\": float,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"color\": color3,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"textureName\": string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Sounds"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A sound is defined by the following JSON:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"name\": string, (name of the file to load)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"volume\": float, (if omitted will be 1)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"autoplay\": bool, (can be omitted)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"loop\": bool, (can be omitted)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"soundTrackId\": int, (can be omitted)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"spatialSound\": bool, (to enable 3D sound, can be omitted)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"position\": vector3, (if omitted will be 0,0,0)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"refDistance\": float, (can be omitted, default to 1)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"rolloffFactor\": float, (can be omitted, default to 1)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"maxDistance\": float, (can be omitted, default to 100)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"distanceModel\": string, (can be omitted, default to linear, other values: inverse or exponential)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"panningModel\": string, (can be omitted, default to HRTF, other value: equalpower)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"isDirectional\": bool, (to enable directional cone)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"coneInnerAngle\": float, (can be omitted but set it for directional sound)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"coneOuterAngle\": float, (can be omitted but set it for directional sound)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"coneOuterGain\": float, (can be omitted but set it for directional sound)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"connectedMeshId\": string, (ID of the mesh to attach to)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"     \"localDirectionToMesh\": vector3 (can be omitted, default to 1,0,0)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Actions"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"An action is defined by the following JSON. An action can contain children actions."},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"type\": number, (action's type. 0 = Trigger, 1 = Action, 2 = Flow Control)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string, (name of the action, trigger or flow control)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"detached\": boolean, (if the node is detached or not. Means it will not be computed if detached === true)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"properties\": array of properties, (see below)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"children\": array of Actions,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"combine\": array of Actions (used as a combine action. i.e name = \"CombineAction\". Can be null)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"A property is defined by the following JSON. A property value is always a string"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"name\": string, (name of the property)"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"value\": string, (value of the property. For example: name = \"target\" and value = \"Plane001\")"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"targetType\": string (internal use for the BabylonJS Actions Builder, specifies where to find the properties for \"propertyPath\")"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"## Example"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"Here is a simple example of .babylon file:"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```javascript"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"autoClear\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"clearColor\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"ambientColor\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"gravity\": [0, -9.81, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"cameras\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Camera\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Camera\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [7.4811, 5.3437, -6.5076],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"target\": [-0.3174, 0.8953, 0.3125],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"fov\": 0.8576,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"minZ\": 0.1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"maxZ\": 100,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"speed\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"inertia\": 0.9,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"checkCollisions\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"applyGravity\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"ellipsoid\": [0.2, 0.9, 0.2]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"activeCamera\": \"Camera\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"lights\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Sun\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Sun\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"type\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [0.926, 7.3608, 14.1829],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"direction\": [-0.347, -0.4916, -0.7987],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"intensity\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"diffuse\": [1, 1, 1],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"specular\": [1, 1, 1]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"materials\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Material\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Material\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"ambient\": [0.8, 0.8, 0.8],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"diffuse\": [0.64, 0.64, 0.64],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"specular\": [0.5, 0.5, 0.5],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"specularPower\": 50,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"emissive\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"alpha\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"backFaceCulling\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"diffuseTexture\": {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"name\": \"Metal1.png\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"level\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"hasAlpha\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"coordinatesMode\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uOffset\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"vOffset\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uScale\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"vScale\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uAng\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"vAng\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"wAng\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"wrapU\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"wrapV\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"coordinatesIndex\": 0"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Material.001\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Material.001\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"ambient\": [0.8, 0.8, 0.8],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"diffuse\": [0.64, 0.64, 0.64],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"specular\": [0.5, 0.5, 0.5],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"specularPower\": 50,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"emissive\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"alpha\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"backFaceCulling\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"diffuseTexture\": {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"name\": \"concrete5.png\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"level\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"hasAlpha\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"coordinatesMode\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uOffset\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"vOffset\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uScale\": 5,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"vScale\": 5,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uAng\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"vAng\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"wAng\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"wrapU\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"wrapV\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"coordinatesIndex\": 0"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"geometries\": {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"boxes\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"id\": \"BoxPrimitive\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"size\": 2,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"canBeRegenerated\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"tags\": \"Box Primitive Cube CanBeRegenerated\""},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"vertexData\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"id\": \"CubeGeometry\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"updatable\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"positions\": [ 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"normals\": [0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"uvs\": [0.5, 0.5, 0.5, 0, 0, 0.5, 0.5, 1, 0, 1, 0.5, 0.5, 0.5, 1, 0, 0.5, 0.5, 0.5, 0.5, 1, 0, 0.5, 0.5, 0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0, 0, 0.5, 0, 0, 0, 0.5, 0.5, 1, 0, 1, 0, 0.5, 0.5, 1, 0, 1, 1, 1, 1, 0.5, 0.5, 0, 0, 0, 0, 0.5],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indices\": [0, 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 2, 4, 18, 5, 19, 20, 21, 22, 23, 10, 12, 24, 25, 26, 27, 28]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"meshes\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Plane\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Plane\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"materialId\": \"Material.001\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [0.0172, -2.9787, -0.5184],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"rotation\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"scaling\": [87.1479, 0.8635, 87.1479],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isVisible\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isEnabled\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"checkCollisions\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"billboardMode\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"receiveShadows\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"positions\": [-1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, 1],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"normals\": [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"uvs\": [0.0001, 0.0001, 0.9999, 0.0001, 0.0001, 0.9999, 0.9999, 0.9999],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"indices\": [0, 1, 2, 1, 3, 2],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"subMeshes\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"materialIndex\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesCount\": 4,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexCount\": 6"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Cube\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Cube\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"materialId\": \"Material\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"geometryId\": \"CubeGeometry\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"rotation\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"scaling\": [1, 1, 1],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isVisible\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isEnabled\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"checkCollisions\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"billboardMode\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"receiveShadows\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"subMeshes\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"materialIndex\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesCount\": 29,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexCount\": 36"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"animations\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"dataType\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"framePerSecond\": 30,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"loopBehavior\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"name\": \"position animation\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"property\": \"position\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"keys\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [0,0,0.0291]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [0,0,0.0291]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 30,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [0,0,10]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 60,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [0,0,9.975]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 90,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [0,0,0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 250,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [0,0,0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"dataType\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"framePerSecond\": 30,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"loopBehavior\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"name\": \"rotation animation\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"property\": \"rotation\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"keys\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [-0.016, 0, 0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 30,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [-0.016, 0, 0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 60,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [-6.2832, 0, 0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"frame\": 250,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"                \"values\": [-6.2832, 0, 0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"autoAnimate\": true,"},{"src":"tutorials/How_to_dynamically_morph_a_mesh","name":"How_to_dynamically_morph_a_mesh","text":"_(edition in progress)_"},{"src":"tutorials/How_to_use_Actions","name":"How_to_use_Actions","text":"http://www.babylonjs.com/playground/?17"},{"src":"tutorials/How_to_use_PostProcessRenderPipeline","name":"How_to_use_PostProcessRenderPipeline","text":"http://www.babylonjs.com/playground/#21EWA7"},{"src":"tutorials/How_to_use_the_Tags_System","name":"How_to_use_the_Tags_System","text":"```"},{"src":"tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)","name":"In-Browser_Mesh_Simplification_(Auto-LOD)","text":"See the explanation above to understand what each variable is."},{"src":"tutorials/Parametric_Shapes","name":"Parametric_Shapes","text":"Easy way to generate strange shapes : http://www.babylonjs-playground.com/#RF9W9#47   "},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```javascript"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"var linesShader = { fragmentElement: 'LinesPixelShader' };"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"var customProcText = new BABYLON.CustomProceduralTexture(\"customtext\", linesShader, 1024, scene);"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"```"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"**Note :** when using ShaderStore or DOM Element shader for custom procedural textures : the config.json file is not needed anymore and you can just use setFloat or setVector3 (and so on), and setTexture on the CustomProceduralTexture will give values and Sampler2D to the shader code."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 8a translate LOCAL applies a translation of -2 along z world-local-axes to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 8b"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Secondly when rotating in the local space the local axes are used for rotation and the world-local-axes are still used for pilot.translate(vector, distance, BABYLON.Space.LOCAL). "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 9 shows that the translation of (0, 0, -2) is still along the world-local-axis for z as it was in Fig 8b."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-F7SPrEzEACQ/VW2q7WOGJPI/AAAAAAAAAFE/UuZBKbLX4I8/s210/fig9.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"[Demo 10](http://www.babylonjs-playground.com/#UMR7M#36) can be used to play with LOCAL rotations followed by LOCAL translations."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"####What if you want to translate using the local axes following rotations?####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"You use pilot.locallyTranslate(vector), where vector is a BABYLON.Vector3 giving the required translation."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"#####[Demo 11](http://www.babylonjs-playground.com/#UMR7M#35) can be used to play with WORLD rotations followed by translations applied locally.#####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Figs 10 a, b, c and d show the pilot rotations around the world-local-axes."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 11 shows the final result as in Fig 10d but with the local-axes shown. "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 12 shows the result of applying the following two translations, the first of distance 3 along the local z axis and the second of distance 3 along the local y axis."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-fJ-XFFFnJAw/VW2qvXwty1I/AAAAAAAAABs/M0VJOjmc3Aw/s210/fig10a.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-zOYaqhIE-Sc/VW2qvaeI3LI/AAAAAAAAAFM/ii0PKtjlIro/s210/fig10b.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-np5-CAjwm4k/VW2qvtOd4pI/AAAAAAAAAFU/a4WOaoxolgc/s210/fig10c.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-HdrqHeKoBeA/VW2qv2U3x3I/AAAAAAAAACM/DkjoYYW91y0/s210/fig10d.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"            Fig 10a            Fig10b                 Fig 10c             Fig 10d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Starting from"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 10a rotate around world-local-axis y to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 10b rotate around world-local-axis y to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 10c rotate around world-local-axis x to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 10d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-p5vZalr4_qc/VW2qwBetivI/AAAAAAAAACI/vJk4bAMVgI8/s210/fig11.jpg)Fig 11"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-g_R9L8SWcJ0/VW2qwXAKfLI/AAAAAAAAAB8/bI9zYIE33uU/s210/fig12.jpg)Fig 12"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"#####[Demo 12](http://www.babylonjs-playground.com/#UMR7M#37) can be used to play with LOCAL rotations followed by translations applied locally.#####"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Figs 13 a, b, c and d show the pilot rotations around the local-axes."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 14 shows the final result as in Fig 13d but with the local-axes shown. "},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 15 shows the result of applying the following two translations, the first of distance 3 along the local z axis and the second of distance 3 along the local y axis."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-pXngvpfxbrE/VW2qw09lIoI/AAAAAAAAACA/rxtA7murqqs/s210/fig13a.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-9ypxtidQ9k4/VW2qxCR1-VI/AAAAAAAAACE/QvToY4pprc0/s210/fig13b.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-0MUYfF7wZfw/VW2qxQb9oWI/AAAAAAAAACo/rKuPKTxjh9k/s210/fig13c.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-UWIWpjPcdCg/VW2qxv--OuI/AAAAAAAAACg/91Sz-x0fgtk/s210/fig13d.jpg)"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"            Fig 13a            Fig13b                 Fig 13c             Fig 13d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Starting from"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 13a rotate around local-axis y to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 13b rotate around local-axis y to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 13c rotate around local-axis x to obtain"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"Fig 13d"},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-X9vYvWVehWI/VW2qylL6ZWI/AAAAAAAAACs/7dcGpUnp_bQ/s210/fig14.jpg)Fig 14"},{"src":"tutorials/Ribbon_Tutorial","name":"Ribbon_Tutorial","text":"_edition in progress_"},{"src":"tutorials/Transparency_and_How_Meshes_Are_Rendered","name":"Transparency_and_How_Meshes_Are_Rendered","text":"*(to be expanded)*"},{"src":"tutorials/01._Creating_Basic_Scene","name":"01._Creating_Basic_Scene","text":"Next in the Playpen Series - [**02-Basic elements**](http://babylondoc.azurewebsites.net/page.php?p=22011)"},{"src":"tutorials/02._Discover_Basic_Elements","name":"02._Discover_Basic_Elements","text":"We saw that we needed a bit of 'positioning' to keep our basic elements from sitting atop one another in the scene. Now let's learn more about positions (sometimes called translations) as well as about rotation and scaling. Ready? Sure you are! [**Click here for the next tutorial.**](http://babylondoc.azurewebsites.net/page.php?p=22041)"},{"src":"tutorials/07._Animations","name":"07._Animations","text":"Your scene is now becoming dynamic, and all your meshes can move in all directions! Feel free to try different animations on different objects, then come back and learn all about [**Sprites**](http://babylondoc.azurewebsites.net/page.php?p=22082)."},{"src":"tutorials/12._Particles","name":"12._Particles","text":"Stay with us, because we are going to learn a new, very interesting thing: [Configuring your environment](http://babylondoc.azurewebsites.net/page.php?p=22131)."},{"src":"tutorials/16._Playing_sounds_and_music","name":"16._Playing_sounds_and_music","text":"![Image Analyser Debug Canvas](http://az612410.vo.msecnd.net/wwwbabylonjs/doc/3Danalyser.png)"},{"src":"tutorials/A_Babylon.js_Primer","name":"A_Babylon.js_Primer","text":"You are finally at the bottom of this tutorial.&nbsp; It was a long, but fun trip, wasn't it?&nbsp; Things will be easy from now on.&nbsp; The next tutorial in the Playpen Series tutorials... is about building a very basic scene.&nbsp; I think it will be quite easy and fast, for you.&nbsp; You have graduated from tutorial #0... this tutorial.&nbsp; You are already a Babylon.js expert."},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"autoAnimateFrom\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"autoAnimateTo\": 250,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"autoAnimateLoop\": true"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Cube2\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Cube2\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"materialId\": \"Material\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"geometryId\": \"CubeGeometry\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [10, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"rotation\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"scaling\": [1, 1, 1],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isVisible\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isEnabled\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"checkCollisions\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"billboardMode\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"receiveShadows\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"subMeshes\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"materialIndex\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesCount\": 29,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexCount\": 36"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    },"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    {"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"Cube3\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"id\": \"Cube3\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"materialId\": \"Material\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"geometryId\": \"BoxPrimitive\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [-10, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"rotation\": [0, 0, 0],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"scaling\": [1, 1, 1],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isVisible\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isEnabled\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"checkCollisions\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"billboardMode\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"receiveShadows\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"subMeshes\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"materialIndex\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"verticesCount\": 29,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexStart\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"            \"indexCount\": 36"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"multiMaterials\": [],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"shadowGenerators\": [{"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"useVarianceShadowMap\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"mapSize\": 1024,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"lightId\": \"Sun\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"renderList\": [\"Cube\", \"Cube2\", \"Cube3\"]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    }],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"skeletons\": [],"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"    \"sounds\": [{          "},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"name\": \"violons11.wav\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"volume\": 1,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"autoplay\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"loop\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"soundTrackId\": 1"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"spatialSound\": true,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"position\": [0, 0, 0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"refDistance\": 1.0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"rolloffFactor\": 1.0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"maxDistance\": 100,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"distanceModel\": \"linear\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"panningModel\": \"equalpower\","},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"isDirectional\": false,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"coneInnerAngle\": 90,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"coneOuterAngle\": 180,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"coneOuterGain\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"connectedMeshId\": 0,"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"        \"localDirectionToMesh\": [1, 0, 0]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"   }]"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"}"},{"src":"tutorials/How_to_use_Procedural_Textures","name":"How_to_use_Procedural_Textures","text":"Feel free to play with this scene... [at our online playground](http://www.babylonjs-playground.com/#24C4KC)."},{"src":"tutorials/Position,_Rotate,_Translate_and_Spaces","name":"Position,_Rotate,_Translate_and_Spaces","text":"![](https://lh3.googleusercontent.com/-kvP4tfZYRac/VW2qywCg3cI/AAAAAAAAACw/eaWslJbqhaA/s210/fig15.jpg)Fig 15"},{"src":"tutorials/File_Format_Map_(.babylon)","name":"File_Format_Map_(.babylon)","text":"```"}],"data_ptr":7222,"free_slots":[],"single_data_counter":21666}